1
00:00:00,000 --> 00:00:13,800
Right now, I'm a developer advocate at Stacklet, and in the next couple of minutes, I'm going

2
00:00:13,800 --> 00:00:22,560
to take you on a tour of governance as code and C7n, which is also known as Cloud Custodian.

3
00:00:22,560 --> 00:00:30,400
Alright, so with the advent of the ease and efficiency that cloud providers offer us,

4
00:00:30,400 --> 00:00:37,080
cloud providers such as AWS and Azure, organizations find themselves struggling to

5
00:00:37,080 --> 00:00:46,080
balance developer productivity and risk. In other words, how many of you are guilty of maybe or

6
00:00:46,080 --> 00:00:52,080
maybe not spinning up an S3 bucket that may or may not have been in compliance with your

7
00:00:52,080 --> 00:01:01,400
organization's encryption policies? Guilty, yeah. Guilty as charged. So the problem, you know,

8
00:01:01,400 --> 00:01:07,280
the question becomes, how do we meet the needs of developers and the needs of a well-managed cloud

9
00:01:07,280 --> 00:01:13,960
without hindering productivity, right? This is a problem that governance as code can address. So

10
00:01:13,960 --> 00:01:19,560
let's talk about what governance as code is, right? So as we heard earlier, there is infrastructure

11
00:01:19,560 --> 00:01:25,640
as code. Terraform is kind of the industry standard of that. Essentially, what Terraform

12
00:01:25,640 --> 00:01:32,280
does is it applies the principles of programming to the management of infrastructure such as

13
00:01:32,280 --> 00:01:40,600
networks, machines, and you guessed it, the cloud. The application of these principles

14
00:01:40,600 --> 00:01:48,160
to infrastructure allows you to iterate on it, version it, and seamlessly integrate it

15
00:01:48,160 --> 00:01:54,840
into your development pipelines, right? Similarly, cloud custodian is governance as code.

16
00:01:54,840 --> 00:02:05,360
So what is C7n, right? C7n, which is shorthand for cloud custodian, basically distills the

17
00:02:05,360 --> 00:02:16,240
complexities of cloud policy authorship into a cloud domain-specific language. In other words,

18
00:02:16,240 --> 00:02:25,680
it uses a declarative language in a single configuration file so you can iterate on version

19
00:02:25,680 --> 00:02:32,160
and, like I said, integrate that seamlessly into your development pipelines, right? Pretty cool.

20
00:02:32,160 --> 00:02:44,240
So let's go ahead and quickly dissect the anatomy of a very basic policy file, okay? So first of all,

21
00:02:44,320 --> 00:02:51,120
in cloud custodian, this is a YAML configuration file. You've got the name of your policy,

22
00:02:52,240 --> 00:02:58,560
the resource that you want this policy, that this policy applies to, and in cloud, oh,

23
00:02:58,560 --> 00:03:05,120
forgot to mention, sorry. Cloud custodian is an open source project that is written in Python,

24
00:03:06,400 --> 00:03:12,400
so that means you can both use it and contribute to it. Okay, so back to the policy file.

25
00:03:13,360 --> 00:03:17,520
If you look at it, right, we've got the name of the policy, we've got the resource that we

26
00:03:17,520 --> 00:03:23,760
want this policy to act on. We have then the mode of this policy, right, so that determines

27
00:03:23,760 --> 00:03:30,560
whether we want this policy triggered manually or by a specific cloud event. We have the filters,

28
00:03:30,560 --> 00:03:36,720
and so the filter is what will extract the group of resources that we want to take action on,

29
00:03:36,720 --> 00:03:41,600
and then action is the various things that we can do to the output of that filter.

30
00:03:43,360 --> 00:03:50,000
So I'm going to give you a little tiny demo of a very simple cloud custodian policy.

31
00:03:51,040 --> 00:03:59,920
In this demo policy, it is our S3 encrypted notify, so basically for those unencrypted

32
00:04:00,480 --> 00:04:05,920
buckets that are may or may not have created, what I want to do is filter for those buckets,

33
00:04:06,720 --> 00:04:12,000
and if there are any unencrypted buckets, because I worked at Twilio previously,

34
00:04:12,000 --> 00:04:16,080
I then want to get a phone call, and that's going to be the notification.

35
00:04:18,080 --> 00:04:23,200
So you can see here is like, you know, how it would work. You're filtering out the buckets that

36
00:04:23,200 --> 00:04:28,320
are not encrypted, and if any of those show up right with that output, we then want to get a

37
00:04:28,320 --> 00:04:35,600
phone call. So cool. I'm going to go ahead and switch real quick to my very tiny demo.

38
00:04:38,480 --> 00:04:43,120
So here it's a very simple demo. It's kind of like a little bit Martha Stewart where I'm like,

39
00:04:43,120 --> 00:04:46,560
oh, I just like I'm taking this already baked pizza out of the oven

40
00:04:47,360 --> 00:04:54,480
and kind of cheating with the webhook that's running locally. But anyway, so here's my cloud

41
00:04:54,480 --> 00:05:03,760
custodian policy. It is, oh, in Biggin. How's that? One more? Yeah.

42
00:05:06,640 --> 00:05:14,160
Oh, cool. So now that everyone can see that, so this is our little policy. We want to operate

43
00:05:14,160 --> 00:05:20,080
on those pesky S3 buckets. We want to list all the instances that are not encrypted,

44
00:05:20,080 --> 00:05:25,360
and where I had notified before, we're going to have a webhook because this is what I'm using to

45
00:05:26,240 --> 00:05:33,520
run my Twilio app basically. So I'm going to make sure my phone is on

46
00:05:35,120 --> 00:05:41,200
and fingers crossed that Twilio isn't down. If it is, it's not my fault anymore because I don't work

47
00:05:41,200 --> 00:05:52,320
there. So in here, we're going to go ahead and run my policy. So yeah, cloud custodian is also

48
00:05:52,320 --> 00:06:01,120
a command line tool. So I'm going to go ahead and run it. Cross my fingers. Sorry, this is always

49
00:06:01,120 --> 00:06:07,280
the like, oh, part. Come on, come on, come on. We're running out of time.

50
00:06:14,240 --> 00:06:20,000
It was working before. Come on, come on. Oh my god, I know.

51
00:06:26,560 --> 00:06:28,880
We got 200s back, so it should be okay.

52
00:06:31,600 --> 00:06:40,400
There we go. Oh, I got a 500. Let me check. Let me see if I can fix it.

53
00:06:42,320 --> 00:06:47,760
So at Twilio, they made everyone make like a Twilio app, and if it didn't, like you had to

54
00:06:47,760 --> 00:06:54,480
then present it, and if it didn't work, like they would chant at you, fix it, fix it, and it was

55
00:06:54,480 --> 00:07:09,360
really scary. So let's see if I can fix it. Maybe I just have no unencrypted buckets because I'm so

56
00:07:09,360 --> 00:07:17,520
well-behaved. All right, let me try one more thing. I know we're running out of time.

57
00:07:19,840 --> 00:07:21,520
Okay, so I know that that's working.

58
00:07:21,520 --> 00:07:33,040
Let's try one more time. I've got a 200 there. Let's run my policy. There it is. I'm gonna answer it.

59
00:07:35,760 --> 00:07:42,480
Let's see if you can all hear this. There is a hole in your bucket. Okay, there you go, everyone.

60
00:07:43,440 --> 00:07:49,040
So that's just an example of like a very, that's like kind of a not so good demo or

61
00:07:49,440 --> 00:07:56,400
it is a good demo. I don't know. You tell me. Anyway, so if you want to learn more about using

62
00:07:56,400 --> 00:08:05,680
and contributing to C7n, go to cloudcustodian.io, and you can reach me at liz at stacklet.io,

63
00:08:05,680 --> 00:08:17,040
and thank you so much for your time, y'all, and your patience. Have a good rest of your day.

