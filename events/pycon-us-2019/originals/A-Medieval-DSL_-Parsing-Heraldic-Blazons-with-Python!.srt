1
00:00:00,000 --> 00:00:20,080
Hello. How are you all doing today? Enjoying your PyCon so far? All right. Help me welcome

2
00:00:20,080 --> 00:00:27,080
Lady Red, aka Chris, to tell us more about Medieval DSL.

3
00:00:27,080 --> 00:00:39,400
Thank you. Hi, everyone. All right. So welcome to my talk, Medieval DSL. Just to clarify,

4
00:00:39,400 --> 00:00:45,840
this is about heraldry, and heraldry is the medieval swords and knights kind of thing.

5
00:00:45,840 --> 00:00:51,680
It's not like a new cloud platform like someone was guessing earlier. So here's why we're

6
00:00:51,680 --> 00:00:57,160
here. This is the intersection of my two interests between gnarly medieval stuff and cool computer

7
00:00:57,160 --> 00:01:03,920
stuff. So I was able to get a talk out of that. Heraldry is interesting to me because

8
00:01:03,920 --> 00:01:11,800
it's this combination of graphic design, medieval history, self-representation, and just an

9
00:01:11,800 --> 00:01:16,280
absurd amount of rules. And we're going to get into some of the rules and some of the

10
00:01:16,280 --> 00:01:23,560
like interesting programmatic things that they ended up doing in the Middle Ages that

11
00:01:23,560 --> 00:01:29,960
kind of predated a lot of what we have now. It's very interesting. So the original purpose

12
00:01:29,960 --> 00:01:35,000
of a coat of arms was to identify someone in battle when they're wearing full armor.

13
00:01:35,000 --> 00:01:43,400
So you want to know who to follow, who to kill. And they also provide family and state

14
00:01:43,400 --> 00:01:50,840
personal identification in a society that's really obsessed with lineage and hierarchy.

15
00:01:50,840 --> 00:01:54,560
And also after this talk, you're going to start seeing coats of arms everywhere. Wine

16
00:01:54,560 --> 00:01:59,720
bottles, cars, buildings, logos all over the place. This is essentially the logos of the

17
00:01:59,720 --> 00:02:04,500
Middle Ages. But one of the fundamental problems is now we have a logo. You see the Twitter

18
00:02:04,500 --> 00:02:09,180
logo at any point. It's going to be pixel perfect. It's going to be the exact same bird.

19
00:02:09,180 --> 00:02:17,620
But in the Middle Ages, there's no way to exactly copy an image from one thing to the

20
00:02:17,620 --> 00:02:24,700
other because there's no copiers of computers. It's just going to be a guy in a castle painting

21
00:02:24,700 --> 00:02:31,780
a shield. How can you define what is the actual information that's different than the artistic

22
00:02:31,780 --> 00:02:38,060
embellishment? So the answer is they actually boiled it down to a DSL called Blazon, which

23
00:02:38,060 --> 00:02:47,740
is reads something like if XML were to marry French, were to marry English, you'd get something

24
00:02:47,740 --> 00:02:52,480
like this. All right. So let's just go into what we're looking at with the coat of arms.

25
00:02:52,480 --> 00:02:57,540
This is the coat of arms of the UK. And just to get some terminology out of the way, this

26
00:02:57,540 --> 00:03:02,620
top thing, this little line on top, that's the crest. So the whole thing is called a

27
00:03:02,620 --> 00:03:10,500
coat of arms or a heraldic achievement. People sometimes call it a crest and that's wrong.

28
00:03:10,500 --> 00:03:15,140
The crest is only the little animal or symbol that appears on top of the helmet. Then there's

29
00:03:15,140 --> 00:03:19,660
a crown on this one. They don't always have crowns. There's a helmet. The style of the

30
00:03:19,660 --> 00:03:25,620
helmet determines the rank of the bearer. So does the style of the crown. So like you

31
00:03:25,620 --> 00:03:32,620
could tell you if you're nobility or if you're a common person. Then mantling usually reflects

32
00:03:32,620 --> 00:03:39,180
the colors of the crest or the coat of arms. We got these supporters, which are these animals

33
00:03:39,180 --> 00:03:47,900
that hold up the side. And then there's this order around it. So most achievements don't

34
00:03:47,900 --> 00:03:52,420
have all of these things. Just the coat of arms of the UK has almost every single thing

35
00:03:52,500 --> 00:03:59,500
because they kind of invented heraldry. So the coat of arms are called the escutcheon.

36
00:04:00,180 --> 00:04:05,540
That's the shield itself. There's also a compartment at the bottom and a motto. So that's just

37
00:04:05,540 --> 00:04:12,540
the full thing. And all of that, this is like an SVG I got from Wikipedia. And this isn't

38
00:04:12,580 --> 00:04:16,940
I mean this is the coat of arms of the UK. But in a more fundamental way, this is the

39
00:04:16,940 --> 00:04:23,940
coat of arms of the UK. This is the blazon representation of what we just saw. So if

40
00:04:24,140 --> 00:04:31,140
you read it, it's crazy. It's a lot of words you don't know. What's ghouls. And then it's

41
00:04:33,620 --> 00:04:38,540
just kind of hard to parse what's going on. There's a lot of words that aren't even in

42
00:04:38,540 --> 00:04:44,180
English or French or whatever. So we're going to go into how to parse this. At the end of

43
00:04:44,180 --> 00:04:49,540
this talk, we're going to successfully parse that. A couple other things about coats of

44
00:04:49,540 --> 00:04:55,500
arms as we're getting started. Arms are inheritable but usually the way land is inheritable, not

45
00:04:55,500 --> 00:05:01,820
the way a name is. So if you find out my name is Smith, is there a coat of arms for someone

46
00:05:01,820 --> 00:05:06,420
named Smith, that doesn't mean you're a coat of arms. You have to have been the first son

47
00:05:06,420 --> 00:05:11,740
of the first son of the first son of the first son of that guy to inherit it. Although that's

48
00:05:12,060 --> 00:05:16,500
different from country to country and across time. I'm calling this medieval DSL because

49
00:05:16,500 --> 00:05:22,620
it's amazingly consistent. But given the fact that it was written over 500 years, Python's

50
00:05:22,620 --> 00:05:28,100
what, 30 years old? How many different versions have we had? This is a language that's been

51
00:05:28,100 --> 00:05:32,660
written for 500 years. In the high middle ages by groups that were constantly at war

52
00:05:32,660 --> 00:05:39,660
with each other. So it's been simplified. Okay. So let's look at some blazon. Azor.

53
00:05:39,860 --> 00:05:46,860
All of the colors are formulas. There's only seven colors. Azor is a word for blue. This

54
00:05:49,380 --> 00:05:53,580
one I'm actually going to try and I'm trying to describe the blazon for the Python logo.

55
00:05:53,580 --> 00:05:57,820
Because I was looking at it and I said, hey, that's actually heraldic. We could describe

56
00:05:57,820 --> 00:06:02,940
it. So we have two serpents. I'm calling them serpents because it looks like in the middle

57
00:06:03,020 --> 00:06:10,020
ages Python meant like a wyvern like creature. But a serpent was like reliably a snake. And

58
00:06:10,420 --> 00:06:15,660
then we have to describe the position of the serpents. So I was kind of going into that.

59
00:06:15,660 --> 00:06:21,860
Here's a bunch of different words for positioning of animals. So I went with erect as the rough

60
00:06:21,860 --> 00:06:27,180
shape of the serpent. And also that they're kind of combined against each other. Adorst

61
00:06:27,180 --> 00:06:34,180
on the other side. That they're combined but facing away from each other. And then they're

62
00:06:35,940 --> 00:06:42,940
also intertwining each other. And then here's an interesting thing. Of the field and or,

63
00:06:44,180 --> 00:06:51,180
the sinister inverted. So of the field means it's the color of the field. So in blazon

64
00:06:52,180 --> 00:06:58,700
you can have references to other parts of the same shield. So when you say of the field,

65
00:06:58,700 --> 00:07:05,140
azure is the color of the field. So it's kind of like a reference to a variable reference.

66
00:07:05,140 --> 00:07:09,060
Or it's the color for gold. And then I'm saying the sinister one is inverted. And you might

67
00:07:09,060 --> 00:07:14,260
say, wait, doesn't sinister mean left? The right one is inverted. That's because the

68
00:07:14,260 --> 00:07:20,180
coat of arms, you always imagine someone is holding it. So the like holding the shield.

69
00:07:20,180 --> 00:07:24,340
So it's the left side or the right side of the guy holding the shield. Not of anyone

70
00:07:24,340 --> 00:07:29,980
looking at it. So there's a lot of gotchas and little edge cases in this. And you can

71
00:07:29,980 --> 00:07:36,980
really just go forever. All right. So let's try and build a parser for this. If you start

72
00:07:37,780 --> 00:07:42,700
looking into Python parsers, you'll find that there's more than you can count. I decided

73
00:07:42,700 --> 00:07:49,700
to go with lark. Most of the parsers support similar rules that are all in back as an hour

74
00:07:49,700 --> 00:07:56,700
form. So you can kind of take one rule set and go from parser to parser. But I decided

75
00:07:57,020 --> 00:08:02,660
to use lark because it's got good documentation. And it's got a couple different parsers in

76
00:08:02,660 --> 00:08:09,660
there that like under the hood that you can switch between. So let's look at just like

77
00:08:10,980 --> 00:08:15,060
this introduction to this parser. Let's try and parse hello world. So if you've written

78
00:08:15,140 --> 00:08:22,140
regex's before, parser is like regex's on steroids. So hopefully you like regex's because

79
00:08:22,700 --> 00:08:29,700
it's going to be a lot of that. So here I'm saying for this hello world, lowercase letter,

80
00:08:31,420 --> 00:08:38,420
uppercase letter, defining both of those cases. And then you can say a letter itself is either

81
00:08:38,900 --> 00:08:45,180
uppercase or lowercase. And then a word is many letters. So that's sort of familiar syntax

82
00:08:45,180 --> 00:08:52,180
if you've seen regex's before. And then I'll define my start rule as a word, a comma, a

83
00:08:53,380 --> 00:08:57,580
word, and then an exclamation mark. So I'm able to parse hello world and get out what

84
00:08:57,580 --> 00:09:03,940
is actually called an abstract parser. So that's like a way of taking text and taking

85
00:09:03,940 --> 00:09:10,940
into a symbolic representation of that. So let's start building this for Blasen. As

86
00:09:10,940 --> 00:09:17,940
I said, there's only seven colors. Five colors and two metals. So that's easy because those

87
00:09:18,300 --> 00:09:24,100
are all going to be keywords. So I'm just going to define all of those. And then I'll

88
00:09:24,100 --> 00:09:31,100
be able to say that tincture is metal or color. Tincture is the rule for the combination of

89
00:09:34,140 --> 00:09:40,300
those two things. And the lowercase indicates that it's like a... So if it's uppercase rule,

90
00:09:40,300 --> 00:09:46,340
that means it's like a leaf node. It only has keywords in it. But if it's lowercase

91
00:09:46,340 --> 00:09:51,820
rule, that means it's like just a node in the middle of the graph. So that's just useful

92
00:09:51,820 --> 00:09:58,820
to understand. All right. So now immediately we're already able to understand these two

93
00:09:59,780 --> 00:10:05,700
codes of arms, which are very simple, but they're real codes of arms that people have.

94
00:10:05,700 --> 00:10:11,740
There's a little bit of a name grab domain squatting thing going on with codes of arms

95
00:10:11,740 --> 00:10:18,740
where the guy who got blue... Yeah. So then let's look at some more. We actually have

96
00:10:21,500 --> 00:10:28,500
some patterns that are a nice step up in complexity. So here's two. Ermin and Ver. And then we

97
00:10:29,220 --> 00:10:36,220
have Ermin is symbolized... You guys know a picture of a king and he's got a white fur

98
00:10:37,260 --> 00:10:44,260
with little black dots on it. It's a very luxurious fur, so that's Ermin. And then Ver

99
00:10:44,580 --> 00:10:51,580
is, I think, symbolized like squirrel fur. But what's interesting about these is not

100
00:10:51,580 --> 00:10:56,820
only are they just those things, they actually kind of are like functions. They can take

101
00:10:56,820 --> 00:11:03,820
arguments. So here's Or, Ermin, DeGoole. And the next one is very Or and purple. So it's

102
00:11:07,500 --> 00:11:13,620
interesting that the Ermin one is kind of infix and then the Ver one is kind of prefix.

103
00:11:13,620 --> 00:11:19,140
And they're pretty consistent about that. So we can put that into our parser. So for

104
00:11:19,140 --> 00:11:26,140
our fur parser, it could be Ermin, Ver, Or, a fur and a purple. So that's a pretty interesting

105
00:11:26,900 --> 00:11:32,900
pattern. And then two tinctures. Or it could be a tincture, a fur that goes as an infix

106
00:11:32,900 --> 00:11:39,900
fur, and then another tincture. So we can have Ermin or Ver as a fur and we can kind

107
00:11:41,220 --> 00:11:47,660
of define the way it can include other rules inside of it. And then we can redefine our

108
00:11:47,660 --> 00:11:54,660
tincture rule to include metal colors or furs. Okay. So then just these are kind of the base

109
00:11:55,380 --> 00:12:00,420
cases that we'll start with arms. Arms are right now just a single field and a field

110
00:12:00,420 --> 00:12:06,660
is just a single color. So that's kind of the full rule set. So now I'm able to do with

111
00:12:06,660 --> 00:12:13,660
this rule set parse this very Or and Gools. And as you can see, we have this heroic abstract

112
00:12:14,580 --> 00:12:21,580
syntax tree that gives me like a understanding and code of what this thing is. And when I

113
00:12:22,580 --> 00:12:28,540
was... I built a giant database of a ton of code of arms and I was running it against

114
00:12:28,540 --> 00:12:34,260
this as I was writing these. And I would add a rule set, run it again and see I got like

115
00:12:34,260 --> 00:12:41,260
2% more codes of arms of the 100,000 I had indexed. So that was a fun way of building

116
00:12:41,820 --> 00:12:48,820
this. All right. So let's go on for more complexity. Ordinaries are the names for geometric shapes.

117
00:12:49,820 --> 00:12:56,700
And then we also have... So these are the main ones, the most honorable ordinaries.

118
00:12:56,700 --> 00:13:02,940
And then here's the ones that aren't as honorable but show up still sometimes. And there's a

119
00:13:02,940 --> 00:13:08,780
lot of them. You can kind of... The real way to get this list is just to look at a really

120
00:13:08,780 --> 00:13:15,780
old book. But you keep on finding that like, oh, in South Africa they have additional sub-ordinary

121
00:13:15,780 --> 00:13:20,140
that doesn't appear anywhere else. So a lot of this has been adding on to these lists

122
00:13:20,140 --> 00:13:25,620
of keywords. But yeah. Some of these are really interesting. Like you might notice that there's

123
00:13:25,620 --> 00:13:32,620
a... A escutcheon is a mini shield sub-ordinary. That one and a canton, they both often have

124
00:13:33,260 --> 00:13:40,260
an entire code of arms on top of them. So these things are like fully recursive. Yeah.

125
00:13:41,260 --> 00:13:48,260
So let's see. So now we can parse these ones. Azure, a bend, very, or in Google. So I'm not

126
00:13:50,860 --> 00:13:56,060
going to read all of them. But you can see that it's got a bend on it and then the bend

127
00:13:56,060 --> 00:14:00,260
has its own pattern. So there's kind of... Now there's ordinaries that have their own

128
00:14:00,260 --> 00:14:07,260
tinctures. And you can start to have ordinaries that have ordinaries on them. So there's stars

129
00:14:08,260 --> 00:14:15,260
on a stripe. And then this one over here, there's a saltire with diamonds on it with

130
00:14:17,580 --> 00:14:24,340
a dot on that. So it's like three layers deep of dependent clauses. Yeah. So let's talk

131
00:14:24,340 --> 00:14:31,340
about how we can do these groups of things on things. I make this ordinary charge, which

132
00:14:31,340 --> 00:14:38,340
has got a number, then the tincture, and then the number of ordinaries. And then I make

133
00:14:38,780 --> 00:14:43,780
this charge group rule, which has got that it could be two charge group and charge group,

134
00:14:43,780 --> 00:14:50,780
or charge group on and then another subgroup, or on a charge group, a subgroup. Sometimes

135
00:14:51,820 --> 00:14:58,820
Blazon has the Yoda thing where they say, like, on this, do with this. So it just comes up

136
00:14:59,060 --> 00:15:06,060
with this. So just covering both those cases. So then our arms is now a field or a field

137
00:15:06,500 --> 00:15:13,500
and some charges or just some charges. And then that makes us able to parse this thing,

138
00:15:13,660 --> 00:15:18,140
which means we're scaling up in complexity pretty quickly. So this is the arms of the

139
00:15:18,140 --> 00:15:25,140
Duke of Braganza. And as you can see, it's pretty complicated Blazon, but it's all ordinaries.

140
00:15:25,460 --> 00:15:32,460
And we're able to say this charge group and then recursively another charge group of five

141
00:15:32,460 --> 00:15:39,300
escutcheons. And then on top of each of that, there's five Bizons. So we're able to parse

142
00:15:39,300 --> 00:15:46,300
this whole thing. All right. Next, the next thing I have to tackle is, of course, animals

143
00:15:47,780 --> 00:15:52,340
and other objects like that. In the Middle Ages, they knew about a lot of more animals

144
00:15:52,340 --> 00:15:59,340
that we don't know. Like, for instance, sea lions at the bottom. Yeah. So this one you

145
00:16:01,220 --> 00:16:07,020
can really just spend a long time finding out new animals that they invent. There are

146
00:16:07,020 --> 00:16:11,420
some that only ever appear on a single coat of arms. There's like six coats of arms that

147
00:16:11,420 --> 00:16:18,100
have elephants on them. So I found that out and added it to my list. This is a very small

148
00:16:18,100 --> 00:16:24,260
subset, but you can see this is basically a list of a ton of keywords. And then animals

149
00:16:24,260 --> 00:16:29,500
have a special modifier that can happen to them where they have a position. So whether

150
00:16:29,500 --> 00:16:36,500
a lion is roaring or crouching or looking at you and crouching, that's actually defined.

151
00:16:37,040 --> 00:16:44,040
But also, that's defined here, but if the artist were to draw the lion and maybe the

152
00:16:44,040 --> 00:16:51,040
tail is going in a different direction, that's not defined. So there's like a thing where

153
00:16:57,080 --> 00:17:02,400
people would recognize that certain element here is part of the actual coat of arms and

154
00:17:02,400 --> 00:17:08,960
part of it is just artistic license. But it gets down to this much detail. So there's

155
00:17:08,960 --> 00:17:13,720
a lot of different positions of animals, and there's certain things that only certain animals

156
00:17:13,720 --> 00:17:20,720
can do. So it gets pretty complex. For instance, only the peacock can be in his pride, which

157
00:17:21,400 --> 00:17:25,020
is my favorite. It's the peacock with the full tails, because only the peacock has a

158
00:17:25,020 --> 00:17:31,720
tail that can do that. So yeah. Anyway, these are mostly just a big list of keywords that

159
00:17:31,720 --> 00:17:37,240
I then add, but then also sometimes they can be multiple different attitudes that they

160
00:17:37,240 --> 00:17:44,240
can have. So then, yeah, so that's animals. And then the next challenge is quartering.

161
00:17:44,680 --> 00:17:48,520
So as I said, these things are fully recursive. They actually did recursive coats of arms

162
00:17:48,520 --> 00:17:55,520
very frequently. So whenever you would inherit from two different families that both had

163
00:17:55,680 --> 00:18:02,680
arms, then you'd get to quarter. So the simplest one is the princely house of Hohenzollern,

164
00:18:03,400 --> 00:18:09,080
which is quarterly saber and gul. So you can actually see each of those sabers and guls.

165
00:18:09,080 --> 00:18:14,560
That's a complete coat of arms, and then they're quartered together. Another great one is Castille

166
00:18:14,560 --> 00:18:21,560
et Lyon, which has a castle and a lion, because sometimes they were clever like that. And

167
00:18:22,040 --> 00:18:29,040
what's interesting about this is that the actual emblazement of the arms of Castille

168
00:18:29,680 --> 00:18:35,400
et Lyon is quarterly one and four Castille, two and three Lyon, which means that they

169
00:18:35,400 --> 00:18:39,840
are like reference them by reference, that you'd have to know what Castille looked like.

170
00:18:39,840 --> 00:18:45,320
And so I've included those beneath so you can understand it. But yeah, they have like

171
00:18:45,320 --> 00:18:50,040
references to whole other coats of arms you'd have to go look up and then paint that one

172
00:18:50,040 --> 00:18:57,040
on. So that was usually for state level stuff that you'd be like, I'd have old France on

173
00:18:57,280 --> 00:19:02,880
a canton or something like that. So that's interesting that they can also reference other

174
00:19:02,880 --> 00:19:09,880
coats of arms. And here's the coats of arms of the entire EU. So yeah, it can get very

175
00:19:13,160 --> 00:19:19,160
complex. But because of the way we've kind of built this, it's not very hard to extend

176
00:19:19,160 --> 00:19:26,160
our thing to be able to parse this. So I can say quarterly of a certain number, and then

177
00:19:28,040 --> 00:19:35,040
have this quarter group kind of just repeat. So like, you know, quarterly, then one quarter,

178
00:19:38,160 --> 00:19:45,280
two quarters, three quarters, separated by like and or something like that. And that's

179
00:19:45,280 --> 00:19:50,160
included in the rules. So because it's recursion, it's easy to just use the same thing multiple

180
00:19:50,160 --> 00:19:57,160
times. So that actually is all we need to parse the coat of arms of the UK. So just

181
00:20:00,800 --> 00:20:06,680
going over this, it's a quartered one. So we're going to have three separate quarters.

182
00:20:06,680 --> 00:20:13,680
The first one is for England. That's three lions, passant, garden, arranged along an

183
00:20:14,080 --> 00:20:20,360
ordinary of a vertical. And then it has the colors that they are. And then the second

184
00:20:20,360 --> 00:20:27,360
quarter is a lion rampant inside of an ordinary, which is the border. And then the third one

185
00:20:29,480 --> 00:20:36,480
is a harp. That's ore stringed, it's got white strings. And yeah, that's actually a fully,

186
00:20:36,480 --> 00:20:43,480
we're able to fully parse this whole thing, which I think seemed very daunting at first.

187
00:20:46,400 --> 00:20:51,560
All right. So let's talk a little bit more about some of the obscure rules. One of the

188
00:20:51,560 --> 00:20:55,200
most important ones is the rule of tincture, which is that only certain coats of arms are

189
00:20:55,200 --> 00:21:01,680
valid. So if we look at this one, which is a sable with a bend ghoul, which is this red

190
00:21:01,680 --> 00:21:07,040
stripe on the black, that is not valid. Any herald would spit at you if you tried to ask

191
00:21:07,040 --> 00:21:14,040
for that. But this one with a yellow stripe, that's totally valid. So that's because it's

192
00:21:18,000 --> 00:21:25,000
a metal on a tincture. They had some rules that were to enhance contrast. And you can

193
00:21:25,000 --> 00:21:29,760
have black, you can have a color on a metal or a metal on a color, but you couldn't do

194
00:21:29,840 --> 00:21:36,840
metal on metal or color on color. So yeah, with the exception of Jerusalem. Jerusalem

195
00:21:38,080 --> 00:21:45,080
could do color on color or metal on metal because it's very resplendent. Anyway, so

196
00:21:46,440 --> 00:21:51,240
the trouble with this is it becomes, certain countries care about it more than others,

197
00:21:51,240 --> 00:21:56,760
and also it starts to get very complex with what happens when charges go from one to the

198
00:21:56,760 --> 00:22:01,760
other. And you might not want to just refuse to parse one that's wrong. You might want

199
00:22:01,760 --> 00:22:08,760
to parse it and then handle it in some other case. Be like, hey, technically this is wrong,

200
00:22:09,080 --> 00:22:16,080
but still have understood it. So this is why I'm saying that when you get to these more

201
00:22:17,920 --> 00:22:21,800
complicated rules, like the rule of tincture, it's too complicated for a parser. So that

202
00:22:21,840 --> 00:22:26,840
would be the kind of thing that you would check in a validation step. So yeah, so here

203
00:22:26,840 --> 00:22:31,680
would be like if you wanted to go from Blazins to full code of arm renders, this is what

204
00:22:31,680 --> 00:22:37,280
you would do. And I've actually only done this part, the parsing for this talk, just

205
00:22:37,280 --> 00:22:43,680
to keep it simple because I'm sure drawing the shield is its whole own bag of worms.

206
00:22:43,680 --> 00:22:50,120
But yeah, so we've built this whole abstract syntax tree just from the Blazon, which is

207
00:22:50,120 --> 00:22:56,760
getting to the point of why this is a PyCon. So now that you've seen all of this, you're

208
00:22:56,760 --> 00:23:03,440
fully qualified to read the Python grammar. It's actually shorter than the grammar I wrote

209
00:23:03,440 --> 00:23:10,440
for Blazon. So this is your homework, by the way. Enter it in your phone at some point,

210
00:23:11,280 --> 00:23:16,360
like next week when you're back in your regular life, to just Google Python grammar and read

211
00:23:16,360 --> 00:23:22,280
this. I mean, let's look at some of these things. This defines an if statement. If,

212
00:23:22,280 --> 00:23:27,160
then there's a test, colon, then there's a suite that it's supposed to do, and then there's

213
00:23:27,160 --> 00:23:34,160
an optional elif, and there could be multiple, and then there's an optional else. And there's

214
00:23:34,280 --> 00:23:39,280
a wow statement, which is even simpler than the if. So hopefully now that you've seen

215
00:23:39,280 --> 00:23:44,240
these parsing and you've seen the medieval context, you can see this is actually very

216
00:23:44,280 --> 00:23:51,280
simple compared to the heraldic one. And I think that really everyone who's using Python

217
00:23:51,440 --> 00:23:58,440
ought to read the grammar because there's, you know, kind of like, there's a difference

218
00:23:58,520 --> 00:24:04,400
between knowing what things you can do and what things work, but then there's also a

219
00:24:04,400 --> 00:24:09,560
difference between understanding why it works and kind of going to the source of figuring

220
00:24:09,560 --> 00:24:14,240
out, like, you know, how is this language actually processed and taking away the magic

221
00:24:14,240 --> 00:24:20,160
there? So I mean, this is, I'm just taking some samples of how the Boolean logic works

222
00:24:20,160 --> 00:24:26,600
where the or can take an and, or, you see what I mean? They're kind of nesting and calling

223
00:24:26,600 --> 00:24:33,600
each other. Here's like the, a statement is either a simple or a compound statement. For

224
00:24:33,600 --> 00:24:40,600
a simple statement, it could be one of these import lines, global assert lines, or it could

225
00:24:41,880 --> 00:24:46,720
be like a compound statement that's like a whole block. But yeah, I'm not going to explain

226
00:24:46,720 --> 00:24:53,720
the whole Python grammar right now because it's your homework. Great. So here's me also

227
00:24:56,120 --> 00:25:03,120
parsing a print statement and the same thing. Any questions?

228
00:25:04,600 --> 00:25:07,600
Thanks.

229
00:25:14,600 --> 00:25:22,600
We have about five minutes for questions, so please feel free to approach the mic and ask questions.

230
00:25:26,600 --> 00:25:32,600
Also, does anyone in the audience have a coat of arms? I'm always curious. Shout out if you have one.

231
00:25:33,600 --> 00:25:36,600
I'll be interested.

232
00:25:37,600 --> 00:25:41,600
Cool. It's relevant to one person.

233
00:25:42,600 --> 00:25:48,600
Hi. I was wondering if you said you built a database of all the coat of arms you could find.

234
00:25:48,600 --> 00:25:49,600
Yeah.

235
00:25:49,600 --> 00:25:54,600
I'm wondering if, like, did you have any idea of how many permutations there were with this language?

236
00:25:55,600 --> 00:25:58,600
You mean how many total things are in my database?

237
00:25:58,600 --> 00:26:02,600
I guess it's a two-part question. How many things are in your database and how many things are theoretically possible?

238
00:26:02,600 --> 00:26:11,600
Oh, infinite. I mean, it's recursive, right? So you could always be like, take all the ones that are theoretically possible,

239
00:26:11,600 --> 00:26:18,600
put that in the corner, and then multiply it by, you know, them again. So it's easily provable to be infinite.

240
00:26:19,600 --> 00:26:31,600
And I have about 150,000 in my database, but I mostly have like two or three sources that was like most of Europe in the 1850s.

241
00:26:31,600 --> 00:26:40,600
But there's a lot of more, like, coat of arms that I haven't even included because after 150,000, I felt like I had enough, you know?

242
00:26:42,600 --> 00:26:46,600
Really quickly, was there a limit to the amount of recursion?

243
00:26:49,600 --> 00:26:53,600
Like how deep it could go? There's no limit in the language.

244
00:26:53,600 --> 00:26:58,600
The most number of quarterings I think they've ever seen is 719 quarterings.

245
00:26:58,600 --> 00:27:02,600
So, yeah, there's a lot of inbreeding.

246
00:27:05,600 --> 00:27:12,600
So sometimes you get the same one showing up a bunch of times. You're like, huh, there's a lot of that one lion coming back.

247
00:27:17,600 --> 00:27:23,600
Hi. So I was wondering if the language also describes how to find out the rank from the crown.

248
00:27:23,600 --> 00:27:24,600
Sorry, what was that?

249
00:27:24,600 --> 00:27:26,600
The rank from the crown.

250
00:27:27,600 --> 00:27:28,600
What? Sorry.

251
00:27:28,600 --> 00:27:33,600
The rank of the bearer, king, prince, by count.

252
00:27:34,600 --> 00:27:41,600
Oh, oh, the rank. Yeah, yeah, yeah. So the rank is determined by the crown.

253
00:27:41,600 --> 00:27:44,600
Yeah, so that would tell you if you were an earl or a duke or whatever.

254
00:27:44,600 --> 00:27:48,600
And I mean, everyone's trying to improve their status.

255
00:27:48,600 --> 00:27:52,600
It's not on the actual shield itself because I guess hopefully it changes a lot.

256
00:27:53,600 --> 00:27:57,600
Yeah, but yeah, it's on the full achievement that you'd be able to tell.

257
00:27:57,600 --> 00:28:08,600
And I think that if you were a nobility in a country, you would know almost everyone else's coat of arms, you know, of the inner hierarchy by sight.

258
00:28:08,600 --> 00:28:15,600
Yeah, and also I was wondering if the database is available somewhere for us to play around with if possible.

259
00:28:16,600 --> 00:28:18,600
The database is what? Is it online?

260
00:28:18,600 --> 00:28:24,600
Yeah, it's on my GitHub. So I'm MC Scope on GitHub and I published it.

261
00:28:24,600 --> 00:28:31,600
I don't know if it was okay to publish it, but most of the stuff I got from like a book from the 18th century.

262
00:28:31,600 --> 00:28:35,600
So I think that's probably public domain. Anyway.

263
00:28:36,600 --> 00:28:37,600
Thank you.

264
00:28:39,600 --> 00:28:46,600
Hey, awesome talk. So has any work been done on trying to automatically render these things from the past description?

265
00:28:46,600 --> 00:28:51,600
Yeah, so I didn't cover that for this talk because I felt like I had enough just in parsing it.

266
00:28:51,600 --> 00:28:57,600
But this website, drawshield.net, you're able to type in a blazin and they'll render it for you.

267
00:28:57,600 --> 00:28:59,600
Oh, sweet. Didn't see that. Okay.

268
00:28:59,600 --> 00:29:03,600
Yeah, so that's awesome. That's a great source to know Hey, Audrey.

269
00:29:03,600 --> 00:29:06,600
Also, I really recommend reddit's our Hey, Audrey community.

270
00:29:06,600 --> 00:29:13,600
And also I recommend really old books about it because there's a lot of resources on Gutenberg. Yeah.

271
00:29:13,600 --> 00:29:23,600
Two questions. What percentage of your database did you end up being able to successfully parse?

272
00:29:23,600 --> 00:29:26,600
Yeah, I maxed out around 70 percent.

273
00:29:26,600 --> 00:29:35,600
And then it started being there's a lot of like, you know, things that only ever appear in this individual like long tail, you know, like, oh, they invented a new kind of bird.

274
00:29:35,600 --> 00:29:40,600
I lived in this guy's hometown, you know, and that appears on there. It's like, you know, yeah.

275
00:29:40,600 --> 00:29:45,600
So there's a lot of long tail things. But yeah, 70 percent of what I maxed out at, which I thought was good.

276
00:29:45,600 --> 00:29:55,600
I mean, given that this thing I did this in, you know, like a week or two and they wrote it for 500 years, you know.

277
00:29:55,600 --> 00:29:59,600
Yeah, that's that's great. Good job.

278
00:29:59,600 --> 00:30:02,600
Also, where do you find these old books?

279
00:30:03,600 --> 00:30:11,600
Yeah, so a lot of them are on like Project Gutenberg or stuff like that.

280
00:30:11,600 --> 00:30:17,600
But I actually got linked to them. So from like, Josh, you or Wikipedia, I got linked to these books from there.

281
00:30:17,600 --> 00:30:20,600
Really, Josh, you have an awesome resource.

282
00:30:20,600 --> 00:30:27,600
They have a lot of they have not only can they render the code of arms, they have a lot of like information about her older too.

283
00:30:27,600 --> 00:30:29,600
So, yeah.

284
00:30:29,600 --> 00:30:44,600
Did you find that the order of things describing objects on the shield, if that makes sense, matches the order that I sometimes run into online where they talk about the adjective order that people expect in English?

285
00:30:44,600 --> 00:30:49,600
Did you find that the language you were seeing resembled language that's used today?

286
00:30:49,600 --> 00:30:51,600
Or can you talk about that a little?

287
00:30:51,600 --> 00:30:55,600
It definitely doesn't parse like natural.

288
00:30:55,600 --> 00:31:05,600
Like when you're seeing it, there's a lot of times where it's a little bit ambiguous where exactly something will be because they only really had commas.

289
00:31:05,600 --> 00:31:08,600
They didn't use like parentheses to separate whole blocks.

290
00:31:08,600 --> 00:31:20,600
So sometimes like the one thing that Reddit's heraldry community does, which is really interesting, is they do a telephone game where they'll have someone draw a shield and then someone take the shield and write the description.

291
00:31:20,600 --> 00:31:23,600
And then someone takes the description and then draws the shield again.

292
00:31:23,600 --> 00:31:27,600
And you kind of run into these issues where like it can be really ambiguous.

293
00:31:27,600 --> 00:31:36,600
Is this charge supposed to appear like at the top of the area we're currently in or at the top of the whole thing or at the bottom?

294
00:31:36,600 --> 00:31:42,600
And so some of that is like a little bit of ambiguity that's just kind of built into the language.

295
00:31:42,600 --> 00:31:53,600
And then, yeah, the way things like adjective order, sometimes you see them where they're like kind of like on a blank a blank, which is not really how you would say it in English.

296
00:31:53,600 --> 00:31:55,600
You'd say there's a blank on a blank.

297
00:31:55,600 --> 00:31:59,600
You kind of would do infix, but instead they have like a prefix thing.

298
00:31:59,600 --> 00:32:03,600
So and I think part of that is because it like partially comes from French.

299
00:32:03,600 --> 00:32:06,600
I don't really understand why.

300
00:32:06,600 --> 00:32:07,600
Yeah.

301
00:32:07,600 --> 00:32:10,600
Thank you.

302
00:32:10,600 --> 00:32:12,600
I have one question.

303
00:32:12,600 --> 00:32:17,600
What prompted you to be interested in this?

304
00:32:17,600 --> 00:32:24,600
Well, as I said, it's got a ton of rules and I think that's really interesting to my mind.

305
00:32:24,600 --> 00:32:31,600
It's also something that I felt like there is a programming talk in there and I could talk about Middle Ages stuff.

306
00:32:31,600 --> 00:32:34,600
So, you know, that was very appealing to me.

307
00:32:34,600 --> 00:32:42,600
I had this idea for this talk last year at PyCon and then I just kind of had this inspiration that, hey, I could actually get on stage and give a talk.

308
00:32:42,600 --> 00:32:46,600
So if you're here in the audience, consider submitting a talk.

309
00:32:46,600 --> 00:32:55,600
You know, like if you're here, you're qualified to talk and you should you should try it.

310
00:32:55,600 --> 00:33:02,600
Please help me thank Lady Red.

