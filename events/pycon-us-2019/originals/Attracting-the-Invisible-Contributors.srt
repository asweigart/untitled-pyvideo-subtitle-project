1
00:00:00,000 --> 00:00:13,680
Okay. Thank everybody for coming. Today we're going to be hearing about attracting the invisible

2
00:00:13,680 --> 00:00:17,840
contributors with Charlotte Mays.

3
00:00:17,840 --> 00:00:25,720
Thank you. So before I start, I want to give a little bit of context to this talk. I am

4
00:00:25,720 --> 00:00:31,800
one of the co-organizers of my local Pi Ladies group. In that context, I spend a lot of time

5
00:00:31,800 --> 00:00:38,560
talking to people who come to the group asking them what they want out of the community.

6
00:00:38,560 --> 00:00:42,240
Not just the Pi Ladies group but the community general, what their goals are, that sort of

7
00:00:42,240 --> 00:00:43,240
thing.

8
00:00:43,240 --> 00:00:49,360
I hear a lot of people saying that I want some sort of place where I can come and actually

9
00:00:49,360 --> 00:00:54,440
get into some coding. So of course there are a few things that already exist that I'll

10
00:00:54,480 --> 00:01:01,480
often point them to. Existing groups that do supportive coding including our local Python

11
00:01:02,000 --> 00:01:07,240
group that isn't the Pi Ladies group. And that sort of thing. And I get a lot of people

12
00:01:07,240 --> 00:01:14,240
talking particularly when the subject of open source comes up about, well, I tried. I went

13
00:01:14,240 --> 00:01:22,360
to this project and I hit X roadblock. So I had a lot of that. And then from there,

14
00:01:22,360 --> 00:01:27,800
I am also a core committer on a project and have contributed to a bunch of projects. And

15
00:01:27,800 --> 00:01:34,800
I work at Red Hat where project maintainers kind of grow on trees. And so I'm in a situation

16
00:01:35,080 --> 00:01:40,040
where I see a lot of both sides of this. And there's a lot of things that I think project

17
00:01:40,040 --> 00:01:46,360
maintainers and contributors don't necessarily think about that are actually chasing some

18
00:01:46,360 --> 00:01:52,160
people away. So who are these invisible contributors that I'm talking about? A lot of times they're

19
00:01:52,160 --> 00:01:58,000
students. They may be current students in a traditional bachelor's program or they may

20
00:01:58,000 --> 00:02:03,080
be students at a boot camp. They also can often be self-taught coders where they don't

21
00:02:03,080 --> 00:02:08,960
have much structure that they're coming from to know where they should be looking. And

22
00:02:08,960 --> 00:02:14,200
then also sometimes they're just users who want to contribute. Users of a project who,

23
00:02:14,200 --> 00:02:18,920
you know, found a bug that they would like to help fix or have a feature that they would

24
00:02:18,960 --> 00:02:24,040
like to see exist and they feel like they maybe have enough knowledge of programming

25
00:02:24,040 --> 00:02:29,240
to be able to help out. So these are often the people who, they're not well versed in

26
00:02:29,240 --> 00:02:34,880
the open source community. They don't know all of the default assumptions that most people

27
00:02:34,880 --> 00:02:40,760
in this room probably already have. So these are what I call the invisible contributors.

28
00:02:40,760 --> 00:02:47,760
They may come look at your project and go, this looks overwhelming. I'm going to not.

29
00:02:48,440 --> 00:02:52,760
So how can you use the content that I'm about to give you? Because I'm going to warn you

30
00:02:52,760 --> 00:02:58,440
this is going to be a bit of a fire hose. One thing is just simply for insights into

31
00:02:58,440 --> 00:03:04,480
diverse viewpoints. So a lot of this has been accumulated not just from people I've interacted

32
00:03:04,480 --> 00:03:09,520
with locally and directly, but I've actually reached out and kind of tried to go, okay,

33
00:03:09,520 --> 00:03:14,600
I know this little piece of this, what other things are going on that are pushing people

34
00:03:14,600 --> 00:03:19,800
away and really tried to collect a bunch of this stuff together. So this ought to give

35
00:03:19,800 --> 00:03:26,800
you some insights into the different people who may come to look at your project. If you

36
00:03:27,440 --> 00:03:31,720
maintain or contribute to an open source project, then you're obviously very much my target

37
00:03:31,720 --> 00:03:37,920
audience. Do not, when you get this fire hose of information, assume that it's a lost cause

38
00:03:37,920 --> 00:03:41,760
and just ignore it because there will be a lot of things that I'm going to tell you.

39
00:03:41,760 --> 00:03:45,520
There's probably for the majority of projects going to be a whole lot of things that you

40
00:03:45,520 --> 00:03:51,840
look at and go, yeah, we don't do that. Don't assume it's a lost cause and ignore it. Instead,

41
00:03:51,840 --> 00:03:56,120
make small changes at an appropriate pace. Pick up a couple of things. These talks are

42
00:03:56,120 --> 00:04:01,240
all recorded. You can go look at it later online and once you've made a couple of small

43
00:04:01,240 --> 00:04:05,840
changes, go back and make a couple more small changes. As long as you're continuously improving,

44
00:04:05,840 --> 00:04:09,400
you're going to continuously get closer to that goal of being able to attract more and

45
00:04:09,560 --> 00:04:16,560
more contributors to your project. Do not, especially if you have a project that's going

46
00:04:16,680 --> 00:04:21,400
at a steady pace, you've got contributors, just sit there and declare unilaterally, okay,

47
00:04:21,400 --> 00:04:25,720
we're going to change a bunch of things. We're going to do this, this, this. It's great if

48
00:04:25,720 --> 00:04:29,880
you want to make changes based on this, but you're going to get people pushing back. When

49
00:04:29,880 --> 00:04:34,600
those people push back, do ask them for alternative suggestions because sometimes you'll have

50
00:04:34,600 --> 00:04:39,440
people who say, well, I like, for instance, the chat system that we use and you're telling

51
00:04:39,440 --> 00:04:43,760
me that we need to change it for X, Y and Z reason. Ask them for alternative suggestions.

52
00:04:43,760 --> 00:04:47,320
Say, okay, well, here's the problem we're trying to solve. All the suggestions I'm going

53
00:04:47,320 --> 00:04:51,760
to give you, I'm going to tell you exactly what the problem is that we're trying to solve.

54
00:04:51,760 --> 00:04:56,120
Present this and let it be a conversation within your project. If somebody objects to

55
00:04:56,120 --> 00:05:00,600
a specific change, ask them, okay, well, do you have another alternative to solve this

56
00:05:00,760 --> 00:05:07,760
problem? Do not completely disregard the opinions of your existing contributors. They are still

57
00:05:07,920 --> 00:05:14,920
important. But do stand firm that existing contributors should also be welcoming to new

58
00:05:14,920 --> 00:05:19,040
people. So, you know, hopefully everybody is going to be on the same team in terms of

59
00:05:19,040 --> 00:05:25,480
we want to have the most thriving open source project we can and have that be your approach

60
00:05:25,480 --> 00:05:29,280
that you take to all of this. And the last thing I want to mention about how you can

61
00:05:29,280 --> 00:05:33,440
use this content is as a framework to help a company be more attractive to a diversity

62
00:05:33,440 --> 00:05:40,440
of candidates. It's not directly put together with companies in mind, but all of the same

63
00:05:40,840 --> 00:05:47,840
principles apply. So think of it, you know, when you are within a company situation trying

64
00:05:48,200 --> 00:05:52,320
to think about how to be more diverse and inclusive, these are also principles that

65
00:05:52,320 --> 00:05:57,800
you can think of and think how would that apply to those situations as well.

66
00:05:57,800 --> 00:06:02,800
All right. So I'm going to define a couple of terms that I'm going to use in this talk.

67
00:06:02,800 --> 00:06:07,560
I'm calling projects sticky versus slippery. And I'm not trying to define this as a binary.

68
00:06:07,560 --> 00:06:12,200
This is a spectrum. So projects can be anywhere from the sticky end of the spectrum to the

69
00:06:12,200 --> 00:06:17,760
slippery end of the spectrum. A sticky project has multiple long-term contributors. They

70
00:06:17,760 --> 00:06:21,960
see communication when people look it up. Even if those people don't end up contributing,

71
00:06:21,960 --> 00:06:28,960
they at least say, hey, I'm interested. What can you tell me about this? A slippery project

72
00:06:29,600 --> 00:06:34,280
may only have a few long-term contributors, maybe just the maintainer and a couple of

73
00:06:34,280 --> 00:06:41,280
people who might drop in a PR blindly every now and then. And it sees minimal or no communication

74
00:06:41,440 --> 00:06:47,040
from people who look it up. Nobody comes and says, hey, I want to help with this. And so

75
00:06:47,040 --> 00:06:52,240
the goal of this project or the goal of this talk is to help your project go from the slippery

76
00:06:52,240 --> 00:06:59,040
end of the spectrum to the sticky end of the spectrum. So what makes a project fall on

77
00:06:59,040 --> 00:07:03,860
one end or the other of the spectrum? There are five things I'm going to break this down

78
00:07:03,860 --> 00:07:08,880
into and I'm going to go into each of these in more detail. But in brief, communication,

79
00:07:08,880 --> 00:07:12,520
they need to be able to communicate with you. Documentation, we all know the importance

80
00:07:12,520 --> 00:07:15,840
of documentation, but I'm going to go into some more detail about how that relates to

81
00:07:15,840 --> 00:07:22,640
this. Kindness, basic human trait, very important in this context. Terminology that's used in

82
00:07:22,640 --> 00:07:29,640
your project. And the ever popular code of conduct. So when we're talking about communication,

83
00:07:31,700 --> 00:07:35,040
you want to make sure that you make it easy for people to communicate with your team.

84
00:07:35,040 --> 00:07:40,200
I see a lot of projects that the only thing that they have for communication is maybe

85
00:07:40,240 --> 00:07:47,120
a mailing list or an IRC channel. These are not great for communication. They're great

86
00:07:47,120 --> 00:07:51,360
to have. They're better than nothing, especially the mailing list because that likely will

87
00:07:51,360 --> 00:07:56,000
have the archived interactions so people can go look back and see how the conversations

88
00:07:56,000 --> 00:08:02,080
went over time. But it's not good for real time. IRC is good for real time but has no

89
00:08:02,080 --> 00:08:07,400
archive. Nobody can go and look and see anything that happened before they joined that IRC

90
00:08:08,080 --> 00:08:14,580
channel. And it can be really not accessible to new coders. It's something that there's

91
00:08:14,580 --> 00:08:18,560
not a whole lot of information about how to set it up. You have to kind of read through

92
00:08:18,560 --> 00:08:22,480
a bunch of different things, that sort of thing. So these are the kinds of things that

93
00:08:22,480 --> 00:08:26,500
you want to think about when you think about how are people going to communicate with my

94
00:08:26,500 --> 00:08:33,360
project. And this should be on the front page of every place a person might land. Your documentation,

95
00:08:33,520 --> 00:08:40,120
your GitHub repo, any place that you have a presence, how people can communicate with

96
00:08:40,120 --> 00:08:44,880
you should be front and center. You want to make sure, like I said, that it's accessible

97
00:08:44,880 --> 00:08:51,120
to non-technical people, that there are archived interactions. Archived interactions are important

98
00:08:51,120 --> 00:08:55,200
because that way people can see how did people interact with other people. Are they going

99
00:08:55,200 --> 00:08:59,500
to be nice to me when I come and ask my newbie question? Because that's the people we're

100
00:08:59,500 --> 00:09:03,600
talking about. We're talking about people who they have no idea if their questions are

101
00:09:03,600 --> 00:09:09,420
intelligent or just incredibly naive. They want to know how are you going to react, are

102
00:09:09,420 --> 00:09:14,940
you going to be dismissive, et cetera. And then we want minimal downloads or installation.

103
00:09:14,940 --> 00:09:18,820
If you want to use something like Slack, most people probably already have that installed

104
00:09:18,820 --> 00:09:24,220
or are used to using it just because of how prevalent it is. But then, you know, something

105
00:09:24,220 --> 00:09:31,020
that has a web accessible version, which Slack also does, you can log into it from

106
00:09:31,020 --> 00:09:35,900
a web browser, helps minimize that friction of people trying to communicate with your

107
00:09:35,900 --> 00:09:42,900
project for the first time. All right. So documentation. We all hear all the time about

108
00:09:42,900 --> 00:09:48,980
how much you need documentation. But I want to kind of pin down here a difference between

109
00:09:49,340 --> 00:09:54,460
user-focused and developer-focused documentation. So usually when we're talking about documentation,

110
00:09:54,460 --> 00:09:58,180
we're talking about user-focused documentation. How do you use this project? How do you use

111
00:09:58,180 --> 00:10:03,600
this library or app? But what we're talking about here in terms of attracting the invisible

112
00:10:03,600 --> 00:10:08,620
contributors is we want to make sure you've got developer-focused documentation. Something

113
00:10:08,620 --> 00:10:15,300
that's going to, for instance, tell people how to set up their dev environment. You know,

114
00:10:15,300 --> 00:10:19,940
just having documentation of this is how you use it does not tell me how I need to

115
00:10:19,940 --> 00:10:24,580
set up my virtual environment for development, for running your tests on your project, all

116
00:10:24,580 --> 00:10:30,540
of those components that may be part of the process of developing. Especially if you're

117
00:10:30,540 --> 00:10:35,420
working with a library or something like that, it may not be something I can run directly.

118
00:10:35,420 --> 00:10:41,020
I may need a sample project, that sort of thing. Any of those environment set up steps

119
00:10:41,100 --> 00:10:45,780
need to be spelled out. And you should spell those out for all the major operating systems

120
00:10:45,780 --> 00:10:51,660
because you never know what operating system your invisible contributors are using. And

121
00:10:51,660 --> 00:10:55,740
if the set up doesn't work on their machine, guess what? They're going to disappear on

122
00:10:55,740 --> 00:11:02,060
you. You also want to make sure your documentation includes the PR submission process. This doesn't

123
00:11:02,060 --> 00:11:09,060
have to mean here is how you do GitHub, although it's great if you want to include that. But

124
00:11:09,060 --> 00:11:15,460
in particular, once you submit a PR, how long should you expect to wait before somebody

125
00:11:15,460 --> 00:11:21,380
responds to it? What kind of response should you expect? What are the standards for PRs

126
00:11:21,380 --> 00:11:27,260
that people are going to look at? And that sort of thing. Anything that you feel like

127
00:11:27,260 --> 00:11:33,100
is an assumption, if you have any question about whether it's an assumption or not, maybe

128
00:11:33,100 --> 00:11:36,500
you should link out to somebody who explains it. I mean, there are already plenty of people

129
00:11:36,500 --> 00:11:41,340
who explain the basics of GitHub. You may not want to reinvent that wheel and explain

130
00:11:41,340 --> 00:11:44,940
that in your documentation, but you might want to link to if you're new to GitHub, look

131
00:11:44,940 --> 00:11:51,940
at this. Here's a guide. That sort of thing. But then, you know, this project specifically,

132
00:11:52,260 --> 00:11:56,100
when you submit a PR, this is the kind of person who's going to come look at it. This

133
00:11:56,100 --> 00:12:01,980
is the kind of comments you're going to see. Here's an example of a PR. That sort of thing.

134
00:12:01,980 --> 00:12:05,980
And then expectations after submission. Are your tests going to automatically run? Can

135
00:12:05,980 --> 00:12:11,840
they look and see what test results happened? Can they see if there were failures and go

136
00:12:11,840 --> 00:12:17,900
ahead and start fixing that without your project having to interface with them? Those are all

137
00:12:17,900 --> 00:12:24,300
good things to have documented what people can look for.

138
00:12:24,300 --> 00:12:29,140
So I want to take a minute to talk about kindness. We all know what it is, but how does it relate

139
00:12:29,140 --> 00:12:34,300
to your open source project? One thing that I want to really put in context here is to

140
00:12:34,300 --> 00:12:40,660
be kind to all questions or submissions. You hear a lot, and I don't want to minimize,

141
00:12:40,660 --> 00:12:44,860
that project maintainers deal with a lot of abuse. There are a lot of people who just

142
00:12:44,860 --> 00:12:50,700
have high expectations. They expect a maintainer to do everything for them. All that sort of

143
00:12:50,700 --> 00:12:56,980
thing. Yes, those people are going to come along. And yes, it's easy to go, yeah, go

144
00:12:56,980 --> 00:13:02,280
away. You are expecting way too much of me. I am doing this on my own time. But you want

145
00:13:02,280 --> 00:13:07,760
to be kind to them even as you tell them, hey, we are not going to do that. We don't

146
00:13:07,760 --> 00:13:14,640
want to maintain that. The thing is, those invisible contributors are going to be coming

147
00:13:14,640 --> 00:13:19,880
along and reading what you wrote to those people who are expecting too much of you.

148
00:13:19,880 --> 00:13:23,880
And the invisible contributors, since, remember, they are the people who are not familiar with

149
00:13:23,880 --> 00:13:29,640
the open source process, they don't know that maintainers deal with this kind of abuse all

150
00:13:29,640 --> 00:13:34,640
the time. So they don't, if you have a snippy response to them or dismissive response to

151
00:13:34,640 --> 00:13:42,040
them, to these people who are abusing the process, the newbies, the novices, they don't

152
00:13:42,040 --> 00:13:46,720
know why you are being snippy or dismissive. They just know you are being snippy or dismissive

153
00:13:46,720 --> 00:13:50,640
to somebody and they are going to worry you are going to do that to them. And remember

154
00:13:50,640 --> 00:13:57,400
that you can reject without being unkind. If somebody offers a PR and it's for a feature

155
00:13:57,720 --> 00:14:03,240
that doesn't work with your project, it's not going to integrate well, you can still

156
00:14:03,240 --> 00:14:09,120
say, hey, I appreciate that you did this work. We are not going to integrate it but maybe

157
00:14:09,120 --> 00:14:14,640
you want to fork and maintain this yourself. They are going to know what that means. But

158
00:14:14,640 --> 00:14:19,720
those novice contributors are going to look at that and see you being polite and they

159
00:14:19,720 --> 00:14:25,760
are going to understand that you are going to be polite to submitters. You can also,

160
00:14:25,760 --> 00:14:31,160
if somebody submits something that just isn't good code quality, then you can do the same

161
00:14:31,160 --> 00:14:35,680
thing. You can say, hey, this doesn't meet our standards. Preferably, hopefully you have

162
00:14:35,680 --> 00:14:40,800
that documentation of what your standards are. And you can point them to that. You can

163
00:14:40,800 --> 00:14:46,720
point them to your communication channels, wherever it is that your team communicates.

164
00:14:46,720 --> 00:14:51,120
And say, hey, maybe somebody over here can help you clean this up a little bit before

165
00:14:51,120 --> 00:14:57,720
we try to merge that in. So keep in mind ways that you can kind of be kind while you reject

166
00:14:57,720 --> 00:15:03,920
things that are maybe not appropriate. Also remember, again, with the whole burnout thing,

167
00:15:03,920 --> 00:15:09,000
you don't have to respond immediately. If you don't have it in you in this moment to

168
00:15:09,000 --> 00:15:13,320
be nice to that person, just don't say anything at all. Come back to it when you have a little

169
00:15:13,320 --> 00:15:16,720
bit more space or ask somebody else, hey, can you go respond to this person? I just

170
00:15:17,520 --> 00:15:22,760
can't deal with this right now. So there are ways to handle this without getting that snippy

171
00:15:22,760 --> 00:15:29,520
and dismissive tone into the indelible stuff that's going to sit around in the closed PRs

172
00:15:29,520 --> 00:15:34,680
of your project and that sort of thing. So I want to talk about terminology a little

173
00:15:34,680 --> 00:15:39,880
bit. First of all, you want to make sure that you minimize your jargon. I mean, of course,

174
00:15:39,880 --> 00:15:44,240
there's going to be jargon that's used. But make sure that you're not using jargon just

175
00:15:44,240 --> 00:15:49,120
for the sake of using it, just for the sake of hitting buzzwords on search engines, that

176
00:15:49,120 --> 00:15:53,400
sort of thing. Because the more jargon that's there, the more likely it is that this new

177
00:15:53,400 --> 00:15:58,300
person is going to come along and go, I don't know what this is talking about. This is clearly

178
00:15:58,300 --> 00:16:03,080
above my level. And they're going to go somewhere else. So use the jargon that you need to be

179
00:16:03,080 --> 00:16:10,080
clear. And anything that isn't necessary, try to use plainer language. You also want

180
00:16:10,080 --> 00:16:16,520
to make sure your terminology is nonoffensive. There's a bunch of stuff out there in terms

181
00:16:16,520 --> 00:16:20,400
of discussion around the terms master slave. So I'm going to use that as an example because

182
00:16:20,400 --> 00:16:27,880
you can find a lot of discussion around that. Master slave has been used to discuss servers

183
00:16:27,880 --> 00:16:34,580
and processes for a long time. It's been out there for ages. It's ingrained in all kinds

184
00:16:34,580 --> 00:16:41,060
of things. But it is not welcoming. No, not everybody is going to be offended by it. No,

185
00:16:41,060 --> 00:16:45,300
not everybody in the X demographic group is going to be offended by it. But there are

186
00:16:45,300 --> 00:16:51,060
a good number of people who are offended by it, who just don't feel comfortable in a context

187
00:16:51,060 --> 00:16:56,020
where that terminology is being thrown around. So there's a lot of discussion out there about

188
00:16:56,020 --> 00:17:00,860
what are appropriate replacement words that are maybe even more descriptive of the process

189
00:17:00,860 --> 00:17:07,100
that's actually being done. Primary replica, primary secondary, leader follower. These

190
00:17:07,100 --> 00:17:11,460
sorts of things might explain what's actually happening even more than the terms master

191
00:17:11,460 --> 00:17:17,400
slave do. So that's one of those things where because it's going to offend some people,

192
00:17:17,400 --> 00:17:21,780
you probably want to kind of pull that out. And you want to think of these things as being

193
00:17:21,780 --> 00:17:26,100
kind of technical debt, things that you can kind of chip away at as you have time, that

194
00:17:26,420 --> 00:17:32,180
sort of thing. And I do want to mention, you know, that one has a lot of press. But there's

195
00:17:32,180 --> 00:17:37,420
a lot of things in this category. Think about so easy your mom could do it or so easy your

196
00:17:37,420 --> 00:17:42,020
girlfriend could do it. How are people going to think if they are a middle-aged mother

197
00:17:42,020 --> 00:17:48,340
of four coming and wanting to contribute to your project or if they are a 22-year-old

198
00:17:48,340 --> 00:17:52,940
girl just out of college and they see that language and they're like, oh, you think the

199
00:17:53,300 --> 00:17:59,100
women can't do this. Okay. You know. And it's something where everybody knows what you mean,

200
00:17:59,100 --> 00:18:04,240
but the tone is underneath that. Things that have to do with mental health. Don't say our

201
00:18:04,240 --> 00:18:10,720
project is going to be very OCD about the syntax here. OCD is a mental health disorder

202
00:18:10,720 --> 00:18:15,220
that people have. And when you say that, it trivializes what their experience is, what

203
00:18:15,220 --> 00:18:20,100
their lived experience is. And that's just not necessary. You can use different language

204
00:18:20,100 --> 00:18:27,100
that doesn't other them. So think about these things. If people tell you there's a problem,

205
00:18:27,100 --> 00:18:32,140
pay attention. Don't go ask five of your friends, hey, do you think this is actually a problem?

206
00:18:32,140 --> 00:18:35,500
Because your friends are probably going to be the people who think similarly to the way

207
00:18:35,500 --> 00:18:40,180
you do. Even if those friends are from the same demographic as the person who told you

208
00:18:40,180 --> 00:18:43,860
there's a problem. That doesn't mean that every time somebody says, hey, I don't like

209
00:18:43,860 --> 00:18:50,860
this term you use, that you have to immediately change it. But take it seriously and give

210
00:18:50,860 --> 00:18:56,860
it consideration. So the last thing I want to spend time on, and I'm going to spend a

211
00:18:56,860 --> 00:19:03,420
good chunk of time on this, is code of conduct. You hear a lot about this, and it can be difficult

212
00:19:03,420 --> 00:19:09,460
to parse out what's important in this process. The first thing I want to say about this is

213
00:19:09,780 --> 00:19:15,020
don't reinvent the wheel. There are a ton of codes of conduct out there. You can borrow

214
00:19:15,020 --> 00:19:22,020
one almost wholesale. You might need to make a couple of tweaks, but not a lot. So, you

215
00:19:22,620 --> 00:19:27,560
know, start with something that's already built for you, that's already been vetted.

216
00:19:27,560 --> 00:19:33,120
There's a lot of nuance in a code of conduct. So don't try to build it from the ground up.

217
00:19:33,120 --> 00:19:38,300
You're going to probably miss a lot of that nuance. The next thing is, you know, you hear

218
00:19:38,300 --> 00:19:42,060
a lot of people talking about, oh, a code of conduct limits what you can say. You just

219
00:19:42,060 --> 00:19:46,820
can't say things that you would otherwise say. That's not actually really true. First

220
00:19:46,820 --> 00:19:50,340
of all, a good code of conduct should not limit anything you can say about the actual

221
00:19:50,340 --> 00:19:57,060
project itself, because the project itself, it's the code, it's the technology. Most codes

222
00:19:57,060 --> 00:20:00,980
of conduct don't say anything about what you can say about the technology. They talk about

223
00:20:00,980 --> 00:20:07,260
how you can say it. So keep that in mind when you hear complaints, and a lot of established

224
00:20:07,260 --> 00:20:12,820
contributors might complain about, oh, you know, this is going to tell me that I can't

225
00:20:12,820 --> 00:20:17,460
say blah, blah, blah, blah. Well, maybe you can't use those words. But think about what

226
00:20:17,460 --> 00:20:24,460
you're trying to say, and maybe you can say it in a nicer way. And concordant with this,

227
00:20:25,300 --> 00:20:29,900
your project is not your living room. So expect to behave professionally when you're working

228
00:20:29,900 --> 00:20:34,860
on your open source project, when you're communicating in official project channels. If you want

229
00:20:34,900 --> 00:20:40,140
to go and cut loose and just shoot the shit with your buddies, that's great. Even if your

230
00:20:40,140 --> 00:20:45,300
buddies are also on that project, that's fantastic. Go do that. Don't do it in your project's

231
00:20:45,300 --> 00:20:52,300
chat room. That's not the place for it. And then finally about codes of conduct is that

232
00:20:52,540 --> 00:20:58,900
enforcement is absolutely critical. So many places adopt a code of conduct, slap it on

233
00:20:58,900 --> 00:21:04,940
the website, maybe put links to it a few places and go, okay, done, and step away.

234
00:21:04,940 --> 00:21:10,700
The problem is if you don't enforce it, then nobody is going to believe that it's going

235
00:21:10,700 --> 00:21:17,580
to do anything. People are going to behave how they want to behave. If there's no enforcement,

236
00:21:17,580 --> 00:21:23,940
it means nothing. It means somebody thought enough to say, eh, we should have this thing.

237
00:21:23,940 --> 00:21:30,540
And then nobody thought enough to say, because people need to feel safe. So all of the prior

238
00:21:30,540 --> 00:21:37,640
points, communication, documentation, kindness and terminology apply at least as much if

239
00:21:37,640 --> 00:21:42,900
not more when you're enforcing a code of conduct. It's a tricky business. The first time you

240
00:21:42,900 --> 00:21:48,460
have somebody who asserts that somebody violated the code of conduct, it's a mess. It's going

241
00:21:48,460 --> 00:21:53,940
to be something that you have to think hard about how to deal with. It's going to be a

242
00:21:53,940 --> 00:22:00,340
headache. Absolutely. But dealing with it well is going to compound the rewards for

243
00:22:00,340 --> 00:22:04,140
your project. Because once people know that you're going to deal with this well, they

244
00:22:04,140 --> 00:22:08,500
will go tell people they know, hey, this is a project where you can count on being treated

245
00:22:08,500 --> 00:22:15,580
well. So make sure to be kind and don't accept attacks from any source during resolution.

246
00:22:15,580 --> 00:22:21,960
One of the things you'll see is somebody who has been hurt, you know, person A says person

247
00:22:21,960 --> 00:22:30,420
B said something that was really awful. Person B might take that as an attack. If person

248
00:22:30,420 --> 00:22:35,260
A is saying, ah, person B is always rude to me, okay, that's an attack. But if person

249
00:22:35,260 --> 00:22:40,380
A says person B said X, Y and Z that made me uncomfortable, that's not an attack. That's

250
00:22:41,220 --> 00:22:47,380
a legitimate accusation. It's something that should be addressed. If person B comes back

251
00:22:47,380 --> 00:22:52,260
and says they're making stuff up, they lie all the time, that's an attack. If person

252
00:22:52,260 --> 00:22:59,060
B says I didn't say X, Y, Z, that's not an attack, that's an accusation, deal with that

253
00:22:59,060 --> 00:23:05,080
appropriately. But make sure that you don't ever tolerate anybody just casting aspersions

254
00:23:05,080 --> 00:23:12,080
and trying to broadly categorize what's going on. Keep things focused on individual incidents.

255
00:23:14,680 --> 00:23:19,100
Be prepared to remove or ban people from your project if necessary. I know this is a painful

256
00:23:19,100 --> 00:23:23,320
thing to think about and especially if you're dealing with somebody who maybe has done a

257
00:23:23,320 --> 00:23:27,780
lot of code contributions, maybe even as a really good coder, it can be really painful

258
00:23:27,780 --> 00:23:32,860
to think about maybe having to ban them from your project. But keep in mind there's grades

259
00:23:32,860 --> 00:23:37,420
of this. You can ban someone from the communication channels on your project without banning them

260
00:23:37,420 --> 00:23:43,700
from being able to contribute code. They're not going to like it. But if they're a continuous

261
00:23:43,700 --> 00:23:48,380
problem in terms of making other people unwelcome, then maybe that's what needs to happen. And

262
00:23:48,380 --> 00:23:54,380
if they decide they're not going to contribute anymore, that stinks. But what's going to

263
00:23:54,380 --> 00:24:00,580
happen is that having removed a harasser, you might get six, seven, eight new people

264
00:24:00,620 --> 00:24:07,620
coming along who wouldn't have made contributions otherwise. So keep in mind that yes, reject,

265
00:24:09,860 --> 00:24:16,860
ban, these are final solutions, but don't consider them off the table. Remember that

266
00:24:17,180 --> 00:24:23,500
that is something that needs to be considered. So that's all the content that I have. I do

267
00:24:23,500 --> 00:24:28,020
have a QR code up here that links to a copy of my slides that has a bunch of examples

268
00:24:28,020 --> 00:24:34,460
in it. So examples of how to look at the pros and cons of communication tools, how

269
00:24:34,460 --> 00:24:39,500
to look at the pros and cons of different documentation, terminology, links to example

270
00:24:39,500 --> 00:24:43,380
codes of conduct, all that kind of stuff. So if you want to go and look and have all

271
00:24:43,380 --> 00:24:48,340
that extra material, that's all in there. It's just these slides plus some extra example

272
00:24:48,340 --> 00:24:55,340
material. And I will be happy to take questions out in the hallway. I will be around the conference

273
00:24:55,380 --> 00:25:00,380
Saturday and Sunday as well. If you see me, feel free to come up and say hi. That's what

274
00:25:00,380 --> 00:25:00,400
I got.

