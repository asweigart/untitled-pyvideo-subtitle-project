1
00:00:00,000 --> 00:00:12,960
Hola, bienvenidos, vamos a comenzar la charla, en un minuto más voy presentando a nuestra

2
00:00:12,960 --> 00:00:19,440
siguiente ponente, María Andrea Viño, ella viene de Argentina, como les había comentado

3
00:00:19,440 --> 00:00:24,360
antes, de una ciudad que se llama Resistencia.

4
00:00:24,360 --> 00:00:35,520
Ella es una ingeniera de software y se dedica a resolver crímenes como en las películas,

5
00:00:35,520 --> 00:00:42,600
pero pues sí es diferente, ya les voy a platicar cómo es la experiencia.

6
00:00:42,600 --> 00:00:47,720
Pues vamos a darle un fuerte aplauso y muchas gracias por la plática.

7
00:00:55,040 --> 00:00:57,240
Bueno, gracias por presentarme.

8
00:00:59,160 --> 00:01:05,240
Básicamente yo voy a explicar cómo se resuelven las causas forences,

9
00:01:05,240 --> 00:01:13,040
perdón, cómo se resuelven las causas forences, paso a paso, voy a explicar cuál es la metodología

10
00:01:13,040 --> 00:01:18,720
y después voy a explicar cómo utilicé, hay algunos software que se utilizan, son open source,

11
00:01:18,920 --> 00:01:24,600
así que al ser open source uno tiene toda la posibilidad de ver cómo es el código,

12
00:01:24,600 --> 00:01:29,920
tiene documentación abierta respecto del API, entonces utilicé uno de estos software,

13
00:01:29,920 --> 00:01:36,440
el software más avanzado de estos que hay para extenderlo y utilicé Python,

14
00:01:36,440 --> 00:01:43,720
básicamente Github, que es la versión de Python implementada en Java, para hacer esta extensión.

15
00:01:44,720 --> 00:01:51,280
Bueno, el primer paso es obtener la evidencia, bueno nosotros tenemos que ver,

16
00:01:51,280 --> 00:01:55,920
digamos, cuáles son los dispositivos que nos interesan para la causa,

17
00:01:55,920 --> 00:02:01,840
básicamente nosotros lo que hacemos es analizar la información que se encuentra dentro de estos

18
00:02:01,840 --> 00:02:08,040
dispositivos, eso es lo que hace la gente de informática forense, obviamente que a veces estos

19
00:02:08,040 --> 00:02:13,560
dispositivos vienen también con muestras de sangre o muestras químicas que también pueden

20
00:02:13,560 --> 00:02:20,480
ser evidencia pero que se analizan en laboratorios bioquímicos, ADN, etcétera, nosotros desde nuestro

21
00:02:20,480 --> 00:02:25,400
punto de vista lo que nos interesan son los almacenamientos, básicamente en algunos casos

22
00:02:25,400 --> 00:02:31,800
podemos hacer almacenamiento de lo que está en RAM, lo que está en memoria volátil o también

23
00:02:31,800 --> 00:02:39,560
lo que está en discos duros, tarjetas, etcétera. Bueno, lo primero que nosotros hacemos es

24
00:02:39,560 --> 00:02:44,880
identificamos todos los dispositivos con capacidad de almacenamiento, los fotografiamos exautivamente,

25
00:02:44,880 --> 00:02:49,960
vemos si están prendidos y apagados y en el caso de que sea necesario sacamos la RAM,

26
00:02:49,960 --> 00:02:55,560
la RAM tiene por supuesto información viva y que muchas veces nos permite encontrar contraseñas,

27
00:02:55,560 --> 00:03:01,760
nos permite estudiar a fondo cosas que no están ya disponibles cuando se apaga la computadora,

28
00:03:01,760 --> 00:03:04,840
o que se guardan en todo caso encriptadas en algunos casos.

29
00:03:07,240 --> 00:03:12,280
Una vez que nosotros hacemos, generalmente lo que nosotros hacemos es secuestrar la evidencia

30
00:03:12,280 --> 00:03:17,960
porque es mucho más cómodo para nosotros desde el punto de vista forense poder traerla y analizarla

31
00:03:17,960 --> 00:03:23,200
en un laboratorio especializado, en algunos casos en que nos encontramos con grandes servidores lo

32
00:03:23,200 --> 00:03:28,000
que tenemos que hacer es pedir colaboración a la gente que se encuentra, los sysadmin,

33
00:03:28,240 --> 00:03:37,120
que tienen que darnos la información para analizarlo. Una vez que nosotros secuestramos

34
00:03:37,120 --> 00:03:43,960
la información, secuestramos el objeto, nosotros tenemos que protegerlo, generalmente lo protegemos

35
00:03:43,960 --> 00:03:53,200
contra todo tipo de agresiones del medio, pueden ser tanto golpes, humedad, hay que tomar en cuenta

36
00:03:53,200 --> 00:04:00,400
que hay mucho trabajo, a veces depende de la causa, depende de la prioridad de la causa,

37
00:04:00,400 --> 00:04:05,520
depende del tipo de la causa, puede ser necesario almacenar este dispositivo que nosotros hemos

38
00:04:05,520 --> 00:04:11,120
secuestrado por bastante tiempo, así nosotros tenemos que tomar las precauciones para evitar

39
00:04:11,120 --> 00:04:17,440
de que ocurra absolutamente ningún problema que lo perjudique al dispositivo, sea una laptop,

40
00:04:17,440 --> 00:04:25,280
sea un celular. Bueno, tenemos que también tener en cuenta que cada vez que pasa de una

41
00:04:25,280 --> 00:04:30,960
mano a la otra este dispositivo podría ser modificado, o sea hay intereses muy importantes

42
00:04:30,960 --> 00:04:36,560
que están en el medio, está la libertad de una persona, entonces para nosotros es importante que

43
00:04:36,560 --> 00:04:42,480
cada persona por la que pasa el dispositivo que nosotros secuestramos, que es prueba de una causa,

44
00:04:43,360 --> 00:04:50,920
firme, es decir, por mi paso, porque si hay algún tipo de adulteración en el envoltorio original

45
00:04:50,920 --> 00:04:58,240
que se hizo cuando se secuestró el dispositivo del sospechoso, nosotros tenemos que saber quiénes

46
00:04:58,240 --> 00:05:01,960
pueden haber sido los responsables porque hay responsabilidades penales de por medio,

47
00:05:01,960 --> 00:05:08,360
porque al arruinarse la cadena de custodia puede arruinarse la validez de la prueba,

48
00:05:08,360 --> 00:05:16,600
no sabemos si fue hackeado, si fue modificado. Muy bien, lo que generalmente nosotros hacemos

49
00:05:16,600 --> 00:05:22,400
es tomar primero una copia completa de lo que se encuentran los dispositivos de almacenamiento,

50
00:05:22,400 --> 00:05:29,400
que es del artefacto que nosotros tengamos, sea de la laptop, de la computadora. ¿Por qué nosotros

51
00:05:29,400 --> 00:05:33,320
hacemos una copia? Porque en algunos casos la computadora no nos llega necesariamente

52
00:05:33,320 --> 00:05:38,520
una computadora maravillosa que se puede usar siempre. En algunos casos hay computadoras que,

53
00:05:38,520 --> 00:05:44,320
bueno, depende de cómo lo haya tenido el sospechoso, pueden estar apenas funcionando. Así que para

54
00:05:44,320 --> 00:05:50,360
nosotros es importante no hacerla funcionar más que la vez que es necesario para hacer la copia de

55
00:05:50,360 --> 00:05:55,440
cada uno de los bits que se encuentran dentro de los dispositivos de almacenamiento. Otra cosa que

56
00:05:55,440 --> 00:06:01,680
es importante tomar en cuenta es que nosotros podemos sacar mucha información de, cómo podríamos

57
00:06:01,680 --> 00:06:08,280
decir, de dónde no están, donde no se alcanza el sistema de archivo. Por ejemplo, porque esta

58
00:06:08,280 --> 00:06:13,520
información ya fue borrada, porque esta información está en algún tipo de partición oculta. Así que

59
00:06:13,520 --> 00:06:19,880
a nosotros nos interesa una copia perfecta de cada uno de los bits. Para asegurarnos de que esta copia

60
00:06:19,880 --> 00:06:26,520
sea perfecta, una vez que nosotros sacamos la copia, las copias forense están hasheadas. Lo

61
00:06:26,520 --> 00:06:32,840
que se hace es agarrar y para asegurar de que la copia esté perfecta, lo que hacemos es,

62
00:06:32,840 --> 00:06:40,840
los formatos forense tienen hash tanto de partes del formato forense como de la totalidad del

63
00:06:40,840 --> 00:06:46,480
archivo. No sé si ustedes saben lo que es una función hash. ¿Ustedes saben lo que es una función

64
00:06:46,480 --> 00:06:54,800
hash? Bueno, por si alguien no sabe, una función hash nos permite asegurar la integridad de la

65
00:06:54,800 --> 00:07:00,600
información, ya que una función hash, si uno cambia, aunque sea un bit o un byte, una pequeña

66
00:07:00,600 --> 00:07:06,840
unidad de la información de origen, la función hash devuelve algo completamente diferente. Por

67
00:07:06,840 --> 00:07:15,200
eso nos sirve también para cuando bajamos imágenes de discos, de sistemas operativos, cosas así. Bueno,

68
00:07:15,200 --> 00:07:22,120
normalmente lo que nosotros hacemos es remover los discos duros. Remover los discos duros nos facilita

69
00:07:22,120 --> 00:07:27,840
utilizar duplicadores forense, que ya nos hacen todo este trabajo de manera mucho más fácil. Lo

70
00:07:27,840 --> 00:07:33,360
agarramos, lo conectamos al duplicador forense, existen varias marcas y lo ponemos a la copia

71
00:07:33,360 --> 00:07:41,800
forense en otro dispositivo. También a veces nos encontramos con que o bien estamos en el lugar

72
00:07:41,800 --> 00:07:47,880
derecho, no tenemos el duplicador, o bien hay computadoras que tienen problemas para desarmarse,

73
00:07:47,880 --> 00:07:53,280
dispositivos de almacenamiento que no son estándares, que no tienen los conectores

74
00:07:53,280 --> 00:07:58,920
estándares. Bueno, para esas situaciones nosotros lo que hacemos es tener también la posibilidad

75
00:07:58,920 --> 00:08:03,960
de hacer la copia forense mediante software. Nosotros lo que primero hacemos es, podemos

76
00:08:03,960 --> 00:08:11,600
hacer la copia forense mediante software en Windows o en Linux. La copia forense mediante software

77
00:08:11,600 --> 00:08:17,440
en Windows lo que hacemos es poner simplemente en modo de solo lectura los puertos USB.

78
00:08:19,760 --> 00:08:25,840
Y una vez que hacemos eso existen distintos software gratuitos que se pueden usar. Nosotros

79
00:08:25,840 --> 00:08:32,400
usamos el FTK Imager, que es uno de los más difundidos y luego ponemos en el formato forense.

80
00:08:32,400 --> 00:08:45,440
También podemos utilizar, digamos, un live USB, botear desde pendrive y incorporarlo. Hay

81
00:08:45,440 --> 00:08:51,520
live USB que están especialmente diseñados para el tema forense. ¿Cuál es la diferencia entre

82
00:08:51,520 --> 00:08:57,760
un live USB cualquiera y uno de tema forense? Que un live USB cualquiera trata de montar

83
00:08:57,760 --> 00:09:03,920
todos los dispositivos de almacenamiento y darle a ustedes la más fácil acceso a todo lo que

84
00:09:03,920 --> 00:09:08,760
se encuentra ahí, a toda su información. A nosotros no nos sirve eso, porque una vez que lo

85
00:09:08,760 --> 00:09:15,880
montaste ya cambiaste algunos registros. Entonces a nosotros nos sirve solamente, nosotros usamos

86
00:09:15,880 --> 00:09:21,520
distribuciones especialmente modificadas que nos permiten montar los dispositivos en modo solo

87
00:09:21,520 --> 00:09:26,520
lectura desde el principio y no intentar, como hace Linux para otras distribuciones,

88
00:09:26,520 --> 00:09:36,120
de montarlos desde el principio. Una opción que podemos, digamos, algunos tienen interfaces

89
00:09:36,120 --> 00:09:41,760
gráficas, una opción que nosotros hacemos desde Klee es, bueno, listar los dispositivos y luego

90
00:09:41,760 --> 00:09:48,920
montarlos en modo solo lectura. Entonces, si se dan cuenta que ahí puse RO, read only, en rojo,

91
00:09:48,920 --> 00:09:54,240
para agarrar y para explicarles de que sí o sí el montaje tiene que estar en modo solo lectura.

92
00:09:57,080 --> 00:10:03,840
Bueno, ahí en las distribuciones forense generalmente tenemos un software muy fácil de

93
00:10:03,840 --> 00:10:08,600
usar, el Wimajor. El Wimajor simplemente te permite elegir cuál es el dispositivo que has

94
00:10:08,600 --> 00:10:15,560
montado y luego agarrar y decir en dónde vas a, en qué dispositivo que te permite la escritura,

95
00:10:15,560 --> 00:10:24,200
vas a poner la copia forense y bueno, funciona. Hay que esperar un poco y nada más. Bueno,

96
00:10:24,600 --> 00:10:29,320
una vez que nosotros tenemos eso, tenemos la posibilidad de analizarlos con muchos

97
00:10:29,320 --> 00:10:35,360
software diferentes. Es importante que uno utilice los software forense lo que nos permite es agarrar

98
00:10:35,360 --> 00:10:39,880
y tomar toda la información que se encuentra en un dispositivo de almacenamiento, como un disco

99
00:10:39,880 --> 00:10:46,720
rígido, vamos a decirlo, lo típico, digamos, y clasificar todo lo que está adentro. Permite

100
00:10:46,720 --> 00:10:52,720
agarrar y permite hacer operaciones de carding, esto que quiero decir. Ustedes, imagínense,

101
00:10:52,720 --> 00:11:03,160
que borran un archivo. Cuando borran un archivo, digamos, todavía queda a veces dentro de la tabla

102
00:11:03,160 --> 00:11:11,880
del file system un registro que apunta al archivo, pero si uno ya ha dejado pasar cierto tiempo,

103
00:11:11,880 --> 00:11:18,520
a veces ya se encuentra parcialmente corrupto, es decir, ya está sobrescrito en algunas de

104
00:11:18,520 --> 00:11:26,240
sus partes. A nosotros nos interesa de poder hacer recuperación, que se llama carding,

105
00:11:26,240 --> 00:11:32,320
de todos estos pedacitos de archivo, porque a veces pueden tener información muy importante

106
00:11:32,320 --> 00:11:43,640
que la persona sospechoso ha tratado de borrar. Bueno, un ejemplo que nosotros usamos es el Autopsies

107
00:11:43,640 --> 00:11:49,280
Loadkit. Este es el software del que yo les he hablado. El Autopsies es un software open source

108
00:11:49,280 --> 00:11:56,080
que se usa muchísimo, que incluso acá en Estados Unidos se suele hacer una conferencia

109
00:11:56,080 --> 00:12:03,680
específica de este software todos los años. Es extensible, es madura, hace mucho tiempo ya que

110
00:12:03,680 --> 00:12:10,080
está empezó a desarrollarse en el 2001 y por eso fue el que yo elegí para extenderlo.

111
00:12:12,080 --> 00:12:19,960
Bueno, ahora voy a explicar más o menos cuál es el modo de trabajo con el autopsies para que ustedes

112
00:12:19,960 --> 00:12:27,600
entiendan más o menos qué es lo que fui extendiendo. Primero, nosotros tenemos que crear un nuevo caso,

113
00:12:27,600 --> 00:12:35,080
que es como crear un archivo. Ingresamos los datos básicos generalmente para identificar el archivo,

114
00:12:35,080 --> 00:12:41,160
cuál es el número de expediente, cuál es el número de causa, algunas cosas más que nos permiten

115
00:12:41,160 --> 00:12:46,000
identificar cuál es el trabajo que estamos haciendo y luego lo que hacemos es agregar

116
00:12:46,000 --> 00:12:53,000
evidencia. Agregar la evidencia es esta evidencia que yo les estoy explicando que se clasifica y

117
00:12:53,000 --> 00:13:01,920
se busca cada cosa. Bueno, nosotros podemos tener muchas fuentes de datos diferentes. Fíjense que

118
00:13:01,920 --> 00:13:08,200
nosotros podemos tener máquinas virtuales que son agregadas dentro de los dispositivos de

119
00:13:08,200 --> 00:13:14,560
almacenamiento virtuales de las máquinas virtuales. Podemos descompactar archivos comprimidos,

120
00:13:14,560 --> 00:13:22,960
podemos utilizar imágenes forenses y los sistemas de archivo propios de la misma máquina si nosotros

121
00:13:22,960 --> 00:13:27,480
queremos hacerlo sin hacer primero la imagen forense, que es algo que no se aconseja.

122
00:13:29,760 --> 00:13:34,960
Bueno, una vez que nosotros tenemos la información que queremos procesar,

123
00:13:34,960 --> 00:13:42,240
lo que podemos hacer es seleccionar los plugins que nos permiten ir analizando la información.

124
00:13:42,240 --> 00:13:48,760
Depende de lo que nosotros queramos obtener los plugins que vamos a hacer. La primera cosa entonces

125
00:13:49,080 --> 00:13:57,200
es analizar automatizadamente la información para que nos dé un reporte que nos permita ver

126
00:13:57,200 --> 00:14:06,320
qué información nos interesa. Bueno, lo que nosotros podemos hacer con los plugins son muchísimos,

127
00:14:06,320 --> 00:14:12,000
depende de cada uno. Yo desarrollé otro, pero hay muchísimos plugins ya disponibles. Lo que podemos

128
00:14:12,000 --> 00:14:18,000
hacer es por ejemplo analizar la asignatura del file. Algunas veces, por ejemplo, puede haber una

129
00:14:18,000 --> 00:14:25,000
foto que sea un JPG, pero para disimular la persona lo pone con otra extensión. De todas

130
00:14:25,000 --> 00:14:30,120
maneras nosotros adentro en la estructura del archivo podemos detectar ese tipo de falsificaciones,

131
00:14:30,120 --> 00:14:35,720
porque existe algo que se llama la file signature, que nos permite ver cuál es el formato interno.

132
00:14:35,720 --> 00:14:42,640
Bueno, de todas maneras lo que hace este software es analizar uno por uno todos los archivos que

133
00:14:42,640 --> 00:14:48,240
están disponibles, ver si hay ese tipo de falsificación, ver los documentos, por ejemplo,

134
00:14:48,240 --> 00:14:57,560
los documentos que son .docx o los documentos que son de libre office, son .xml que tienen también

135
00:14:57,560 --> 00:15:05,000
internamente archivos incrustados. Algunas veces hemos encontrado que hay gente que colecciona

136
00:15:05,000 --> 00:15:11,440
imágenes o tiene fotos comprometedoras dentro de este tipo de archivos. Entonces uno lo que

137
00:15:11,440 --> 00:15:16,320
tendría que hacer si no es ver uno por uno todo lo que está ahí. Lo que hace este software,

138
00:15:16,320 --> 00:15:21,360
por ejemplo, es extraerlos para mostrarte los de modo de mosaico, mucho más fácil,

139
00:15:21,360 --> 00:15:30,200
y poder identificarlos sin perderse en buscarlos uno por uno. También permite agarrar y parciar

140
00:15:30,200 --> 00:15:34,560
información de los navegadores. A nosotros muchas veces nos interesa saber si la persona

141
00:15:34,560 --> 00:15:38,720
estuvo viendo, qué estuvo viendo últimamente o qué estuvo viendo en determinado momento.

142
00:15:38,720 --> 00:15:44,720
Así que cada uno de los navegadores tienen bases de datos, por ejemplo,

143
00:15:44,720 --> 00:15:49,680
Firefox utiliza mucho internamente ese culite, que tienen formatos específicos que nos permiten

144
00:15:49,680 --> 00:15:53,840
saber el historial, los bookmarks, y eso nos permite tener un profile, digamos,

145
00:15:53,840 --> 00:15:58,040
un perfil de la persona que estuvo usando y hacia dónde fue.

146
00:16:01,720 --> 00:16:06,400
Muy bien. Básicamente una vez que hace el análisis automatizado de evidencia,

147
00:16:06,400 --> 00:16:13,160
nosotros nos presenta una interfaz gráfica como la que vemos acá. Lo que tenemos es una

148
00:16:14,000 --> 00:16:18,560
pista de árbol en donde tenemos toda la información, todos los tipos de información

149
00:16:18,560 --> 00:16:26,120
que fue sacando, una vista de resultados donde hay una presentación de planilla de cálculo,

150
00:16:26,120 --> 00:16:31,560
una planilla, una cuadrícula, donde tenemos cada uno de los resultados en cada una de esas

151
00:16:31,560 --> 00:16:37,360
categorías y finalmente podemos ver cada uno de los resultados en detalle. Entonces nosotros

152
00:16:37,360 --> 00:16:46,760
vamos viendo uno por uno. Muy bien. Una vez que nosotros vemos la evidencia, elegimos cuáles son

153
00:16:46,760 --> 00:16:51,080
las evidencias que pueden tener relación con el caso, no es lo mismo una causa de estafa que

154
00:16:51,080 --> 00:17:01,240
una causa de pedofilia, y elegimos y los etiquetamos. Muy bien. Lo que nosotros tenemos es entonces un

155
00:17:01,240 --> 00:17:06,280
framework que está por debajo de esta interfaz gráfica, se llama SlotKit. Este framework se

156
00:17:06,280 --> 00:17:15,320
encuentra desarrollado en Java. Está es extensible utilizando Java o utilizando Python. Básicamente

157
00:17:15,320 --> 00:17:22,200
una cosa que quiero explicar es que Python es un lenguaje, como todos los lenguajes lo que es,

158
00:17:22,200 --> 00:17:27,520
es una especificación que luego tiene una implementación que puede ser hecha en distintos

159
00:17:27,520 --> 00:17:33,440
lenguajes. Yo conozco varias implementaciones, implementaciones hechas en C, implementaciones

160
00:17:33,440 --> 00:17:39,360
hechas en Java, incluso encontré una implementación hecha en JavaScript. Implementación IronPython

161
00:17:39,360 --> 00:17:44,800
está hecha para el framework.net, o sea existen distintas implementaciones. Yo utilicé la

162
00:17:44,800 --> 00:17:51,240
implementación Java. Bueno, lo primero que tenemos que hacer es conseguir una IDE, luego hacer el

163
00:17:51,240 --> 00:18:00,720
esqueleto, que quiero decir la estructura, armar la estructura de directorios que exige el plugin,

164
00:18:00,720 --> 00:18:05,840
elegir el tipo de módulo, elegir la forma de salida y luego copiar y adaptar un modelo de

165
00:18:05,840 --> 00:18:09,880
tutorial. Hay varios modelos de tutoriales, depende del tipo de plugin que uno quiera hacer.

166
00:18:11,400 --> 00:18:16,560
Bueno, el entorno de desarrollo que utilicé, IntelliJ IDEA, estoy haciendo el propagando a los

167
00:18:16,560 --> 00:18:23,880
chicos de Album que están acá. Bueno, la forma de plugins, hay tres tipos de plugins,

168
00:18:23,880 --> 00:18:29,880
un tipo de plugin es el de reporte, el de reporte lo que tiene de particular es que corre después

169
00:18:29,880 --> 00:18:35,400
de que se hizo toda la selección de todo, o sea uno lo elige después de terminar. Lo que tiene de

170
00:18:35,400 --> 00:18:41,160
bueno entonces es que la evidencia que uno eligió, que uno marcó, la tiene disponible después de haber

171
00:18:41,160 --> 00:18:54,560
hecho el análisis manual. Muy bien, los reportes aparecen abajo de todo, en naranja. Bueno, después

172
00:18:54,560 --> 00:19:01,080
podemos hacer un reporte que es de proceso de ficheros, es decir, un tipo de plugin que nos

173
00:19:01,080 --> 00:19:05,480
permite procesar uno por uno los ficheros que hemos encontrado en la evidencia.

174
00:19:05,480 --> 00:19:15,800
Y también uno que nos permite tomar la fuente de datos por completo y si sabemos exactamente

175
00:19:15,800 --> 00:19:21,320
en dónde está el fichero, nos permite también utilizar herramientas externas. Bueno,

176
00:19:26,800 --> 00:19:31,880
bueno, dependiendo del tipo de módulo que nosotros queremos hacer, el tipo de plugin que queremos

177
00:19:32,360 --> 00:19:38,000
yo tengo que ver cuál es. Si debo recorrer cada fichero, me conviene un plugin de fichero,

178
00:19:38,000 --> 00:19:43,760
si yo sé exactamente a dónde quiero ir, me conviene uno de fuente de datos y si lo quiero

179
00:19:43,760 --> 00:19:49,840
correr al final, una vez que ya terminé el proceso manual, elijo un tipo de reporte.

180
00:19:51,200 --> 00:19:57,520
Bien, ahora voy a explicar el plugin que yo hice, que es muy sencillito, no es nada muy complejo,

181
00:19:57,520 --> 00:20:03,360
pero les puede servir de base para realizar lo que ustedes deseen. Bueno, lo primero que yo utilicé

182
00:20:03,360 --> 00:20:09,520
fue una base de datos del NIST para los hash de archivos bien conocidos. Hay los archivos bien

183
00:20:09,520 --> 00:20:13,840
conocidos, en este caso son los archivos que pueden pertenecer al sistema operativo,

184
00:20:13,840 --> 00:20:18,400
que pertenecen a paquetes de software bien conocidos como Office, etcétera, ese tipo de

185
00:20:18,400 --> 00:20:25,840
cosas. O en algunos casos los hash también han tenido que ver con malware, pero en este caso

186
00:20:26,480 --> 00:20:32,480
me permiten filtrar los archivos que no están hechos por el propio usuario, que no fueron

187
00:20:32,480 --> 00:20:37,560
modificados por el usuario. A mí me interesaba obtener todos los archivos que estaban modificados

188
00:20:37,560 --> 00:20:43,240
por el usuario, pasarlos completamente a la siguiente parte, o sea, al siguiente perito,

189
00:20:43,240 --> 00:20:48,760
para que haga la clasificación porque así me lo pidieron. Ese fue el requisito que me pidieron,

190
00:20:48,760 --> 00:20:54,680
que entregue todo lo que pudiera ser archivo del usuario. Entonces lo que yo hice fue tomar

191
00:20:54,920 --> 00:21:01,400
cada uno de los archivos, fijarme si estaba en la base de datos de hash, si estaba en la base

192
00:21:01,400 --> 00:21:07,360
de datos de hash es porque había sido realizado por otra persona, o sea, ese archivo ya era un

193
00:21:07,360 --> 00:21:16,760
archivo conocido en otras computadoras, y si no era un archivo bien conocido, entonces lo que hice

194
00:21:16,760 --> 00:21:22,080
fue copiarlo, clasificándolo según el tipo de archivo mime para que las personas que seguían

195
00:21:22,080 --> 00:21:27,240
en el análisis lo tuvieran clasificado. Y después hice también un reporte CSV,

196
00:21:27,240 --> 00:21:32,320
donde yo decía cuáles eran los archivos que yo estaba enviando para explicar.

197
00:21:34,520 --> 00:21:42,960
Bueno, más o menos, nosotros lo que tenemos que hacer es primero instalar, una vez que instalamos

198
00:21:42,960 --> 00:21:49,320
todo el IDE, importar el General Report Module Adapter, configuramos las propiedades,

199
00:21:49,480 --> 00:21:55,360
acá las propiedades son simplemente para explicar a la interfaz gráfica cuál es el nombre del

200
00:21:55,360 --> 00:22:00,600
módulo, cuál es la descripción para que el usuario tenga una descripción del módulo

201
00:22:00,600 --> 00:22:03,360
que nosotros estamos agregando, del reporte que nosotros estamos agregando.

202
00:22:05,320 --> 00:22:13,040
Después tenemos que hacer un log, el sistema nos permite depurarlo, nosotros lo que hacemos es

203
00:22:13,520 --> 00:22:14,800
declarar el log.

204
00:22:19,400 --> 00:22:28,520
Después sí tenemos que hacer general reporte, al general reporte primero hacemos un archivo,

205
00:22:28,520 --> 00:22:33,320
el archivo de salida, para mí fue muy importante, y creo que para todos ustedes va a ser muy

206
00:22:33,320 --> 00:22:39,400
importante, que lo pongan tomando en cuenta el módulo codex, no hacer open directamente,

207
00:22:39,400 --> 00:22:45,920
porque cualquier archivo que tenga un carácter único va a hacer que cancele el programa.

208
00:22:45,920 --> 00:22:51,400
Así que es importante tomando en cuenta de que pueden haber muchos caracteres únicos,

209
00:22:51,400 --> 00:22:54,600
depende de quién haya estado usando la computadora.

210
00:22:56,000 --> 00:23:02,720
Una vez que hacemos eso, lo que hacemos es generar el reporte, iniciamos primero el load

211
00:23:03,560 --> 00:23:10,880
kit case, el load kit case es el que nos va a permitir tomar el objeto que nos va a ir

212
00:23:10,880 --> 00:23:16,120
reportando todos los archivos y nos va a permitir ir accediendo a cada uno de los archivos,

213
00:23:16,120 --> 00:23:22,240
depende del tipo de archivo que nosotros queremos, yo en este momento no quiero directorios,

214
00:23:22,240 --> 00:23:26,840
no me interesan los directorios, me interesa tomar solamente la información del archivo,

215
00:23:26,840 --> 00:23:31,440
únicamente voy a después explicar desde dónde salió para dar un poco más de información de

216
00:23:31,440 --> 00:23:34,200
contexto a la persona que sigue, pero nada más.

217
00:23:37,360 --> 00:23:43,520
Bien, creamos un directorio para cada uno de los archivos que copiamos, yo hago un directorio

218
00:23:43,520 --> 00:23:50,640
para cada uno de los tipos mime que voy detectando, y otro, y un directorio que se

219
00:23:50,640 --> 00:23:55,800
llaman otros, que es para aquellos archivos cuyo tipo mime no fue detectado automáticamente por el

220
00:23:55,800 --> 00:24:07,200
sistema. Después recorremos cada uno de los archivos, los vamos ubicando, lo único que hice

221
00:24:07,200 --> 00:24:16,320
fue utilizar el mismo tipo mime para hacer el nombre del directorio.

222
00:24:16,320 --> 00:24:26,760
Armamos una línea de cada uno de los archivos donde explicamos cuál es la información,

223
00:24:26,760 --> 00:24:32,240
ya había hablado yo de que una de las salidas era un archivo separado por comas,

224
00:24:33,560 --> 00:24:41,680
vemos el archivo, dice is known, la propia is known es si ya fue en el módulo de comparación

225
00:24:41,680 --> 00:24:49,680
de hash, es uno de los módulos que viene provistos por defecto en autopsie, se fija así el archivo,

226
00:24:49,680 --> 00:24:56,400
cada uno de los archivos que fue encontrado en esa computadora, machea o no, o sea si se encuentra

227
00:24:56,400 --> 00:25:02,040
o no en esta base de datos de hash o en cualquiera de las bases de datos de hash que nosotros le

228
00:25:02,040 --> 00:25:11,240
proveemos. Entonces is known es la propiedad que nos permite saber si este archivo fue encontrado

229
00:25:11,240 --> 00:25:23,080
o no en la base de datos, si no fue encontrado, si no fue encontrado, como se ve acá, si no fue

230
00:25:23,080 --> 00:25:31,640
encontrado, entonces se genera el directorio del tipo mime si no existe anteriormente y luego

231
00:25:32,200 --> 00:25:40,160
se escribe directamente todo el contenido al archivo. Bueno, cualquier cosa, en algunos casos

232
00:25:40,160 --> 00:25:46,840
me ha dado error, así que por eso fue en el caso de error, siempre se lo pone en el log para permitir

233
00:25:46,840 --> 00:25:53,560
ver un análisis posterior cuál fue el archivo que pudo haber generado problemas, pero que no interrumpa

234
00:25:53,560 --> 00:26:03,080
completamente el proceso. Bueno, una vez que terminamos el proceso lo que hacemos es agregar

235
00:26:03,080 --> 00:26:10,440
los reportes para que aparezca en este árbol en la interfaz gráfica y lo podamos tener disponible,

236
00:26:10,440 --> 00:26:21,800
lo que se ve es el archivo separado por coma. Muy bien, generamos el reporte y se agrega

237
00:26:22,120 --> 00:26:29,040
al módulo de reportes disponibles. Bueno, en resumen lo que hicimos fue explicarles

238
00:26:29,040 --> 00:26:34,680
cómo, cuáles son las precauciones para obtener la evidencia, cómo realizar copias forences,

239
00:26:34,680 --> 00:26:41,360
el análisis de datos más o menos, el proceso que se hace de forma estándar con autopsie,

240
00:26:41,360 --> 00:26:45,920
cómo se hace para extenderlo y revisamos más o menos el plugin.

241
00:26:45,920 --> 00:26:53,040
Justamente ahora terminamos, nos quedan cinco minutos para preguntas.

242
00:27:08,360 --> 00:27:14,720
Hola, gracias por la charla, me ha parecido muy interesante. Decías que normalmente se

243
00:27:14,720 --> 00:27:19,440
revisan manualmente todas las evidencias, ¿sabes si hay trabajos para automatizar esos procesos?

244
00:27:19,440 --> 00:27:26,240
Bueno, el tema de automatizar el proceso es un tema que se trata de ir automatizando gradualmente,

245
00:27:26,240 --> 00:27:33,040
sin embargo todavía no encontramos, porque incluso para las personas humanas digamos,

246
00:27:33,040 --> 00:27:39,480
es todavía difícil de determinar. Te doy un ejemplo, hablan de abuso sexual a un menor,

247
00:27:40,160 --> 00:27:49,800
sin embargo un niño o niña de 13 años, a veces es difícil saber si la foto que estamos viendo es

248
00:27:49,800 --> 00:27:55,240
de una persona menor o de una persona mayor, ya que a veces dependiendo, especialmente en las

249
00:27:55,240 --> 00:28:01,800
edades adolescentes, no hay mucha diferencia fisiológica evidente y depende especialmente

250
00:28:01,800 --> 00:28:06,440
del tipo de foto que uno ve, a veces uno ve solamente una parte del cuerpo, no es que ve el cuerpo

251
00:28:06,440 --> 00:28:13,640
completo, así que es muy difícil de determinar. Hay muchas cosas de este tipo que hacen que

252
00:28:13,640 --> 00:28:21,080
realmente el trabajo humano sea solamente asistido por computadora, hasta ahora no encontramos ninguna

253
00:28:21,080 --> 00:28:28,760
forma de evitar que necesariamente haya un ser humano atrás mirando una por una las cosas.

254
00:28:28,760 --> 00:28:35,840
Otro tema que es difícil de determinar a veces es por ejemplo, digamos, en una causa,

255
00:28:35,840 --> 00:28:40,840
en la cual estamos hablando de un perjuicio económico, tenemos que saber respecto de la

256
00:28:40,840 --> 00:28:46,920
causa para saber si la información que nosotros estamos viendo puede ser parte de la actividad

257
00:28:46,920 --> 00:28:53,080
económica legítima de la persona, que siempre tiene actividades económicas legítimas y actividades

258
00:28:53,080 --> 00:28:59,960
económicas ilegítimas que pueden tener que ver con algún tipo de asociación, etcétera. Es difícil

259
00:28:59,960 --> 00:29:07,920
determinar realmente cuál es la prueba de la causa, se tiene que trabajar en conjunto con las

260
00:29:07,920 --> 00:29:11,480
fiscalías, con los investigadores. Gracias. De nada.

261
00:29:11,480 --> 00:29:25,800
Muchas gracias por la plática, muy interesante. Quería saber si podías hablar un poco más o menos

262
00:29:25,800 --> 00:29:31,800
del tiempo que toma desde que recibes la evidencia en la que haces todo este proceso y terminas

263
00:29:31,800 --> 00:29:38,040
haciendo el reporte. Supongo que el análisis varía de la cantidad de evidencia que tienes.

264
00:29:38,040 --> 00:29:46,440
Nosotros tenemos dos partes del proceso, cada una de las computadoras es un tiempo importante.

265
00:29:46,440 --> 00:29:56,400
El tiempo que te lleva la duplicación forense depende de 8 a 10 horas la copia forense en sí,

266
00:29:56,400 --> 00:30:02,640
esa es la primera preparación. Después tenemos el análisis automatizado de la base de datos,

267
00:30:02,640 --> 00:30:09,600
pasar por estos plugins de los que estoy hablando, eso también suele llevar, depende de lo que tengamos

268
00:30:09,600 --> 00:30:17,320
de potencia de procesador y si queremos todos los plugins y pongamos 10 horas o tanto más.

269
00:30:17,320 --> 00:30:27,400
Y respecto del análisis manual, el análisis manual es difícil de saber, lo mínimo que suele

270
00:30:27,400 --> 00:30:38,120
llevar es otras 24 horas, o sea, dos o tres jornadas laborales. Porque en realidad el análisis manual

271
00:30:38,120 --> 00:30:44,240
depende mucho de lo que te hayan pedido y depende mucho después de la información adicional que te

272
00:30:44,240 --> 00:30:50,440
de la gente que está en otras áreas de la investigación, que esté recibiendo por ejemplo

273
00:30:50,440 --> 00:30:58,120
los testimonios o este tipo de cosas. Porque ahí es difícil de determinar, por ejemplo,

274
00:30:58,120 --> 00:31:05,280
hay veces en que uno se queda esperando información adicional, es difícil de determinar.

275
00:31:05,280 --> 00:31:07,760
Bueno, más o menos esa es la respuesta.

276
00:31:07,760 --> 00:31:09,760
Muchas gracias.

277
00:31:09,760 --> 00:31:16,760
Pues te podemos dar un fuerte aplauso a Mariel.

278
00:31:16,760 --> 00:31:19,080
Muchas gracias.

