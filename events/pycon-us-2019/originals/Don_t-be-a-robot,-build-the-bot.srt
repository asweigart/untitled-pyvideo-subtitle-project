1
00:00:00,000 --> 00:00:08,200
First talk of the day.

2
00:00:08,200 --> 00:00:12,280
Up first we're going to have Marietta and she's going to be speaking about don't be

3
00:00:12,280 --> 00:00:14,680
a robot, build the bot.

4
00:00:14,680 --> 00:00:16,360
Please welcome Marietta.

5
00:00:16,360 --> 00:00:18,640
Thank you.

6
00:00:18,640 --> 00:00:21,840
Hi.

7
00:00:21,840 --> 00:00:23,240
Thank you so much for being here.

8
00:00:23,240 --> 00:00:24,960
Yes, my name is Marietta.

9
00:00:25,040 --> 00:00:30,320
I'm from Canada and I work as backend engineer at Zapier.

10
00:00:30,320 --> 00:00:34,880
And at Zapier we have this model like don't be a robot, build the robot.

11
00:00:34,880 --> 00:00:38,440
So this is kind of talk about that.

12
00:00:38,440 --> 00:00:45,040
I also help organize the PyCascades conference and in my free time I contribute to open source

13
00:00:45,040 --> 00:00:48,440
and most of the time to Python.

14
00:00:48,440 --> 00:00:51,960
I'm one of the Python core developer.

15
00:00:51,960 --> 00:01:00,800
And as a core developer there is this one same question we all receive again and again

16
00:01:00,800 --> 00:01:01,800
and again.

17
00:01:01,800 --> 00:01:04,440
We got it in person from various people.

18
00:01:04,440 --> 00:01:06,920
We receive numerous emails about this.

19
00:01:06,920 --> 00:01:14,000
In fact, early this morning the same question at 4 a.m. I saw an email asking this very

20
00:01:14,000 --> 00:01:16,760
question is this.

21
00:01:17,680 --> 00:01:23,360
Can you merge my pull requests already?

22
00:01:23,360 --> 00:01:24,360
I'm sorry.

23
00:01:24,360 --> 00:01:26,640
It's a huge problem.

24
00:01:26,640 --> 00:01:31,480
Right now we have more than 1,000 open pull requests and some of us have been working

25
00:01:31,480 --> 00:01:35,680
hard to try to keep it down.

26
00:01:35,680 --> 00:01:40,000
But the reality is we're just we're outnumbered.

27
00:01:40,000 --> 00:01:44,360
The core developer team don't scale as well.

28
00:01:44,400 --> 00:01:52,040
Right now we have about 50, 60 active core developers who can merge your pull requests.

29
00:01:52,040 --> 00:01:56,760
Meanwhile there are like hundreds, thousands of you.

30
00:01:56,760 --> 00:01:58,520
I'm just so sorry.

31
00:01:58,520 --> 00:01:59,680
We receive too many.

32
00:01:59,680 --> 00:02:02,400
We can't do it in time.

33
00:02:02,400 --> 00:02:04,520
I'm sorry.

34
00:02:04,520 --> 00:02:10,880
And another problem is that our workflow is just overly complicated and for every pull

35
00:02:10,920 --> 00:02:15,840
that comes we have to do all these checks, all these questions.

36
00:02:15,840 --> 00:02:22,120
Bakor feature, it makes a huge difference on how we treat your pull request.

37
00:02:22,120 --> 00:02:25,160
Did you sign the CLA?

38
00:02:25,160 --> 00:02:26,320
Is there an issue?

39
00:02:26,320 --> 00:02:29,560
Did anybody even ask for this PR?

40
00:02:29,560 --> 00:02:31,000
You write a news entry.

41
00:02:31,000 --> 00:02:32,200
Do we need to backport?

42
00:02:32,200 --> 00:02:33,760
Are you a first time contributor?

43
00:02:33,760 --> 00:02:37,080
And did you write the good commit message that we can understand?

44
00:02:37,080 --> 00:02:38,400
And this is just routine checks.

45
00:02:38,480 --> 00:02:40,960
It's not even the actual discussion.

46
00:02:40,960 --> 00:02:46,040
They're asking where do I post, which mailing list do I use?

47
00:02:46,040 --> 00:02:50,960
We're not even talking about reviewing the pull request.

48
00:02:50,960 --> 00:02:53,720
It's too complicated.

49
00:02:53,720 --> 00:02:59,040
And I'm just going to focus on one complicated issue.

50
00:02:59,040 --> 00:03:01,960
That is the problem with backporting.

51
00:03:01,960 --> 00:03:06,320
What exactly is a backport and why is this important to Python?

52
00:03:06,360 --> 00:03:11,960
Backporting is the act of applying changes from the newer version of software

53
00:03:11,960 --> 00:03:15,280
to the older version of the same software.

54
00:03:15,280 --> 00:03:21,360
In case you don't realize, Python currently we maintain these three versions still.

55
00:03:21,360 --> 00:03:25,760
The master branch will become 3.8.

56
00:03:25,760 --> 00:03:28,680
There's another release coming in May.

57
00:03:28,680 --> 00:03:32,760
3.7 is still accepting bug fixes.

58
00:03:32,760 --> 00:03:37,960
And 2.7, let's not talk about it.

59
00:03:37,960 --> 00:03:42,760
We're not even taking bug fixes through 3.6 anymore.

60
00:03:42,760 --> 00:03:49,960
Backporting is how you will receive 3.7 in June and 2.7, the final one.

61
00:03:49,960 --> 00:03:52,680
It's really important.

62
00:03:52,680 --> 00:03:54,000
So consider this scenario.

63
00:03:54,000 --> 00:03:55,040
You're using Python.

64
00:03:55,040 --> 00:03:57,240
You love f-strings just like me.

65
00:03:57,240 --> 00:04:00,240
And then you discover a bug.

66
00:04:00,240 --> 00:04:04,600
So you come to the bug tracker and tells me, hey, there is a bug with f-strings.

67
00:04:04,600 --> 00:04:06,360
And that's fine.

68
00:04:06,360 --> 00:04:10,560
And because it's f-strings, maybe you think, well, this affects Python 3.6

69
00:04:10,560 --> 00:04:12,200
when it was introduced.

70
00:04:12,200 --> 00:04:16,400
So I'm going to label it as fix this in 3.6.

71
00:04:16,400 --> 00:04:19,920
And then you're going to help me because you're so nice.

72
00:04:19,920 --> 00:04:24,680
You made a pull request and fix it and targeting to the 3.6 branch.

73
00:04:24,680 --> 00:04:26,600
Right?

74
00:04:26,600 --> 00:04:29,320
That's just not how it works with Python.

75
00:04:30,280 --> 00:04:34,960
A lot of people made this mistake, so I thought I'll explain it.

76
00:04:34,960 --> 00:04:37,040
This is the right workflow.

77
00:04:37,040 --> 00:04:39,040
If you found a bug in 3.6, that's fine.

78
00:04:39,040 --> 00:04:42,920
Tell us about it right up to the bug tracker.

79
00:04:42,920 --> 00:04:47,320
But we will tag it as it needs to be fixed in 3.8 and 3.7

80
00:04:47,320 --> 00:04:49,360
in the newer versions.

81
00:04:49,360 --> 00:04:52,680
And what happens is that you will make the pull request

82
00:04:52,680 --> 00:04:56,000
against the latest branch, first the master one.

83
00:04:56,000 --> 00:05:00,120
And it will come in 3.8.

84
00:05:00,120 --> 00:05:01,400
And then we'll review it.

85
00:05:01,400 --> 00:05:04,520
We'll do all the checks that I have in the beginning,

86
00:05:04,520 --> 00:05:08,840
making sure you write all the tests, you sign the CLA, and all that.

87
00:05:08,840 --> 00:05:13,040
Only after we merge your pull requests, we will do the back port.

88
00:05:13,040 --> 00:05:18,880
We'll cherry pick it to the 3.7.

89
00:05:18,880 --> 00:05:21,720
This is just high level.

90
00:05:21,720 --> 00:05:24,040
It seems complicated, but this is just a high level.

91
00:05:24,080 --> 00:05:32,000
Now let me tell you about how exactly this back port to 3.7 happens.

92
00:05:32,000 --> 00:05:34,200
This is how it used to work.

93
00:05:34,200 --> 00:05:40,400
We need to write so many things just to back port one commit to 3.7.

94
00:05:40,400 --> 00:05:42,800
It's a lot of things to type.

95
00:05:42,800 --> 00:05:44,640
It's tedious.

96
00:05:44,640 --> 00:05:49,200
Do the git fetch, check out the branch, do the cherry pick, push it,

97
00:05:49,200 --> 00:05:53,080
and then you want to delete the branch, create a pull request.

98
00:05:54,800 --> 00:05:59,840
And this is how it used to work back when we were still in Mercurial.

99
00:05:59,840 --> 00:06:03,400
So this is how we know it needs to happen.

100
00:06:03,400 --> 00:06:05,000
We didn't know any better way.

101
00:06:05,000 --> 00:06:11,600
But it is tedious, repetitive, boring, lots of things to type.

102
00:06:11,600 --> 00:06:14,680
Luckily, we figured out how to make it a little bit better.

103
00:06:14,680 --> 00:06:18,200
So I wrote this utility script, cherrypicker.py.

104
00:06:18,200 --> 00:06:22,120
What we have to do now is just pip install cherrypicker,

105
00:06:22,120 --> 00:06:23,600
and it becomes a one line.

106
00:06:23,600 --> 00:06:26,640
Just give it the commit hash you want to back port,

107
00:06:26,640 --> 00:06:29,840
and the target branch.

108
00:06:29,840 --> 00:06:31,240
Now this is easier.

109
00:06:31,240 --> 00:06:34,440
It will even open the GitHub pull request page.

110
00:06:34,440 --> 00:06:37,600
So you just click a button so you don't even

111
00:06:37,600 --> 00:06:40,560
need to open your own browser.

112
00:06:40,560 --> 00:06:43,920
And you think, we'll be happy with this.

113
00:06:43,920 --> 00:06:45,520
I was not.

114
00:06:45,520 --> 00:06:51,600
Because it's still troublesome, because I have to be on a computer.

115
00:06:51,600 --> 00:06:55,560
And it's a trouble for me.

116
00:06:55,560 --> 00:07:00,280
I have to be on the right computer that has C Python clone, that has Git,

117
00:07:00,280 --> 00:07:04,160
that has my SSH key.

118
00:07:04,160 --> 00:07:08,400
I'm not on my computer as much as you think.

119
00:07:08,400 --> 00:07:09,800
I'm on my phone more.

120
00:07:12,240 --> 00:07:16,120
If I can review pull requests while I'm on the beach

121
00:07:16,120 --> 00:07:19,520
or while I'm getting pedicure on my phone,

122
00:07:19,560 --> 00:07:24,760
why do I have to wait until I'm back on my computer

123
00:07:24,760 --> 00:07:28,040
to complete the back port?

124
00:07:28,040 --> 00:07:30,400
It feels wrong to me.

125
00:07:30,400 --> 00:07:35,720
And because we have to wait until we're back at the computer,

126
00:07:35,720 --> 00:07:41,200
we sometimes forget to do that part.

127
00:07:41,200 --> 00:07:46,640
Another problem is I start receiving back reports.

128
00:07:46,640 --> 00:07:49,680
And some of the back reports is related to people

129
00:07:49,680 --> 00:07:52,160
using Cherry Picker on Windows.

130
00:07:52,160 --> 00:07:54,200
And Python on Windows is really great.

131
00:07:54,200 --> 00:07:58,200
And you should go to Steve Tower, talk and hear more about it.

132
00:07:58,200 --> 00:08:01,360
The problem's me.

133
00:08:01,360 --> 00:08:04,000
As you can see, I use Mac.

134
00:08:04,000 --> 00:08:06,360
I don't have Windows.

135
00:08:06,360 --> 00:08:07,800
I don't know how to test.

136
00:08:07,800 --> 00:08:10,680
I don't know how to help you if you use Windows.

137
00:08:10,680 --> 00:08:12,680
I'm so sorry.

138
00:08:12,680 --> 00:08:15,000
So this is a problem.

139
00:08:15,000 --> 00:08:20,120
And it's just really boring.

140
00:08:20,120 --> 00:08:21,240
Yeah, I do it once.

141
00:08:21,240 --> 00:08:22,640
Do it twice is OK.

142
00:08:22,640 --> 00:08:28,160
Do it 300 times for all your peers.

143
00:08:28,160 --> 00:08:30,320
It's a waste of time.

144
00:08:30,320 --> 00:08:32,880
And we keep, since the beginning,

145
00:08:32,880 --> 00:08:34,760
the core devs have started talking.

146
00:08:34,760 --> 00:08:37,320
We know this can be automated.

147
00:08:37,320 --> 00:08:42,280
We know we can have a bot to do this for us.

148
00:08:42,280 --> 00:08:45,120
Problem is I don't know how to build the bot.

149
00:08:45,120 --> 00:08:49,200
And I was waiting for other core devs to just build

150
00:08:49,200 --> 00:08:51,920
the bot for us, please.

151
00:08:51,920 --> 00:08:53,240
But time passes.

152
00:08:53,240 --> 00:08:57,440
Few months, and then we've all started to feel frustrated.

153
00:08:57,440 --> 00:09:01,200
So I thought, maybe it's a good learning opportunity for me.

154
00:09:01,200 --> 00:09:03,640
I want to learn how to build a GitHub bot.

155
00:09:03,640 --> 00:09:05,920
So I started learning and started

156
00:09:05,920 --> 00:09:08,440
reading GitHub Developer Guide.

157
00:09:08,440 --> 00:09:11,400
And I started figuring out that there

158
00:09:11,560 --> 00:09:14,320
is this GitHub webhooks that you can

159
00:09:14,320 --> 00:09:16,160
install in your repository.

160
00:09:16,160 --> 00:09:19,880
Basically, GitHub can notify you of events

161
00:09:19,880 --> 00:09:22,680
happening inside your repo.

162
00:09:22,680 --> 00:09:25,720
So it can tell you that there is pull request that's

163
00:09:25,720 --> 00:09:31,840
being opened, closed, or labeled, or all many events.

164
00:09:31,840 --> 00:09:33,120
And it's really interesting.

165
00:09:33,120 --> 00:09:36,200
And the thing is you need to build a web service

166
00:09:36,200 --> 00:09:39,000
to receive those webhook events.

167
00:09:39,000 --> 00:09:40,880
So since we're Python core developers,

168
00:09:40,880 --> 00:09:44,080
of course we will build it using Python.

169
00:09:44,080 --> 00:09:52,160
And things under the PSF, whenever possible,

170
00:09:52,160 --> 00:09:53,800
we will host it on Heroku.

171
00:09:53,800 --> 00:09:56,960
So that's the choices we made.

172
00:09:56,960 --> 00:10:01,680
We will write a web service with Python hosted on Heroku.

173
00:10:01,680 --> 00:10:04,360
So this is how GitHub webhooks generally works.

174
00:10:06,880 --> 00:10:08,880
But what about the other direction?

175
00:10:08,880 --> 00:10:11,880
What if our web service wants to talk to GitHub?

176
00:10:11,880 --> 00:10:15,000
We want to make actions like we want to create pull requests,

177
00:10:15,000 --> 00:10:17,120
merge pull requests, or something like that.

178
00:10:17,120 --> 00:10:19,280
We will need to do all this.

179
00:10:19,280 --> 00:10:21,880
There are also APIs for all of this.

180
00:10:21,880 --> 00:10:24,040
I didn't know about any of this before.

181
00:10:24,040 --> 00:10:26,880
But after I read the Developer Guide,

182
00:10:26,880 --> 00:10:28,600
I started realizing, well, there's

183
00:10:28,600 --> 00:10:36,200
a lot of things you can do using APIs, things you can do on GitHub

184
00:10:36,200 --> 00:10:40,400
website UI, you can do as a code.

185
00:10:40,400 --> 00:10:44,360
That means you can write bots.

186
00:10:44,360 --> 00:10:49,080
So now that I've learned more about webhooks and GitHub APIs,

187
00:10:49,080 --> 00:10:51,720
I started thinking, well, let's build a bot.

188
00:10:51,720 --> 00:10:55,120
How do I build the bot that does backports?

189
00:10:55,120 --> 00:10:59,680
And I guess I will utilize the webhook.

190
00:10:59,680 --> 00:11:04,880
I want to wait for the PR merge event, run cherrypicker.py,

191
00:11:04,880 --> 00:11:06,480
and then open the pull request.

192
00:11:06,480 --> 00:11:07,320
It seems simple.

193
00:11:10,120 --> 00:11:14,400
Now, if you remember from the previous slides,

194
00:11:14,400 --> 00:11:18,760
cherrypicker really runs git commands.

195
00:11:18,760 --> 00:11:22,000
It means somehow the web service needs

196
00:11:22,000 --> 00:11:24,680
to have a clone of CPython repo.

197
00:11:27,800 --> 00:11:31,120
Here comes trouble.

198
00:11:31,120 --> 00:11:34,400
This is how it should be.

199
00:11:34,400 --> 00:11:38,000
CPython is 28 years old.

200
00:11:38,000 --> 00:11:40,720
It's big.

201
00:11:40,720 --> 00:11:44,320
Cloning CPython takes at least two minutes.

202
00:11:44,320 --> 00:11:46,480
And while working on this, I realized

203
00:11:46,480 --> 00:11:49,320
that requests in Heroku times out after 30 seconds.

204
00:11:49,320 --> 00:11:51,400
So what do I do here?

205
00:11:51,400 --> 00:11:53,320
I cannot clone CPython repo.

206
00:11:53,320 --> 00:11:54,960
I cannot make.

207
00:11:54,960 --> 00:11:58,880
I don't know how to make cloning CPython be faster.

208
00:11:58,880 --> 00:12:01,600
We have to delete things from CPython.

209
00:12:01,600 --> 00:12:02,720
That will never happen.

210
00:12:05,960 --> 00:12:08,800
So I didn't know what to do here.

211
00:12:08,800 --> 00:12:12,800
I asked Ernest, the PSF director of infrastructure,

212
00:12:12,800 --> 00:12:14,440
for advice.

213
00:12:14,440 --> 00:12:18,600
I thought maybe I cannot use Heroku.

214
00:12:18,600 --> 00:12:20,720
Maybe he needs to spin up a server for me.

215
00:12:20,720 --> 00:12:22,440
I don't know.

216
00:12:22,440 --> 00:12:24,840
But he said, we can totally use it.

217
00:12:24,840 --> 00:12:26,480
Heroku, you can run.

218
00:12:26,480 --> 00:12:30,920
There is a background worker task that you can use.

219
00:12:30,920 --> 00:12:34,560
So I can delegate the long running task

220
00:12:34,560 --> 00:12:36,480
in the background with Celery.

221
00:12:36,480 --> 00:12:41,160
And that's where I do the cloning in the background.

222
00:12:41,160 --> 00:12:45,760
And the web service is just to receive the web hook

223
00:12:45,760 --> 00:12:47,240
and then just kick off the task.

224
00:12:47,240 --> 00:12:49,640
So that was really cool.

225
00:12:49,640 --> 00:12:53,120
So this is how Miss S. LinkedIn works.

226
00:12:53,120 --> 00:12:55,800
Miss S. LinkedIn is open source.

227
00:12:55,800 --> 00:12:57,960
And if you're curious about building GitHub bots

228
00:12:57,960 --> 00:13:01,360
and you want to see code examples, you can check it out.

229
00:13:01,360 --> 00:13:04,640
It's written in Python 3.6 because I really

230
00:13:04,640 --> 00:13:10,240
love f-strings using AI or HTTP.

231
00:13:10,240 --> 00:13:12,880
But the real magic is, I would say,

232
00:13:12,880 --> 00:13:18,240
it's the GitHub library that makes writing GitHub bots

233
00:13:18,240 --> 00:13:19,040
really easy.

234
00:13:19,040 --> 00:13:22,760
And it's written by Brad Cannon here right in front.

235
00:13:23,720 --> 00:13:27,600
Just to show how easy it is to write the bot,

236
00:13:27,600 --> 00:13:29,960
to write the web hook event, this is the code.

237
00:13:29,960 --> 00:13:33,360
The actual code from Miss S. LinkedIn.

238
00:13:33,360 --> 00:13:38,680
If you can see, I'm waiting for the pull request closed event.

239
00:13:38,680 --> 00:13:42,560
And I know that the PR is being merged.

240
00:13:42,560 --> 00:13:47,040
I will figure out where is the commit hash.

241
00:13:47,040 --> 00:13:48,760
Everything's given by GitHub to me.

242
00:13:48,760 --> 00:13:51,560
So with those information, I will

243
00:13:51,560 --> 00:13:56,240
be able to kick off the cherry pick task.

244
00:13:56,240 --> 00:14:00,680
So the code's open Apache license.

245
00:14:00,680 --> 00:14:01,760
And we built the bot.

246
00:14:01,760 --> 00:14:02,640
We deployed it.

247
00:14:02,640 --> 00:14:05,600
And this is Miss S. LinkedIn's first PR.

248
00:14:05,600 --> 00:14:09,160
This happens during Python Core Sprint 2017

249
00:14:09,160 --> 00:14:12,080
in a small room of 20 people in Facebook.

250
00:14:12,080 --> 00:14:17,120
And there was a huge cheer in one corner as we see this.

251
00:14:17,120 --> 00:14:18,840
It was magical.

252
00:14:18,840 --> 00:14:22,800
For the first time in CPython, we have actually three bots

253
00:14:22,800 --> 00:14:25,240
talking to each other.

254
00:14:25,240 --> 00:14:26,600
It was amazing.

255
00:14:26,600 --> 00:14:28,520
It was fun.

256
00:14:28,520 --> 00:14:29,520
It's great.

257
00:14:29,520 --> 00:14:33,480
And all the problems I used to have with cherry pickers

258
00:14:33,480 --> 00:14:35,800
now gone.

259
00:14:35,800 --> 00:14:38,400
And I feel like this is great.

260
00:14:38,400 --> 00:14:40,960
I feel like I've accomplished something.

261
00:14:40,960 --> 00:14:45,480
But there is still one problem.

262
00:14:45,480 --> 00:14:47,680
Even though I'm not a cherry picker,

263
00:14:48,560 --> 00:14:53,200
even though things are somewhat automatic, it takes time.

264
00:14:53,200 --> 00:14:59,200
And the problem is related to the other part of our workflow,

265
00:14:59,200 --> 00:15:00,680
waiting for tests to pass.

266
00:15:03,320 --> 00:15:05,760
We have so many tests and checks.

267
00:15:05,760 --> 00:15:08,920
We run it on Azure.

268
00:15:08,920 --> 00:15:11,800
We run it on Travis.

269
00:15:11,800 --> 00:15:16,520
All of these can take 30 minutes, sometimes more,

270
00:15:16,560 --> 00:15:17,840
sometimes forever.

271
00:15:17,840 --> 00:15:19,120
And we have to restart it.

272
00:15:22,640 --> 00:15:25,040
Waiting for all this is boring.

273
00:15:25,040 --> 00:15:28,840
Of course, I'm not going to wait for it.

274
00:15:28,840 --> 00:15:33,560
So wouldn't it be nice if I can have a bot that does the

275
00:15:33,560 --> 00:15:36,280
waiting for me like this?

276
00:15:36,280 --> 00:15:40,080
So now the bot waits for all these checks to pass.

277
00:15:40,080 --> 00:15:41,040
I don't have to.

278
00:15:41,040 --> 00:15:43,600
And it just tells me, hey, it's done.

279
00:15:43,640 --> 00:15:45,560
Come back and merge this.

280
00:15:45,560 --> 00:15:47,840
Right?

281
00:15:47,840 --> 00:15:51,440
And the workflow looks like this.

282
00:15:51,440 --> 00:15:56,680
This is the bot that implements that notification.

283
00:15:56,680 --> 00:16:00,080
It checks for all the status to finish, figure out the PR,

284
00:16:00,080 --> 00:16:02,080
and then make a comment.

285
00:16:02,080 --> 00:16:05,360
So again, codes online.

286
00:16:05,360 --> 00:16:08,640
So we've accomplished this.

287
00:16:08,640 --> 00:16:12,040
And now, now all my problems are solved.

288
00:16:14,600 --> 00:16:18,720
And I thought when I did that, I thought my life is complete.

289
00:16:18,720 --> 00:16:22,000
This is the biggest life achievement I ever made.

290
00:16:24,880 --> 00:16:27,120
So maybe it's time to start looking into

291
00:16:27,120 --> 00:16:28,560
some other problems here.

292
00:16:31,560 --> 00:16:34,040
And then one day comes this email to Python commuters.

293
00:16:36,920 --> 00:16:42,560
Would it be nice if let the bot merge it for me, not having to

294
00:16:42,560 --> 00:16:43,800
wait anymore?

295
00:16:48,040 --> 00:16:50,760
And I thought, sure.

296
00:16:50,760 --> 00:16:55,240
I mean, this is C Python.

297
00:16:55,240 --> 00:16:58,680
Having a bot merging code to C Python, it means you're

298
00:16:58,680 --> 00:17:02,720
wanting to give commit right to a bot.

299
00:17:02,720 --> 00:17:06,400
And it's not even an easy thing to do to people.

300
00:17:06,400 --> 00:17:09,800
Are we sure we want to give commit right to a bot, making a

301
00:17:09,800 --> 00:17:11,280
bot, a core developer, basically?

302
00:17:13,560 --> 00:17:14,320
I wasn't sure.

303
00:17:14,320 --> 00:17:18,280
But Victor wants it.

304
00:17:18,280 --> 00:17:19,680
So we made it.

305
00:17:19,680 --> 00:17:20,720
This is the code.

306
00:17:20,720 --> 00:17:22,400
It's really straightforward.

307
00:17:22,400 --> 00:17:24,840
It's basically one line.

308
00:17:24,840 --> 00:17:29,240
Just make a put request to GitHub.

309
00:17:29,240 --> 00:17:30,400
That's how it works.

310
00:17:30,400 --> 00:17:32,320
So we have that.

311
00:17:32,320 --> 00:17:35,600
And now our workflow looks so much simpler.

312
00:17:35,600 --> 00:17:38,760
As you can see, there's fairly little things a core

313
00:17:38,760 --> 00:17:40,400
developer is doing.

314
00:17:40,440 --> 00:17:42,960
And the bot does most of it.

315
00:17:46,000 --> 00:17:50,880
And it's really interesting for me to realize that we thought

316
00:17:50,880 --> 00:17:52,680
this is what we want.

317
00:17:52,680 --> 00:17:54,640
We thought we'll be happy with this.

318
00:17:54,640 --> 00:17:59,240
But now that we have this kind of workflow, we can't go back.

319
00:17:59,240 --> 00:18:00,240
We're spoiled.

320
00:18:00,240 --> 00:18:04,880
And now at least I started thinking, what other things

321
00:18:04,880 --> 00:18:06,960
can be automated?

322
00:18:06,960 --> 00:18:10,280
Now that I know how to build GitHub bots, can I

323
00:18:10,280 --> 00:18:11,160
build even more?

324
00:18:11,160 --> 00:18:17,640
What are the things that I can do with it?

325
00:18:17,640 --> 00:18:21,240
And I also realized that now that I know so many things

326
00:18:21,240 --> 00:18:25,960
that can be automated with bots, I get really grumpy

327
00:18:25,960 --> 00:18:29,560
whenever I have to do things manually, whenever people don't

328
00:18:29,560 --> 00:18:33,240
have bots in their GitHub.

329
00:18:33,240 --> 00:18:37,360
One of the bots I'm working right now, the blackout bot,

330
00:18:37,360 --> 00:18:43,120
basically it is a bot that runs black format.

331
00:18:43,120 --> 00:18:43,880
It's awesome.

332
00:18:43,880 --> 00:18:47,520
Go see Lukas talk sometime.

333
00:18:47,520 --> 00:18:48,960
I'm still working on this.

334
00:18:48,960 --> 00:18:51,400
It is still closed source.

335
00:18:51,400 --> 00:18:57,960
But the reason I want this bot is that I don't know.

336
00:18:57,960 --> 00:19:04,800
I just can't be bothered with installing plugins, setting up

337
00:19:04,800 --> 00:19:10,840
pre-commit, edit config, or whatever, or talking about it.

338
00:19:10,840 --> 00:19:13,960
I know the Django team is thinking about using black.

339
00:19:13,960 --> 00:19:15,560
And they have a whole process.

340
00:19:15,560 --> 00:19:17,680
There is a depth.

341
00:19:17,680 --> 00:19:21,320
I think it's been discussed for some time.

342
00:19:21,320 --> 00:19:24,800
And when we were wanting to use black at Zapier,

343
00:19:24,800 --> 00:19:27,920
it took a few weeks of discussion.

344
00:19:30,960 --> 00:19:31,440
I'm sorry.

345
00:19:31,440 --> 00:19:33,800
I can't do that.

346
00:19:33,800 --> 00:19:39,280
So I wrote a bot just to make it simple for myself.

347
00:19:39,280 --> 00:19:43,120
Steve basically needs a bot, and he didn't realize it.

348
00:19:43,120 --> 00:19:45,720
Last time he asked, is there an easy way

349
00:19:45,720 --> 00:19:49,640
to allow issues but not pull requests?

350
00:19:49,640 --> 00:19:55,600
And the responses to this was, well, move to GitLab.

351
00:19:55,600 --> 00:19:59,120
That's not as simple as you think.

352
00:19:59,120 --> 00:20:01,960
Writing a bot is really easy.

353
00:20:01,960 --> 00:20:05,080
Whenever somebody opens Zapier, you close it automatically.

354
00:20:05,080 --> 00:20:05,960
You can do that.

355
00:20:05,960 --> 00:20:07,360
And really, really easy.

356
00:20:07,360 --> 00:20:11,040
This is the code that does that, four lines of code.

357
00:20:11,040 --> 00:20:12,400
Easier than moving to GitLab.

358
00:20:17,880 --> 00:20:20,800
Can't believe I failed at emoji.

359
00:20:20,800 --> 00:20:24,520
I have an out of open source bot that

360
00:20:24,520 --> 00:20:27,320
reminds people of the period of time

361
00:20:27,320 --> 00:20:29,600
that I'm not doing any volunteer work.

362
00:20:29,600 --> 00:20:32,400
So if you expect, just so people know,

363
00:20:32,400 --> 00:20:35,880
don't expect any answers from me during this time.

364
00:20:35,880 --> 00:20:37,280
A few people have been asking me,

365
00:20:37,280 --> 00:20:40,280
how do you make this bot?

366
00:20:40,280 --> 00:20:42,840
This is actually Zapier.

367
00:20:42,840 --> 00:20:46,080
You can try it out, but these are my Zapier steps.

368
00:20:46,080 --> 00:20:48,360
Whenever somebody mentions me on open source,

369
00:20:48,360 --> 00:20:51,720
not inside Zapier, it will leave comment.

370
00:20:51,720 --> 00:20:56,400
I even wrote Python with f strings there.

371
00:20:56,400 --> 00:21:02,360
I'm working with Rafael on a Py labels, GitHub bots.

372
00:21:02,360 --> 00:21:06,080
If you're familiar, maybe or not,

373
00:21:06,080 --> 00:21:08,960
Rafael has this package, the labels package,

374
00:21:08,960 --> 00:21:12,200
to help manage your GitHub labels.

375
00:21:12,200 --> 00:21:15,520
If you manage multiple repos and you

376
00:21:15,520 --> 00:21:19,520
want to have consistent labels across them,

377
00:21:19,520 --> 00:21:22,360
you don't need to recreate them one by one manually.

378
00:21:22,360 --> 00:21:27,440
He has this package that you can configure all the repos

379
00:21:27,440 --> 00:21:30,000
with a YAML file.

380
00:21:30,000 --> 00:21:31,040
It's really useful.

381
00:21:31,040 --> 00:21:32,840
It's just a command line.

382
00:21:32,840 --> 00:21:36,880
And I told him, love your package,

383
00:21:36,880 --> 00:21:38,600
but I'm a really lazy person.

384
00:21:38,600 --> 00:21:42,400
I don't want to do things in the command line.

385
00:21:42,400 --> 00:21:43,680
I think we can build a bot.

386
00:21:43,680 --> 00:21:44,880
So we've been working on it.

387
00:21:44,880 --> 00:21:47,500
It's kind of stalled because I was out of open source.

388
00:21:47,500 --> 00:21:51,560
But I plan to work on the bot with him.

389
00:21:51,560 --> 00:21:53,960
So be on the lookout.

390
00:21:53,960 --> 00:21:58,600
So I hope I've given you ideas for automating your life,

391
00:21:58,600 --> 00:21:59,960
for writing GitHub bots.

392
00:21:59,960 --> 00:22:03,280
If you're interested to build your own,

393
00:22:03,280 --> 00:22:05,880
I gave a tutorial last year.

394
00:22:05,880 --> 00:22:10,040
And the material for how to build GitHub bots is online.

395
00:22:10,040 --> 00:22:15,640
And there is a new framework, the OctoMachinery.

396
00:22:15,640 --> 00:22:18,280
I think it is pretty useful.

397
00:22:18,280 --> 00:22:21,480
I think it can be useful to build GitHub bots as well.

398
00:22:21,960 --> 00:22:25,000
I would like for you to check it out.

399
00:22:25,000 --> 00:22:30,680
And if you're concerned about the cost of hosting GitHub

400
00:22:30,680 --> 00:22:34,680
bots on the cloud, you don't want to pay for it.

401
00:22:34,680 --> 00:22:38,680
If it's something that can benefit Python open source

402
00:22:38,680 --> 00:22:44,360
community, check with the PSF if they will help fund

403
00:22:44,360 --> 00:22:49,840
the hosting for you so you can focus on building the bot.

404
00:22:49,840 --> 00:22:50,700
Just talk to them.

405
00:22:50,700 --> 00:22:54,900
They said, Ernest told me that there is no issues.

406
00:22:54,900 --> 00:22:58,260
If the community will benefit from it,

407
00:22:58,260 --> 00:23:01,300
if you make it open source, I think they can make it happen.

408
00:23:01,300 --> 00:23:03,340
So thank you so much, the PSF.

409
00:23:03,340 --> 00:23:08,140
And thank you so much for all your donations and sponsors.

410
00:23:08,140 --> 00:23:10,780
And if you really want to talk more about GitHub bots,

411
00:23:10,780 --> 00:23:11,740
I love it.

412
00:23:11,740 --> 00:23:14,460
We are doing an open space on Sunday

413
00:23:14,460 --> 00:23:17,420
because GitHub bots are one honking great idea.

414
00:23:17,420 --> 00:23:19,500
I want you to do more of those.

415
00:23:19,500 --> 00:23:25,020
If you have ideas, let's come chat with me on Sunday,

416
00:23:25,020 --> 00:23:28,580
May the 5th, 11 AM in room 20.

417
00:23:28,580 --> 00:23:31,380
So thank you so much.

418
00:23:31,380 --> 00:23:32,940
Thank you.

