1
00:00:00,000 --> 00:00:20,340
Good afternoon, everybody. After lunch, the second tutorial of the day. Faster Python

2
00:00:20,340 --> 00:00:27,080
programs measure the own guess. This is the tutorial. If it's not your tutorial, you have

3
00:00:27,080 --> 00:00:33,000
to change rooms. So, again, please make sure to install all the required software and also

4
00:00:33,000 --> 00:00:40,120
download the material. First, I would like to introduce myself a little bit. So, I've been a

5
00:00:40,120 --> 00:00:45,240
Python user for now about 20 years. I still remember buying my first Python program in 1999.

6
00:00:45,240 --> 00:00:53,520
First Python 1.52. It's a bit newer now. And also work as a Python trainer since 2004. I've trained

7
00:00:53,520 --> 00:00:59,760
people in Python. And since 2006, I do it full time. And I'm the CEO of Python Academy.

8
00:00:59,760 --> 00:01:06,000
They're a Germany-based teaching company. So, I teach in Germany and other countries in Europe.

9
00:01:06,000 --> 00:01:10,200
I'm also involved in the communities. I've been chair of a bunch of Python conferences you can

10
00:01:10,200 --> 00:01:15,720
see here. And I'm still involved in organizing PyCon DE and EuroSciPy and maybe some other

11
00:01:15,720 --> 00:01:22,040
conferences. And also the chair of the Python Software for Bunt, which is something similar

12
00:01:22,040 --> 00:01:30,160
to the PSF, but a bit smaller in Germany. Okay. Maybe a few words about you. So, there's quite a

13
00:01:30,160 --> 00:01:33,800
few people in the room. And it would be good to have a little bit of feedback who you are,

14
00:01:33,800 --> 00:01:39,680
what you know about Python. So, who has less than one year of Python experience? Please raise your

15
00:01:39,680 --> 00:01:52,240
hand. Okay. It's about 10%. Between one and two years. Okay. Between two and five. Yeah. And more

16
00:01:52,240 --> 00:01:59,240
than five. Good. So, it's a pretty nice kind of even distribution. Of course, at the time of the

17
00:01:59,240 --> 00:02:03,960
usage of Python, it's not a good measure, but it's some kind of approximation how well you know

18
00:02:03,960 --> 00:02:11,520
Python. So, who of you has to still use Python 2 in production or for their job or something? Okay.

19
00:02:11,520 --> 00:02:17,960
So, quite a few people. So, this tutorial, I've been using this for a while. So, I updated it,

20
00:02:17,960 --> 00:02:22,680
but it works with Python 3 and also with Python 2 mainly. So, you should be able to get something

21
00:02:22,680 --> 00:02:28,920
out even if you have to still work with Python 2. But remember, end of the year, Python 2 is dead.

22
00:02:29,000 --> 00:02:36,960
So, we probably should speed up a little bit moving from Python 2 to Python 3. So, who of you is doing

23
00:02:36,960 --> 00:02:42,560
number crunching or something that has to do with numerical computations or something? Okay. A few

24
00:02:42,560 --> 00:02:51,440
people. Who of you has CPU bound problems? More or less? Yeah. Okay. Who has more memory bound

25
00:02:51,440 --> 00:02:58,640
problems? Okay. So, there's also distribution. And who has more IO bound problems? Okay. So,

26
00:02:58,640 --> 00:03:05,200
kind of even distribution, all kinds of problems are here. Good. Thank you. Just what you're gonna

27
00:03:05,200 --> 00:03:09,760
do is if you have about three hours here, and this will be hands-on. So, just have a few slides,

28
00:03:09,760 --> 00:03:15,360
and then we go do kind of, I do kind of live coding more or less, and you're encouraged to

29
00:03:15,360 --> 00:03:19,880
work along. Then you can also go to the material. Everything, it's in the material, so you won't,

30
00:03:19,920 --> 00:03:24,680
hopefully you won't get lost. You can do copy paste, but typically it's not that efficient. So,

31
00:03:24,680 --> 00:03:29,160
it's not too much to type. You may try to type along. I'm gonna use iPython notebooks. Actually,

32
00:03:29,160 --> 00:03:36,560
it's called Jupyter notebooks. Who of you is familiar with Jupyter? Most of people. So,

33
00:03:36,560 --> 00:03:40,640
it will give you a very quick introduction. If you want to use some different tool, you can use

34
00:03:40,640 --> 00:03:44,720
some different tools, but a few things, some timing and profiling things work much nicer

35
00:03:44,880 --> 00:03:50,440
than in notebooks. Then if you don't know this, you have a handout. This is about 78 pages PDF

36
00:03:50,440 --> 00:03:56,760
handout in the download. Also, example code is also downloaded. We do some exercises a little bit,

37
00:03:56,760 --> 00:04:03,800
so you have to do something yourself. Not a lot, a little bit. And there will be a break at three

38
00:04:03,800 --> 00:04:12,000
o'clock, so that will be some new coffee, hopefully. And also, you can go to this link there after the

39
00:04:12,000 --> 00:04:17,280
tutorial and give you an evaluation how you like it or didn't like it, some suggestions or something.

40
00:04:17,280 --> 00:04:23,160
That would be nice. I will show the link again. It's here. And maybe I also, during the break,

41
00:04:23,160 --> 00:04:29,160
I'll upload it so you can have it. Just need to click it. You don't have to type it in. Okay. So,

42
00:04:29,160 --> 00:04:36,600
the first few words, introduction. Because everything is about making things fast in some way. So,

43
00:04:36,600 --> 00:04:40,360
as you know, Python's a pretty high-level language, very interesting language, actually,

44
00:04:40,360 --> 00:04:46,040
that makes programming easier. But Python can be slow. Python's not necessarily slow,

45
00:04:46,040 --> 00:04:52,680
per se, I would say. But for a few things, it can be slow. Typically, it's pretty slow. If you do

46
00:04:52,680 --> 00:04:57,160
heavy numerical calculations in pure Python, that's not going to work out well. But there

47
00:04:57,160 --> 00:05:02,320
are quite a few solutions to do it in a different way. We're going to look at some of them. This

48
00:05:02,320 --> 00:05:05,880
may or might not be a problem. Sometimes it doesn't really matter too much. So, if you program

49
00:05:05,880 --> 00:05:09,960
something and you're waiting for something like a database or so, then there might not be a problem

50
00:05:09,960 --> 00:05:17,280
with Python at all. And before you start optimizing, you try to make Python faster,

51
00:05:17,280 --> 00:05:21,920
very often it comes with a cost. So, you have to pay for it in one way or the other very often.

52
00:05:21,920 --> 00:05:26,720
And we're going to look at this a little bit. Because once you optimize the code,

53
00:05:26,720 --> 00:05:30,720
you might need to spend more effort not only writing the code, but also maintaining the code.

54
00:05:30,720 --> 00:05:35,760
It's more complicated. So, you need to find some kind of a balance. And of course, this is very

55
00:05:35,760 --> 00:05:39,960
different for each application. Sometimes if performance is very important, then it makes

56
00:05:39,960 --> 00:05:43,720
sense to do it. Sometimes it's not so important, it might not make sense to do anything at all.

57
00:05:43,720 --> 00:05:52,640
So, optimization, guidelines, premature optimization is the root of all evil. You might know this. It's

58
00:05:52,640 --> 00:05:56,720
not really clear who came up. This is the first time to say Hori, but maybe somebody else. But

59
00:05:56,720 --> 00:06:02,320
it doesn't really matter too much or Knuth. But this has something true. I have a lot of people,

60
00:06:02,320 --> 00:06:05,520
sometimes I work with people that say, we have to use Fortran to program this because all of us

61
00:06:05,520 --> 00:06:12,200
would be slow. That might be a little bit hasty decision. Very often, you might need Fortran for

62
00:06:12,200 --> 00:06:16,600
only a very small portion of the program actually, not for the whole thing. And then you have to

63
00:06:16,600 --> 00:06:24,600
write the whole thing in Fortran. That might not be the best choice for some problems. Very often,

64
00:06:24,600 --> 00:06:28,880
you have to make it correct first and fast later. So, it doesn't make sense. You have a very nice

65
00:06:28,880 --> 00:06:33,480
fast program, but the result is not what you want. So, you have to make sure the program works

66
00:06:33,480 --> 00:06:39,800
correctly. And you can also think before you start about optimization, but it's typically a very bad

67
00:06:39,800 --> 00:06:44,720
idea to optimize on the way. First, you have to make it work right, have tests. And then once you

68
00:06:44,720 --> 00:06:49,920
have the tests, you know the test works right, then you can make it fast. That's a good way to do so,

69
00:06:49,920 --> 00:06:59,960
correct before fast. So, otherwise, you might not be very successful. So, as I said, optimization

70
00:06:59,960 --> 00:07:05,800
often comes with a price. It can make your code less readable. There are other cases where the code

71
00:07:05,800 --> 00:07:10,360
actually gets more Python-ic, as you might call it, more readable. And I tried to show you some of

72
00:07:10,360 --> 00:07:15,360
these sweet spots where the code gets easier to read, but I understand simpler in one way or the

73
00:07:15,360 --> 00:07:21,520
other and still faster. But sometimes, that's not possible. And you might end up having, putting

74
00:07:21,520 --> 00:07:27,080
more effort in maintenance of your code. The readability, which is a big feature of Python code

75
00:07:27,080 --> 00:07:32,680
typically, may suffer if you put something in there that makes it faster, but not as nice and

76
00:07:32,680 --> 00:07:39,740
Python-ic maybe. Because Python typically puts a load on the machine and not so much on the

77
00:07:39,740 --> 00:07:44,680
programmer. And if you reverse this process a little bit, then you might lose some of the advantages

78
00:07:44,680 --> 00:07:51,480
of Python. Sometimes you have this kind of different thing, and then you have to find some kind of

79
00:07:51,480 --> 00:07:58,800
compromise between these different goals that are not, you cannot solve for both of them. So, general

80
00:07:58,800 --> 00:08:03,440
guidelines. So, I have to have just, this is pretty much common sense. But even though it's common

81
00:08:03,440 --> 00:08:09,840
sense, you have to just keep this guideline somewhere when you do optimization before you spend a

82
00:08:09,840 --> 00:08:13,600
lot of effort, just go through there. And then, of course, you have to apply this common sense to

83
00:08:13,600 --> 00:08:19,040
your actual use case, which is different pretty much every time. So, do you really need, it's kind

84
00:08:19,040 --> 00:08:23,400
of a strange question, do you really need more performance? Maybe you don't need it. It's just an

85
00:08:23,400 --> 00:08:28,080
exercise to do something faster. It can be okay, but maybe you don't, if you need to make it faster.

86
00:08:28,080 --> 00:08:33,920
Also, you have to figure out if Python is actually the cause. And that's pretty much most of the

87
00:08:33,920 --> 00:08:38,560
tutorials, actually figuring out what's going on. And this is a very, very important basic step,

88
00:08:38,560 --> 00:08:44,360
which is rather general, to find out what the problem is. Then how do you really solve it? That's

89
00:08:44,360 --> 00:08:49,400
something I cannot really teach too well in the tutorial, because my every case is somehow

90
00:08:49,400 --> 00:08:54,360
different. But if you have some general guidelines, then you can apply them to your special case. So,

91
00:08:54,360 --> 00:08:59,520
there might be other things, network traffic, whatever, that are slowing down, it's not Python.

92
00:08:59,520 --> 00:09:05,200
So, I always say, it doesn't matter if you wait fast or slow, you still wait. It doesn't help if

93
00:09:05,200 --> 00:09:11,320
you may use C or some other fast language when you don't have anything to do. And does it hurt if

94
00:09:11,400 --> 00:09:16,400
your program runs slowly? If something runs two hours or six hours, and it runs overnight anyway,

95
00:09:16,400 --> 00:09:20,600
and it's finished in the morning, it might not matter. So, this is something you have to answer

96
00:09:20,600 --> 00:09:28,200
yourself. So, as I said, don't optimize as you go. So, you have to make it work right first, and then

97
00:09:28,200 --> 00:09:35,600
look at the speed later on. Because you very often don't know if this really matters what you're doing

98
00:09:35,600 --> 00:09:41,960
right now. So, you have to measure that's something I will hammer on quite a bit. And I do this for

99
00:09:41,960 --> 00:09:46,720
a while and have some experience, but very often I'm wrong. I have an assumption what it is, but

100
00:09:46,720 --> 00:09:51,280
when I measure it's wrong. In the aftermath, it's very clear, but when you start, you often have

101
00:09:51,280 --> 00:09:58,120
wrong assumptions, and that can happen. Use realistic use cases. So, what is a program for? So,

102
00:09:58,120 --> 00:10:04,040
if something runs overnight, then you don't have to make it very interactive typically. So, how many

103
00:10:04,040 --> 00:10:08,400
people are going to use it? So, if you know your small company and you only have 10 people,

104
00:10:08,400 --> 00:10:13,160
then there will never be more. You don't have to scale up to a thousand. So, sometimes it's

105
00:10:13,160 --> 00:10:20,320
very difficult to predict how this thing is going to develop in the future, but just spending a lot

106
00:10:20,320 --> 00:10:25,640
of effort for something that might never happen, maybe not a good idea. How often it's used. This

107
00:10:25,640 --> 00:10:29,920
is one time thing, and then you throw it away, then it doesn't make a lot of sense to spend a

108
00:10:29,920 --> 00:10:35,800
lot of time to make it faster, because it's just way till it's finished and that's it. So, again,

109
00:10:35,800 --> 00:10:41,680
external courses can be, typically kind of gets like network connections, everything goes to the

110
00:10:41,680 --> 00:10:45,880
network can be much slower than anything you do in the programming language. So, you have to check

111
00:10:45,880 --> 00:10:51,680
this one. Database access is a typical case. System functions. You might find some other things,

112
00:10:51,680 --> 00:10:57,640
depending on your use case, that can be other external sources that make your program slow.

113
00:10:57,640 --> 00:11:05,680
Architecture. So, architecture can be thought of a kind of a higher level algorithm, like how do

114
00:11:05,680 --> 00:11:11,160
you set up the whole thing, maybe have a floor on the whole idea you have. This is really difficult

115
00:11:11,160 --> 00:11:15,120
to tell, and I don't have an example, because typically it's like the bigger picture. And

116
00:11:15,120 --> 00:11:21,440
typically simple tools work, so if you have a big piece of paper and write boxes and arrows and see

117
00:11:21,440 --> 00:11:24,400
how they work out, and if they all cross each other, then it's typically assigned something

118
00:11:24,400 --> 00:11:31,760
wrong. Most of the time, simple tools are good to give you an idea. Complicated tools are not

119
00:11:31,760 --> 00:11:36,000
necessarily better. Sometimes you need them, but something like just to have a general picture,

120
00:11:36,000 --> 00:11:41,760
how the program is set up, and maybe there's a problem somewhere in there. So, general rule.

121
00:11:41,760 --> 00:11:47,960
Box. Yeah, forgotten to print in the inner loop, or something like this that slows your thing down.

122
00:11:47,960 --> 00:11:51,840
So, print can be very slow, especially in Windows, if you have a print on a console,

123
00:11:52,320 --> 00:11:58,080
on Linux typically. And debug might be the problem. So, if you make your program work right,

124
00:11:58,080 --> 00:12:07,560
then you might not have a speed problem in the first case. So, and now, once you're through

125
00:12:07,560 --> 00:12:11,640
these six steps, step number seven, now you say, okay, I have a case. It's too slow, I have to make

126
00:12:11,640 --> 00:12:17,840
it fast. Very often, not the whole program is slow. Typically, you have some bottlenecks. Actually,

127
00:12:17,840 --> 00:12:21,480
hopefully you have some bottlenecks. If really everything is equally slow, it's really hard to

128
00:12:21,480 --> 00:12:26,280
make it faster. But fortunately, in many cases, you have one or two or three bottlenecks somewhere,

129
00:12:26,280 --> 00:12:30,920
and you have to find them. Yeah, you have to find them where they are, and then you can focus on

130
00:12:30,920 --> 00:12:37,720
these bottlenecks. And that's what we actually do. You have to be finding the bottleneck, and if it's

131
00:12:37,720 --> 00:12:42,160
your domain, you know what's going on. Maybe if you found the bottlenecks very clear how to solve it.

132
00:12:42,160 --> 00:12:46,960
Maybe you cannot solve the bottleneck, because you have to do these computations anyway, or

133
00:12:47,040 --> 00:12:52,800
something. And it's very different for each use case, but very often we have bottlenecks, and sometimes

134
00:12:52,800 --> 00:12:59,160
they're even easy to solve. Of course, you need to check after your optimization if it makes things

135
00:12:59,160 --> 00:13:06,960
faster, you still have the same result. Yeah, so use unit tests. PyTest is a framework I was

136
00:13:06,960 --> 00:13:10,880
being in talk here to draw about PyTest, which is highly recommended because it makes it very

137
00:13:10,880 --> 00:13:15,800
easy to get started with tests, actually, but gives you a lot of sophisticated features later on. So,

138
00:13:15,800 --> 00:13:21,960
it grows with you, and you should try to cover most of your code. So, even if you have 100%

139
00:13:21,960 --> 00:13:28,040
coverage, it's not guaranteed that your program is correct, but it's one more indicator that things

140
00:13:28,040 --> 00:13:35,640
are going well. And then, we will go for the algorithm first. So, if you apply the right algorithm,

141
00:13:35,640 --> 00:13:41,720
you can, if you have a certain problem, easily speed up your program by many orders of magnitude.

142
00:13:41,720 --> 00:13:48,320
No switch of programming languages can do this. So, if you switch from Python to C, you can get a

143
00:13:48,320 --> 00:13:54,520
speed up between 10 and 100, depending what type of thing you solve. That's probably what you can

144
00:13:54,520 --> 00:13:59,480
do. So, a lot of numeric code, it can be up to 100 times faster, with highly optimized compiled

145
00:13:59,480 --> 00:14:05,040
code. But if you use a different algorithm, and Python has advantage, it comes with data structures

146
00:14:05,040 --> 00:14:09,600
that have very powerful algorithms behind it, and if you use the right one, you can be 10,000 times,

147
00:14:09,600 --> 00:14:16,880
100,000 times, a million times faster. No compiler will give you this one. So, this is something you

148
00:14:16,880 --> 00:14:21,640
can do. Actually, I gave a talk in 2012 with Europe Python. I said, Python is faster than Fortran,

149
00:14:21,640 --> 00:14:27,320
which is a kind of a provocative title. And I just did something like, we have two files,

150
00:14:27,320 --> 00:14:34,280
this is a million coordinates, x, y, z, and find out which ones are on both. And in Python,

151
00:14:34,280 --> 00:14:39,280
it's a nine line program, open both files, read them into sets, do an intersection, write it out,

152
00:14:39,280 --> 00:14:46,560
everything. I tried to reprogram this in Fortran, took me 168 lines, and I did a, I couldn't find

153
00:14:46,560 --> 00:14:53,160
anything like a set in Python, and I made a neat, naive quadratic algorithm, and the Python program

154
00:14:53,160 --> 00:14:57,960
ran like two minutes, and Fortran took two hours. Of course, you can say, you do a binary search,

155
00:14:57,960 --> 00:15:03,480
but if you do binary search in Fortran, that will take you a few days to program it and get it

156
00:15:03,480 --> 00:15:07,440
correct. In Python, yeah, I can do this in half an hour, or a few minutes, actually, the whole program.

157
00:15:07,920 --> 00:15:11,120
If you have the right algorithm, you take advantage of Python built-in structures,

158
00:15:11,120 --> 00:15:18,520
that can make things faster. And as strange as the science, sometimes it's just the easiest way to

159
00:15:18,520 --> 00:15:23,640
throw hardware into the problem. So nowadays, hardware is really cheap compared to programmer

160
00:15:23,640 --> 00:15:28,600
time, and maybe just put more memory in. So putting more memory in is always, most of the time,

161
00:15:28,600 --> 00:15:33,840
it's possible, and putting memory in is pretty cheap, comparable. Getting a faster CPU, it's,

162
00:15:34,800 --> 00:15:39,480
you can get many CPUs, many cores, but of course, then you have to change a program that it can take

163
00:15:39,480 --> 00:15:44,120
advantage of it, and Python has some problems with that sometimes. Some libraries do this,

164
00:15:44,120 --> 00:15:51,040
but if it's a memory problem, or some input-output problem, just replacing a hard drive by SSD,

165
00:15:51,040 --> 00:15:56,760
or something might be very useful already. Yeah, and of course, you can, whatever you can buy,

166
00:15:56,760 --> 00:16:01,520
it's typically cheaper than optimizing. Of course, if you have something simple to do,

167
00:16:01,520 --> 00:16:06,160
and change the algorithm, that's still, we can still do it on top of it, but more hardware will

168
00:16:06,160 --> 00:16:23,280
help. Good. That's my slides. Now, let's go and do some work here. So I'm going to go through

169
00:16:23,280 --> 00:16:29,600
some examples, and we work with the Jupyter Notebook. So I created a new environment here.

170
00:16:29,680 --> 00:16:34,200
You don't have to do this, but if you're familiar with Conda or some other, or if you can use

171
00:16:34,200 --> 00:16:39,120
PIP virtual amps or something, whatever you feel comfortable, it's fine, or if you work in your

172
00:16:39,120 --> 00:16:44,400
main environment, I use Python 3.7 here for the tutorial. If you have a question about 2,

173
00:16:44,400 --> 00:16:50,440
so it should work with 2. A few things might be slightly different, but for the most part,

174
00:16:50,440 --> 00:16:54,400
it should work with 2, and I activated, and I installed the software, and actually now,

175
00:16:54,400 --> 00:17:03,080
I'm starting a JupyterLab here, and I need to specify a port here, otherwise it's not going to

176
00:17:03,080 --> 00:17:11,400
something like this. See if this works, and then it should start a Jupyter Notebook in this

177
00:17:11,400 --> 00:17:17,960
directory, and that's what it does. So, and I made a mistake. I have to go to the directory

178
00:17:17,960 --> 00:17:22,440
first, because otherwise, it's always recommended to go to this directory first,

179
00:17:22,480 --> 00:17:27,640
and then to do the same thing again. Then all the notebooks will be automatically stored in

180
00:17:27,640 --> 00:17:40,520
this directory, and I can get rid of this one. I have a problem with using a different port for

181
00:17:40,520 --> 00:17:49,360
some reason. It has something, complaints about workspace if I use the same port.

182
00:17:50,320 --> 00:17:57,400
Okay, so this is actually the download, the examples, and I make a new notebook,

183
00:17:57,400 --> 00:18:07,320
and I will spend most of my time in a notebook, and typically I rename it. So, if you want to

184
00:18:07,320 --> 00:18:12,560
use some other tools, that's fine. The advantage here, I will develop this notebook, and I will

185
00:18:12,560 --> 00:18:15,960
upload the notebooks, and you will get the link to the notebooks, I'll send them out. Later on,

186
00:18:15,960 --> 00:18:19,720
you get all my notebooks, because yours might look a bit different. So, I don't have any

187
00:18:19,720 --> 00:18:23,840
prefabricated notebooks. You have the handout, it's a PDF, so you have all the information there,

188
00:18:23,840 --> 00:18:27,440
but I don't want to just show you something, you have to press shift and or shift and so on. This

189
00:18:27,440 --> 00:18:33,600
is not typically a good way of doing it, because you want to do something yourself, and therefore,

190
00:18:33,600 --> 00:18:40,320
we spend some time in a notebook. So, it is big enough. Everybody in the back can read this? Yeah,

191
00:18:40,360 --> 00:18:45,800
okay, great. So, let's go through. So, I'm pretty much following the material. Of course,

192
00:18:45,800 --> 00:18:50,080
you're always free to ask questions, so raise your hand, and if I don't look at it, just make

193
00:18:50,080 --> 00:18:54,480
some noise, and you can always ask questions. I will answer directly or just say, okay, we're

194
00:18:54,480 --> 00:19:02,640
going to cover this later. And we start with measuring. So, most of this tutorial will be

195
00:19:02,640 --> 00:19:07,800
about measuring, and then I have in the second part some hints looking at some algorithmic things

196
00:19:07,800 --> 00:19:13,040
and some suggestion what you can do. Since there are many different types of problems in terms of

197
00:19:13,040 --> 00:19:17,400
performance, I cannot cover all of them, but I can give you some suggestions. But the main thing is,

198
00:19:17,400 --> 00:19:22,920
you need to measure. And once you measure, you might solve your problem already. If not, at least,

199
00:19:22,920 --> 00:19:28,480
you have something, then you know, I could solve it, I could not. It was a time-versed spending.

200
00:19:28,480 --> 00:19:34,880
Okay, the first thing is timing. So, timing can be done in different ways. There's a library called

201
00:19:34,880 --> 00:19:40,620
timeit, which is part of the standard library in Python, so you can import timeit. So, this has

202
00:19:40,620 --> 00:19:46,800
advantages always there, but it's not really comfortable to use. I would say it's not too bad,

203
00:19:46,800 --> 00:19:51,360
but you'll see that will be a more comfortable way here in the notebook. But let's do this. So,

204
00:19:51,360 --> 00:19:58,520
I can do something. I just use my example. So, I define two variables, a and b, and I just want

205
00:19:58,520 --> 00:20:12,280
to measure how long it takes to add a and b. And to do this, I can say total time, yeah, and I can

206
00:20:12,280 --> 00:20:18,440
use a timeit module, which offers you something. So, measuring time is always kind of tricky,

207
00:20:18,440 --> 00:20:22,720
can be pretty tricky. That's why you should use tools, because people that develop the tools,

208
00:20:22,720 --> 00:20:29,480
they thought through, and they tried to make it robust in one way or the other. There can still

209
00:20:29,480 --> 00:20:37,000
be problems, so you can still measure something strange. And now I can say measure a plus b. So,

210
00:20:37,000 --> 00:20:42,200
I use a string. So, I have to have a string. And then I have to specify a few things, like I say,

211
00:20:42,200 --> 00:20:49,120
the global namespace is, I can say local to global here in my notebook is the same. So,

212
00:20:49,120 --> 00:20:55,560
I can use locals, and I can supply this namespace. So, now that defined a and b end up in locals in

213
00:20:55,560 --> 00:21:01,200
the dictionary and feed this dictionary there. And I can say, I can specify how many times I

214
00:21:01,200 --> 00:21:05,600
want to repeat it. If I want to have a million times, so I'm Python 3, I can do something like

215
00:21:05,600 --> 00:21:10,600
this. If you might know, so you can underscore that's easy to read for a million. In Python 2,

216
00:21:10,600 --> 00:21:15,040
you cannot, you have to type it out or do something else to get to your million. And once I do this,

217
00:21:15,040 --> 00:21:24,160
and then I can look at the total time and I get the total time in seconds. So, it took 0.063 seconds

218
00:21:24,160 --> 00:21:28,600
about to do a hundred million loops. And of course, now I have to divide it. And that's why

219
00:21:28,600 --> 00:21:35,200
actually what I said here, I can say repeat if you want. And then you don't have to repeat or repeat,

220
00:21:35,200 --> 00:21:42,640
so to speak. So, a million and you use the repeat there. And then you have to divide the time by the

221
00:21:42,840 --> 00:21:51,320
repeat. So, and then you get the time for one. Yeah. So, now the total time for one run is about

222
00:21:51,320 --> 00:21:59,880
this much. So, this is the time. But when you're in the iPython notebook or the Jupyter notebook,

223
00:21:59,880 --> 00:22:04,600
you can actually use this magic command. This notebook has this magic amount of percent time.

224
00:22:04,600 --> 00:22:11,600
It is not a Python thing. This is a Jupyter notebook thing. And I can do the same thing here.

225
00:22:11,600 --> 00:22:17,640
And I can say A plus B. And then it's using time it. It's actually using this machinery in the

226
00:22:17,640 --> 00:22:21,000
background, but it gives you a much nicer interface. You will see this because you don't have to do a

227
00:22:21,000 --> 00:22:29,160
lot of things yourself. And now it tells me it takes 45 nanoseconds to do this. Yeah. So,

228
00:22:29,160 --> 00:22:33,560
nanoseconds 10 is minus nine. It's about five times minus eight, which is about the same time.

229
00:22:33,560 --> 00:22:39,920
It's the same result. But you see what it did. It came up as a number of repeats itself. And the

230
00:22:39,920 --> 00:22:44,400
number of repeats actually, if you check here, it's about 10 million, if I'm not mistaken here.

231
00:22:44,400 --> 00:22:49,680
Yeah. So, it repeats it 10 million times. And it divides the time by 10 million, obviously. And

232
00:22:49,680 --> 00:22:55,440
then it does some statistics. It repeats the whole process seven times, seven runs, and then gives

233
00:22:55,440 --> 00:23:00,480
you the mean and the standard deviation. So, this is good because if the standard deviation is small

234
00:23:00,480 --> 00:23:07,440
compared to the measurement, then you have, you see, okay, they have seven times pretty much the

235
00:23:07,440 --> 00:23:12,960
same result. And this is useful. If the standard deviation is big, you have a problem with something,

236
00:23:12,960 --> 00:23:19,880
caching or some kind of thing. Yeah. So, this is some indication. Again, there's nothing 100%. When

237
00:23:19,880 --> 00:23:26,280
you measure something, you always make mistakes. Just the question how big they are. Are they 3%

238
00:23:26,280 --> 00:23:32,720
or 300%? That's the thing. So, 3% is to be okay. So, it won't be that big. But 300% is obviously not

239
00:23:32,720 --> 00:23:37,280
okay. Then you have to do something with the measurement. Maybe you cannot do anything because

240
00:23:37,280 --> 00:23:41,720
you have so many moving parts and every time you measure everything is different or so. That can

241
00:23:41,720 --> 00:23:49,880
happen. But this is one way to measure the time and you can do this. So, let's, we can also say

242
00:23:49,880 --> 00:23:59,360
percent time it. One plus two, yeah. So, you can use literals. And you see when I use literals,

243
00:24:00,080 --> 00:24:06,280
instead of A and B as names of my objects. So, typically I don't say variables. I say objects.

244
00:24:06,280 --> 00:24:12,160
And you see now the time goes down to about nine nanoseconds, which is more than four times as fast.

245
00:24:12,160 --> 00:24:20,320
Here I can still calculate. So, but you can actually use a small, actually if you say time

246
00:24:20,320 --> 00:24:29,120
it question mark, then you get the help. And you see this time it takes several arguments. You see

247
00:24:29,120 --> 00:24:35,360
the other time it was 1% and the other time it was 2%. 1% is just valid for one line. The 2% will be

248
00:24:35,360 --> 00:24:41,240
valid for the whole cell. The cell is this gray thing here. Yeah. And you can have several options.

249
00:24:41,240 --> 00:24:46,160
You can determine if you don't like this automatic calculation how many repeats you want. You can say

250
00:24:46,160 --> 00:24:52,760
I want to have 10 repeats, 10 million, whatever many repeats and so on. All the things can be

251
00:24:52,760 --> 00:25:01,160
used here. And one of the interesting one is O. And this dash O here returns a time result instance.

252
00:25:01,160 --> 00:25:05,760
And we want to do this because this time result instance has way more information than just what

253
00:25:05,760 --> 00:25:11,520
is printed out. And this is in as Python objects. You can access them later on. So, if you say this

254
00:25:11,520 --> 00:25:23,120
one is pretty useful. So, I like it. So, I say dash O. Okay. So, A plus B. Now this returns this object.

255
00:25:23,120 --> 00:25:30,480
And I can retrieve this object. I say time this. Okay. Let's call it variables. I use variables here.

256
00:25:30,480 --> 00:25:40,480
This would be this time. And I can do the same thing as a time literals. So, if I type in my literals,

257
00:25:40,480 --> 00:25:53,280
let's time it. Time it. O. O. One plus two. You see. Now, you still get the output. You can suppress the output

258
00:25:53,280 --> 00:25:57,440
if you don't like it. Actually, it has an old switch for this. But now you get the output.

259
00:25:57,440 --> 00:26:05,440
Then this output does have several attributes. You see. Type. You get all these attributes.

260
00:26:05,600 --> 00:26:11,360
The interesting one is average. And average is exactly the same we just saw here. Just not in nanoseconds,

261
00:26:11,360 --> 00:26:17,680
but in seconds. And now I can do an easy calculation. This is kind of okay. But if you have different units,

262
00:26:17,680 --> 00:26:22,880
you always have to calculate in your head the units or do something like this. So, this is typically nicer

263
00:26:22,880 --> 00:26:28,320
to do something here. And you have average. And you see the factor is about five. I said four.

264
00:26:28,320 --> 00:26:32,240
More than four. It's about close to five in this case. So, if you repeat the whole thing,

265
00:26:32,240 --> 00:26:47,440
you will get slightly different. Yeah. Yeah. So, are you sure you have the same version?

266
00:26:48,160 --> 00:26:54,400
So, if you say import IPython and then check the IPython version. So, that might be something because

267
00:26:54,400 --> 00:26:57,120
the older version, do you have seven repeats or three repeats?

268
00:27:02,160 --> 00:27:06,080
Yeah. Best of that, then you have an older version. So, best. There used to be a best of three.

269
00:27:06,080 --> 00:27:10,320
And a few versions back, they changed it to seven repeats. And then they always have the standard

270
00:27:10,320 --> 00:27:15,840
deviation. So, if you're typically the version, as you know in Python, typically, ah, it's not there.

271
00:27:15,840 --> 00:27:24,800
So, there's a version. So, you can just go and check up here, help about

272
00:27:26,320 --> 00:27:30,960
JupyterLab. And then you see the version. And this is a version 0.35.

273
00:27:38,000 --> 00:27:41,440
Maybe the IPython version. You maybe figure out the versions. And I'm not really sure where the

274
00:27:41,440 --> 00:27:46,320
versions are right now. But if it says only three repeats, then you have an older version. You have

275
00:27:46,320 --> 00:27:50,480
like three or four versions back or something like this. This is the IPython feature because

276
00:27:50,480 --> 00:27:54,640
JupyterLab has several parts. But I'm surprised if you install the newest version of JupyterLab,

277
00:27:54,640 --> 00:27:58,400
it should actually get the newest version of the IPython also because of the dependency.

278
00:27:58,960 --> 00:28:02,000
Maybe for some reason it doesn't work. Maybe you have some configuration options or whether

279
00:28:02,000 --> 00:28:05,840
they set it back or so. There's a lot of configuration things you can do with here.

280
00:28:06,320 --> 00:28:12,560
But if you make a new install and try it again, everything clean sheet and try from beginning

281
00:28:13,680 --> 00:28:18,240
to see if it works. So, I'm not sure where the version is here. But it just looks like an older

282
00:28:18,240 --> 00:28:27,600
version to me. Okay. The two percent sign, as I said, you can use this one. Now I can say A

283
00:28:27,600 --> 00:28:34,080
equals one and B equals two. If you stay with our simple example, say A plus B. And now it's

284
00:28:34,080 --> 00:28:38,960
measuring the whole cell. So, it's measuring the assignment as well as the addition.

285
00:28:41,040 --> 00:28:46,160
If you don't like this, if you don't want to measure the assignment, you can actually move

286
00:28:46,160 --> 00:28:51,680
this assignment in the first line and make it a precondition which is not measured. Here we have

287
00:28:51,680 --> 00:28:56,560
to use the semicolon. Actually, yes, because we want to have two lines there. So, now if you do

288
00:28:56,560 --> 00:29:00,560
this now, it does measure the assignment. It should be hopefully a bit faster. Yeah, it is faster.

289
00:29:00,720 --> 00:29:04,160
Yeah. So, assignment is not expensive compared to this

290
00:29:04,160 --> 00:29:10,000
resolving with the names. But it gives you some clue how things are sometimes interesting to get

291
00:29:10,000 --> 00:29:13,920
a feeling. So, if you have a different machine, a different operating system, you might get

292
00:29:13,920 --> 00:29:21,120
different readings a little bit. Yeah. So, good. This is the first thing. Timing can be interesting

293
00:29:21,120 --> 00:29:26,800
and using this notebook is very nice because the overhead doing it, the effort is pretty low.

294
00:29:26,800 --> 00:29:31,200
You don't have to do much and quickly just check is that difference if you do it this way or this

295
00:29:31,200 --> 00:29:36,000
way and if it's pretty much the same, it doesn't matter too much, at least for my use case. So,

296
00:29:36,640 --> 00:29:41,920
all this timing and profiling can depend on many things. And one big thing is like the size of the

297
00:29:41,920 --> 00:29:46,880
data structure you use. If something works for a small data structure, it might be very different

298
00:29:46,880 --> 00:29:51,600
for a bigger data structure. And what's smaller and biggest depends also on the machine, on the

299
00:29:51,600 --> 00:29:57,920
CPU you have, caches and all kind of stuff. Yeah. So, if you do measure, you always need to measure

300
00:29:57,920 --> 00:30:01,600
for something that's kind of more or less realistic. If you just use a list of three elements also,

301
00:30:02,160 --> 00:30:06,320
obviously you don't see any difference in looking up in a list. If you have three million elements,

302
00:30:06,320 --> 00:30:12,240
might be very different. Or 300 million might be very different. Okay. This is, so actually I can

303
00:30:12,240 --> 00:30:20,560
here develop my notebook. The first one, this is, I can use markdown. You see I changed the cell to

304
00:30:20,560 --> 00:30:26,880
a markdown cell up here and now I can use markdown and then do markdown. So, how did I insert a cell?

305
00:30:26,880 --> 00:30:35,040
Escape A and Escape B. So, if you haven't used the notebook yet, you can open this site here

306
00:30:35,040 --> 00:30:40,640
and then you go to the palette which gives you help and you see a lot of these help things.

307
00:30:40,640 --> 00:30:46,240
You can even search them and some of them have keyboard shortcuts. And if you do things often,

308
00:30:46,240 --> 00:30:52,000
then you should, keyboard, this is a control B to turning off this left pane, one of the left pane.

309
00:30:52,000 --> 00:30:55,280
And these are here, if you press escape on one of them, then you can wrote a cell.

310
00:30:55,840 --> 00:31:02,960
And so, if you say escape one, I make a cell and markdown cell is header one. If you say escape six,

311
00:31:02,960 --> 00:31:08,720
it puts six of these hashtags in there. It makes it, this makes it easier. Yeah. And also, here's my

312
00:31:08,720 --> 00:31:15,280
insert. We can also delete a cell. Yeah. Since the deletions, you destruct the cell that have

313
00:31:15,280 --> 00:31:24,000
repeated DD. So, for the user here. And then there's a escape A somewhere. Must be escape A here,

314
00:31:24,000 --> 00:31:30,880
insert cell above and B insert cell below. These are pretty common. Good. That's what I did here.

315
00:31:30,880 --> 00:31:36,240
And if I turn this off, then you get more screen real estate and see more. So, the next thing would

316
00:31:36,240 --> 00:31:41,360
be actually profiling. So far, we just time something and timing, you can only time a whole thing

317
00:31:41,360 --> 00:31:48,160
and that's it. That's it pretty much. And here, I can say profiling. And profiling means

318
00:31:48,160 --> 00:31:53,440
looking deeper inside. So, profiling is if you have a program that's a bit bigger and you want

319
00:31:53,440 --> 00:32:00,640
to find out which part is actually consumes how much time. So, this is now CPU profiling. Later on,

320
00:32:00,640 --> 00:32:06,000
we'll do memory profiling, which is we can be even more complicated. Memory is not that easy

321
00:32:06,000 --> 00:32:10,880
typically. And there are no built-in tools here. In profiling, you can use some Python standard

322
00:32:10,880 --> 00:32:16,960
library tools. We'll see there are some other external libraries on top of it that use information

323
00:32:16,960 --> 00:32:21,760
the profiler gives you to give you a nice graphics and something, which is typically helpful.

324
00:32:23,760 --> 00:32:27,520
You can also find some other tools with your other machines, but the principle should be

325
00:32:27,520 --> 00:32:32,400
saying you need to measure something. And also, once you do profiling, you might want to automate

326
00:32:32,400 --> 00:32:39,360
this profiling in the way that fits your project. So, that's typically useful to automate

327
00:32:40,160 --> 00:32:48,320
things here. Okay. So, if I say actually percent, that's nice what to do. I have this

328
00:32:49,360 --> 00:32:54,080
sub-directories from the download. And if you go to measuring, then you will find

329
00:32:56,320 --> 00:33:01,840
as it is from the download zip file. Everybody download zip file. Yeah, good. So, there's a few

330
00:33:01,840 --> 00:33:07,040
things in here. A typical is very small programs. You could type them in, but it takes too much time.

331
00:33:07,440 --> 00:33:12,560
And they are all toy example programs. But I tried to make them as simple as possible,

332
00:33:12,560 --> 00:33:16,720
but still to make a point how to do it. Of course, in reality, this would be way more complicated.

333
00:33:16,720 --> 00:33:22,880
But then it would be kind of a disturbing what you're doing. So, I can load this here. So,

334
00:33:22,880 --> 00:33:29,520
you can open an editor if you like, but you can also open it here. Profile me. You see,

335
00:33:29,520 --> 00:33:38,160
when I start typing, it gives me call tips. It loads a file. And this is a very simple file.

336
00:33:38,720 --> 00:33:44,320
So, I see I still have some pure man's Python 2s, Python 3 compatibility in here. So,

337
00:33:45,040 --> 00:33:49,760
Python, of course, it's important to use the Python 3 type of range. In Python 2,

338
00:33:49,760 --> 00:33:54,880
you have X range. It's not exactly the same, but for our purposes, okay. So, Python 3 range

339
00:33:55,520 --> 00:34:01,760
can do things like you can use a long in range. X range is limited to 64 bit integers or something

340
00:34:01,760 --> 00:34:06,080
like this. There are some small differences, but for our purposes, they don't matter.

341
00:34:06,080 --> 00:34:10,160
When I have two very simple functions, I use the built-in function time,

342
00:34:10,160 --> 00:34:15,840
I built a module time, sorry, and use sleep. So, this sets your processor to sleep for that

343
00:34:15,840 --> 00:34:21,120
many seconds. The typically tells operating system, please wake me up after this time.

344
00:34:21,120 --> 00:34:25,680
Okay. You have to be careful with sleep. Sleep is not very accurate,

345
00:34:25,680 --> 00:34:30,160
especially in Windows. It's very inaccurate. So, if you sleep a million times, a millionth of a

346
00:34:30,160 --> 00:34:35,200
second, you end up not with one second, but 10 seconds or something. It's totally off. Yeah.

347
00:34:35,200 --> 00:34:38,160
Sorry, I think I missed the command to do this.

348
00:34:38,160 --> 00:34:44,720
Yeah. So, I go up again. So, always raise your hand if I'm too fast. So, I unzip the file,

349
00:34:44,720 --> 00:34:51,920
and in the directory measuring, there's this, LS gives you all the files, and then I use

350
00:34:51,920 --> 00:34:57,120
percent load, which is gone. So, actually I type percent load and then the file name,

351
00:34:58,480 --> 00:35:05,680
yeah, profoundly, and then I execute it. It will turn my command into a comment. Yeah.

352
00:35:08,960 --> 00:35:14,240
So, if you go to the schedule and to the nodes, and if you are logged in, you will see the link

353
00:35:14,240 --> 00:35:21,280
there. I sent a message last night, and there should be the zip file. Yeah. So, then the zip

354
00:35:21,280 --> 00:35:25,200
file can download from there. But you have to be logged in, otherwise you won't see it, because

355
00:35:25,200 --> 00:35:30,000
you have to be. But since you're registered, you should be there, otherwise you wouldn't get

356
00:35:30,720 --> 00:35:36,240
registered in the first place. Good. So, this is a file, and there are some very simple functions.

357
00:35:36,240 --> 00:35:40,480
So, this is actually Python 2, Python 3, comparatively, if you're in Python, if you're

358
00:35:40,480 --> 00:35:47,760
in Python 3 or Python 4, so not there yet, it wouldn't have any effect. Then there's two functions.

359
00:35:47,760 --> 00:35:55,440
This waits at a thousandth of a second, and this waits at tens of a second. Yeah. So, there's two

360
00:35:55,440 --> 00:36:00,400
small functions, and then there's two more functions that use this function loop. So, I repeat something

361
00:36:00,400 --> 00:36:04,720
100 times, and since I don't use a loop variable here, you could use X or something, use underscore,

362
00:36:04,720 --> 00:36:10,160
which is typically a pattern of Python 2, if you want to have an anonymous name, so to speak,

363
00:36:10,160 --> 00:36:15,360
which is kind of strange, oxymoron, then use underscore typically. And I just repeat it 100

364
00:36:15,360 --> 00:36:20,080
times and see what happens. So, this is just a very simple example. It doesn't do anything useful,

365
00:36:20,080 --> 00:36:25,200
it just waits so many seconds. So, if I actually execute it, it takes a while, because now, if I

366
00:36:25,200 --> 00:36:32,000
wait 100 times, tens of a second, it takes about 10 seconds. So, it should take about 10 seconds.

367
00:36:32,000 --> 00:36:39,040
After 10 seconds, you should see that it returns. So, as soon as the number is here, then it should

368
00:36:39,040 --> 00:36:44,560
have returned. Good. And now, I can profile things. First, I'll show you the slow way to do this in Python

369
00:36:45,760 --> 00:36:54,640
standard library modules. So, I say import zprofile. So, this module has a name, which

370
00:36:54,640 --> 00:37:00,800
it's not supposed to have. So, according to PEP 8 naming guidelines, it should be all lowercase, but

371
00:37:00,800 --> 00:37:06,320
the capital A P made it from Python 2 to Python 3 for some reason. I don't know why. But in there,

372
00:37:06,320 --> 00:37:10,000
so it's supposed to be lowercase, but you have to type it even on Windows.

373
00:37:11,440 --> 00:37:15,360
Windows is not case sensitive, but case preserving. Even Windows, you have to type the right case,

374
00:37:15,360 --> 00:37:20,880
otherwise you're going to find the module. It's kind of strange. Good. And so, I make a profiler.

375
00:37:20,880 --> 00:37:25,680
So, I make an instance of the class. So, it's the long, winding way of doing this. So, I say

376
00:37:25,680 --> 00:37:34,240
module zprofile.class profile, and I make an instance of this class. And then, this instance

377
00:37:34,240 --> 00:37:43,120
provides a few methods, and I say I use one of them. It's called run call, and then I feed my

378
00:37:43,120 --> 00:37:47,520
function, and I can give it the arguments. Since it doesn't take any arguments,

379
00:37:50,800 --> 00:37:55,600
I just give it a function without anything. So, I don't call the function. It's called like I give

380
00:37:55,600 --> 00:38:01,120
this thing my function. It's calling the function on my behalf. And this is very fast. And then,

381
00:38:01,120 --> 00:38:11,040
I say profiler.print stats, and then it prints the statistics. It looks like something like this.

382
00:38:11,040 --> 00:38:16,480
I have to make it a bit shorter so it don't get line breaks. I hope it's readable. So, this is a

383
00:38:16,480 --> 00:38:20,880
very simple statistic. This is very simple. You see, it's just a full function calls. In reality,

384
00:38:20,880 --> 00:38:26,160
there can be hundreds and thousands of calls in your program if you run a function under this

385
00:38:26,400 --> 00:38:36,400
profiler. And you get an output. And you see, this is, there are 202 function calls in 0.12

386
00:38:36,400 --> 00:38:45,200
seconds. And this here is a number of calls. The total time that is spent here, the time per call,

387
00:38:45,200 --> 00:38:50,320
which is, since it's very fast, is zero here, you don't see much. And then, the cumulative time

388
00:38:50,320 --> 00:38:57,440
here at this one. And then, actually, the time per call. So, this is the cumulative time of the

389
00:38:57,440 --> 00:39:02,720
outermost function is the total time. This is this time up here, obviously. And then, the other ones,

390
00:39:02,720 --> 00:39:07,920
the time accumulated. And you see, this is here, a function that lives in the notebook has a strange

391
00:39:07,920 --> 00:39:13,440
kind of name here. This is a file name. And I use fast first from outside. It's called once,

392
00:39:13,440 --> 00:39:19,680
which calls fast 100 times. That you see the 100 here. And fast actually calls the time sleep

393
00:39:19,680 --> 00:39:26,720
method in turn. And of course, the profiler measures itself. Yeah. So, this is all. So,

394
00:39:26,720 --> 00:39:34,240
when you measure something, the tool measures itself. Like, if you're in a room and count the

395
00:39:34,240 --> 00:39:38,720
people, you count yourself or something like this, some kind of strange thing. But this can happen

396
00:39:38,720 --> 00:39:46,800
that the measuring has an overhead and somehow impacts the measurement. It's kind of unavoidable.

397
00:39:47,520 --> 00:39:54,080
But if the impact is small, it's okay. If the impact is a main thing compared to a measurement,

398
00:39:54,080 --> 00:39:58,640
then it might be a problem. So, typically, measuring something very fast is much more

399
00:39:58,640 --> 00:40:01,680
difficult than measuring something long. If something takes 10 seconds, it doesn't matter

400
00:40:01,680 --> 00:40:08,320
what my overhead. 10 seconds. If something takes one nanosecond, then my measurement consumes 10 or

401
00:40:08,320 --> 00:40:12,800
20 nanoseconds. And that can be a big problem because I might measure something that's not there

402
00:40:12,800 --> 00:40:16,960
and measure some kind of a ghost effect. And then if you try to make a ghost effect going

403
00:40:16,960 --> 00:40:21,680
fast, you won't be very successful. Those things can happen. So, now you can do a lot of things

404
00:40:21,680 --> 00:40:29,040
with this profiler and can get... So, actually, I can use the same... I can make a new instance

405
00:40:29,040 --> 00:40:34,640
or can use the same instance. So, I can use the same instance or make a new... Yeah, I can make

406
00:40:34,640 --> 00:40:44,320
a new instance. Profiler two here and do the same thing, make a new instance. See,

407
00:40:44,320 --> 00:40:52,160
profile, capitalized profile. And now I can just do the same game again with my profile

408
00:40:52,640 --> 00:40:58,640
profiler two, run call. And, of course, now I use my run slow. And then you will see...

409
00:41:02,720 --> 00:41:12,800
No, no, no. Use, use, slow. And then run call. So, run takes a string. Run call takes a function.

410
00:41:12,800 --> 00:41:16,800
So, that different ways of doing this. And, of course, it takes longer now. It takes my 10 seconds.

411
00:41:16,800 --> 00:41:22,000
So, I have to wait 10 seconds to see your result. And then we need to do the same thing as here.

412
00:41:22,000 --> 00:41:29,360
Instead of profile log, we say profiler two. And then we see the output of this call. And you see...

413
00:41:34,560 --> 00:41:40,320
I called run. That's why there's one more call there, I guess. And then you see the time

414
00:41:41,120 --> 00:41:47,600
it's spent in sleep. And the sleep time is now 10 seconds versus this 0.1 second. Yeah.

415
00:41:52,000 --> 00:41:56,320
Yeah, yeah. You have to load this file and then go in there, press shift enter. Otherwise,

416
00:41:56,320 --> 00:42:00,000
it's not executed. So, if you load it, it doesn't execute for security reason. You have to look at

417
00:42:00,000 --> 00:42:04,640
the file, just code first, and then go in there, shift enter. Otherwise, it's not defined. You can

418
00:42:04,640 --> 00:42:08,800
also import it. It's the same directory. You can import it and use the import, normal Python import.

419
00:42:08,800 --> 00:42:15,920
That's also fine. Good. So, now you see the difference. And here's very obvious. Sleep takes

420
00:42:15,920 --> 00:42:20,400
all the time. And we have to do something about the sleep if you want to make it faster. Yeah.

421
00:42:20,560 --> 00:42:26,320
Here, threads would help. Of course, sleep is input output. And you can use threads and it would

422
00:42:26,320 --> 00:42:31,360
go away, so to speak, if you wanted to. Yeah. So, when you have input output and you have a

423
00:42:31,360 --> 00:42:37,040
clear case, threads are not too bad, actually. If you don't use any shared objects and any locking

424
00:42:37,040 --> 00:42:42,400
and so on, threads are fine, I would say. If you have shared objects, threads are typically not

425
00:42:42,400 --> 00:42:47,520
recommended. You might find a better way. So, this is input output bound here. And the sleep

426
00:42:47,520 --> 00:42:51,360
takes the time. And if you know a little bit about sleep, then you will solve the problem. Yes.

427
00:42:51,360 --> 00:42:56,240
What is the built-in snake? I don't have that in my house. Maybe I have a different version,

428
00:42:56,240 --> 00:42:59,760
but what is the built-in snake? Like, the method? There's one called that.

429
00:42:59,760 --> 00:43:02,880
Which method? Yeah. The third one.

430
00:43:04,560 --> 00:43:07,440
Yeah. This one? Yeah. This is a measurement itself.

431
00:43:07,440 --> 00:43:14,160
The third one. The one in the middle. The built-in snake thing.

432
00:43:14,160 --> 00:43:21,680
Yeah. Yeah. Because I used run up here. First, before I used run call, and run uses a string,

433
00:43:21,680 --> 00:43:29,760
and it calls the exec. That's why also I don't have two runs, so I have 204 calls. Yeah. So,

434
00:43:29,760 --> 00:43:34,320
actually, if I want to do this, this would be a trick, because now I have some artifacts there.

435
00:43:34,320 --> 00:43:39,360
There's still a memory, but don't show up in the notebook. I deleted the run to call, but the effect

436
00:43:39,360 --> 00:43:46,640
is still there. So, trick. It takes a while, but I can say kernel, restart, run all cells,

437
00:43:46,640 --> 00:43:51,600
which now would restart my kernel, and does all these things from the beginning again,

438
00:43:52,800 --> 00:44:02,240
and reruns all my cells. Does it do it? Did I say yes? So, you say kernel, restart, run all cells,

439
00:44:03,520 --> 00:44:08,880
restart. And it doesn't do it? I know it doesn't. Okay. I did it. Now you see,

440
00:44:08,880 --> 00:44:13,600
now I have to wait here, because now it takes so many seconds. I have to go to the whole game

441
00:44:13,600 --> 00:44:17,920
again. We have to wait a minute or so. But then this would be a thing now, you would delete

442
00:44:17,920 --> 00:44:22,320
everything in memory that's there you don't see anymore. You can still access it, but this would be

443
00:44:23,680 --> 00:44:28,960
wait this while, let everything restart, and do all these things. But I have all this timing in here.

444
00:44:28,960 --> 00:44:33,120
So, it's now doing all this timing. We have to wait seven seconds, seven seconds, seven seconds,

445
00:44:33,120 --> 00:44:40,480
and it's recalculating. So, the star means it's busy doing something. And now it's doing this one

446
00:44:41,360 --> 00:44:50,960
here. So, it's still busy. And then once everything is through here, we have 202 here.

447
00:44:50,960 --> 00:44:55,200
I should see 202. Yeah. Actually, it's 202 now. So,

448
00:44:55,200 --> 00:45:03,200
this is a fast one. And this is now it's 202. Now it's done. Yeah. You see, instead of 204,

449
00:45:03,200 --> 00:45:08,720
now the exit is gone, because the run call is not there anymore. This can happen if you work

450
00:45:08,720 --> 00:45:12,560
interactively. You do something, you delete the cell, you don't see it, you forgot that you did it,

451
00:45:12,560 --> 00:45:17,600
but the effect is still there, and you measure the effect in one way or the other. So, always

452
00:45:17,600 --> 00:45:22,560
make small notebooks. If something is strange, restart the whole thing, do it new. So, otherwise,

453
00:45:22,560 --> 00:45:28,880
figuring out what happened, it's not worth it. Just redo it. Yeah. Very often. Yeah. You remember

454
00:45:28,880 --> 00:45:32,800
this? It doesn't have effect. You change the file, you change the file, just to remember there's two

455
00:45:32,800 --> 00:45:36,960
files with the same name, with different directories. Those kind of things happen, and then you have to

456
00:45:38,480 --> 00:45:42,560
make a step back, go drink your coffee, and come back on any solution. That you do something

457
00:45:42,560 --> 00:45:48,880
strange here. Good. Now, we have this statistics, and then you can do a lot of statistics and work

458
00:45:48,880 --> 00:45:54,240
with it, so you can sort it, you can limit the printing, and so on. There's a lot of these output

459
00:45:56,160 --> 00:46:06,800
things. You can also actually do the following. You can say, say, cprofile.run. Yeah. And now,

460
00:46:06,800 --> 00:46:11,360
run will take a string, and the string uses exec. So, you type in the Python source code that actually

461
00:46:11,360 --> 00:46:18,400
is supposed to run. So, I can say, use fast, and actually call use fast here. So, I type the code

462
00:46:18,400 --> 00:46:26,400
in literally, and then I can also say that I would like to store this. So, I say fast.stats,

463
00:46:26,400 --> 00:46:33,840
and this stores the result. And I did something wrong. Yeah. This is a file name.

464
00:46:36,080 --> 00:46:45,600
Yeah. So, now it runs it through, and then you have this file in your file system.

465
00:46:45,680 --> 00:46:50,640
This is a binary file. I think it's Marshall or some kind of persistent thing, but it's

466
00:46:50,640 --> 00:46:54,880
standardized, and a lot of tools will be able to read this. So, you can do this profiling your

467
00:46:54,880 --> 00:46:59,680
code somewhere, and then post-mortem can go through the results. And it's a kind of simplified format,

468
00:46:59,680 --> 00:47:02,400
and there are quite a few tools that are able to read it and do something with it.

469
00:47:03,360 --> 00:47:07,600
Yeah. So, you can write your own tools if you want to. So, you can put some decorators in

470
00:47:07,600 --> 00:47:10,800
somewhere that actually save these files for different versions, and so on. Yeah.

471
00:47:16,320 --> 00:47:24,000
Yeah. So, the notebook saves everything in the directory I started from. I can also change the

472
00:47:24,000 --> 00:47:28,080
directory, but it saves the notebook, saves everything in my current working directory.

473
00:47:37,920 --> 00:47:44,000
This is exactly what... These numbers actually are stored there. These numbers are a bit more.

474
00:47:44,000 --> 00:47:48,640
This information about CPU profiling. Yeah. So, if you do memory profiling later,

475
00:47:48,640 --> 00:47:52,960
that there are no built-in module in the library that does memory profiling to my knowledge. I

476
00:47:52,960 --> 00:47:58,480
couldn't find any. So, we have to use third-party libraries to do memory profiling. So, you can

477
00:47:58,480 --> 00:48:03,520
measure the memory of one object. This is GetSizeSurf, but that's pretty much it. Yeah.

478
00:48:04,240 --> 00:48:09,120
Can C profile take the average of multiple runs like timing?

479
00:48:10,960 --> 00:48:15,520
As far as I know, you have to do it yourself, I think. So, you have to run it yourself, and then

480
00:48:15,520 --> 00:48:22,160
you can write some tooling around it. You will see we use prun. The next one is one of the notebook

481
00:48:22,160 --> 00:48:28,000
tools that gives you much more higher level and much less effort approach to do these things.

482
00:48:28,000 --> 00:48:33,440
Okay. Now, you can do some of things. You can sort it. So, you can say...

483
00:48:36,480 --> 00:48:43,520
So, my statistics. Import a tool that's also part of the standard library.

484
00:48:46,720 --> 00:48:51,920
Pstats. Sorry. I forgot. Import Pstats. So, if you have Pstats. So, Pstats is,

485
00:48:52,080 --> 00:48:58,560
as you can see here, this is part of the standard library. I'm using miniconda here, and this is

486
00:48:58,560 --> 00:49:04,640
just in the lib. Python 3.7 directory. So, it's part of Python. There's always a way to find out

487
00:49:04,640 --> 00:49:10,560
what module it is. It's something that's part of Python. Now, you can do quite a few

488
00:49:11,520 --> 00:49:19,200
investigation steps on it. Just a few examples. So, I can say stats, and I can read my statistics.

489
00:49:19,200 --> 00:49:32,320
Okay. That's equals. And I can say Pstats. Make an instance of the class stats. And feed this file

490
00:49:33,040 --> 00:49:38,800
fast to file which I saved, and then it reads your file. So, you can do your profiling somewhere,

491
00:49:38,800 --> 00:49:43,040
and then the next day you can do the analysis, which can be helpful. So, you can also save

492
00:49:43,040 --> 00:49:48,800
multiple files for different things somewhere, and then do the analysis later on. Because when

493
00:49:48,800 --> 00:49:53,040
you do profiling, you might slow down your program quite a bit. So, it might take a while. So, if

494
00:49:53,040 --> 00:49:57,200
something takes a few minutes already, that might take a few hours or something. And then you don't

495
00:49:57,200 --> 00:50:00,960
want to wait all the time. You can do this and then later on analysis. Let it run overnight or

496
00:50:00,960 --> 00:50:05,760
something like this. And now stats offers again a lot of things. I just show you a few. You don't

497
00:50:05,760 --> 00:50:10,320
need to know all of them, but you can print a lot. A lot of different types of things. And print

498
00:50:12,960 --> 00:50:18,640
statistics will do exactly the same we just seen. Yeah. So, we just seen this one. We can do

499
00:50:18,640 --> 00:50:24,720
this. Of course, now you can sort this. You can select something. So, if you want to sort it by,

500
00:50:25,600 --> 00:50:31,040
this is sorted by time, by default. And you can also say I would like to sort it by calls.

501
00:50:31,040 --> 00:50:36,080
Then you can feed in calls and then it sorts it by calls. And now you get this and then you have to

502
00:50:36,080 --> 00:50:45,120
say print stats on it. Print stats. And you can also limit the number of lines you want to print.

503
00:50:45,920 --> 00:50:50,960
The print is only the first three lines. Yeah. So, you can limit the number. This is a short

504
00:50:50,960 --> 00:50:53,840
example. If you have a big assembler, it might be hundreds and thousands of lines. You don't

505
00:50:53,840 --> 00:50:59,920
want to see all of them. And you just see which one is interesting. Yeah. So, you can also go

506
00:50:59,920 --> 00:51:06,640
through materials. So, if you cannot follow, you should be able to catch up, go into the PDF. So,

507
00:51:06,640 --> 00:51:10,880
print stats prints just the way we had. And now there are multiple options to sort this and do

508
00:51:10,880 --> 00:51:18,960
some kind of investigations on this one. You can also find out who's calling whom. So,

509
00:51:18,960 --> 00:51:26,480
there are some things in there you have to say can stats. Print callers. There's callers and

510
00:51:26,480 --> 00:51:36,160
callees. So, callers in one way. And so, who calls fast? And you see, okay, that you have this

511
00:51:36,400 --> 00:51:42,880
connection here that use fast actually calls fast here in this direction. And the other way around,

512
00:51:42,880 --> 00:51:52,000
you can say print callees. And then you get the other. Use fast. Yeah. So, just ask the question

513
00:51:52,000 --> 00:51:59,200
a different way. And say use fast. And you get this information out of it. Yeah. Those kind of

514
00:51:59,200 --> 00:52:09,760
things you can find out. Okay. This would be doing things with the Python C profiler. Now,

515
00:52:09,760 --> 00:52:19,280
we're doing it with Jupyter. So, Jupyter uses this library in the background but gives you again

516
00:52:19,280 --> 00:52:24,640
very similar to the percent time it denies the interface. There's no new functionality per se,

517
00:52:24,640 --> 00:52:28,960
but everything is much easier to use. And typically, if things are easier to use,

518
00:52:28,960 --> 00:52:36,480
you might get people to use it more easily. So, use fast.

519
00:52:41,920 --> 00:52:44,320
Why doesn't it come? Is it use fast?

520
00:52:44,320 --> 00:53:01,200
Okay. It's just the call tip didn't come. So, you see now, it's doing the thing. So,

521
00:53:01,200 --> 00:53:05,760
instead you don't have to make instance of something you call the method. You just say

522
00:53:05,760 --> 00:53:10,960
p run use fast and it's doing the stuff in the background. And this is the same output here

523
00:53:10,960 --> 00:53:17,440
sorted by calls. And you can also give it a lot of options. So, if you say p runs, if you don't

524
00:53:17,440 --> 00:53:22,160
know what to do, put a question mark and then you get the very long help. Run a statement through

525
00:53:22,160 --> 00:53:27,040
Python code profiler. So, it's using exactly the same thing we just did but gives you a nice

526
00:53:27,040 --> 00:53:32,720
interface. And again, you have a 1% version for one line and a 2% version for a whole cell.

527
00:53:34,160 --> 00:53:38,720
And then there's explanation. And then you have a lot of options what you can do. So, if you don't

528
00:53:38,720 --> 00:53:42,480
want to have many lines, you can limit how many lines you want to actually display.

529
00:53:44,560 --> 00:53:50,000
It also can return this instance of the stats object we just seen. If you have something ready,

530
00:53:50,000 --> 00:53:55,760
you can use it. You can also sort it by all kinds of things. You can say sorted by this key and then

531
00:53:55,760 --> 00:54:01,360
you can provide a key and it gives you a list of keys you can sort by call and so on. So, you can

532
00:54:01,360 --> 00:54:10,160
sort by all kinds of criteria here. You can also save it. Save whatever is printed. It will be

533
00:54:10,160 --> 00:54:20,160
saved in the file. Or you can save it with D which saved this in a different binary file version and

534
00:54:20,160 --> 00:54:26,160
you can read it with some tools later on. Yeah? If it's to talkative, you can suppress screen output

535
00:54:26,160 --> 00:54:31,520
and so on. There's a lot of things you can do here and it makes it really, really useful.

536
00:54:32,800 --> 00:54:37,680
And you cannot remember all of these but it's in the help and a few important ones.

537
00:54:39,040 --> 00:54:42,320
So, I can use my p run and I can use one of these.

538
00:54:42,320 --> 00:54:53,920
So, yeah, p run. I don't know what that's to. p run. And I say here my stats again

539
00:54:55,120 --> 00:55:00,800
and I can now use the option return. Returns this object and I can say use

540
00:55:01,280 --> 00:55:14,000
slow. And I have to call it actually. Now this will take 10 seconds again because we have to

541
00:55:14,000 --> 00:55:19,200
wait so long. I don't think there's a way to speed this up. And then once we have done this,

542
00:55:20,720 --> 00:55:25,440
we can look at this object. Since I didn't suppress the output, you still see the output.

543
00:55:25,440 --> 00:55:33,920
But now we have the stats slow object which if I use it and say print stats as we did before,

544
00:55:33,920 --> 00:55:39,760
then you see this output. Yeah. So, you can combine it now with existing tools. If you have

545
00:55:39,760 --> 00:55:47,600
something there, then you can put it in but it makes it easier to work with it. So, again,

546
00:55:47,600 --> 00:55:54,960
you can use some of the other options. So, p run. P run. Capital T option gives you writes

547
00:55:54,960 --> 00:56:06,320
everything in a file. And I can say stats slow.txt. And I say use slow. So, if I say use slow and have

548
00:56:06,320 --> 00:56:14,160
to wait again. Now it writes it instead of an addition, I think. In addition to write it to

549
00:56:14,240 --> 00:56:18,400
my notebook, it writes it into a file. So, you know, if you copy and paste it in a file,

550
00:56:18,400 --> 00:56:27,360
it will be in a file. So, if I now say ls, you can use the ls without percent but it's nicer to do it

551
00:56:27,360 --> 00:56:38,880
with. Ls stats slow and you see it's there. And you can look at it with less. Yeah. And you see

552
00:56:38,880 --> 00:56:44,880
that exactly the output we have. This would be one option. The other would be

553
00:56:47,920 --> 00:56:57,280
doing it instead of the t with a d option. So, instead of the t, we use a d option. And now we

554
00:56:57,280 --> 00:57:03,120
use our extension stats. So, you can make up any extensions. But this would be another binary

555
00:57:03,120 --> 00:57:07,840
version and then you can load it again as we did before. But this is something that can be

556
00:57:07,840 --> 00:57:13,680
interesting. It can be useful and gives you a lot of information and doing things. Good.

557
00:57:15,120 --> 00:57:21,120
This would be basic profiling with a profiler here. Now the problem is when you measure something,

558
00:57:21,120 --> 00:57:26,560
you might not measure the right thing. And we have to distinguish two types of

559
00:57:26,560 --> 00:57:40,240
times. We have war clock versus CPU time. So, war clock time and CPU time. The war clock is

560
00:57:40,240 --> 00:57:45,120
the time that actually the time that expires which is not necessarily the CPU time. So,

561
00:57:45,120 --> 00:57:49,760
typically the war clock time is longer than the CPU time. Unless you have a multi-core machine

562
00:57:49,760 --> 00:57:56,160
and use multi-cores, then that might be more CPU time because CPU time is more CPU core typically.

563
00:57:57,120 --> 00:58:00,880
That's something interesting. But what do we measure? And unfortunately, that can be a bit

564
00:58:00,880 --> 00:58:10,080
different depending on your operating system. And we load this file. Load. Load clock check.

565
00:58:10,960 --> 00:58:16,560
So, this is this file here I wrote that does some interesting testing. So, we import a bunch of

566
00:58:16,560 --> 00:58:21,840
things from the standard library here. This is again making Python 2 compatible with Python 3.

567
00:58:21,840 --> 00:58:26,560
And this also. And now I have three different ways of measuring it. It's not very accurate,

568
00:58:26,560 --> 00:58:35,520
but see what I'm doing inside here. I have two. I get three start time stamps. I use

569
00:58:35,520 --> 00:58:42,320
OS times. This gives you a tuple. And the first entry is a timestamp. Then I use time clock.

570
00:58:42,320 --> 00:58:48,800
And I use time at default timer. This works in Python 2. Python 3, there are some changes.

571
00:58:48,800 --> 00:58:55,200
Python 3 has time. The time module.prov counter. It's a bit different. But if you use the time

572
00:58:55,200 --> 00:58:59,840
it, then you don't see a difference between 2 and 3. So, I do something. I do a million times 1 plus

573
00:58:59,840 --> 00:59:07,280
1. And I say sleep for the duration which defaults to 1. So, this one uses CPU. This one doesn't use

574
00:59:07,280 --> 00:59:11,520
CPU because it tells the operating system to wake me up after one second. And then I do the same

575
00:59:11,520 --> 00:59:15,440
thing. And so, that's not totally accurate because I measured this also here. But compared to this

576
00:59:15,440 --> 00:59:20,560
one, it doesn't matter too much. And I measure the second. I do the same procedure here. And I just

577
00:59:20,560 --> 00:59:25,600
get the second timestamp and measure the difference. So, I measure three differences between timestamps.

578
00:59:25,600 --> 00:59:33,440
And then I print them out. And if I do this, I get a warning which I haven't seen before.

579
00:59:34,560 --> 00:59:38,720
So, that's something that will be removed in Python 3. Yeah. So, time it.

580
00:59:38,720 --> 00:59:45,680
Time clock. Yeah. So, time clock. And now we get a warning. I didn't have this warning before.

581
00:59:46,560 --> 00:59:52,160
Must be the newer Python 3.7 version. I get this warning. So, that time clock will be removed

582
00:59:52,160 --> 00:59:56,560
which is a good thing because it can be confusing. That's my point actually. And you see, now you get

583
00:59:56,560 --> 01:00:03,440
here I'm on my Mac. I get OS timer and time clock being essentially the same. This is pretty coarse.

584
01:00:03,440 --> 01:00:07,840
Pretty obvious. It should be pretty much the same. But they're essentially the same. And here, when

585
01:00:07,840 --> 01:00:13,760
I use default timer, I measure my second of waiting. So, this is the CPU time. So, the CPU

586
01:00:13,760 --> 01:00:22,640
time is approximately 0.03 seconds. Where the wall clock time is one second plus the CPU time, more or less.

587
01:00:24,400 --> 01:00:30,480
Yeah. Anybody is on Windows? So, if you're Windows, you should see something different. Yeah. You see

588
01:00:30,480 --> 01:00:38,480
the difference. Then time clock, it's a different thing. Yeah. Because time clock here gives me

589
01:00:40,160 --> 01:00:44,640
the CPU time. When Windows, it gives you timestamps since the start of the process.

590
01:00:45,520 --> 01:00:48,960
So, if you don't look at the timestamp, the absolute value of the timestamp,

591
01:00:48,960 --> 01:00:51,760
you need a difference, then you don't see this. So, in Windows, you have something different.

592
01:00:51,760 --> 01:00:55,280
And that can be tricky. So, if you have a nice script that works and you give it to a single colleague

593
01:00:55,280 --> 01:00:58,640
and has a different operating system, all of a sudden the readings are very different.

594
01:00:58,640 --> 01:01:02,640
That's why the recommendations use time into default timer, which abstracts us away. Yeah.

595
01:01:02,640 --> 01:01:08,640
So, what's again the difference between the OS time and the time clock and in which case will they significantly diverge?

596
01:01:09,600 --> 01:01:19,600
Yeah. You see, I do two things. This one consumes CPU. This is about 0.03 seconds, million times.

597
01:01:19,600 --> 01:01:25,440
This one doesn't consume CPU, but it waits. It waits for a second. That's a different. So, one of this

598
01:01:25,440 --> 01:01:32,240
timing, in my case, is one second longer than the others. So, the first two are pretty much the same.

599
01:01:33,360 --> 01:01:37,920
And the last one is a second longer because the last one also measures the walk. But this one

600
01:01:37,920 --> 01:01:45,200
is the walk clock time and these two are CPU time. If you have Windows, this one will be

601
01:01:46,000 --> 01:01:49,200
CPU time and this two will be, that will be one there also.

602
01:01:49,200 --> 01:01:57,200
And even in the first two ones, again, it's a multi-freted application. Would they also give the same thing?

603
01:01:57,200 --> 01:02:03,200
It depends how you measure. No, no. If you have, what you measure, if you have,

604
01:02:03,200 --> 01:02:08,960
if Python has a GIL, the global interpreter log, but it releases a GIL when you do input-output.

605
01:02:08,960 --> 01:02:13,920
Sleep is input-output because you say operating system call me back and this means it's input-output operation.

606
01:02:14,480 --> 01:02:18,320
So, if you sleep in the thread, the other thread can keep going. It doesn't wait.

607
01:02:18,320 --> 01:02:21,760
So, it depends where you measure. You measure on the main thread or on the thread that waits.

608
01:02:21,760 --> 01:02:24,960
Of course, if you measure the thread that waits, you still measure this waiting second.

609
01:02:24,960 --> 01:02:31,760
If you measure outside, you don't measure it. It keeps going. Yeah. So, depends where you measure.

610
01:02:31,760 --> 01:02:36,560
This is, sometimes can be tricky. And even in a simple application, it might not be clear what

611
01:02:36,560 --> 01:02:40,720
you actually measure and where you measure it. And if you have a complex program, it can be,

612
01:02:40,720 --> 01:02:43,680
you have to really make sure that you measure what you think you measure.

613
01:02:44,240 --> 01:02:49,200
And typical solutions doing it, doing the two or different, two or three different ways.

614
01:02:49,200 --> 01:02:52,640
And all the results agree, it's a good sign that you measure the right thing.

615
01:02:52,640 --> 01:02:56,320
If they disagree, you have a problem, you find the problem. That's really how I do it. I try to,

616
01:02:57,120 --> 01:03:00,880
like, I can excel. I do the sum this way and the sum this way. And if it's the same thing,

617
01:03:00,880 --> 01:03:06,000
seems like I have all the cells to sum up. It's not guaranteed, but it's a good sign that

618
01:03:06,000 --> 01:03:10,400
you might miss the same set of both ways could happen. Something like you have to find two

619
01:03:10,400 --> 01:03:14,960
different ways to measure it, kind of independent ways, and then they don't make the same mistake,

620
01:03:14,960 --> 01:03:20,160
hopefully. Yeah, something like this. It's kind of, it's a, it's a culture. It's not really good,

621
01:03:20,160 --> 01:03:24,880
but it's better than nothing. So, and this is interesting to see that there can be differences.

622
01:03:24,880 --> 01:03:30,400
And if you use a different function here to, to calculate this. And actually I wrote a small helper.

623
01:03:30,400 --> 01:03:40,000
Yeah. That's not really good, but it gives you, actually I can load it here. Load CPU time. Yeah.

624
01:03:40,000 --> 01:03:45,920
This is my small function here that measures CPU time. And I just distinguish if I'm on Windows,

625
01:03:45,920 --> 01:03:51,440
I use this function. If I'm on, not on Windows, I use something else. So this works in Linux,

626
01:03:51,440 --> 01:03:56,400
it works in Mac. I have no idea if it's a different operating system, but the case is there. Yeah.

627
01:03:56,400 --> 01:04:02,560
Let's say I want to get rid of the defecation warning. What is the proper replacement function?

628
01:04:02,560 --> 01:04:07,520
Don't, don't use clock. Right. But the warning say there are two different options.

629
01:04:08,240 --> 01:04:16,320
Yeah. Do you can actually hear you can use, um, there's still a deprecation warning here.

630
01:04:21,920 --> 01:04:28,880
There's no, there's still a defecation warning. I can use perf counter, perf counter. That's a

631
01:04:28,880 --> 01:04:37,760
new function in a process time, process time or perf counter. So perf counter is a

632
01:04:39,040 --> 01:04:45,120
war clock time and process time is the process time. So let's check. So always don't guess,

633
01:04:45,120 --> 01:04:52,080
check it. Time, time, perf counter, which is a new stuff now that there's also nanosecond version.

634
01:04:52,080 --> 01:04:56,880
It's the final version in Python three. So, um, and putting a question mark tells you,

635
01:04:58,320 --> 01:05:05,440
yeah, performance count for float. That's not very, not very talkative, isn't it? Yeah. And the

636
01:05:05,440 --> 01:05:12,560
other one was, uh, what was the other one process time? It just must be the, uh, the actually CPU

637
01:05:12,560 --> 01:05:21,680
time. Yeah. This is CPU time. The other one is war clock time. Now you have it and now it's

638
01:05:21,680 --> 01:05:26,880
they do this abstraction away. So if you're in Python three, seven, you don't need this thing

639
01:05:26,880 --> 01:05:31,280
anymore. But if you have all the version of Python, then you have to be careful. So things

640
01:05:31,280 --> 01:05:36,240
improved over time. So Python three is clearly better as always. Yeah. And they get away,

641
01:05:36,240 --> 01:05:41,280
but you still, you have to make sure to do some experiments and some simple experiments. So take

642
01:05:41,280 --> 01:05:46,000
something, you know what the result is and measure it and see if this agrees what you're measuring.

643
01:05:46,000 --> 01:05:52,560
And of course this approach you can apply to other problems. You know what it is? Of course

644
01:05:52,560 --> 01:05:56,960
you have some different tools, use your tools, measure. And if your tools agree with some,

645
01:05:56,960 --> 01:06:00,800
like if, like if I have Linux and you have some operating system tools to measure something,

646
01:06:00,800 --> 01:06:05,920
use your tools and try to reproduce the results. And if they don't agree, do you have to find

647
01:06:05,920 --> 01:06:10,960
the reason why it is? Yeah. That's, that's important. And you have to be a bit skeptical.

648
01:06:10,960 --> 01:06:15,280
If you measure something and especially if it's a strange result, say, can this be true?

649
01:06:16,000 --> 01:06:21,680
Where's the problem? Maybe I'm the problem in my measuring, messing everything up for some reason,

650
01:06:21,680 --> 01:06:27,280
which is not that obvious. Yeah. Good. So this is what I did here. And now actually you can

651
01:06:28,960 --> 01:06:34,480
supply this, this function. This is my CPU function I did here, or one of these functions. Now,

652
01:06:34,480 --> 01:06:38,080
if you fail in Python three, you can use these functions and you can

653
01:06:40,560 --> 01:06:43,440
do the profiling here and supply this

654
01:06:43,440 --> 01:06:52,640
this function. Yeah. So I can, I can do the same thing with p run, by the way, I can say p run.

655
01:06:52,640 --> 01:07:01,360
And if you look at it, p run also takes, if I'm not mistaken, key, doesn't it take it? D.

656
01:07:06,000 --> 01:07:10,960
Should be an option to take a different function to measure it. Maybe I just overlooked it.

657
01:07:13,440 --> 01:07:15,360
No, it's not here.

658
01:07:18,880 --> 01:07:24,000
I thought because this Python, this is a Python profile run, you can supply actually

659
01:07:24,000 --> 01:07:30,560
runtime functions. If you don't, if you want to measure the, so you can say c profile,

660
01:07:32,160 --> 01:07:42,320
c profile dot profile. You make an instance and then I specify the function. I say my CPU time here

661
01:07:42,320 --> 01:07:51,520
or time it process time should be the same. We can try this in a minute. And then, yeah.

662
01:07:53,840 --> 01:07:56,560
Then you get this result and you say print

663
01:07:59,840 --> 01:08:06,480
stats, I guess. I can remember right. Then you see it get, no, it doesn't print stats.

664
01:08:06,480 --> 01:08:15,760
Did we say print stats? Forgotten already. Did so many times.

665
01:08:21,040 --> 01:08:21,520
I have to,

666
01:08:24,400 --> 01:08:26,640
I run.

667
01:08:26,640 --> 01:08:34,800
Yeah, print stats.

668
01:08:34,800 --> 01:08:40,800
You have it in your loaded file.

669
01:08:43,760 --> 01:08:48,800
No, I still get this one. This one works. Of course, this returns an instance.

670
01:08:56,880 --> 01:09:09,600
Yeah, I haven't, I haven't executed cell.

671
01:09:12,800 --> 01:09:14,800
I loaded the cell and didn't execute the cell. So.

672
01:09:21,680 --> 01:09:23,040
No, that's CPU time.

673
01:09:27,600 --> 01:09:29,360
No, I gave it. It must be there.

674
01:09:45,520 --> 01:09:47,360
No, that should be the same because the function is there.

675
01:09:51,760 --> 01:09:55,040
Thank you. Run call. Yeah.

676
01:09:57,200 --> 01:09:58,400
Run call with underscore.

677
01:10:11,840 --> 01:10:18,160
Run. So, and now I messed it up because I wanted to do it everything in one line.

678
01:10:18,720 --> 01:10:20,720
Profiler, run call without.

679
01:10:20,720 --> 01:10:28,320
Yeah, that's, yeah. Good call. Okay.

680
01:10:33,600 --> 01:10:37,280
Sometimes then you're too close to the problem, even the simple things. So.

681
01:10:37,600 --> 01:10:37,920
Okay.

682
01:10:50,080 --> 01:10:55,360
So I make an instance and say run call and it works and it complains about this as a warning.

683
01:10:55,360 --> 01:10:58,400
It gives me back the time.

684
01:10:58,400 --> 01:11:05,520
Make an instance.

685
01:11:11,040 --> 01:11:15,520
Yeah. And after this, I say profiler. So I have to make an instance and then.

686
01:11:17,760 --> 01:11:19,520
No, that's a P.

687
01:11:19,520 --> 01:11:34,960
So I make an instance and I call instance. Why is it difficult? Good. And I get the same

688
01:11:37,280 --> 01:11:38,880
thing back and I have to supply.

689
01:11:42,400 --> 01:11:46,960
My function is because I can change the function. I don't want to measure the walk clock. I want to

690
01:11:46,960 --> 01:12:04,080
measure this one when I made it. And I have to give us this one here. That's a whole thing.

691
01:12:11,600 --> 01:12:12,080
No.

692
01:12:16,960 --> 01:12:20,080
Yeah.

693
01:12:27,280 --> 01:12:27,520
So.

694
01:12:34,560 --> 01:12:36,640
Okay. Now this works and now I can say P.

695
01:12:39,840 --> 01:12:40,080
Run call.

696
01:12:46,960 --> 01:12:57,040
Yeah. I have to feed TPU time there. And then once I, once I do this now,

697
01:12:58,800 --> 01:13:05,200
it works. And now I have my, my P and I go step by step. That's easier. And now I can say,

698
01:13:05,520 --> 01:13:16,640
I can say run call and now feed the function. Yeah. And then I have my,

699
01:13:16,640 --> 01:13:21,040
I get my warning because I use this function and now I can say print starts. So.

700
01:13:22,080 --> 01:13:27,200
Sure. It was better to do it in one cell. Now you have this and you see now the timing. I measure the,

701
01:13:28,000 --> 01:13:34,880
the CPU time. And actually I can say even slow.

702
01:13:38,720 --> 01:13:41,760
Yeah. This will take a while, but if I do the printing, it should be,

703
01:13:41,760 --> 01:13:46,400
shouldn't take, you have to wait 10 seconds for the measurement because this is still the time it

704
01:13:46,400 --> 01:13:51,600
takes, but the 10 seconds shouldn't show up there and they don't show up. Yeah. There used to be 10

705
01:13:51,600 --> 01:13:55,920
seconds here. There's no 10 seconds anymore. Of course, now the measurement doesn't take this into

706
01:13:55,920 --> 01:14:01,840
account. Okay. So once you figure this out, we're doing exactly the same steps we did before.

707
01:14:02,480 --> 01:14:12,720
One step after the other, you get the warning because I do this. If I, instead of using this one,

708
01:14:12,720 --> 01:14:22,080
I use time. I use time, the time module and I use the process time in Python stream. So in Python two,

709
01:14:22,080 --> 01:14:28,080
you won't have this. Then you should get the same results. Again, after wait 10 seconds. Now you

710
01:14:28,080 --> 01:14:32,960
should see the process time. So you can feed a different time measurement. That before that takes

711
01:14:32,960 --> 01:14:37,840
a wall clock time, but you can also have process time. You see no 10 seconds here.

712
01:14:38,880 --> 01:14:44,080
No 10 seconds here. Yeah. So in this case, it doesn't really matter what the absolute numbers are.

713
01:14:44,080 --> 01:14:54,320
You have this 10 seconds. Good. This is a very simple function. Let's do a bit more complicated

714
01:14:54,320 --> 01:15:02,480
function. I always have my, uh, uh, pi function and I have to go to a different directory. So we

715
01:15:02,480 --> 01:15:16,160
go up one, we go up one directory and then we see there's a pie. So this is a very stupid way to

716
01:15:16,160 --> 01:15:25,280
calculate pie. So it doesn't really matter. Um, but then numerics do so I can just import this,

717
01:15:26,080 --> 01:15:34,480
load this file. And this is a simple way to calculate pie. It's using a Monte Carlo approach.

718
01:15:34,480 --> 01:15:38,640
It's just a little bit numerics that we don't have to go in there. And then once you run it,

719
01:15:38,640 --> 01:15:44,800
you get actually here, uh, value that's kind of close to pie. It's not even there. Yeah. 3.14,

720
01:15:45,440 --> 01:15:48,720
159 or something like this should be the value. And we are pretty off here,

721
01:15:48,720 --> 01:15:54,640
but this is a very simple numerical calculation. And then I think is when, once we do this,

722
01:15:54,640 --> 01:15:58,560
because we calculate run the numbers, you can parallelize it. I use it as a simple example

723
01:15:58,560 --> 01:16:04,160
for a lot of things making faster. So that's goes way beyond using all kinds of ways to make it,

724
01:16:04,160 --> 01:16:11,200
to make it faster, to get it, get it going. Yeah. And, uh, for this one, you can also use numpy.

725
01:16:14,640 --> 01:16:18,400
So if you have, this is a version, the simple version, and then we have a numpy version,

726
01:16:18,400 --> 01:16:24,960
which is doing exactly the same thing. But if you use numpy, anybody who knows numpy,

727
01:16:24,960 --> 01:16:28,960
they use random random, which doesn't give you one value, but gives you a whole array of values.

728
01:16:29,680 --> 01:16:34,800
And this will be much faster. Has one disadvantage. It calculates all the values of memory at once.

729
01:16:34,800 --> 01:16:40,560
So if you keep all the memory, the other one has one number at a time. So it might be very slow,

730
01:16:40,560 --> 01:16:45,520
but it's not memory bound. Numpy will get memory bound sooner or later, because in this way I do

731
01:16:45,520 --> 01:16:49,360
it. It calculates all the values. It wouldn't be necessary. You can do it stepwise, but the way I

732
01:16:49,360 --> 01:17:00,560
implemented there, but it gives you also, uh, yeah, I haven't installed numpy. That's not good.

733
01:17:02,320 --> 01:17:08,720
Forgotten to specify. So you need to install numpy, see if it works. You should be able to

734
01:17:08,720 --> 01:17:21,040
do this right here. So, ah, uh, kernel interrupt. You have to say install. Yes. Otherwise it asked

735
01:17:21,040 --> 01:17:25,920
me to do it and then there's no way to enter it. Yeah. So if you do it from the command line,

736
01:17:25,920 --> 01:17:33,520
it asks you, uh, by the way, if you hear, you can open a new, uh, console terminal right in here and

737
01:17:33,520 --> 01:17:38,160
you would get a terminal and then you can do it. I would need to activate my environment here because

738
01:17:38,160 --> 01:17:43,520
doesn't activate. You can store it from there. This is a bit tricky here because now it would block,

739
01:17:43,520 --> 01:17:47,920
but if you say yes, then it doesn't ask for confirmation. Otherwise ask for confirmation,

740
01:17:47,920 --> 01:17:52,240
but I cannot type in the confirmation, which is not that good. Yeah. So you can install me,

741
01:17:52,240 --> 01:17:58,240
if you install numpy and see if it, if it works out, but it doesn't really matter too much.

742
01:17:58,240 --> 01:18:04,240
Um, here you, you will see numpy as the same algorithm and you can, you can work with it. Good.

743
01:18:04,800 --> 01:18:13,040
Let's wait if this is works here and the next one actually would be a snake with. So now we want to

744
01:18:13,040 --> 01:18:19,040
do some visualization and one to visualize, um, things. And actually this would be now a good way.

745
01:18:19,040 --> 01:18:20,800
You can do this on the, on the console.

746
01:18:28,080 --> 01:18:31,520
And maybe, maybe I do the installation of the console. They are making a new console

747
01:18:32,240 --> 01:18:42,720
here and activate, activate my, uh, environment and I can do my content store here and I don't

748
01:18:42,720 --> 01:18:50,320
have to do this. So I can activate it here and say, come to install numpy. I see maybe it's not

749
01:18:50,320 --> 01:18:58,160
got you to do it twice. Cause here there's still interrupt. Yeah. It's interrupting. So you can,

750
01:18:58,240 --> 01:19:06,320
can install here if it works. And now we can also make a new tab. I activate my environment again.

751
01:19:06,960 --> 01:19:13,120
And now we want to look at a snake with, so snake with is a tool that allows you to visualize

752
01:19:13,840 --> 01:19:20,560
the results of the run. So so far we only saw numbers. It was kind of okay, but if you have

753
01:19:21,120 --> 01:19:24,560
hundreds and hundreds of line of numbers, it's really difficult to see something.

754
01:19:24,560 --> 01:19:28,960
And snake was takes these numbers and puts it in nice pictures and you don't have to do it yourself

755
01:19:28,960 --> 01:19:35,840
and that different ways of doing it. So you can, uh, do it from the command line. So there are

756
01:19:35,840 --> 01:19:42,800
different ways of doing it. So you can run Python, uh, dash M anybody knows the dash M actually,

757
01:19:42,800 --> 01:19:47,840
this is recommended. If you say PIP install, you shouldn't use PIP. You say Python dash M PIP.

758
01:19:47,840 --> 01:19:52,560
Then it runs PIP as a command line tool, but it uses the library version because if you say PIP,

759
01:19:52,560 --> 01:19:56,240
it takes one of the paths and might take a different PIP. Depends how you set up your system.

760
01:19:57,040 --> 01:20:00,080
Yeah. If it, they dash M, it will take the PIP that belongs to the Python

761
01:20:00,640 --> 01:20:06,320
because it runs a module like a standalone program. Yeah. That's what I'm doing here. Uh,

762
01:20:06,320 --> 01:20:12,560
and I say, okay, run C profile because you got it from the command line. Actually one C profile.

763
01:20:14,400 --> 01:20:17,520
We write the result to the file. Um,

764
01:20:18,480 --> 01:20:28,240
PI dot stats, which is this binary file and run our simple program. And now I, I'm not in the directory.

765
01:20:34,480 --> 01:20:37,600
Yeah. I'm, I'm, I'm not sure where I am.

766
01:20:37,600 --> 01:20:49,040
Okay. Oh, and the directory. So, so now I do the same thing for Python, uh,

767
01:20:49,600 --> 01:20:55,920
run as module C profile again, with the spelling profile, with the spelling,

768
01:20:56,720 --> 01:21:06,720
write the outputs to PI dot stats and run the file simple PI. So, uh, and Python missing an N

769
01:21:07,600 --> 01:21:14,080
and then it should run this one and produces this, this output file. Yeah. It does a print

770
01:21:14,080 --> 01:21:19,840
on the way. And now I can use snake with from the command line and I can say snake with,

771
01:21:19,840 --> 01:21:29,120
if it's installed, I should work snake with, uh, um, PI dot starts. And then it opens the result

772
01:21:29,120 --> 01:21:36,720
of snake with right here. And why doesn't show anything? It should be a nice picture.

773
01:21:36,800 --> 01:21:44,960
Always used to be a picture. It takes a while. Okay. Now this is icicle to typically sunburst

774
01:21:44,960 --> 01:21:49,760
this one. This is now, uh, the result of this one. And there's a lot of stuff here,

775
01:21:49,760 --> 01:21:54,800
which we don't want. And this, you see, you will recognize this table. There's quite a things going

776
01:21:54,800 --> 01:21:59,600
on. This is a table of the calls here. Yeah. So this is the same thing we saw. The nice thing is

777
01:21:59,600 --> 01:22:04,720
here. You can actually sort it. You click on it and sorts it by whatever you want. Otherwise it's

778
01:22:04,720 --> 01:22:09,520
the same result, but not just plain text. And then you have a picture here and this picture is

779
01:22:09,520 --> 01:22:13,440
interesting because these are the calls. And if you go in here, it shows you the function. You

780
01:22:13,440 --> 01:22:18,080
might not see it, but, and there, that shows you the function. And this is the main function from

781
01:22:18,080 --> 01:22:21,440
inside. It takes a hundred percent of the time. And then you go outside this function called this

782
01:22:21,440 --> 01:22:25,600
function that takes, spends most of the time in this function and it'll be in this and then the

783
01:22:25,600 --> 01:22:30,720
next and the next and the next and the outermost. Actually these ones, this, this here is a random

784
01:22:30,720 --> 01:22:34,960
function. So it's how much time you spend in a random function. And then this is how much time

785
01:22:34,960 --> 01:22:41,280
you spend in the function, a pipeline in general. So this is a time you spend in the whole function.

786
01:22:41,280 --> 01:22:46,320
That's like the time that's in the main loop in the function. These are the other function. This

787
01:22:46,320 --> 01:22:52,000
is a function, uh, the built in square root. I'm using the square. This is square root and this is a

788
01:22:52,000 --> 01:22:56,640
random function. And this is the time that you spend in the loop itself. So that's this one.

789
01:22:56,640 --> 01:23:05,040
Yeah. So this is this part. So we have the random function rent and no, sorry here, random function

790
01:23:05,040 --> 01:23:10,400
and we have a square root function and the rest is a loop and this calculation here.

791
01:23:12,800 --> 01:23:19,280
This gives you some results here. And if you don't like this, you can change sunburst to icicle,

792
01:23:21,360 --> 01:23:25,280
which is the same information, but instead of a circle, you have square. Now the inner circle,

793
01:23:25,280 --> 01:23:29,360
there's an inner circle, the next circle, the next circle, the same thing, just here. And then

794
01:23:29,360 --> 01:23:33,360
it's easier because now you can read the names. There's no space to put the names, but there's a

795
01:23:33,360 --> 01:23:37,200
lot of stuff here, a lot of small helper functions you're not really interested in. But it's very

796
01:23:37,200 --> 01:23:41,760
obvious which function takes the most time in this case, where the time goes and where you might be

797
01:23:41,760 --> 01:23:50,720
able to make it faster if you do it. So that's something you can do from here. But of course,

798
01:23:50,720 --> 01:23:55,520
since you're in a Jupyter notebook, we can do the same thing in Jupyter notebook and we have to

799
01:23:55,520 --> 01:24:05,600
load an extension, load extension, snake with, and you can do the same thing from here just by

800
01:24:05,600 --> 01:24:21,760
calling snake with and say plain. What's the function name? Pyplane? Did not execute it?

801
01:24:25,680 --> 01:24:33,920
So the call tips don't work, pyplane, and they have to give it a value, yeah, one million.

802
01:24:36,080 --> 01:24:46,560
Something like this. And I used a double instead of a single, and now it does the same thing out of

803
01:24:46,560 --> 01:24:51,920
my, it opens a new tab and shows me the result and I don't have to go to the console. Yeah, so you can

804
01:24:51,920 --> 01:24:57,520
do it directly from here just by using this snake with command. You have to load it first, an extension,

805
01:24:57,520 --> 01:25:02,400
so you can extend the notebook. There are many extensions. The extension has been installed

806
01:25:02,400 --> 01:25:07,440
automatically when you install snake with. Yeah, so you get, and this is really useful because now

807
01:25:07,440 --> 01:25:12,880
you have this information here and you see now just all these extra startup functions, all those

808
01:25:12,880 --> 01:25:20,640
little noisy things are gone because they're not measured here. Yeah, good. Okay, this is snake with

809
01:25:20,640 --> 01:25:32,320
and snake with allows you to measure a few things. That's the profiling. So far all the profiling

810
01:25:32,320 --> 01:25:37,280
is restricted to functions. So the most fine-grained level you can see anything is in the function

811
01:25:37,280 --> 01:25:43,840
level. Sometimes that's not good enough. If you want to go final and you will do a line profiling,

812
01:25:43,840 --> 01:25:49,120
then you need to install the line profile and go line by line. This is interesting. The problem is

813
01:25:49,120 --> 01:25:53,440
with line profile, it adds a lot of overhead, so you cannot line profile your whole program typically

814
01:25:53,440 --> 01:25:58,800
because it would take ages to run. So typically you do profiling first and if you find one or two

815
01:25:58,800 --> 01:26:03,440
interesting functions you want to go into deeper, they can use line profile on these functions and

816
01:26:03,440 --> 01:26:09,280
you can do this. So again, line profile you need to install and then you can run it and you have two

817
01:26:09,280 --> 01:26:17,200
options. So you can run it from the command line or you can run it from the notebook as always.

818
01:26:17,200 --> 01:26:22,560
So this is because notebook has an extension. So let's do both. Both of them, both of these

819
01:26:22,560 --> 01:26:29,920
methods can be useful. And now finally we found NumPy to install. So let NumPy install and I can

820
01:26:29,920 --> 01:26:32,880
kill this one here. Yeah.

821
01:26:43,360 --> 01:26:46,880
Because there are small things going on. All the startup process.

822
01:26:46,880 --> 01:26:50,720
The Jupyter notebook is running already. When you saw the new Python process, a lot of startup

823
01:26:50,720 --> 01:26:52,640
functions, all the startup functions are measured also.

824
01:26:56,400 --> 01:26:59,760
Everything. In the notebook everything is loaded already and then you do from the command line you

825
01:26:59,760 --> 01:27:03,840
have a lot of noise there that happens which actually not really interested because you

826
01:27:03,840 --> 01:27:05,440
don't have you have to start the process anyway.

827
01:27:15,280 --> 01:27:20,080
Because we did this C profile on the whole program, if you generate the C start file in

828
01:27:20,080 --> 01:27:24,080
a different way then snakewiz will show the same result. Just the way how you how you

829
01:27:24,080 --> 01:27:29,280
generate. Since we use this dash m function and run the whole program, if you just use your C

830
01:27:29,280 --> 01:27:33,600
profile from within everything's loaded and you shouldn't do this one you can try then all this

831
01:27:33,600 --> 01:27:40,160
little noisy thing should go away. Yeah but good question. So why is this noise there?

832
01:27:41,280 --> 01:27:45,360
Okay line profile you need to install it and once you have installed it then

833
01:27:45,360 --> 01:27:54,480
check where we are. We are now in the py measurement and let's go up to measuring.

834
01:27:54,480 --> 01:28:00,480
Yeah and now I can use Kernprof which is the name. This is by Robert Kern. That's called Kernprof

835
01:28:00,480 --> 01:28:10,480
and you can say verbose and if you use Kernprof on profile me then you won't see any anything

836
01:28:10,640 --> 01:28:16,640
special. This is just using normal profiling and you just see the normal results here after a while.

837
01:28:16,640 --> 01:28:22,640
You need to fortify this program. Now this is just a normal output. Again now you see all this noise

838
01:28:22,640 --> 01:28:32,640
because it runs a whole module and you have all the startup crap in here so to speak. If I look at this

839
01:28:32,800 --> 01:28:36,800
if I load now

840
01:28:36,800 --> 01:28:44,800
profile me line profile. So I put a decorator here out of the blue. I didn't import. If you look at

841
01:28:44,800 --> 01:28:50,800
this, if I run it from here I would say there's no such thing. So I just run it from here.

842
01:28:50,800 --> 01:28:58,800
So I just run it from here. So I just run it from here. So I just run it from here. So I just run it

843
01:28:58,960 --> 01:29:03,680
out of blue. If you look at this, if I run it from here I would say there's no such thing as profile

844
01:29:03,680 --> 01:29:08,800
because Kernprof is ejecting this decorator in their namespace. I don't know if it's a good thing

845
01:29:08,800 --> 01:29:13,600
but that's what it's doing. You have to actually explicitly mark the functions you want a line

846
01:29:13,600 --> 01:29:19,600
profile with profile. This is deliberate. So you typically don't want a line profile or your

847
01:29:19,600 --> 01:29:24,080
functions. You don't want a line profile 100 100 function because it takes very long. So you have

848
01:29:24,080 --> 01:29:31,440
to explicitly say I want to use these ones. These two. And now once I go to my here go to my

849
01:29:31,440 --> 01:29:39,840
line profiler and I profile this one and I also have to give the option that is supposed to do this

850
01:29:39,840 --> 01:29:44,400
when I say dash L for line. So I turn on line profiling otherwise I wouldn't do it actually.

851
01:29:44,960 --> 01:29:50,720
And then now it takes longer and after a while it will show you everything line by line. So it takes

852
01:29:50,720 --> 01:29:57,600
a while but once it's working we can look at the version that actually works in.

853
01:29:58,400 --> 01:30:07,360
Ah yeah. See now you have this line by line when you see here if it's fast you can still something

854
01:30:07,360 --> 01:30:12,960
by 0.6 percent. This is a time percent and this is the total time here with units there.

855
01:30:13,760 --> 01:30:19,280
How much time it spends here and how much time it spends here and here in slow you see this would

856
01:30:19,280 --> 01:30:24,640
be 0 percent because this is so slow that there's nothing left. If you run it to one digit in percent

857
01:30:24,640 --> 01:30:31,040
you don't see anything. So it is a very simple it's a very simple function and you you have this very

858
01:30:31,040 --> 01:30:36,960
simple result. So let's do some small examples that make a bit more sense with line profiling.

859
01:30:38,320 --> 01:30:42,880
The next one would be actually accumulate where I wrote this very simple function

860
01:30:42,880 --> 01:30:48,720
that hopefully makes a point about line profiling. Accumulate you see now I do this this does nothing

861
01:30:48,720 --> 01:30:55,760
else but adding up numbers in the list and keeps all intermittent result. Yeah so if you use NumPy

862
01:30:55,760 --> 01:31:02,320
then you use might not accumulate. Does this profile decorator is it can we import it from a package so that it actually.

863
01:31:03,360 --> 01:31:07,600
Yes you can do I will show you typically I do it from the notebook because this is something

864
01:31:07,600 --> 01:31:12,400
you do only once and then you don't have to put it the decorator there. Yeah.

865
01:31:12,400 --> 01:31:27,040
Accumulate yeah this is this is a use line profiler so profiler use line profile everything the directory measuring.

866
01:31:30,160 --> 01:31:35,520
You see this one just calculates if you do this you see I say accumulate.

867
01:31:35,520 --> 01:31:38,640
It's.

868
01:31:40,720 --> 01:31:47,280
I can run it I can run it because it's decorated I need a decorator take a decorator out when I take a

869
01:31:47,280 --> 01:31:57,280
decorator out then it accumulate accumulate it and if you had because I don't have a printed result accumulate

870
01:31:57,280 --> 01:32:04,240
you see that adding numbers from zero to nine gives you 1445 and this keeps all intermittent results.

871
01:32:05,200 --> 01:32:12,400
Okay so I did this one now we can do line profiling here and run it for 10 and 100 so we do the same thing.

872
01:32:14,160 --> 01:32:21,360
But instead of using profile may use accumulate and then it works a while on it and then you see

873
01:32:21,920 --> 01:32:28,000
the difference between these. These function calls when you see if you run it here.

874
01:32:28,080 --> 01:32:33,600
This is the time is pretty even distributed between these four steps this one doesn't take a lot on this one

875
01:32:33,600 --> 01:32:37,600
not of course but they take about more or less 25 percent or so around it.

876
01:32:37,600 --> 01:32:42,560
So that's something you know there's no one line that consumes all the time.

877
01:32:43,200 --> 01:32:48,880
But you can see something you have this breakdown breakdown line line by line.

878
01:32:50,400 --> 01:32:56,800
A few more examples for line by line so you can always do some experiments load the list and then you can

879
01:32:56,800 --> 01:33:02,000
do experiments load some calculations some different types of calculations.

880
01:33:02,000 --> 01:33:10,640
So I do here a loop and I add 10 to a number I multiply a number by 10 I use to the power of 10

881
01:33:10,640 --> 01:33:15,280
then I use the power function is doing the same thing I use a square root mastered square root and

882
01:33:15,280 --> 01:33:21,680
also set square root to mastered square which saves me a lookup and do this again and adjust excess

883
01:33:21,680 --> 01:33:28,480
square root and so a few things here and then I run it through my my line calculator again and

884
01:33:28,480 --> 01:33:35,200
see the differences. So it will show you the code also and then you see what takes how much time

885
01:33:35,200 --> 01:33:43,840
and you see here then you then you have plus and multiplication takes about the same amount of time

886
01:33:43,840 --> 01:33:49,280
very similar power is more expensive and the power function takes a little tiny bit more time than this

887
01:33:49,840 --> 01:33:54,880
double star here and you see square root mastered square root and square root there's a difference

888
01:33:54,880 --> 01:33:58,960
here in our this over is relative to the total time you should be careful yeah so if something

889
01:33:58,960 --> 01:34:03,200
else takes a lot of time everything gets to zero because it's but you can also see the absolute

890
01:34:03,200 --> 01:34:08,640
time but there's a small difference doing it this way and this way if you repeat it so many times

891
01:34:08,640 --> 01:34:13,440
yeah as you see if excess mastered square root and just square root as it is there's a difference

892
01:34:13,520 --> 01:34:19,280
of course there's an extra lookup so that's something you can can investigate here you can work with it

893
01:34:22,800 --> 01:34:28,640
good so three o'clock is break it's it's five minutes to three so maybe it's a good thing

894
01:34:29,280 --> 01:34:35,360
if you make break now then you have a better chance to get a coffee so we have 20 minutes break I

895
01:34:35,360 --> 01:34:41,280
think so then we meet back here 15 past the hour which is 20 minutes so we break 15 minutes and

896
01:34:41,280 --> 01:34:46,000
we continue with some more of these a little bit profiling memory profiling in algorithms

897
01:34:46,000 --> 01:34:57,440
so we meet here 15 past the hour and continue with our tutorial

898
01:35:11,280 --> 01:35:17,440
so

899
01:35:18,640 --> 01:35:31,440
good

900
01:35:41,280 --> 01:35:45,440
but

901
01:38:11,280 --> 01:38:13,280
.

902
01:38:41,280 --> 01:38:44,280
.

903
01:39:11,280 --> 01:39:14,280
.

904
01:39:41,280 --> 01:39:44,280
.

905
01:40:11,280 --> 01:40:14,280
.

906
01:40:41,280 --> 01:40:44,280
.

907
01:41:11,280 --> 01:41:13,280
.

908
01:41:41,280 --> 01:41:44,280
.

909
01:42:11,280 --> 01:42:14,280
.

910
01:42:41,280 --> 01:42:44,280
.

911
01:43:11,280 --> 01:43:14,280
.

912
01:43:41,280 --> 01:43:43,280
.

913
01:44:11,280 --> 01:44:13,280
.

914
01:44:41,280 --> 01:44:44,280
.

915
01:45:11,280 --> 01:45:13,280
.

916
01:45:41,280 --> 01:45:43,280
.

917
01:46:11,280 --> 01:46:13,280
.

918
01:46:41,280 --> 01:46:43,280
.

919
01:47:11,280 --> 01:47:13,280
.

920
01:47:41,280 --> 01:47:43,280
.

921
01:48:11,280 --> 01:48:13,280
.

922
01:48:41,280 --> 01:48:43,280
.

923
01:49:11,280 --> 01:49:13,280
.

924
01:49:41,280 --> 01:49:43,280
.

925
01:50:11,280 --> 01:50:13,280
.

926
01:50:41,280 --> 01:50:43,280
.

927
01:51:11,280 --> 01:51:13,280
.

928
01:51:41,280 --> 01:51:43,280
.

929
01:52:11,280 --> 01:52:13,280
.

930
01:52:41,280 --> 01:52:43,280
.

931
01:53:11,280 --> 01:53:13,280
.

932
01:53:41,280 --> 01:53:43,280
.

933
01:54:11,280 --> 01:54:13,280
.

934
01:54:41,280 --> 01:54:43,280
.

935
01:55:11,280 --> 01:55:13,280
.

936
01:55:41,280 --> 01:55:43,280
.

937
01:56:11,280 --> 01:56:13,280
.

938
01:56:41,280 --> 01:56:43,280
.

939
01:57:11,280 --> 01:57:13,280
.

940
01:57:41,280 --> 01:57:43,280
.

941
01:58:11,280 --> 01:58:13,280
.

942
01:58:13,280 --> 01:58:15,280
.

943
01:58:15,280 --> 01:58:17,280
.

944
01:58:17,280 --> 01:58:19,280
.

945
01:58:19,280 --> 01:58:21,280
.

946
01:58:21,280 --> 01:58:23,280
.

947
01:58:23,280 --> 01:58:25,280
.

948
01:58:25,280 --> 01:58:27,280
.

949
01:58:27,280 --> 01:58:29,280
.

950
01:58:29,280 --> 01:58:31,280
.

951
01:58:31,280 --> 01:58:33,280
.

952
01:58:33,280 --> 01:58:35,280
.

953
01:58:35,280 --> 01:58:37,280
.

954
01:58:37,280 --> 01:58:39,280
.

955
01:58:39,280 --> 01:58:41,280
.

956
01:58:41,280 --> 01:58:43,280
.

957
01:58:43,280 --> 01:58:45,280
.

958
01:58:45,280 --> 01:58:47,280
.

959
01:58:47,280 --> 01:58:49,280
.

960
01:58:49,280 --> 01:58:51,280
.

961
01:58:51,280 --> 01:58:53,280
.

962
01:58:53,280 --> 01:58:55,280
.

963
01:58:55,280 --> 01:58:57,280
.

964
01:58:57,280 --> 01:58:59,280
.

965
01:58:59,280 --> 01:59:01,280
.

966
01:59:01,280 --> 01:59:03,280
.

967
01:59:03,280 --> 01:59:05,280
.

968
01:59:05,280 --> 01:59:07,280
.

969
01:59:07,280 --> 01:59:09,280
.

970
01:59:09,280 --> 01:59:11,280
.

971
01:59:11,280 --> 01:59:13,280
.

972
01:59:13,280 --> 01:59:15,280
.

973
01:59:15,280 --> 01:59:17,280
.

974
01:59:17,280 --> 01:59:19,280
.

975
01:59:19,280 --> 01:59:21,280
.

976
01:59:21,280 --> 01:59:23,280
.

977
01:59:23,280 --> 01:59:25,280
.

978
01:59:25,280 --> 01:59:27,280
.

979
01:59:27,280 --> 01:59:29,280
.

980
01:59:29,280 --> 01:59:31,280
.

981
01:59:31,280 --> 01:59:33,280
.

982
01:59:33,280 --> 01:59:35,280
.

983
01:59:35,280 --> 01:59:37,280
.

984
01:59:37,280 --> 01:59:39,280
.

985
01:59:39,280 --> 01:59:41,280
.

986
01:59:41,280 --> 01:59:43,280
.

987
01:59:43,280 --> 01:59:45,280
.

988
01:59:45,280 --> 01:59:47,280
.

989
01:59:47,280 --> 01:59:49,280
.

990
01:59:49,280 --> 01:59:51,280
.

991
01:59:51,280 --> 01:59:53,280
.

992
01:59:53,280 --> 01:59:55,280
.

993
01:59:55,280 --> 01:59:57,280
.

994
01:59:57,280 --> 01:59:59,280
.

995
01:59:59,280 --> 02:00:01,280
.

996
02:00:01,280 --> 02:00:03,280
.

997
02:00:03,280 --> 02:00:05,280
.

998
02:00:05,280 --> 02:00:07,280
.

999
02:00:07,280 --> 02:00:09,280
.

1000
02:00:09,280 --> 02:00:11,280
.

1001
02:00:11,280 --> 02:00:13,280
.

1002
02:00:13,280 --> 02:00:15,280
.

1003
02:00:15,280 --> 02:00:17,280
.

1004
02:00:17,280 --> 02:00:19,280
.

1005
02:00:19,280 --> 02:00:21,280
.

1006
02:00:21,280 --> 02:00:23,280
.

1007
02:00:23,280 --> 02:00:25,280
.

1008
02:00:25,280 --> 02:00:27,280
.

1009
02:00:27,280 --> 02:00:29,280
.

1010
02:00:29,280 --> 02:00:31,280
.

1011
02:00:31,280 --> 02:00:33,280
.

1012
02:00:33,280 --> 02:00:35,280
.

1013
02:00:35,280 --> 02:00:37,280
.

1014
02:00:37,280 --> 02:00:39,280
.

1015
02:00:39,280 --> 02:00:41,280
.

1016
02:00:41,280 --> 02:00:43,280
.

1017
02:00:43,280 --> 02:00:45,280
.

1018
02:00:45,280 --> 02:00:47,280
.

1019
02:00:47,280 --> 02:00:49,280
.

1020
02:00:49,280 --> 02:00:51,280
.

1021
02:00:51,280 --> 02:00:53,280
.

1022
02:00:53,280 --> 02:00:55,280
.

1023
02:00:55,280 --> 02:00:57,280
.

1024
02:00:57,280 --> 02:00:59,280
.

1025
02:00:59,280 --> 02:01:01,280
.

1026
02:01:01,280 --> 02:01:03,280
.

1027
02:01:03,280 --> 02:01:05,280
.

1028
02:01:05,280 --> 02:01:07,280
.

1029
02:01:07,280 --> 02:01:09,280
.

1030
02:01:09,280 --> 02:01:11,280
.

1031
02:01:11,280 --> 02:01:13,280
.

1032
02:01:13,280 --> 02:01:15,280
.

1033
02:01:15,280 --> 02:01:17,280
.

1034
02:01:17,280 --> 02:01:19,280
.

1035
02:01:19,280 --> 02:01:21,280
.

1036
02:01:21,280 --> 02:01:23,280
.

1037
02:01:23,280 --> 02:01:25,280
.

1038
02:01:25,280 --> 02:01:27,280
.

1039
02:01:27,280 --> 02:01:29,280
.

1040
02:01:29,280 --> 02:01:31,280
.

1041
02:01:31,280 --> 02:01:33,280
.

1042
02:01:33,280 --> 02:01:35,280
.

1043
02:01:35,280 --> 02:01:37,280
.

1044
02:01:37,280 --> 02:01:39,280
.

1045
02:01:39,280 --> 02:01:41,280
.

1046
02:01:41,280 --> 02:01:43,280
.

1047
02:01:43,280 --> 02:01:45,280
.

1048
02:01:45,280 --> 02:01:47,280
.

1049
02:01:47,280 --> 02:01:49,280
.

1050
02:01:49,280 --> 02:01:51,280
.

1051
02:01:51,280 --> 02:01:53,280
.

1052
02:01:53,280 --> 02:01:55,280
.

1053
02:01:55,280 --> 02:01:57,280
.

1054
02:01:57,280 --> 02:01:59,280
.

1055
02:01:59,280 --> 02:02:01,280
.

1056
02:02:01,280 --> 02:02:03,280
.

1057
02:02:03,280 --> 02:02:05,280
.

1058
02:02:05,280 --> 02:02:07,280
.

1059
02:02:07,280 --> 02:02:09,280
.

1060
02:02:09,280 --> 02:02:11,280
.

1061
02:02:11,280 --> 02:02:13,280
.

1062
02:02:13,280 --> 02:02:15,280
.

1063
02:02:15,280 --> 02:02:17,280
.

1064
02:02:17,280 --> 02:02:19,280
.

1065
02:02:19,280 --> 02:02:21,280
.

1066
02:02:21,280 --> 02:02:23,280
.

1067
02:02:23,280 --> 02:02:25,280
.

1068
02:02:25,280 --> 02:02:27,280
.

1069
02:02:27,280 --> 02:02:29,280
.

1070
02:02:29,280 --> 02:02:31,280
.

1071
02:02:31,280 --> 02:02:33,280
.

1072
02:02:33,280 --> 02:02:35,280
.

1073
02:02:35,280 --> 02:02:37,280
.

1074
02:02:37,280 --> 02:02:39,280
.

1075
02:02:39,280 --> 02:02:41,280
.

1076
02:02:41,280 --> 02:02:43,280
.

1077
02:02:43,280 --> 02:02:45,280
.

1078
02:02:45,280 --> 02:02:47,280
.

1079
02:02:47,280 --> 02:02:49,280
.

1080
02:02:49,280 --> 02:02:51,280
.

1081
02:02:51,280 --> 02:02:53,280
.

1082
02:02:53,280 --> 02:02:55,280
.

1083
02:02:55,280 --> 02:02:57,280
.

1084
02:02:57,280 --> 02:02:59,280
.

1085
02:02:59,280 --> 02:03:01,280
.

1086
02:03:01,280 --> 02:03:03,280
.

1087
02:03:03,280 --> 02:03:05,280
.

1088
02:03:05,280 --> 02:03:07,280
.

1089
02:03:07,280 --> 02:03:09,280
.

1090
02:03:09,280 --> 02:03:11,280
.

1091
02:03:11,280 --> 02:03:13,280
.

1092
02:03:13,280 --> 02:03:15,280
.

1093
02:03:15,280 --> 02:03:17,280
.

1094
02:03:17,280 --> 02:03:19,280
.

1095
02:03:19,280 --> 02:03:21,280
.

1096
02:03:21,280 --> 02:03:23,280
.

1097
02:03:23,280 --> 02:03:25,280
.

1098
02:03:25,280 --> 02:03:27,280
.

1099
02:03:27,280 --> 02:03:29,280
.

1100
02:03:29,280 --> 02:03:31,280
.

1101
02:03:31,280 --> 02:03:33,280
.

1102
02:03:33,280 --> 02:03:35,280
.

1103
02:03:35,280 --> 02:03:37,280
.

1104
02:03:37,280 --> 02:03:39,280
.

1105
02:03:39,280 --> 02:03:41,280
.

1106
02:03:41,280 --> 02:03:43,280
.

1107
02:03:43,280 --> 02:03:45,280
.

1108
02:03:45,280 --> 02:03:47,280
.

1109
02:03:47,280 --> 02:03:49,280
.

1110
02:03:49,280 --> 02:03:51,280
.

1111
02:03:51,280 --> 02:03:53,280
.

1112
02:03:53,280 --> 02:03:55,280
.

1113
02:03:55,280 --> 02:03:57,280
.

1114
02:03:57,280 --> 02:03:59,280
.

1115
02:03:59,280 --> 02:04:01,280
.

1116
02:04:01,280 --> 02:04:03,280
.

1117
02:04:03,280 --> 02:04:05,280
.

1118
02:04:05,280 --> 02:04:07,280
.

1119
02:04:07,280 --> 02:04:09,280
.

1120
02:04:09,280 --> 02:04:11,280
.

1121
02:04:11,280 --> 02:04:13,280
.

1122
02:04:13,280 --> 02:04:15,280
.

1123
02:04:15,280 --> 02:04:17,280
.

1124
02:04:17,280 --> 02:04:19,280
.

1125
02:04:19,280 --> 02:04:21,280
.

1126
02:04:21,280 --> 02:04:23,280
.

1127
02:04:23,280 --> 02:04:25,280
.

1128
02:04:25,280 --> 02:04:27,280
.

1129
02:04:27,280 --> 02:04:29,280
.

1130
02:04:29,280 --> 02:04:31,280
.

1131
02:04:31,280 --> 02:04:33,280
.

1132
02:04:33,280 --> 02:04:35,280
.

1133
02:04:35,280 --> 02:04:37,280
.

1134
02:04:37,280 --> 02:04:39,280
.

1135
02:04:39,280 --> 02:04:41,280
.

1136
02:04:41,280 --> 02:04:43,280
.

1137
02:04:43,280 --> 02:04:45,280
.

1138
02:04:45,280 --> 02:04:47,280
.

1139
02:04:47,280 --> 02:04:49,280
.

1140
02:04:49,280 --> 02:04:51,280
.

1141
02:04:51,280 --> 02:04:53,280
.

1142
02:04:53,280 --> 02:04:55,280
.

1143
02:04:55,280 --> 02:04:57,280
.

1144
02:04:57,280 --> 02:04:59,280
.

1145
02:04:59,280 --> 02:05:01,280
.

1146
02:05:01,280 --> 02:05:03,280
.

1147
02:05:03,280 --> 02:05:05,280
.

1148
02:05:05,280 --> 02:05:07,280
.

1149
02:05:07,280 --> 02:05:09,280
.

1150
02:05:09,280 --> 02:05:11,280
.

1151
02:05:11,280 --> 02:05:13,280
.

1152
02:05:13,280 --> 02:05:15,280
.

1153
02:05:15,280 --> 02:05:17,280
.

1154
02:05:17,280 --> 02:05:19,280
.

1155
02:05:19,280 --> 02:05:21,280
.

1156
02:05:21,280 --> 02:05:23,280
.

1157
02:05:23,280 --> 02:05:25,280
.

1158
02:05:25,280 --> 02:05:27,280
.

1159
02:05:27,280 --> 02:05:29,280
.

1160
02:05:29,280 --> 02:05:31,280
.

1161
02:05:31,280 --> 02:05:33,280
.

1162
02:05:33,280 --> 02:05:35,280
.

1163
02:05:35,280 --> 02:05:37,280
.

1164
02:05:37,280 --> 02:05:39,280
.

1165
02:05:39,280 --> 02:05:41,280
.

1166
02:05:41,280 --> 02:05:43,280
.

1167
02:05:43,280 --> 02:05:45,280
.

1168
02:05:45,280 --> 02:05:47,280
.

1169
02:05:47,280 --> 02:05:49,280
.

1170
02:05:49,280 --> 02:05:51,280
.

1171
02:05:51,280 --> 02:05:53,280
.

1172
02:05:53,280 --> 02:05:55,280
.

1173
02:05:55,280 --> 02:05:57,280
.

1174
02:05:57,280 --> 02:05:59,280
.

1175
02:05:59,280 --> 02:06:01,280
.

1176
02:06:01,280 --> 02:06:03,280
.

1177
02:06:03,280 --> 02:06:05,280
.

1178
02:06:05,280 --> 02:06:07,280
.

1179
02:06:07,280 --> 02:06:09,280
.

1180
02:06:09,280 --> 02:06:11,280
.

1181
02:06:11,280 --> 02:06:13,280
.

1182
02:06:13,280 --> 02:06:15,280
.

1183
02:06:15,280 --> 02:06:17,280
.

1184
02:06:17,280 --> 02:06:19,280
.

1185
02:06:19,280 --> 02:06:21,280
.

1186
02:06:21,280 --> 02:06:23,280
.

1187
02:06:23,280 --> 02:06:25,280
.

1188
02:06:25,280 --> 02:06:27,280
.

1189
02:06:27,280 --> 02:06:29,280
.

1190
02:06:29,280 --> 02:06:31,280
.

1191
02:06:31,280 --> 02:06:33,280
.

1192
02:06:33,280 --> 02:06:35,280
.

1193
02:06:35,280 --> 02:06:37,280
.

1194
02:06:37,280 --> 02:06:39,280
.

1195
02:06:39,280 --> 02:06:41,280
.

1196
02:06:41,280 --> 02:06:43,280
.

1197
02:06:43,280 --> 02:06:45,280
.

1198
02:06:45,280 --> 02:06:47,280
.

1199
02:06:47,280 --> 02:06:49,280
.

1200
02:06:49,280 --> 02:06:51,280
.

1201
02:06:51,280 --> 02:06:53,280
.

1202
02:06:53,280 --> 02:06:55,280
.

1203
02:06:55,280 --> 02:06:57,280
.

1204
02:06:57,280 --> 02:06:59,280
.

1205
02:06:59,280 --> 02:07:01,280
.

1206
02:07:01,280 --> 02:07:03,280
.

1207
02:07:03,280 --> 02:07:05,280
.

1208
02:07:05,280 --> 02:07:07,280
.

1209
02:07:07,280 --> 02:07:09,280
.

1210
02:07:09,280 --> 02:07:11,280
.

1211
02:07:11,280 --> 02:07:13,280
.

1212
02:07:13,280 --> 02:07:15,280
.

1213
02:07:15,280 --> 02:07:17,280
.

1214
02:07:17,280 --> 02:07:19,280
.

1215
02:07:19,280 --> 02:07:21,280
.

1216
02:07:21,280 --> 02:07:23,280
.

1217
02:07:23,280 --> 02:07:25,280
.

1218
02:07:25,280 --> 02:07:27,280
.

1219
02:07:27,280 --> 02:07:29,280
.

1220
02:07:29,280 --> 02:07:31,280
.

1221
02:07:31,280 --> 02:07:33,280
.

1222
02:07:33,280 --> 02:07:35,280
.

1223
02:07:35,280 --> 02:07:37,280
.

1224
02:07:37,280 --> 02:07:39,280
.

1225
02:07:39,280 --> 02:07:41,280
.

1226
02:07:41,280 --> 02:07:43,280
.

1227
02:07:43,280 --> 02:07:45,280
.

1228
02:07:45,280 --> 02:07:47,280
.

1229
02:07:47,280 --> 02:07:49,280
.

1230
02:07:49,280 --> 02:07:51,280
.

1231
02:07:51,280 --> 02:07:53,280
.

1232
02:07:53,280 --> 02:07:55,280
.

1233
02:07:55,280 --> 02:07:57,280
.

1234
02:07:57,280 --> 02:07:59,280
.

1235
02:07:59,280 --> 02:08:01,280
.

1236
02:08:01,280 --> 02:08:03,280
.

1237
02:08:03,280 --> 02:08:05,280
.

1238
02:08:05,280 --> 02:08:07,280
.

1239
02:08:07,280 --> 02:08:09,280
.

1240
02:08:09,280 --> 02:08:11,280
.

1241
02:08:11,280 --> 02:08:13,280
.

1242
02:08:13,280 --> 02:08:15,280
.

1243
02:08:15,280 --> 02:08:17,280
.

1244
02:08:17,280 --> 02:08:19,280
.

1245
02:08:19,280 --> 02:08:21,280
.

1246
02:08:21,280 --> 02:08:23,280
.

1247
02:08:23,280 --> 02:08:25,280
.

1248
02:08:25,280 --> 02:08:27,280
.

1249
02:08:27,280 --> 02:08:29,280
.

1250
02:08:29,280 --> 02:08:31,280
.

1251
02:08:31,280 --> 02:08:33,280
.

1252
02:08:33,280 --> 02:08:35,280
.

1253
02:08:35,280 --> 02:08:37,280
.

1254
02:08:37,280 --> 02:08:39,280
.

1255
02:08:39,280 --> 02:08:41,280
.

1256
02:08:41,280 --> 02:08:43,280
.

1257
02:08:43,280 --> 02:08:45,280
.

1258
02:08:45,280 --> 02:08:47,280
.

1259
02:08:47,280 --> 02:08:49,280
.

1260
02:08:49,280 --> 02:08:51,280
.

1261
02:08:51,280 --> 02:08:53,280
.

1262
02:08:53,280 --> 02:08:55,280
.

1263
02:08:55,280 --> 02:08:57,280
.

1264
02:08:57,280 --> 02:08:59,280
.

1265
02:08:59,280 --> 02:09:01,280
.

1266
02:09:01,280 --> 02:09:03,280
.

1267
02:09:03,280 --> 02:09:05,280
.

1268
02:09:05,280 --> 02:09:07,280
.

1269
02:09:07,280 --> 02:09:09,280
.

1270
02:09:09,280 --> 02:09:11,280
.

1271
02:09:11,280 --> 02:09:13,280
.

1272
02:09:13,280 --> 02:09:15,280
.

1273
02:09:15,280 --> 02:09:17,280
.

1274
02:09:17,280 --> 02:09:19,280
.

1275
02:09:19,280 --> 02:09:21,280
.

1276
02:09:21,280 --> 02:09:23,280
.

1277
02:09:23,280 --> 02:09:25,280
.

1278
02:09:25,280 --> 02:09:27,280
.

1279
02:09:27,280 --> 02:09:29,280
.

1280
02:09:29,280 --> 02:09:31,280
.

1281
02:09:31,280 --> 02:09:33,280
.

1282
02:09:33,280 --> 02:09:35,280
.

1283
02:09:35,280 --> 02:09:37,280
.

1284
02:09:37,280 --> 02:09:39,280
.

1285
02:09:39,280 --> 02:09:41,280
.

1286
02:09:41,280 --> 02:09:43,280
.

1287
02:09:43,280 --> 02:09:45,280
.

1288
02:09:45,280 --> 02:09:47,280
.

1289
02:09:47,280 --> 02:09:49,280
.

1290
02:09:49,280 --> 02:09:51,280
.

1291
02:09:51,280 --> 02:09:53,280
.

1292
02:09:53,280 --> 02:09:55,280
.

1293
02:09:55,280 --> 02:09:57,280
.

1294
02:09:57,280 --> 02:09:59,280
.

1295
02:09:59,280 --> 02:10:01,280
.

1296
02:10:01,280 --> 02:10:03,280
.

1297
02:10:03,280 --> 02:10:05,280
.

1298
02:10:05,280 --> 02:10:07,280
.

1299
02:10:07,280 --> 02:10:09,280
.

1300
02:10:09,280 --> 02:10:11,280
.

1301
02:10:11,280 --> 02:10:13,280
.

1302
02:10:13,280 --> 02:10:15,280
.

1303
02:10:15,280 --> 02:10:17,280
.

1304
02:10:17,280 --> 02:10:19,280
.

1305
02:10:19,280 --> 02:10:21,280
.

1306
02:10:21,280 --> 02:10:23,280
.

1307
02:10:23,280 --> 02:10:25,280
.

1308
02:10:25,280 --> 02:10:27,280
.

1309
02:10:27,280 --> 02:10:29,280
.

1310
02:10:29,280 --> 02:10:31,280
.

1311
02:10:31,280 --> 02:10:33,280
.

1312
02:10:33,280 --> 02:10:35,280
.

1313
02:10:35,280 --> 02:10:37,280
.

1314
02:10:37,280 --> 02:10:39,280
.

1315
02:10:39,280 --> 02:10:41,280
.

1316
02:10:41,280 --> 02:10:43,280
.

1317
02:10:43,280 --> 02:10:45,280
.

1318
02:10:45,280 --> 02:10:47,280
.

1319
02:10:47,280 --> 02:10:49,280
.

1320
02:10:49,280 --> 02:10:51,280
.

1321
02:10:51,280 --> 02:10:53,280
.

1322
02:10:53,280 --> 02:10:55,280
.

1323
02:10:55,280 --> 02:10:57,280
.

1324
02:10:57,280 --> 02:10:59,280
.

1325
02:10:59,280 --> 02:11:01,280
.

1326
02:11:01,280 --> 02:11:03,280
.

1327
02:11:03,280 --> 02:11:05,280
.

1328
02:11:05,280 --> 02:11:07,280
.

1329
02:11:07,280 --> 02:11:09,280
.

1330
02:11:09,280 --> 02:11:11,280
.

1331
02:11:11,280 --> 02:11:13,280
.

1332
02:11:13,280 --> 02:11:15,280
.

1333
02:11:15,280 --> 02:11:17,280
.

1334
02:11:17,280 --> 02:11:19,280
.

1335
02:11:19,280 --> 02:11:21,280
.

1336
02:11:21,280 --> 02:11:23,280
.

1337
02:11:23,280 --> 02:11:25,280
.

1338
02:11:25,280 --> 02:11:27,280
.

1339
02:11:27,280 --> 02:11:29,280
.

1340
02:11:29,280 --> 02:11:31,280
.

1341
02:11:31,280 --> 02:11:33,280
.

1342
02:11:33,280 --> 02:11:35,280
.

1343
02:11:35,280 --> 02:11:37,280
.

1344
02:11:37,280 --> 02:11:39,280
.

1345
02:11:39,280 --> 02:11:41,280
.

1346
02:11:41,280 --> 02:11:43,280
.

1347
02:11:43,280 --> 02:11:45,280
.

1348
02:11:45,280 --> 02:11:47,280
.

1349
02:11:47,280 --> 02:11:49,280
.

1350
02:11:49,280 --> 02:11:51,280
.

1351
02:11:51,280 --> 02:11:53,280
.

1352
02:11:53,280 --> 02:11:55,280
.

1353
02:11:55,280 --> 02:11:57,280
.

1354
02:11:57,280 --> 02:11:59,280
.

1355
02:11:59,280 --> 02:12:01,280
.

1356
02:12:01,280 --> 02:12:03,280
.

1357
02:12:03,280 --> 02:12:05,280
.

1358
02:12:05,280 --> 02:12:07,280
.

1359
02:12:07,280 --> 02:12:09,280
.

1360
02:12:09,280 --> 02:12:11,280
.

1361
02:12:11,280 --> 02:12:13,280
.

1362
02:12:13,280 --> 02:12:15,280
.

1363
02:12:15,280 --> 02:12:17,280
.

1364
02:12:17,280 --> 02:12:19,280
.

1365
02:12:19,280 --> 02:12:21,280
.

1366
02:12:21,280 --> 02:12:23,280
.

1367
02:12:23,280 --> 02:12:25,280
.

1368
02:12:25,280 --> 02:12:27,280
.

1369
02:12:27,280 --> 02:12:29,280
.

1370
02:12:29,280 --> 02:12:31,280
.

1371
02:12:31,280 --> 02:12:33,280
.

1372
02:12:33,280 --> 02:12:35,280
.

1373
02:12:35,280 --> 02:12:37,280
.

1374
02:12:37,280 --> 02:12:39,280
.

1375
02:12:39,280 --> 02:12:41,280
.

1376
02:12:41,280 --> 02:12:43,280
.

1377
02:12:43,280 --> 02:12:45,280
.

1378
02:12:45,280 --> 02:12:47,280
.

1379
02:12:47,280 --> 02:12:49,280
.

1380
02:12:49,280 --> 02:12:51,280
.

1381
02:12:51,280 --> 02:12:53,280
.

1382
02:12:53,280 --> 02:12:55,280
.

1383
02:12:55,280 --> 02:12:57,280
.

1384
02:12:57,280 --> 02:12:59,280
.

1385
02:12:59,280 --> 02:13:01,280
.

1386
02:13:01,280 --> 02:13:03,280
.

1387
02:13:03,280 --> 02:13:05,280
.

1388
02:13:05,280 --> 02:13:07,280
.

1389
02:13:07,280 --> 02:13:09,280
.

1390
02:13:09,280 --> 02:13:11,280
.

1391
02:13:11,280 --> 02:13:13,280
.

1392
02:13:13,280 --> 02:13:15,280
.

1393
02:13:15,280 --> 02:13:17,280
.

1394
02:13:17,280 --> 02:13:19,280
.

1395
02:13:19,280 --> 02:13:21,280
.

1396
02:13:21,280 --> 02:13:23,280
.

1397
02:13:23,280 --> 02:13:25,280
.

1398
02:13:25,280 --> 02:13:27,280
.

1399
02:13:27,280 --> 02:13:29,280
.

1400
02:13:29,280 --> 02:13:31,280
.

1401
02:13:31,280 --> 02:13:33,280
.

1402
02:13:33,280 --> 02:13:35,280
.

1403
02:13:35,280 --> 02:13:37,280
.

1404
02:13:37,280 --> 02:13:39,280
.

1405
02:13:39,280 --> 02:13:41,280
.

1406
02:13:41,280 --> 02:13:43,280
.

1407
02:13:43,280 --> 02:13:45,280
.

1408
02:13:45,280 --> 02:13:47,280
.

1409
02:13:47,280 --> 02:13:49,280
.

1410
02:13:49,280 --> 02:13:51,280
.

1411
02:13:51,280 --> 02:13:53,280
.

1412
02:13:53,280 --> 02:13:55,280
.

1413
02:13:55,280 --> 02:13:57,280
.

1414
02:13:57,280 --> 02:13:59,280
.

1415
02:13:59,280 --> 02:14:01,280
.

1416
02:14:01,280 --> 02:14:03,280
.

1417
02:14:03,280 --> 02:14:05,280
.

1418
02:14:05,280 --> 02:14:07,280
.

1419
02:14:07,280 --> 02:14:09,280
.

1420
02:14:09,280 --> 02:14:11,280
.

1421
02:14:11,280 --> 02:14:13,280
.

1422
02:14:13,280 --> 02:14:15,280
.

1423
02:14:15,280 --> 02:14:17,280
.

1424
02:14:17,280 --> 02:14:19,280
.

1425
02:14:19,280 --> 02:14:21,280
.

1426
02:14:21,280 --> 02:14:23,280
.

1427
02:14:23,280 --> 02:14:25,280
.

1428
02:14:25,280 --> 02:14:27,280
.

1429
02:14:27,280 --> 02:14:29,280
.

1430
02:14:29,280 --> 02:14:31,280
.

1431
02:14:31,280 --> 02:14:33,280
.

1432
02:14:33,280 --> 02:14:35,280
.

1433
02:14:35,280 --> 02:14:37,280
.

1434
02:14:37,280 --> 02:14:39,280
.

1435
02:14:39,280 --> 02:14:41,280
.

1436
02:14:41,280 --> 02:14:43,280
.

1437
02:14:43,280 --> 02:14:45,280
.

1438
02:14:45,280 --> 02:14:47,280
.

1439
02:14:47,280 --> 02:14:49,280
.

1440
02:14:49,280 --> 02:14:51,280
.

1441
02:14:51,280 --> 02:14:53,280
.

1442
02:14:53,280 --> 02:14:55,280
.

1443
02:14:55,280 --> 02:14:57,280
.

1444
02:14:57,280 --> 02:14:59,280
.

1445
02:14:59,280 --> 02:15:01,280
.

1446
02:15:01,280 --> 02:15:03,280
.

1447
02:15:03,280 --> 02:15:05,280
.

1448
02:15:05,280 --> 02:15:07,280
.

1449
02:15:07,280 --> 02:15:09,280
.

1450
02:15:09,280 --> 02:15:11,280
.

1451
02:15:11,280 --> 02:15:13,280
.

1452
02:15:13,280 --> 02:15:15,280
.

1453
02:15:15,280 --> 02:15:17,280
.

1454
02:15:17,280 --> 02:15:19,280
.

1455
02:15:19,280 --> 02:15:21,280
.

1456
02:15:21,280 --> 02:15:23,280
.

1457
02:15:23,280 --> 02:15:25,280
.

1458
02:15:25,280 --> 02:15:27,280
.

1459
02:15:27,280 --> 02:15:29,280
.

1460
02:15:29,280 --> 02:15:31,280
.

1461
02:15:31,280 --> 02:15:33,280
.

1462
02:15:33,280 --> 02:15:35,280
.

1463
02:15:35,280 --> 02:15:37,280
.

1464
02:15:37,280 --> 02:15:39,280
.

1465
02:15:39,280 --> 02:15:41,280
.

1466
02:15:41,280 --> 02:15:43,280
.

1467
02:15:43,280 --> 02:15:45,280
.

1468
02:15:45,280 --> 02:15:47,280
.

1469
02:15:47,280 --> 02:15:49,280
.

1470
02:15:49,280 --> 02:15:51,280
.

1471
02:15:51,280 --> 02:15:53,280
.

1472
02:15:53,280 --> 02:15:55,280
.

1473
02:15:55,280 --> 02:15:57,280
.

1474
02:15:57,280 --> 02:15:59,280
.

1475
02:15:59,280 --> 02:16:01,280
.

1476
02:16:01,280 --> 02:16:03,280
.

1477
02:16:03,280 --> 02:16:05,280
.

1478
02:16:05,280 --> 02:16:07,280
.

1479
02:16:07,280 --> 02:16:09,280
.

1480
02:16:09,280 --> 02:16:11,280
.

1481
02:16:11,280 --> 02:16:13,280
.

1482
02:16:13,280 --> 02:16:15,280
.

1483
02:16:15,280 --> 02:16:17,280
.

1484
02:16:17,280 --> 02:16:19,280
.

1485
02:16:19,280 --> 02:16:21,280
.

1486
02:16:21,280 --> 02:16:23,280
.

1487
02:16:23,280 --> 02:16:25,280
.

1488
02:16:25,280 --> 02:16:27,280
.

1489
02:16:27,280 --> 02:16:29,280
.

1490
02:16:29,280 --> 02:16:31,280
.

1491
02:16:31,280 --> 02:16:33,280
.

1492
02:16:33,280 --> 02:16:35,280
.

1493
02:16:35,280 --> 02:16:37,280
.

1494
02:16:37,280 --> 02:16:39,280
.

1495
02:16:39,280 --> 02:16:41,280
.

1496
02:16:41,280 --> 02:16:43,280
.

1497
02:16:43,280 --> 02:16:45,280
.

1498
02:16:45,280 --> 02:16:47,280
.

1499
02:16:47,280 --> 02:16:49,280
.

1500
02:16:49,280 --> 02:16:51,280
.

1501
02:16:51,280 --> 02:16:53,280
.

1502
02:16:53,280 --> 02:16:55,280
.

1503
02:16:55,280 --> 02:16:57,280
.

1504
02:16:57,280 --> 02:16:59,280
.

1505
02:16:59,280 --> 02:17:01,280
.

1506
02:17:01,280 --> 02:17:03,280
.

1507
02:17:03,280 --> 02:17:05,280
.

1508
02:17:05,280 --> 02:17:07,280
.

1509
02:17:07,280 --> 02:17:09,280
.

1510
02:17:09,280 --> 02:17:11,280
.

1511
02:17:11,280 --> 02:17:13,280
.

1512
02:17:13,280 --> 02:17:15,280
.

1513
02:17:15,280 --> 02:17:17,280
.

1514
02:17:17,280 --> 02:17:19,280
.

1515
02:17:19,280 --> 02:17:21,280
.

1516
02:17:21,280 --> 02:17:23,280
.

1517
02:17:23,280 --> 02:17:25,280
.

1518
02:17:25,280 --> 02:17:27,280
.

1519
02:17:27,280 --> 02:17:29,280
.

1520
02:17:29,280 --> 02:17:31,280
.

1521
02:17:31,280 --> 02:17:33,280
.

1522
02:17:33,280 --> 02:17:35,280
.

1523
02:17:35,280 --> 02:17:37,280
.

1524
02:17:37,280 --> 02:17:39,280
.

1525
02:17:39,280 --> 02:17:41,280
.

1526
02:17:41,280 --> 02:17:43,280
.

1527
02:17:43,280 --> 02:17:45,280
.

1528
02:17:45,280 --> 02:17:47,280
.

1529
02:17:47,280 --> 02:17:49,280
.

1530
02:17:49,280 --> 02:17:51,280
.

1531
02:17:51,280 --> 02:17:53,280
.

1532
02:17:53,280 --> 02:17:55,280
.

1533
02:17:55,280 --> 02:17:57,280
.

1534
02:17:57,280 --> 02:17:59,280
.

1535
02:17:59,280 --> 02:18:01,280
.

1536
02:18:01,280 --> 02:18:03,280
.

1537
02:18:03,280 --> 02:18:05,280
.

1538
02:18:05,280 --> 02:18:07,280
.

1539
02:18:07,280 --> 02:18:09,280
.

1540
02:18:09,280 --> 02:18:11,280
.

1541
02:18:11,280 --> 02:18:13,280
.

1542
02:18:13,280 --> 02:18:15,280
.

1543
02:18:15,280 --> 02:18:17,280
.

1544
02:18:17,280 --> 02:18:19,280
.

1545
02:18:19,280 --> 02:18:21,280
.

1546
02:18:21,280 --> 02:18:23,280
.

1547
02:18:23,280 --> 02:18:25,280
.

1548
02:18:25,280 --> 02:18:27,280
.

1549
02:18:27,280 --> 02:18:29,280
.

1550
02:18:29,280 --> 02:18:31,280
.

1551
02:18:31,280 --> 02:18:33,280
.

1552
02:18:33,280 --> 02:18:35,280
.

1553
02:18:35,280 --> 02:18:37,280
.

1554
02:18:37,280 --> 02:18:39,280
.

1555
02:18:39,280 --> 02:18:41,280
.

1556
02:18:41,280 --> 02:18:43,280
.

1557
02:18:43,280 --> 02:18:45,280
.

1558
02:18:45,280 --> 02:18:47,280
.

1559
02:18:47,280 --> 02:18:49,280
.

1560
02:18:49,280 --> 02:18:51,280
.

1561
02:18:51,280 --> 02:18:53,280
.

1562
02:18:53,280 --> 02:18:55,280
.

1563
02:18:55,280 --> 02:18:57,280
.

1564
02:18:57,280 --> 02:18:59,280
.

1565
02:18:59,280 --> 02:19:01,280
.

1566
02:19:01,280 --> 02:19:03,280
.

1567
02:19:03,280 --> 02:19:05,280
.

1568
02:19:05,280 --> 02:19:07,280
.

1569
02:19:07,280 --> 02:19:09,280
.

1570
02:19:09,280 --> 02:19:11,280
.

1571
02:19:11,280 --> 02:19:13,280
.

1572
02:19:13,280 --> 02:19:15,280
.

1573
02:19:15,280 --> 02:19:17,280
.

1574
02:19:17,280 --> 02:19:19,280
.

1575
02:19:19,280 --> 02:19:21,280
.

1576
02:19:21,280 --> 02:19:23,280
.

1577
02:19:23,280 --> 02:19:25,280
.

1578
02:19:25,280 --> 02:19:27,280
.

1579
02:19:27,280 --> 02:19:29,280
.

1580
02:19:29,280 --> 02:19:31,280
.

1581
02:19:31,280 --> 02:19:33,280
.

1582
02:19:33,280 --> 02:19:35,280
.

1583
02:19:35,280 --> 02:19:37,280
.

1584
02:19:37,280 --> 02:19:39,280
.

1585
02:19:39,280 --> 02:19:41,280
.

1586
02:19:41,280 --> 02:19:43,280
.

1587
02:19:43,280 --> 02:19:45,280
.

1588
02:19:45,280 --> 02:19:47,280
.

1589
02:19:47,280 --> 02:19:49,280
.

1590
02:19:49,280 --> 02:19:51,280
.

1591
02:19:51,280 --> 02:19:53,280
.

1592
02:19:53,280 --> 02:19:55,280
.

1593
02:19:55,280 --> 02:19:57,280
.

1594
02:19:57,280 --> 02:19:59,280
.

1595
02:19:59,280 --> 02:20:01,280
.

1596
02:20:01,280 --> 02:20:03,280
.

1597
02:20:03,280 --> 02:20:05,280
.

1598
02:20:05,280 --> 02:20:07,280
.

1599
02:20:07,280 --> 02:20:09,280
.

1600
02:20:09,280 --> 02:20:11,280
.

1601
02:20:11,280 --> 02:20:13,280
.

1602
02:20:13,280 --> 02:20:15,280
.

1603
02:20:15,280 --> 02:20:17,280
.

1604
02:20:17,280 --> 02:20:19,280
.

1605
02:20:19,280 --> 02:20:21,280
.

1606
02:20:21,280 --> 02:20:23,280
.

1607
02:20:23,280 --> 02:20:25,280
.

1608
02:20:25,280 --> 02:20:27,280
.

1609
02:20:27,280 --> 02:20:29,280
.

1610
02:20:29,280 --> 02:20:31,280
.

1611
02:20:31,280 --> 02:20:33,280
.

1612
02:20:33,280 --> 02:20:35,280
.

1613
02:20:35,280 --> 02:20:37,280
.

1614
02:20:37,280 --> 02:20:39,280
.

1615
02:20:39,280 --> 02:20:41,280
.

1616
02:20:41,280 --> 02:20:43,280
.

1617
02:20:43,280 --> 02:20:45,280
.

1618
02:20:45,280 --> 02:20:47,280
.

1619
02:20:47,280 --> 02:20:49,280
.

1620
02:20:49,280 --> 02:20:51,280
.

1621
02:20:51,280 --> 02:20:53,280
.

1622
02:20:53,280 --> 02:20:55,280
.

1623
02:20:55,280 --> 02:20:57,280
.

1624
02:20:57,280 --> 02:20:59,280
.

1625
02:20:59,280 --> 02:21:01,280
.

1626
02:21:01,280 --> 02:21:03,280
.

1627
02:21:03,280 --> 02:21:05,280
.

1628
02:21:05,280 --> 02:21:07,280
.

1629
02:21:07,280 --> 02:21:09,280
.

1630
02:21:09,280 --> 02:21:11,280
.

1631
02:21:11,280 --> 02:21:13,280
.

1632
02:21:13,280 --> 02:21:15,280
.

1633
02:21:15,280 --> 02:21:17,280
.

1634
02:21:17,280 --> 02:21:19,280
.

1635
02:21:19,280 --> 02:21:21,280
.

1636
02:21:21,280 --> 02:21:23,280
.

1637
02:21:23,280 --> 02:21:25,280
.

1638
02:21:25,280 --> 02:21:27,280
.

1639
02:21:27,280 --> 02:21:29,280
.

1640
02:21:29,280 --> 02:21:31,280
.

1641
02:21:31,280 --> 02:21:33,280
.

1642
02:21:33,280 --> 02:21:35,280
.

1643
02:21:35,280 --> 02:21:37,280
.

1644
02:21:37,280 --> 02:21:39,280
.

1645
02:21:39,280 --> 02:21:41,280
.

1646
02:21:41,280 --> 02:21:43,280
.

1647
02:21:43,280 --> 02:21:45,280
.

1648
02:21:45,280 --> 02:21:47,280
.

1649
02:21:47,280 --> 02:21:49,280
.

1650
02:21:49,280 --> 02:21:51,280
.

1651
02:21:51,280 --> 02:21:53,280
.

1652
02:21:53,280 --> 02:21:55,280
.

1653
02:21:55,280 --> 02:21:57,280
.

1654
02:21:57,280 --> 02:21:59,280
.

1655
02:21:59,280 --> 02:22:01,280
.

1656
02:22:01,280 --> 02:22:03,280
.

1657
02:22:03,280 --> 02:22:05,280
.

1658
02:22:05,280 --> 02:22:07,280
.

1659
02:22:07,280 --> 02:22:09,280
.

1660
02:22:09,280 --> 02:22:11,280
.

1661
02:22:11,280 --> 02:22:13,280
.

1662
02:22:13,280 --> 02:22:15,280
.

1663
02:22:15,280 --> 02:22:17,280
.

1664
02:22:17,280 --> 02:22:19,280
.

1665
02:22:19,280 --> 02:22:21,280
.

1666
02:22:21,280 --> 02:22:23,280
.

1667
02:22:23,280 --> 02:22:25,280
.

1668
02:22:25,280 --> 02:22:27,280
.

1669
02:22:27,280 --> 02:22:29,280
.

1670
02:22:29,280 --> 02:22:31,280
.

1671
02:22:31,280 --> 02:22:33,280
.

1672
02:22:33,280 --> 02:22:35,280
.

1673
02:22:35,280 --> 02:22:37,280
.

1674
02:22:37,280 --> 02:22:39,280
.

1675
02:22:39,280 --> 02:22:41,280
.

1676
02:22:41,280 --> 02:22:43,280
.

1677
02:22:43,280 --> 02:22:45,280
.

1678
02:22:45,280 --> 02:22:47,280
.

1679
02:22:47,280 --> 02:22:49,280
.

1680
02:22:49,280 --> 02:22:51,280
.

1681
02:22:51,280 --> 02:22:53,280
.

1682
02:22:53,280 --> 02:22:55,280
.

1683
02:22:55,280 --> 02:22:57,280
.

1684
02:22:57,280 --> 02:22:59,280
.

1685
02:22:59,280 --> 02:23:01,280
.

1686
02:23:01,280 --> 02:23:03,280
.

1687
02:23:03,280 --> 02:23:05,280
.

1688
02:23:05,280 --> 02:23:07,280
.

1689
02:23:07,280 --> 02:23:09,280
.

1690
02:23:09,280 --> 02:23:11,280
.

1691
02:23:11,280 --> 02:23:13,280
.

1692
02:23:13,280 --> 02:23:15,280
.

1693
02:23:15,280 --> 02:23:17,280
.

1694
02:23:17,280 --> 02:23:19,280
.

1695
02:23:19,280 --> 02:23:21,280
.

1696
02:23:21,280 --> 02:23:23,280
.

1697
02:23:23,280 --> 02:23:25,280
.

1698
02:23:25,280 --> 02:23:27,280
.

1699
02:23:27,280 --> 02:23:29,280
.

1700
02:23:29,280 --> 02:23:31,280
.

1701
02:23:31,280 --> 02:23:33,280
.

1702
02:23:33,280 --> 02:23:35,280
.

1703
02:23:35,280 --> 02:23:37,280
.

1704
02:23:37,280 --> 02:23:39,280
.

1705
02:23:39,280 --> 02:23:41,280
.

1706
02:23:41,280 --> 02:23:43,280
.

1707
02:23:43,280 --> 02:23:45,280
.

1708
02:23:45,280 --> 02:23:47,280
.

1709
02:23:47,280 --> 02:23:49,280
.

1710
02:23:49,280 --> 02:23:51,280
.

1711
02:23:51,280 --> 02:23:53,280
.

1712
02:23:53,280 --> 02:23:55,280
.

1713
02:23:55,280 --> 02:23:57,280
.

1714
02:23:57,280 --> 02:23:59,280
.

1715
02:23:59,280 --> 02:24:01,280
.

1716
02:24:01,280 --> 02:24:03,280
.

1717
02:24:03,280 --> 02:24:05,280
.

1718
02:24:05,280 --> 02:24:07,280
.

1719
02:24:07,280 --> 02:24:09,280
.

1720
02:24:09,280 --> 02:24:11,280
.

1721
02:24:11,280 --> 02:24:13,280
.

1722
02:24:13,280 --> 02:24:15,280
.

1723
02:24:15,280 --> 02:24:17,280
.

1724
02:24:17,280 --> 02:24:19,280
.

1725
02:24:19,280 --> 02:24:21,280
.

1726
02:24:21,280 --> 02:24:23,280
.

1727
02:24:23,280 --> 02:24:25,280
.

1728
02:24:25,280 --> 02:24:27,280
.

1729
02:24:27,280 --> 02:24:29,280
.

1730
02:24:29,280 --> 02:24:31,280
.

1731
02:24:31,280 --> 02:24:33,280
.

1732
02:24:33,280 --> 02:24:35,280
.

1733
02:24:35,280 --> 02:24:37,280
.

1734
02:24:37,280 --> 02:24:39,280
.

1735
02:24:39,280 --> 02:24:41,280
.

1736
02:24:41,280 --> 02:24:43,280
.

1737
02:24:43,280 --> 02:24:45,280
.

1738
02:24:45,280 --> 02:24:47,280
.

1739
02:24:47,280 --> 02:24:49,280
.

1740
02:24:49,280 --> 02:24:51,280
.

1741
02:24:51,280 --> 02:24:53,280
.

1742
02:24:53,280 --> 02:24:55,280
.

1743
02:24:55,280 --> 02:24:57,280
.

1744
02:24:57,280 --> 02:24:59,280
.

1745
02:24:59,280 --> 02:25:01,280
.

1746
02:25:01,280 --> 02:25:03,280
.

1747
02:25:03,280 --> 02:25:05,280
.

1748
02:25:05,280 --> 02:25:07,280
.

1749
02:25:07,280 --> 02:25:09,280
.

1750
02:25:09,280 --> 02:25:11,280
.

1751
02:25:11,280 --> 02:25:13,280
.

1752
02:25:13,280 --> 02:25:15,280
.

1753
02:25:15,280 --> 02:25:17,280
.

1754
02:25:17,280 --> 02:25:19,280
.

1755
02:25:19,280 --> 02:25:21,280
.

1756
02:25:21,280 --> 02:25:23,280
.

1757
02:25:23,280 --> 02:25:25,280
.

1758
02:25:25,280 --> 02:25:27,280
.

1759
02:25:27,280 --> 02:25:29,280
.

1760
02:25:29,280 --> 02:25:31,280
.

1761
02:25:31,280 --> 02:25:33,280
.

1762
02:25:33,280 --> 02:25:35,280
.

1763
02:25:35,280 --> 02:25:37,280
.

1764
02:25:37,280 --> 02:25:39,280
.

1765
02:25:39,280 --> 02:25:41,280
.

1766
02:25:41,280 --> 02:25:43,280
.

1767
02:25:43,280 --> 02:25:45,280
.

1768
02:25:45,280 --> 02:25:47,280
.

1769
02:25:47,280 --> 02:25:49,280
.

1770
02:25:49,280 --> 02:25:51,280
.

1771
02:25:51,280 --> 02:25:53,280
.

1772
02:25:53,280 --> 02:25:55,280
.

1773
02:25:55,280 --> 02:25:57,280
.

1774
02:25:57,280 --> 02:25:59,280
.

1775
02:25:59,280 --> 02:26:01,280
.

1776
02:26:01,280 --> 02:26:03,280
.

1777
02:26:03,280 --> 02:26:05,280
.

1778
02:26:05,280 --> 02:26:07,280
.

1779
02:26:07,280 --> 02:26:09,280
.

1780
02:26:09,280 --> 02:26:11,280
.

1781
02:26:11,280 --> 02:26:13,280
.

1782
02:26:13,280 --> 02:26:15,280
.

1783
02:26:15,280 --> 02:26:17,280
.

1784
02:26:17,280 --> 02:26:19,280
.

1785
02:26:19,280 --> 02:26:21,280
.

1786
02:26:21,280 --> 02:26:23,280
.

1787
02:26:23,280 --> 02:26:25,280
.

1788
02:26:25,280 --> 02:26:27,280
.

1789
02:26:27,280 --> 02:26:29,280
.

1790
02:26:29,280 --> 02:26:31,280
.

1791
02:26:31,280 --> 02:26:33,280
.

1792
02:26:33,280 --> 02:26:35,280
.

1793
02:26:35,280 --> 02:26:37,280
.

1794
02:26:37,280 --> 02:26:39,280
.

1795
02:26:39,280 --> 02:26:41,280
.

1796
02:26:41,280 --> 02:26:43,280
.

1797
02:26:43,280 --> 02:26:45,280
.

1798
02:26:45,280 --> 02:26:47,280
.

1799
02:26:47,280 --> 02:26:49,280
.

1800
02:26:49,280 --> 02:26:51,280
.

1801
02:26:51,280 --> 02:26:53,280
.

1802
02:26:53,280 --> 02:26:55,280
.

1803
02:26:55,280 --> 02:26:57,280
.

1804
02:26:57,280 --> 02:26:59,280
.

1805
02:26:59,280 --> 02:27:01,280
.

1806
02:27:01,280 --> 02:27:03,280
.

1807
02:27:03,280 --> 02:27:05,280
.

1808
02:27:05,280 --> 02:27:07,280
.

1809
02:27:07,280 --> 02:27:09,280
.

1810
02:27:09,280 --> 02:27:11,280
.

1811
02:27:11,280 --> 02:27:13,280
.

1812
02:27:13,280 --> 02:27:15,280
.

1813
02:27:15,280 --> 02:27:17,280
.

1814
02:27:17,280 --> 02:27:19,280
.

1815
02:27:19,280 --> 02:27:21,280
.

1816
02:27:21,280 --> 02:27:23,280
.

1817
02:27:23,280 --> 02:27:25,280
.

1818
02:27:25,280 --> 02:27:27,280
.

1819
02:27:27,280 --> 02:27:29,280
.

1820
02:27:29,280 --> 02:27:31,280
.

1821
02:27:31,280 --> 02:27:33,280
.

1822
02:27:33,280 --> 02:27:35,280
.

1823
02:27:35,280 --> 02:27:37,280
.

1824
02:27:37,280 --> 02:27:39,280
.

1825
02:27:39,280 --> 02:27:41,280
.

1826
02:27:41,280 --> 02:27:43,280
.

1827
02:27:43,280 --> 02:27:45,280
.

1828
02:27:45,280 --> 02:27:47,280
.

1829
02:27:47,280 --> 02:27:49,280
.

1830
02:27:49,280 --> 02:27:51,280
.

1831
02:27:51,280 --> 02:27:53,280
.

1832
02:27:53,280 --> 02:27:55,280
.

1833
02:27:55,280 --> 02:27:57,280
.

1834
02:27:57,280 --> 02:27:59,280
.

1835
02:27:59,280 --> 02:28:01,280
.

1836
02:28:01,280 --> 02:28:03,280
.

1837
02:28:03,280 --> 02:28:05,280
.

1838
02:28:05,280 --> 02:28:07,280
.

1839
02:28:07,280 --> 02:28:09,280
.

1840
02:28:09,280 --> 02:28:11,280
.

1841
02:28:11,280 --> 02:28:13,280
.

1842
02:28:13,280 --> 02:28:15,280
.

1843
02:28:15,280 --> 02:28:17,280
.

1844
02:28:17,280 --> 02:28:19,280
.

1845
02:28:19,280 --> 02:28:21,280
.

1846
02:28:21,280 --> 02:28:23,280
.

1847
02:28:23,280 --> 02:28:25,280
.

1848
02:28:25,280 --> 02:28:27,280
.

1849
02:28:27,280 --> 02:28:29,280
.

1850
02:28:29,280 --> 02:28:31,280
.

1851
02:28:31,280 --> 02:28:33,280
.

1852
02:28:33,280 --> 02:28:35,280
.

1853
02:28:35,280 --> 02:28:37,280
.

1854
02:28:37,280 --> 02:28:39,280
.

1855
02:28:39,280 --> 02:28:41,280
.

1856
02:28:41,280 --> 02:28:43,280
.

1857
02:28:43,280 --> 02:28:45,280
.

1858
02:28:45,280 --> 02:28:47,280
.

1859
02:28:47,280 --> 02:28:49,280
.

1860
02:28:49,280 --> 02:28:51,280
.

1861
02:28:51,280 --> 02:28:53,280
.

1862
02:28:53,280 --> 02:28:55,280
.

1863
02:28:55,280 --> 02:28:57,280
.

1864
02:28:57,280 --> 02:28:59,280
.

1865
02:28:59,280 --> 02:29:01,280
.

1866
02:29:01,280 --> 02:29:03,280
.

1867
02:29:03,280 --> 02:29:05,280
.

1868
02:29:05,280 --> 02:29:07,280
.

1869
02:29:07,280 --> 02:29:09,280
.

1870
02:29:09,280 --> 02:29:11,280
.

1871
02:29:11,280 --> 02:29:13,280
.

1872
02:29:13,280 --> 02:29:15,280
.

1873
02:29:15,280 --> 02:29:17,280
.

1874
02:29:17,280 --> 02:29:19,280
.

1875
02:29:19,280 --> 02:29:21,280
.

1876
02:29:21,280 --> 02:29:23,280
.

1877
02:29:23,280 --> 02:29:25,280
.

1878
02:29:25,280 --> 02:29:27,280
.

1879
02:29:27,280 --> 02:29:29,280
.

1880
02:29:29,280 --> 02:29:31,280
.

1881
02:29:31,280 --> 02:29:33,280
.

1882
02:29:33,280 --> 02:29:35,280
.

1883
02:29:35,280 --> 02:29:37,280
.

1884
02:29:37,280 --> 02:29:39,280
.

1885
02:29:39,280 --> 02:29:41,280
.

1886
02:29:41,280 --> 02:29:43,280
.

1887
02:29:43,280 --> 02:29:45,280
.

1888
02:29:45,280 --> 02:29:47,280
.

1889
02:29:47,280 --> 02:29:49,280
.

1890
02:29:49,280 --> 02:29:51,280
.

1891
02:29:51,280 --> 02:29:53,280
.

1892
02:29:53,280 --> 02:29:55,280
.

1893
02:29:55,280 --> 02:29:57,280
.

1894
02:29:57,280 --> 02:29:59,280
.

1895
02:29:59,280 --> 02:30:01,280
.

1896
02:30:01,280 --> 02:30:03,280
.

1897
02:30:03,280 --> 02:30:05,280
.

1898
02:30:05,280 --> 02:30:07,280
.

1899
02:30:07,280 --> 02:30:09,280
.

1900
02:30:09,280 --> 02:30:11,280
.

1901
02:30:11,280 --> 02:30:13,280
.

1902
02:30:13,280 --> 02:30:15,280
.

1903
02:30:15,280 --> 02:30:17,280
.

1904
02:30:17,280 --> 02:30:19,280
.

1905
02:30:19,280 --> 02:30:21,280
.

1906
02:30:21,280 --> 02:30:23,280
.

1907
02:30:23,280 --> 02:30:25,280
.

1908
02:30:25,280 --> 02:30:27,280
.

1909
02:30:27,280 --> 02:30:29,280
.

1910
02:30:29,280 --> 02:30:31,280
.

1911
02:30:31,280 --> 02:30:33,280
.

1912
02:30:33,280 --> 02:30:35,280
.

1913
02:30:35,280 --> 02:30:37,280
.

1914
02:30:37,280 --> 02:30:39,280
.

1915
02:30:39,280 --> 02:30:41,280
.

1916
02:30:41,280 --> 02:30:43,280
.

1917
02:30:43,280 --> 02:30:45,280
.

1918
02:30:45,280 --> 02:30:47,280
.

1919
02:30:47,280 --> 02:30:49,280
.

1920
02:30:49,280 --> 02:30:51,280
.

1921
02:30:51,280 --> 02:30:53,280
.

1922
02:30:53,280 --> 02:30:55,280
.

1923
02:30:55,280 --> 02:30:57,280
.

1924
02:30:57,280 --> 02:30:59,280
.

1925
02:30:59,280 --> 02:31:01,280
.

1926
02:31:01,280 --> 02:31:03,280
.

1927
02:31:03,280 --> 02:31:05,280
.

1928
02:31:05,280 --> 02:31:07,280
.

1929
02:31:07,280 --> 02:31:09,280
.

1930
02:31:09,280 --> 02:31:11,280
.

1931
02:31:11,280 --> 02:31:13,280
.

1932
02:31:13,280 --> 02:31:15,280
.

1933
02:31:15,280 --> 02:31:17,280
.

1934
02:31:17,280 --> 02:31:19,280
.

1935
02:31:19,280 --> 02:31:21,280
.

1936
02:31:21,280 --> 02:31:23,280
.

1937
02:31:23,280 --> 02:31:25,280
.

1938
02:31:25,280 --> 02:31:27,280
.

1939
02:31:27,280 --> 02:31:29,280
.

1940
02:31:29,280 --> 02:31:31,280
.

1941
02:31:31,280 --> 02:31:33,280
.

1942
02:31:33,280 --> 02:31:35,280
.

1943
02:31:35,280 --> 02:31:37,280
.

1944
02:31:37,280 --> 02:31:39,280
.

1945
02:31:39,280 --> 02:31:41,280
.

1946
02:31:41,280 --> 02:31:43,280
.

1947
02:31:43,280 --> 02:31:45,280
.

1948
02:31:45,280 --> 02:31:47,280
.

1949
02:31:47,280 --> 02:31:49,280
.

1950
02:31:49,280 --> 02:31:51,280
.

1951
02:31:51,280 --> 02:31:53,280
.

1952
02:31:53,280 --> 02:31:55,280
.

1953
02:31:55,280 --> 02:31:57,280
.

1954
02:31:57,280 --> 02:31:59,280
.

1955
02:31:59,280 --> 02:32:01,280
.

1956
02:32:01,280 --> 02:32:03,280
.

1957
02:32:03,280 --> 02:32:05,280
.

1958
02:32:05,280 --> 02:32:07,280
.

1959
02:32:07,280 --> 02:32:09,280
.

1960
02:32:09,280 --> 02:32:11,280
.

1961
02:32:11,280 --> 02:32:13,280
.

1962
02:32:13,280 --> 02:32:15,280
.

1963
02:32:15,280 --> 02:32:17,280
.

1964
02:32:17,280 --> 02:32:19,280
.

1965
02:32:19,280 --> 02:32:21,280
.

1966
02:32:21,280 --> 02:32:23,280
.

1967
02:32:23,280 --> 02:32:25,280
.

1968
02:32:25,280 --> 02:32:27,280
.

1969
02:32:27,280 --> 02:32:29,280
.

1970
02:32:29,280 --> 02:32:31,280
.

1971
02:32:31,280 --> 02:32:33,280
.

1972
02:32:33,280 --> 02:32:35,280
.

1973
02:32:35,280 --> 02:32:37,280
.

1974
02:32:37,280 --> 02:32:39,280
.

1975
02:32:39,280 --> 02:32:41,280
.

1976
02:32:41,280 --> 02:32:43,280
.

1977
02:32:43,280 --> 02:32:45,280
.

1978
02:32:45,280 --> 02:32:47,280
.

1979
02:32:47,280 --> 02:32:49,280
.

1980
02:32:49,280 --> 02:32:51,280
.

1981
02:32:51,280 --> 02:32:53,280
.

1982
02:32:53,280 --> 02:32:55,280
.

1983
02:32:55,280 --> 02:32:57,280
.

1984
02:32:57,280 --> 02:32:59,280
.

1985
02:32:59,280 --> 02:33:01,280
.

1986
02:33:01,280 --> 02:33:03,280
.

1987
02:33:03,280 --> 02:33:05,280
.

1988
02:33:05,280 --> 02:33:07,280
.

1989
02:33:07,280 --> 02:33:09,280
.

1990
02:33:09,280 --> 02:33:11,280
.

1991
02:33:11,280 --> 02:33:13,280
.

1992
02:33:13,280 --> 02:33:15,280
.

1993
02:33:15,280 --> 02:33:17,280
.

1994
02:33:17,280 --> 02:33:19,280
.

1995
02:33:19,280 --> 02:33:21,280
.

1996
02:33:21,280 --> 02:33:23,280
.

1997
02:33:23,280 --> 02:33:25,280
.

1998
02:33:25,280 --> 02:33:27,280
.

1999
02:33:27,280 --> 02:33:29,280
.

2000
02:33:29,280 --> 02:33:31,280
.

2001
02:33:31,280 --> 02:33:33,280
.

2002
02:33:33,280 --> 02:33:35,280
.

2003
02:33:35,280 --> 02:33:37,280
.

2004
02:33:37,280 --> 02:33:39,280
.

2005
02:33:39,280 --> 02:33:41,280
.

2006
02:33:41,280 --> 02:33:43,280
.

2007
02:33:43,280 --> 02:33:45,280
.

2008
02:33:45,280 --> 02:33:47,280
.

2009
02:33:47,280 --> 02:33:49,280
.

2010
02:33:49,280 --> 02:33:51,280
.

2011
02:33:51,280 --> 02:33:53,280
.

2012
02:33:53,280 --> 02:33:55,280
.

2013
02:33:55,280 --> 02:33:57,280
.

2014
02:33:57,280 --> 02:33:59,280
.

2015
02:33:59,280 --> 02:34:01,280
.

2016
02:34:01,280 --> 02:34:03,280
.

2017
02:34:03,280 --> 02:34:05,280
.

2018
02:34:05,280 --> 02:34:07,280
.

2019
02:34:07,280 --> 02:34:09,280
.

2020
02:34:09,280 --> 02:34:11,280
.

2021
02:34:11,280 --> 02:34:13,280
.

2022
02:34:13,280 --> 02:34:15,280
.

2023
02:34:15,280 --> 02:34:17,280
.

2024
02:34:17,280 --> 02:34:19,280
.

2025
02:34:19,280 --> 02:34:21,280
.

2026
02:34:21,280 --> 02:34:23,280
.

2027
02:34:23,280 --> 02:34:25,280
.

2028
02:34:25,280 --> 02:34:27,280
.

2029
02:34:27,280 --> 02:34:29,280
.

2030
02:34:29,280 --> 02:34:31,280
.

2031
02:34:31,280 --> 02:34:33,280
.

2032
02:34:33,280 --> 02:34:35,280
.

2033
02:34:35,280 --> 02:34:37,280
.

2034
02:34:37,280 --> 02:34:39,280
.

2035
02:34:39,280 --> 02:34:41,280
.

2036
02:34:41,280 --> 02:34:43,280
.

2037
02:34:43,280 --> 02:34:45,280
.

2038
02:34:45,280 --> 02:34:47,280
.

2039
02:34:47,280 --> 02:34:49,280
.

2040
02:34:49,280 --> 02:34:51,280
.

2041
02:34:51,280 --> 02:34:53,280
.

2042
02:34:53,280 --> 02:34:55,280
.

2043
02:34:55,280 --> 02:34:57,280
.

2044
02:34:57,280 --> 02:34:59,280
.

2045
02:34:59,280 --> 02:35:01,280
.

2046
02:35:01,280 --> 02:35:03,280
.

2047
02:35:03,280 --> 02:35:05,280
.

2048
02:35:05,280 --> 02:35:07,280
.

2049
02:35:07,280 --> 02:35:09,280
.

2050
02:35:09,280 --> 02:35:11,280
.

2051
02:35:11,280 --> 02:35:13,280
.

2052
02:35:13,280 --> 02:35:15,280
.

2053
02:35:15,280 --> 02:35:17,280
.

2054
02:35:17,280 --> 02:35:19,280
.

2055
02:35:19,280 --> 02:35:21,280
.

2056
02:35:21,280 --> 02:35:23,280
.

2057
02:35:23,280 --> 02:35:25,280
.

2058
02:35:25,280 --> 02:35:27,280
.

2059
02:35:27,280 --> 02:35:29,280
.

2060
02:35:29,280 --> 02:35:31,280
.

2061
02:35:31,280 --> 02:35:33,280
.

2062
02:35:33,280 --> 02:35:35,280
.

2063
02:35:35,280 --> 02:35:37,280
.

2064
02:35:37,280 --> 02:35:39,280
.

2065
02:35:39,280 --> 02:35:41,280
.

2066
02:35:41,280 --> 02:35:43,280
.

2067
02:35:43,280 --> 02:35:45,280
.

2068
02:35:45,280 --> 02:35:47,280
.

2069
02:35:47,280 --> 02:35:49,280
.

2070
02:35:49,280 --> 02:35:51,280
.

2071
02:35:51,280 --> 02:35:53,280
.

2072
02:35:53,280 --> 02:35:55,280
.

2073
02:35:55,280 --> 02:35:57,280
.

2074
02:35:57,280 --> 02:35:59,280
.

2075
02:35:59,280 --> 02:36:01,280
.

2076
02:36:01,280 --> 02:36:03,280
.

2077
02:36:03,280 --> 02:36:05,280
.

2078
02:36:05,280 --> 02:36:07,280
.

2079
02:36:07,280 --> 02:36:09,280
.

2080
02:36:09,280 --> 02:36:11,280
.

2081
02:36:11,280 --> 02:36:13,280
.

2082
02:36:13,280 --> 02:36:15,280
.

2083
02:36:15,280 --> 02:36:17,280
.

2084
02:36:17,280 --> 02:36:19,280
.

2085
02:36:19,280 --> 02:36:21,280
.

2086
02:36:21,280 --> 02:36:23,280
.

2087
02:36:23,280 --> 02:36:25,280
.

2088
02:36:25,280 --> 02:36:27,280
.

2089
02:36:27,280 --> 02:36:29,280
.

2090
02:36:29,280 --> 02:36:31,280
.

2091
02:36:31,280 --> 02:36:33,280
.

2092
02:36:33,280 --> 02:36:35,280
.

2093
02:36:35,280 --> 02:36:37,280
.

2094
02:36:37,280 --> 02:36:39,280
.

2095
02:36:39,280 --> 02:36:41,280
.

2096
02:36:41,280 --> 02:36:43,280
.

2097
02:36:43,280 --> 02:36:45,280
.

2098
02:36:45,280 --> 02:36:47,280
.

2099
02:36:47,280 --> 02:36:49,280
.

2100
02:36:49,280 --> 02:36:51,280
.

2101
02:36:51,280 --> 02:36:53,280
.

2102
02:36:53,280 --> 02:36:55,280
.

2103
02:36:55,280 --> 02:36:57,280
.

2104
02:36:57,280 --> 02:36:59,280
.

2105
02:36:59,280 --> 02:37:01,280
.

2106
02:37:01,280 --> 02:37:03,280
.

2107
02:37:03,280 --> 02:37:05,280
.

2108
02:37:05,280 --> 02:37:07,280
.

2109
02:37:07,280 --> 02:37:09,280
.

2110
02:37:09,280 --> 02:37:11,280
.

2111
02:37:11,280 --> 02:37:13,280
.

2112
02:37:13,280 --> 02:37:15,280
.

2113
02:37:15,280 --> 02:37:17,280
.

2114
02:37:17,280 --> 02:37:19,280
.

2115
02:37:19,280 --> 02:37:21,280
.

2116
02:37:21,280 --> 02:37:23,280
.

2117
02:37:23,280 --> 02:37:25,280
.

2118
02:37:25,280 --> 02:37:27,280
.

2119
02:37:27,280 --> 02:37:29,280
.

2120
02:37:29,280 --> 02:37:31,280
.

2121
02:37:31,280 --> 02:37:33,280
.

2122
02:37:33,280 --> 02:37:35,280
.

2123
02:37:35,280 --> 02:37:37,280
.

2124
02:37:37,280 --> 02:37:39,280
.

2125
02:37:39,280 --> 02:37:41,280
.

2126
02:37:41,280 --> 02:37:43,280
.

2127
02:37:43,280 --> 02:37:45,280
.

2128
02:37:45,280 --> 02:37:47,280
.

2129
02:37:47,280 --> 02:37:49,280
.

2130
02:37:49,280 --> 02:37:51,280
.

2131
02:37:51,280 --> 02:37:53,280
.

2132
02:37:53,280 --> 02:37:55,280
.

2133
02:37:55,280 --> 02:37:57,280
.

2134
02:37:57,280 --> 02:37:59,280
.

2135
02:37:59,280 --> 02:38:01,280
.

2136
02:38:01,280 --> 02:38:03,280
.

2137
02:38:03,280 --> 02:38:05,280
.

2138
02:38:05,280 --> 02:38:07,280
.

2139
02:38:07,280 --> 02:38:09,280
.

2140
02:38:09,280 --> 02:38:11,280
.

2141
02:38:11,280 --> 02:38:13,280
.

2142
02:38:13,280 --> 02:38:15,280
.

2143
02:38:15,280 --> 02:38:17,280
.

2144
02:38:17,280 --> 02:38:19,280
.

2145
02:38:19,280 --> 02:38:21,280
.

2146
02:38:21,280 --> 02:38:23,280
.

2147
02:38:23,280 --> 02:38:25,280
.

2148
02:38:25,280 --> 02:38:27,280
.

2149
02:38:27,280 --> 02:38:29,280
.

2150
02:38:29,280 --> 02:38:31,280
.

2151
02:38:31,280 --> 02:38:33,280
.

2152
02:38:33,280 --> 02:38:35,280
.

2153
02:38:35,280 --> 02:38:37,280
.

2154
02:38:37,280 --> 02:38:39,280
.

2155
02:38:39,280 --> 02:38:41,280
.

2156
02:38:41,280 --> 02:38:43,280
.

2157
02:38:43,280 --> 02:38:45,280
.

2158
02:38:45,280 --> 02:38:47,280
.

2159
02:38:47,280 --> 02:38:49,280
.

2160
02:38:49,280 --> 02:38:51,280
.

2161
02:38:51,280 --> 02:38:53,280
.

2162
02:38:53,280 --> 02:38:55,280
.

2163
02:38:55,280 --> 02:38:57,280
.

2164
02:38:57,280 --> 02:38:59,280
.

2165
02:38:59,280 --> 02:39:01,280
.

2166
02:39:01,280 --> 02:39:03,280
.

2167
02:39:03,280 --> 02:39:05,280
.

2168
02:39:05,280 --> 02:39:07,280
.

2169
02:39:07,280 --> 02:39:09,280
.

2170
02:39:09,280 --> 02:39:11,280
.

2171
02:39:11,280 --> 02:39:13,280
.

2172
02:39:13,280 --> 02:39:15,280
.

2173
02:39:15,280 --> 02:39:17,280
.

2174
02:39:17,280 --> 02:39:19,280
.

2175
02:39:19,280 --> 02:39:21,280
.

2176
02:39:21,280 --> 02:39:23,280
.

2177
02:39:23,280 --> 02:39:25,280
.

2178
02:39:25,280 --> 02:39:27,280
.

2179
02:39:27,280 --> 02:39:29,280
.

2180
02:39:29,280 --> 02:39:31,280
.

2181
02:39:31,280 --> 02:39:33,280
.

2182
02:39:33,280 --> 02:39:35,280
.

2183
02:39:35,280 --> 02:39:37,280
.

2184
02:39:37,280 --> 02:39:39,280
.

2185
02:39:39,280 --> 02:39:41,280
.

2186
02:39:41,280 --> 02:39:43,280
.

2187
02:39:43,280 --> 02:39:45,280
.

2188
02:39:45,280 --> 02:39:47,280
.

2189
02:39:47,280 --> 02:39:49,280
.

2190
02:39:49,280 --> 02:39:51,280
.

2191
02:39:51,280 --> 02:39:53,280
.

2192
02:39:53,280 --> 02:39:55,280
.

2193
02:39:55,280 --> 02:39:57,280
.

2194
02:39:57,280 --> 02:39:59,280
.

2195
02:39:59,280 --> 02:40:01,280
.

2196
02:40:01,280 --> 02:40:03,280
.

2197
02:40:03,280 --> 02:40:05,280
.

2198
02:40:05,280 --> 02:40:07,280
.

2199
02:40:07,280 --> 02:40:09,280
.

2200
02:40:09,280 --> 02:40:11,280
.

2201
02:40:11,280 --> 02:40:13,280
.

2202
02:40:13,280 --> 02:40:15,280
.

2203
02:40:15,280 --> 02:40:17,280
.

2204
02:40:17,280 --> 02:40:19,280
.

2205
02:40:19,280 --> 02:40:21,280
.

2206
02:40:21,280 --> 02:40:23,280
.

2207
02:40:23,280 --> 02:40:25,280
.

2208
02:40:25,280 --> 02:40:27,280
.

2209
02:40:27,280 --> 02:40:29,280
.

2210
02:40:29,280 --> 02:40:31,280
.

2211
02:40:31,280 --> 02:40:33,280
.

2212
02:40:33,280 --> 02:40:35,280
.

2213
02:40:35,280 --> 02:40:37,280
.

2214
02:40:37,280 --> 02:40:39,280
.

2215
02:40:39,280 --> 02:40:41,280
.

2216
02:40:41,280 --> 02:40:43,280
.

2217
02:40:43,280 --> 02:40:45,280
.

2218
02:40:45,280 --> 02:40:47,280
.

2219
02:40:47,280 --> 02:40:49,280
.

2220
02:40:49,280 --> 02:40:51,280
.

2221
02:40:51,280 --> 02:40:53,280
.

2222
02:40:53,280 --> 02:40:55,280
.

2223
02:40:55,280 --> 02:40:57,280
.

2224
02:40:57,280 --> 02:40:59,280
.

2225
02:40:59,280 --> 02:41:01,280
.

2226
02:41:01,280 --> 02:41:03,280
.

2227
02:41:03,280 --> 02:41:05,280
.

2228
02:41:05,280 --> 02:41:07,280
.

2229
02:41:07,280 --> 02:41:09,280
.

2230
02:41:09,280 --> 02:41:11,280
.

2231
02:41:11,280 --> 02:41:13,280
.

2232
02:41:13,280 --> 02:41:15,280
.

2233
02:41:15,280 --> 02:41:17,280
.

2234
02:41:17,280 --> 02:41:19,280
.

2235
02:41:19,280 --> 02:41:21,280
.

2236
02:41:21,280 --> 02:41:23,280
.

2237
02:41:23,280 --> 02:41:25,280
.

2238
02:41:25,280 --> 02:41:27,280
.

2239
02:41:27,280 --> 02:41:29,280
.

2240
02:41:29,280 --> 02:41:31,280
.

2241
02:41:31,280 --> 02:41:33,280
.

2242
02:41:33,280 --> 02:41:35,280
.

2243
02:41:35,280 --> 02:41:37,280
.

2244
02:41:37,280 --> 02:41:39,280
.

2245
02:41:39,280 --> 02:41:41,280
.

2246
02:41:41,280 --> 02:41:43,280
.

2247
02:41:43,280 --> 02:41:45,280
.

2248
02:41:45,280 --> 02:41:47,280
.

2249
02:41:47,280 --> 02:41:49,280
.

2250
02:41:49,280 --> 02:41:51,280
.

2251
02:41:51,280 --> 02:41:53,280
.

2252
02:41:53,280 --> 02:41:55,280
.

2253
02:41:55,280 --> 02:41:57,280
.

2254
02:41:57,280 --> 02:41:59,280
.

2255
02:41:59,280 --> 02:42:01,280
.

2256
02:42:01,280 --> 02:42:03,280
.

2257
02:42:03,280 --> 02:42:05,280
.

2258
02:42:05,280 --> 02:42:07,280
.

2259
02:42:07,280 --> 02:42:09,280
.

2260
02:42:09,280 --> 02:42:11,280
.

2261
02:42:11,280 --> 02:42:13,280
.

2262
02:42:13,280 --> 02:42:15,280
.

2263
02:42:15,280 --> 02:42:17,280
.

2264
02:42:17,280 --> 02:42:19,280
.

2265
02:42:19,280 --> 02:42:21,280
.

2266
02:42:21,280 --> 02:42:23,280
.

2267
02:42:23,280 --> 02:42:25,280
.

2268
02:42:25,280 --> 02:42:27,280
.

2269
02:42:27,280 --> 02:42:29,280
.

2270
02:42:29,280 --> 02:42:31,280
.

2271
02:42:31,280 --> 02:42:33,280
.

2272
02:42:33,280 --> 02:42:35,280
.

2273
02:42:35,280 --> 02:42:37,280
.

2274
02:42:37,280 --> 02:42:39,280
.

2275
02:42:39,280 --> 02:42:41,280
.

2276
02:42:41,280 --> 02:42:43,280
.

2277
02:42:43,280 --> 02:42:45,280
.

2278
02:42:45,280 --> 02:42:47,280
.

2279
02:42:47,280 --> 02:42:49,280
.

2280
02:42:49,280 --> 02:42:51,280
.

2281
02:42:51,280 --> 02:42:53,280
.

2282
02:42:53,280 --> 02:42:55,280
.

2283
02:42:55,280 --> 02:42:57,280
.

2284
02:42:57,280 --> 02:42:59,280
.

2285
02:42:59,280 --> 02:43:01,280
.

2286
02:43:01,280 --> 02:43:03,280
.

2287
02:43:03,280 --> 02:43:05,280
.

2288
02:43:05,280 --> 02:43:07,280
.

2289
02:43:07,280 --> 02:43:09,280
.

2290
02:43:09,280 --> 02:43:11,280
.

2291
02:43:11,280 --> 02:43:13,280
.

2292
02:43:13,280 --> 02:43:15,280
.

2293
02:43:15,280 --> 02:43:17,280
.

2294
02:43:17,280 --> 02:43:19,280
.

2295
02:43:19,280 --> 02:43:21,280
.

2296
02:43:21,280 --> 02:43:23,280
.

2297
02:43:23,280 --> 02:43:25,280
.

2298
02:43:25,280 --> 02:43:27,280
.

2299
02:43:27,280 --> 02:43:29,280
.

2300
02:43:29,280 --> 02:43:31,280
.

2301
02:43:31,280 --> 02:43:33,280
.

2302
02:43:33,280 --> 02:43:35,280
.

2303
02:43:35,280 --> 02:43:37,280
.

2304
02:43:37,280 --> 02:43:39,280
.

2305
02:43:39,280 --> 02:43:41,280
.

2306
02:43:41,280 --> 02:43:43,280
.

2307
02:43:43,280 --> 02:43:45,280
.

2308
02:43:45,280 --> 02:43:47,280
.

2309
02:43:47,280 --> 02:43:49,280
.

2310
02:43:49,280 --> 02:43:51,280
.

2311
02:43:51,280 --> 02:43:53,280
.

2312
02:43:53,280 --> 02:43:55,280
.

2313
02:43:55,280 --> 02:43:57,280
.

2314
02:43:57,280 --> 02:43:59,280
.

2315
02:43:59,280 --> 02:44:01,280
.

2316
02:44:01,280 --> 02:44:03,280
.

2317
02:44:03,280 --> 02:44:05,280
.

2318
02:44:05,280 --> 02:44:07,280
.

2319
02:44:07,280 --> 02:44:09,280
.

2320
02:44:09,280 --> 02:44:11,280
.

2321
02:44:11,280 --> 02:44:13,280
.

2322
02:44:13,280 --> 02:44:15,280
.

2323
02:44:15,280 --> 02:44:17,280
.

2324
02:44:17,280 --> 02:44:19,280
.

2325
02:44:19,280 --> 02:44:21,280
.

2326
02:44:21,280 --> 02:44:23,280
.

2327
02:44:23,280 --> 02:44:25,280
.

2328
02:44:25,280 --> 02:44:27,280
.

2329
02:44:27,280 --> 02:44:29,280
.

2330
02:44:29,280 --> 02:44:31,280
.

2331
02:44:31,280 --> 02:44:33,280
.

2332
02:44:33,280 --> 02:44:35,280
.

2333
02:44:35,280 --> 02:44:37,280
.

2334
02:44:37,280 --> 02:44:39,280
.

2335
02:44:39,280 --> 02:44:41,280
.

2336
02:44:41,280 --> 02:44:43,280
.

2337
02:44:43,280 --> 02:44:45,280
.

2338
02:44:45,280 --> 02:44:47,280
.

2339
02:44:47,280 --> 02:44:49,280
.

2340
02:44:49,280 --> 02:44:51,280
.

2341
02:44:51,280 --> 02:44:53,280
.

2342
02:44:53,280 --> 02:44:55,280
.

2343
02:44:55,280 --> 02:44:57,280
.

2344
02:44:57,280 --> 02:44:59,280
.

2345
02:44:59,280 --> 02:45:01,280
.

2346
02:45:01,280 --> 02:45:03,280
.

2347
02:45:03,280 --> 02:45:05,280
.

2348
02:45:05,280 --> 02:45:07,280
.

2349
02:45:07,280 --> 02:45:09,280
.

2350
02:45:09,280 --> 02:45:11,280
.

2351
02:45:11,280 --> 02:45:13,280
.

2352
02:45:13,280 --> 02:45:15,280
.

2353
02:45:15,280 --> 02:45:17,280
.

2354
02:45:17,280 --> 02:45:19,280
.

2355
02:45:19,280 --> 02:45:21,280
.

2356
02:45:21,280 --> 02:45:23,280
.

2357
02:45:23,280 --> 02:45:25,280
.

2358
02:45:25,280 --> 02:45:27,280
.

2359
02:45:27,280 --> 02:45:29,280
.

2360
02:45:29,280 --> 02:45:31,280
.

2361
02:45:31,280 --> 02:45:33,280
.

2362
02:45:33,280 --> 02:45:35,280
.

2363
02:45:35,280 --> 02:45:37,280
.

2364
02:45:37,280 --> 02:45:39,280
.

2365
02:45:39,280 --> 02:45:41,280
.

2366
02:45:41,280 --> 02:45:43,280
.

2367
02:45:43,280 --> 02:45:45,280
.

2368
02:45:45,280 --> 02:45:47,280
.

2369
02:45:47,280 --> 02:45:49,280
.

2370
02:45:49,280 --> 02:45:51,280
.

2371
02:45:51,280 --> 02:45:53,280
.

2372
02:45:53,280 --> 02:45:55,280
.

2373
02:45:55,280 --> 02:45:57,280
.

2374
02:45:57,280 --> 02:45:59,280
.

2375
02:45:59,280 --> 02:46:01,280
.

2376
02:46:01,280 --> 02:46:03,280
.

2377
02:46:03,280 --> 02:46:05,280
.

2378
02:46:05,280 --> 02:46:07,280
.

2379
02:46:07,280 --> 02:46:09,280
.

2380
02:46:09,280 --> 02:46:11,280
.

2381
02:46:11,280 --> 02:46:13,280
.

2382
02:46:13,280 --> 02:46:15,280
.

2383
02:46:15,280 --> 02:46:17,280
.

2384
02:46:17,280 --> 02:46:19,280
.

2385
02:46:19,280 --> 02:46:21,280
.

2386
02:46:21,280 --> 02:46:23,280
.

2387
02:46:23,280 --> 02:46:25,280
.

2388
02:46:25,280 --> 02:46:27,280
.

2389
02:46:27,280 --> 02:46:29,280
.

2390
02:46:29,280 --> 02:46:31,280
.

2391
02:46:31,280 --> 02:46:33,280
.

2392
02:46:33,280 --> 02:46:35,280
.

2393
02:46:35,280 --> 02:46:37,280
.

2394
02:46:37,280 --> 02:46:39,280
.

2395
02:46:39,280 --> 02:46:41,280
.

2396
02:46:41,280 --> 02:46:43,280
.

2397
02:46:43,280 --> 02:46:45,280
.

2398
02:46:45,280 --> 02:46:47,280
.

2399
02:46:47,280 --> 02:46:49,280
.

2400
02:46:49,280 --> 02:46:51,280
.

2401
02:46:51,280 --> 02:46:53,280
.

2402
02:46:53,280 --> 02:46:55,280
.

2403
02:46:55,280 --> 02:46:57,280
.

2404
02:46:57,280 --> 02:46:59,280
.

2405
02:46:59,280 --> 02:47:01,280
.

2406
02:47:01,280 --> 02:47:03,280
.

2407
02:47:03,280 --> 02:47:05,280
.

2408
02:47:05,280 --> 02:47:07,280
.

2409
02:47:07,280 --> 02:47:09,280
.

2410
02:47:09,280 --> 02:47:11,280
.

2411
02:47:11,280 --> 02:47:13,280
.

2412
02:47:13,280 --> 02:47:15,280
.

2413
02:47:15,280 --> 02:47:17,280
.

2414
02:47:17,280 --> 02:47:19,280
.

2415
02:47:19,280 --> 02:47:21,280
.

2416
02:47:21,280 --> 02:47:23,280
.

2417
02:47:23,280 --> 02:47:25,280
.

2418
02:47:25,280 --> 02:47:27,280
.

2419
02:47:27,280 --> 02:47:29,280
.

2420
02:47:29,280 --> 02:47:31,280
.

2421
02:47:31,280 --> 02:47:33,280
.

2422
02:47:33,280 --> 02:47:35,280
.

2423
02:47:35,280 --> 02:47:37,280
.

2424
02:47:37,280 --> 02:47:39,280
.

2425
02:47:39,280 --> 02:47:41,280
.

2426
02:47:41,280 --> 02:47:43,280
.

2427
02:47:43,280 --> 02:47:45,280
.

2428
02:47:45,280 --> 02:47:47,280
.

2429
02:47:47,280 --> 02:47:49,280
.

2430
02:47:49,280 --> 02:47:51,280
.

2431
02:47:51,280 --> 02:47:53,280
.

2432
02:47:53,280 --> 02:47:55,280
.

2433
02:47:55,280 --> 02:47:57,280
.

2434
02:47:57,280 --> 02:47:59,280
.

2435
02:47:59,280 --> 02:48:01,280
.

2436
02:48:01,280 --> 02:48:03,280
.

2437
02:48:03,280 --> 02:48:05,280
.

2438
02:48:05,280 --> 02:48:07,280
.

2439
02:48:07,280 --> 02:48:09,280
.

2440
02:48:09,280 --> 02:48:11,280
.

2441
02:48:11,280 --> 02:48:13,280
.

2442
02:48:13,280 --> 02:48:15,280
.

2443
02:48:15,280 --> 02:48:17,280
.

2444
02:48:17,280 --> 02:48:19,280
.

2445
02:48:19,280 --> 02:48:21,280
.

2446
02:48:21,280 --> 02:48:23,280
.

2447
02:48:23,280 --> 02:48:25,280
.

2448
02:48:25,280 --> 02:48:27,280
.

2449
02:48:27,280 --> 02:48:29,280
.

2450
02:48:29,280 --> 02:48:31,280
.

2451
02:48:31,280 --> 02:48:33,280
.

2452
02:48:33,280 --> 02:48:35,280
.

2453
02:48:35,280 --> 02:48:37,280
.

2454
02:48:37,280 --> 02:48:39,280
.

2455
02:48:39,280 --> 02:48:41,280
.

2456
02:48:41,280 --> 02:48:43,280
.

2457
02:48:43,280 --> 02:48:45,280
.

2458
02:48:45,280 --> 02:48:47,280
.

2459
02:48:47,280 --> 02:48:49,280
.

2460
02:48:49,280 --> 02:48:51,280
.

2461
02:48:51,280 --> 02:48:53,280
.

2462
02:48:53,280 --> 02:48:55,280
.

2463
02:48:55,280 --> 02:48:57,280
.

2464
02:48:57,280 --> 02:48:59,280
.

2465
02:48:59,280 --> 02:49:01,280
.

2466
02:49:01,280 --> 02:49:03,280
.

2467
02:49:03,280 --> 02:49:05,280
.

2468
02:49:05,280 --> 02:49:07,280
.

2469
02:49:07,280 --> 02:49:09,280
.

2470
02:49:09,280 --> 02:49:11,280
.

2471
02:49:11,280 --> 02:49:13,280
.

2472
02:49:13,280 --> 02:49:15,280
.

2473
02:49:15,280 --> 02:49:17,280
.

2474
02:49:17,280 --> 02:49:19,280
.

2475
02:49:19,280 --> 02:49:21,280
.

2476
02:49:21,280 --> 02:49:23,280
.

2477
02:49:23,280 --> 02:49:25,280
.

2478
02:49:25,280 --> 02:49:27,280
.

2479
02:49:27,280 --> 02:49:29,280
.

2480
02:49:29,280 --> 02:49:31,280
.

2481
02:49:31,280 --> 02:49:33,280
.

2482
02:49:33,280 --> 02:49:35,280
.

2483
02:49:35,280 --> 02:49:37,280
.

2484
02:49:37,280 --> 02:49:39,280
.

2485
02:49:39,280 --> 02:49:41,280
.

2486
02:49:41,280 --> 02:49:43,280
.

2487
02:49:43,280 --> 02:49:45,280
.

2488
02:49:45,280 --> 02:49:47,280
.

2489
02:49:47,280 --> 02:49:49,280
.

2490
02:49:49,280 --> 02:49:51,280
.

2491
02:49:51,280 --> 02:49:53,280
.

2492
02:49:53,280 --> 02:49:55,280
.

2493
02:49:55,280 --> 02:49:57,280
.

2494
02:49:57,280 --> 02:49:59,280
.

2495
02:49:59,280 --> 02:50:01,280
.

2496
02:50:01,280 --> 02:50:03,280
.

2497
02:50:03,280 --> 02:50:05,280
.

2498
02:50:05,280 --> 02:50:07,280
.

2499
02:50:07,280 --> 02:50:09,280
.

2500
02:50:09,280 --> 02:50:11,280
.

2501
02:50:11,280 --> 02:50:13,280
.

2502
02:50:13,280 --> 02:50:15,280
.

2503
02:50:15,280 --> 02:50:17,280
.

2504
02:50:17,280 --> 02:50:19,280
.

2505
02:50:19,280 --> 02:50:21,280
.

2506
02:50:21,280 --> 02:50:23,280
.

2507
02:50:23,280 --> 02:50:25,280
.

2508
02:50:25,280 --> 02:50:27,280
.

2509
02:50:27,280 --> 02:50:29,280
.

2510
02:50:29,280 --> 02:50:31,280
.

2511
02:50:31,280 --> 02:50:33,280
.

2512
02:50:33,280 --> 02:50:35,280
.

2513
02:50:35,280 --> 02:50:37,280
.

2514
02:50:37,280 --> 02:50:39,280
.

2515
02:50:39,280 --> 02:50:41,280
.

2516
02:50:41,280 --> 02:50:43,280
.

2517
02:50:43,280 --> 02:50:45,280
.

2518
02:50:45,280 --> 02:50:47,280
.

2519
02:50:47,280 --> 02:50:49,280
.

2520
02:50:49,280 --> 02:50:51,280
.

2521
02:50:51,280 --> 02:50:53,280
.

2522
02:50:53,280 --> 02:50:55,280
.

2523
02:50:55,280 --> 02:50:57,280
.

2524
02:50:57,280 --> 02:50:59,280
.

2525
02:50:59,280 --> 02:51:01,280
.

2526
02:51:01,280 --> 02:51:03,280
.

2527
02:51:03,280 --> 02:51:05,280
.

2528
02:51:05,280 --> 02:51:07,280
.

2529
02:51:07,280 --> 02:51:09,280
.

2530
02:51:09,280 --> 02:51:11,280
.

2531
02:51:11,280 --> 02:51:13,280
.

2532
02:51:13,280 --> 02:51:15,280
.

2533
02:51:15,280 --> 02:51:17,280
.

2534
02:51:17,280 --> 02:51:19,280
.

2535
02:51:19,280 --> 02:51:21,280
.

2536
02:51:21,280 --> 02:51:23,280
.

2537
02:51:23,280 --> 02:51:25,280
.

2538
02:51:25,280 --> 02:51:27,280
.

2539
02:51:27,280 --> 02:51:29,280
.

2540
02:51:29,280 --> 02:51:31,280
.

2541
02:51:31,280 --> 02:51:33,280
.

2542
02:51:33,280 --> 02:51:35,280
.

2543
02:51:35,280 --> 02:51:37,280
.

2544
02:51:37,280 --> 02:51:39,280
.

2545
02:51:39,280 --> 02:51:41,280
.

2546
02:51:41,280 --> 02:51:43,280
.

2547
02:51:43,280 --> 02:51:45,280
.

2548
02:51:45,280 --> 02:51:47,280
.

2549
02:51:47,280 --> 02:51:49,280
.

2550
02:51:49,280 --> 02:51:51,280
.

2551
02:51:51,280 --> 02:51:53,280
.

2552
02:51:53,280 --> 02:51:55,280
.

2553
02:51:55,280 --> 02:51:57,280
.

2554
02:51:57,280 --> 02:51:59,280
.

2555
02:51:59,280 --> 02:52:01,280
.

2556
02:52:01,280 --> 02:52:03,280
.

2557
02:52:03,280 --> 02:52:05,280
.

2558
02:52:05,280 --> 02:52:07,280
.

2559
02:52:07,280 --> 02:52:09,280
.

2560
02:52:09,280 --> 02:52:11,280
.

2561
02:52:11,280 --> 02:52:13,280
.

2562
02:52:13,280 --> 02:52:15,280
.

2563
02:52:15,280 --> 02:52:17,280
.

2564
02:52:17,280 --> 02:52:19,280
.

2565
02:52:19,280 --> 02:52:21,280
.

2566
02:52:21,280 --> 02:52:23,280
.

2567
02:52:23,280 --> 02:52:25,280
.

2568
02:52:25,280 --> 02:52:27,280
.

2569
02:52:27,280 --> 02:52:29,280
.

2570
02:52:29,280 --> 02:52:31,280
.

2571
02:52:31,280 --> 02:52:33,280
.

2572
02:52:33,280 --> 02:52:35,280
.

2573
02:52:35,280 --> 02:52:37,280
.

2574
02:52:37,280 --> 02:52:39,280
.

2575
02:52:39,280 --> 02:52:41,280
.

2576
02:52:41,280 --> 02:52:43,280
.

2577
02:52:43,280 --> 02:52:45,280
.

2578
02:52:45,280 --> 02:52:47,280
.

2579
02:52:47,280 --> 02:52:49,280
.

2580
02:52:49,280 --> 02:52:51,280
.

2581
02:52:51,280 --> 02:52:53,280
.

2582
02:52:53,280 --> 02:52:55,280
.

2583
02:52:55,280 --> 02:52:57,280
.

2584
02:52:57,280 --> 02:52:59,280
.

2585
02:52:59,280 --> 02:53:01,280
.

2586
02:53:01,280 --> 02:53:03,280
.

2587
02:53:03,280 --> 02:53:05,280
.

2588
02:53:05,280 --> 02:53:07,280
.

2589
02:53:07,280 --> 02:53:09,280
.

2590
02:53:09,280 --> 02:53:11,280
.

2591
02:53:11,280 --> 02:53:13,280
.

2592
02:53:13,280 --> 02:53:15,280
.

2593
02:53:15,280 --> 02:53:17,280
.

2594
02:53:17,280 --> 02:53:19,280
.

2595
02:53:19,280 --> 02:53:21,280
.

2596
02:53:21,280 --> 02:53:23,280
.

2597
02:53:23,280 --> 02:53:25,280
.

2598
02:53:25,280 --> 02:53:27,280
.

2599
02:53:27,280 --> 02:53:29,280
.

2600
02:53:29,280 --> 02:53:31,280
.

2601
02:53:31,280 --> 02:53:33,280
.

2602
02:53:33,280 --> 02:53:35,280
.

2603
02:53:35,280 --> 02:53:37,280
.

2604
02:53:37,280 --> 02:53:39,280
.

2605
02:53:39,280 --> 02:53:41,280
.

2606
02:53:41,280 --> 02:53:43,280
.

2607
02:53:43,280 --> 02:53:45,280
.

2608
02:53:45,280 --> 02:53:47,280
.

2609
02:53:47,280 --> 02:53:49,280
.

2610
02:53:49,280 --> 02:53:51,280
.

2611
02:53:51,280 --> 02:53:53,280
.

2612
02:53:53,280 --> 02:53:55,280
.

2613
02:53:55,280 --> 02:53:57,280
.

2614
02:53:57,280 --> 02:53:59,280
.

2615
02:53:59,280 --> 02:54:01,280
.

2616
02:54:01,280 --> 02:54:03,280
.

2617
02:54:03,280 --> 02:54:05,280
.

2618
02:54:05,280 --> 02:54:07,280
.

2619
02:54:07,280 --> 02:54:09,280
.

2620
02:54:09,280 --> 02:54:11,280
.

2621
02:54:11,280 --> 02:54:13,280
.

2622
02:54:13,280 --> 02:54:15,280
.

2623
02:54:15,280 --> 02:54:17,280
.

2624
02:54:17,280 --> 02:54:19,280
.

2625
02:54:19,280 --> 02:54:21,280
.

2626
02:54:21,280 --> 02:54:23,280
.

2627
02:54:23,280 --> 02:54:25,280
.

2628
02:54:25,280 --> 02:54:27,280
.

2629
02:54:27,280 --> 02:54:29,280
.

2630
02:54:29,280 --> 02:54:31,280
.

2631
02:54:31,280 --> 02:54:33,280
.

2632
02:54:33,280 --> 02:54:35,280
.

2633
02:54:35,280 --> 02:54:37,280
.

2634
02:54:37,280 --> 02:54:39,280
.

2635
02:54:39,280 --> 02:54:41,280
.

2636
02:54:41,280 --> 02:54:43,280
.

2637
02:54:43,280 --> 02:54:45,280
.

2638
02:54:45,280 --> 02:54:47,280
.

2639
02:54:47,280 --> 02:54:49,280
.

2640
02:54:49,280 --> 02:54:51,280
.

2641
02:54:51,280 --> 02:54:53,280
.

2642
02:54:53,280 --> 02:54:55,280
.

2643
02:54:55,280 --> 02:54:57,280
.

2644
02:54:57,280 --> 02:54:59,280
.

2645
02:54:59,280 --> 02:55:01,280
.

2646
02:55:01,280 --> 02:55:03,280
.

2647
02:55:03,280 --> 02:55:05,280
.

2648
02:55:05,280 --> 02:55:07,280
.

2649
02:55:07,280 --> 02:55:09,280
.

2650
02:55:09,280 --> 02:55:11,280
.

2651
02:55:11,280 --> 02:55:13,280
.

2652
02:55:13,280 --> 02:55:15,280
.

2653
02:55:15,280 --> 02:55:17,280
.

2654
02:55:17,280 --> 02:55:19,280
.

2655
02:55:19,280 --> 02:55:21,280
.

2656
02:55:21,280 --> 02:55:23,280
.

2657
02:55:23,280 --> 02:55:25,280
.

2658
02:55:25,280 --> 02:55:27,280
.

2659
02:55:27,280 --> 02:55:29,280
.

2660
02:55:29,280 --> 02:55:31,280
.

2661
02:55:31,280 --> 02:55:33,280
.

2662
02:55:33,280 --> 02:55:35,280
.

2663
02:55:35,280 --> 02:55:37,280
.

2664
02:55:37,280 --> 02:55:39,280
.

2665
02:55:39,280 --> 02:55:41,280
.

2666
02:55:41,280 --> 02:55:43,280
.

2667
02:55:43,280 --> 02:55:45,280
.

2668
02:55:45,280 --> 02:55:47,280
.

2669
02:55:47,280 --> 02:55:49,280
.

2670
02:55:49,280 --> 02:55:51,280
.

2671
02:55:51,280 --> 02:55:53,280
.

2672
02:55:53,280 --> 02:55:55,280
.

2673
02:55:55,280 --> 02:55:57,280
.

2674
02:55:57,280 --> 02:55:59,280
.

2675
02:55:59,280 --> 02:56:01,280
.

2676
02:56:01,280 --> 02:56:03,280
.

2677
02:56:03,280 --> 02:56:05,280
.

2678
02:56:05,280 --> 02:56:07,280
.

2679
02:56:07,280 --> 02:56:09,280
.

2680
02:56:09,280 --> 02:56:11,280
.

2681
02:56:11,280 --> 02:56:13,280
.

2682
02:56:13,280 --> 02:56:15,280
.

2683
02:56:15,280 --> 02:56:17,280
.

2684
02:56:17,280 --> 02:56:19,280
.

2685
02:56:19,280 --> 02:56:21,280
.

2686
02:56:21,280 --> 02:56:23,280
.

2687
02:56:23,280 --> 02:56:25,280
.

2688
02:56:25,280 --> 02:56:27,280
.

2689
02:56:27,280 --> 02:56:29,280
.

2690
02:56:29,280 --> 02:56:31,280
.

2691
02:56:31,280 --> 02:56:33,280
.

2692
02:56:33,280 --> 02:56:35,280
.

2693
02:56:35,280 --> 02:56:37,280
.

2694
02:56:37,280 --> 02:56:39,280
.

2695
02:56:39,280 --> 02:56:41,280
.

2696
02:56:41,280 --> 02:56:43,280
.

2697
02:56:43,280 --> 02:56:45,280
.

2698
02:56:45,280 --> 02:56:47,280
.

2699
02:56:47,280 --> 02:56:49,280
.

2700
02:56:49,280 --> 02:56:51,280
.

2701
02:56:51,280 --> 02:56:53,280
.

2702
02:56:53,280 --> 02:56:55,280
.

2703
02:56:55,280 --> 02:56:57,280
.

2704
02:56:57,280 --> 02:56:59,280
.

2705
02:56:59,280 --> 02:57:01,280
.

2706
02:57:01,280 --> 02:57:03,280
.

2707
02:57:03,280 --> 02:57:05,280
.

2708
02:57:05,280 --> 02:57:07,280
.

2709
02:57:07,280 --> 02:57:09,280
.

2710
02:57:09,280 --> 02:57:11,280
.

2711
02:57:11,280 --> 02:57:13,280
.

2712
02:57:13,280 --> 02:57:15,280
.

2713
02:57:15,280 --> 02:57:17,280
.

2714
02:57:17,280 --> 02:57:19,280
.

2715
02:57:19,280 --> 02:57:21,280
.

2716
02:57:21,280 --> 02:57:23,280
.

2717
02:57:23,280 --> 02:57:25,280
.

2718
02:57:25,280 --> 02:57:27,280
.

2719
02:57:27,280 --> 02:57:29,280
.

2720
02:57:29,280 --> 02:57:31,280
.

2721
02:57:31,280 --> 02:57:33,280
.

2722
02:57:33,280 --> 02:57:35,280
.

2723
02:57:35,280 --> 02:57:37,280
.

2724
02:57:37,280 --> 02:57:39,280
.

2725
02:57:39,280 --> 02:57:41,280
.

2726
02:57:41,280 --> 02:57:43,280
.

2727
02:57:43,280 --> 02:57:45,280
.

2728
02:57:45,280 --> 02:57:47,280
.

2729
02:57:47,280 --> 02:57:49,280
.

2730
02:57:49,280 --> 02:57:51,280
.

2731
02:57:51,280 --> 02:57:53,280
.

2732
02:57:53,280 --> 02:57:55,280
.

2733
02:57:55,280 --> 02:57:57,280
.

2734
02:57:57,280 --> 02:57:59,280
.

2735
02:57:59,280 --> 02:58:01,280
.

2736
02:58:01,280 --> 02:58:03,280
.

2737
02:58:03,280 --> 02:58:05,280
.

2738
02:58:05,280 --> 02:58:07,280
.

2739
02:58:07,280 --> 02:58:09,280
.

2740
02:58:09,280 --> 02:58:11,280
.

2741
02:58:11,280 --> 02:58:13,280
.

2742
02:58:13,280 --> 02:58:15,280
.

2743
02:58:15,280 --> 02:58:17,280
.

2744
02:58:17,280 --> 02:58:19,280
.

2745
02:58:19,280 --> 02:58:21,280
.

2746
02:58:21,280 --> 02:58:23,280
.

2747
02:58:23,280 --> 02:58:25,280
.

2748
02:58:25,280 --> 02:58:27,280
.

2749
02:58:27,280 --> 02:58:29,280
.

2750
02:58:29,280 --> 02:58:31,280
.

2751
02:58:31,280 --> 02:58:33,280
.

2752
02:58:33,280 --> 02:58:35,280
.

2753
02:58:35,280 --> 02:58:37,280
.

2754
02:58:37,280 --> 02:58:39,280
.

2755
02:58:39,280 --> 02:58:41,280
.

2756
02:58:41,280 --> 02:58:43,280
.

2757
02:58:43,280 --> 02:58:45,280
.

2758
02:58:45,280 --> 02:58:47,280
.

2759
02:58:47,280 --> 02:58:49,280
.

2760
02:58:49,280 --> 02:58:51,280
.

2761
02:58:51,280 --> 02:58:53,280
.

2762
02:58:53,280 --> 02:58:55,280
.

2763
02:58:55,280 --> 02:58:57,280
.

2764
02:58:57,280 --> 02:58:59,280
.

2765
02:58:59,280 --> 02:59:01,280
.

2766
02:59:01,280 --> 02:59:03,280
.

2767
02:59:03,280 --> 02:59:05,280
.

2768
02:59:05,280 --> 02:59:07,280
.

2769
02:59:07,280 --> 02:59:09,280
.

2770
02:59:09,280 --> 02:59:11,280
.

2771
02:59:11,280 --> 02:59:13,280
.

2772
02:59:13,280 --> 02:59:15,280
.

2773
02:59:15,280 --> 02:59:17,280
.

2774
02:59:17,280 --> 02:59:19,280
.

2775
02:59:19,280 --> 02:59:21,280
.

2776
02:59:21,280 --> 02:59:23,280
.

2777
02:59:23,280 --> 02:59:25,280
.

2778
02:59:25,280 --> 02:59:27,280
.

2779
02:59:27,280 --> 02:59:29,280
.

2780
02:59:29,280 --> 02:59:31,280
.

2781
02:59:31,280 --> 02:59:33,280
.

2782
02:59:33,280 --> 02:59:35,280
.

2783
02:59:35,280 --> 02:59:37,280
.

2784
02:59:37,280 --> 02:59:39,280
.

2785
02:59:39,280 --> 02:59:41,280
.

2786
02:59:41,280 --> 02:59:43,280
.

2787
02:59:43,280 --> 02:59:45,280
.

2788
02:59:45,280 --> 02:59:47,280
.

2789
02:59:47,280 --> 02:59:49,280
.

2790
02:59:49,280 --> 02:59:51,280
.

2791
02:59:51,280 --> 02:59:53,280
.

2792
02:59:53,280 --> 02:59:55,280
.

2793
02:59:55,280 --> 02:59:57,280
.

2794
02:59:57,280 --> 02:59:59,280
.

2795
02:59:59,280 --> 03:00:01,280
.

2796
03:00:01,280 --> 03:00:03,280
.

2797
03:00:03,280 --> 03:00:05,280
.

2798
03:00:05,280 --> 03:00:07,280
.

2799
03:00:07,280 --> 03:00:09,280
.

2800
03:00:09,280 --> 03:00:11,280
.

2801
03:00:11,280 --> 03:00:13,280
.

2802
03:00:13,280 --> 03:00:15,280
.

2803
03:00:15,280 --> 03:00:17,280
.

2804
03:00:17,280 --> 03:00:19,280
.

2805
03:00:19,280 --> 03:00:21,280
.

2806
03:00:21,280 --> 03:00:23,280
.

2807
03:00:23,280 --> 03:00:25,280
.

2808
03:00:25,280 --> 03:00:27,280
.

2809
03:00:27,280 --> 03:00:29,280
.

2810
03:00:29,280 --> 03:00:31,280
.

2811
03:00:31,280 --> 03:00:33,280
.

2812
03:00:33,280 --> 03:00:35,280
.

2813
03:00:35,280 --> 03:00:37,280
.

2814
03:00:37,280 --> 03:00:39,280
.

2815
03:00:39,280 --> 03:00:41,280
.

2816
03:00:41,280 --> 03:00:43,280
.

2817
03:00:43,280 --> 03:00:45,280
.

2818
03:00:45,280 --> 03:00:47,280
.

2819
03:00:47,280 --> 03:00:49,280
.

2820
03:00:49,280 --> 03:00:51,280
.

2821
03:00:51,280 --> 03:00:53,280
.

2822
03:00:53,280 --> 03:00:55,280
.

2823
03:00:55,280 --> 03:00:57,280
.

2824
03:00:57,280 --> 03:00:59,280
.

2825
03:00:59,280 --> 03:01:01,280
.

2826
03:01:01,280 --> 03:01:03,280
.

2827
03:01:03,280 --> 03:01:05,280
.

2828
03:01:05,280 --> 03:01:07,280
.

2829
03:01:07,280 --> 03:01:09,280
.

2830
03:01:09,280 --> 03:01:11,280
.

2831
03:01:11,280 --> 03:01:13,280
.

2832
03:01:13,280 --> 03:01:15,280
.

2833
03:01:15,280 --> 03:01:17,280
.

2834
03:01:17,280 --> 03:01:19,280
.

2835
03:01:19,280 --> 03:01:21,280
.

2836
03:01:21,280 --> 03:01:23,280
.

2837
03:01:23,280 --> 03:01:25,280
.

2838
03:01:25,280 --> 03:01:27,280
.

2839
03:01:27,280 --> 03:01:29,280
.

2840
03:01:29,280 --> 03:01:31,280
.

2841
03:01:31,280 --> 03:01:33,280
.

2842
03:01:33,280 --> 03:01:35,280
.

2843
03:01:35,280 --> 03:01:37,280
.

2844
03:01:37,280 --> 03:01:39,280
.

2845
03:01:39,280 --> 03:01:41,280
.

2846
03:01:41,280 --> 03:01:43,280
.

2847
03:01:43,280 --> 03:01:45,280
.

2848
03:01:45,280 --> 03:01:47,280
.

2849
03:01:47,280 --> 03:01:49,280
.

2850
03:01:49,280 --> 03:01:51,280
.

2851
03:01:51,280 --> 03:01:53,280
.

2852
03:01:53,280 --> 03:01:55,280
.

2853
03:01:55,280 --> 03:01:57,280
.

2854
03:01:57,280 --> 03:01:59,280
.

2855
03:01:59,280 --> 03:02:01,280
.

2856
03:02:01,280 --> 03:02:03,280
.

2857
03:02:03,280 --> 03:02:05,280
.

2858
03:02:05,280 --> 03:02:07,280
.

2859
03:02:07,280 --> 03:02:09,280
.

2860
03:02:09,280 --> 03:02:11,280
.

2861
03:02:11,280 --> 03:02:13,280
.

2862
03:02:13,280 --> 03:02:15,280
.

2863
03:02:15,280 --> 03:02:17,280
.

2864
03:02:17,280 --> 03:02:19,280
.

2865
03:02:19,280 --> 03:02:21,280
.

2866
03:02:21,280 --> 03:02:23,280
.

2867
03:02:23,280 --> 03:02:25,280
.

2868
03:02:25,280 --> 03:02:27,280
.

2869
03:02:27,280 --> 03:02:29,280
.

2870
03:02:29,280 --> 03:02:31,280
.

2871
03:02:31,280 --> 03:02:33,280
.

2872
03:02:33,280 --> 03:02:35,280
.

2873
03:02:35,280 --> 03:02:37,280
.

2874
03:02:37,280 --> 03:02:39,280
.

2875
03:02:39,280 --> 03:02:41,280
.

2876
03:02:41,280 --> 03:02:43,280
.

2877
03:02:43,280 --> 03:02:45,280
.

2878
03:02:45,280 --> 03:02:47,280
.

2879
03:02:47,280 --> 03:02:49,280
.

2880
03:02:49,280 --> 03:02:51,280
.

2881
03:02:51,280 --> 03:02:53,280
.

2882
03:02:53,280 --> 03:02:55,280
.

2883
03:02:55,280 --> 03:02:57,280
.

2884
03:02:57,280 --> 03:02:59,280
.

2885
03:02:59,280 --> 03:03:01,280
.

2886
03:03:01,280 --> 03:03:03,280
.

2887
03:03:03,280 --> 03:03:05,280
.

2888
03:03:05,280 --> 03:03:07,280
.

2889
03:03:07,280 --> 03:03:09,280
.

2890
03:03:09,280 --> 03:03:11,280
.

2891
03:03:11,280 --> 03:03:13,280
.

2892
03:03:13,280 --> 03:03:15,280
.

2893
03:03:15,280 --> 03:03:17,280
.

2894
03:03:17,280 --> 03:03:19,280
.

2895
03:03:19,280 --> 03:03:21,280
.

2896
03:03:21,280 --> 03:03:23,280
.

2897
03:03:23,280 --> 03:03:25,280
.

2898
03:03:25,280 --> 03:03:27,280
.

2899
03:03:27,280 --> 03:03:29,280
.

2900
03:03:29,280 --> 03:03:31,280
.

2901
03:03:31,280 --> 03:03:33,280
.

2902
03:03:33,280 --> 03:03:35,280
.

2903
03:03:35,280 --> 03:03:37,280
.

2904
03:03:37,280 --> 03:03:39,280
.

2905
03:03:39,280 --> 03:03:41,280
.

2906
03:03:41,280 --> 03:03:43,280
.

2907
03:03:43,280 --> 03:03:45,280
.

2908
03:03:45,280 --> 03:03:47,280
.

2909
03:03:47,280 --> 03:03:49,280
.

2910
03:03:49,280 --> 03:03:51,280
.

2911
03:03:51,280 --> 03:03:53,280
.

2912
03:03:53,280 --> 03:03:55,280
.

2913
03:03:55,280 --> 03:03:57,280
.

2914
03:03:57,280 --> 03:03:59,280
.

2915
03:03:59,280 --> 03:04:01,280
.

2916
03:04:01,280 --> 03:04:03,280
.

2917
03:04:03,280 --> 03:04:05,280
.

2918
03:04:05,280 --> 03:04:07,280
.

2919
03:04:07,280 --> 03:04:09,280
.

2920
03:04:09,280 --> 03:04:11,280
.

2921
03:04:11,280 --> 03:04:13,280
.

2922
03:04:13,280 --> 03:04:15,280
.

2923
03:04:15,280 --> 03:04:17,280
.

2924
03:04:17,280 --> 03:04:19,280
.

2925
03:04:19,280 --> 03:04:21,280
.

2926
03:04:21,280 --> 03:04:23,280
.

2927
03:04:23,280 --> 03:04:25,280
.

2928
03:04:25,280 --> 03:04:27,280
.

2929
03:04:27,280 --> 03:04:29,280
.

2930
03:04:29,280 --> 03:04:31,280
.

2931
03:04:31,280 --> 03:04:33,280
.

2932
03:04:33,280 --> 03:04:35,280
.

2933
03:04:35,280 --> 03:04:37,280
.

2934
03:04:37,280 --> 03:04:39,280
.

2935
03:04:39,280 --> 03:04:41,280
.

2936
03:04:41,280 --> 03:04:43,280
.

2937
03:04:43,280 --> 03:04:45,280
.

2938
03:04:45,280 --> 03:04:47,280
.

2939
03:04:47,280 --> 03:04:49,280
.

2940
03:04:49,280 --> 03:04:51,280
.

2941
03:04:51,280 --> 03:04:53,280
.

2942
03:04:53,280 --> 03:04:55,280
.

2943
03:04:55,280 --> 03:04:57,280
.

2944
03:04:57,280 --> 03:04:59,280
.

2945
03:04:59,280 --> 03:05:01,280
.

2946
03:05:01,280 --> 03:05:03,280
.

2947
03:05:03,280 --> 03:05:05,280
.

2948
03:05:05,280 --> 03:05:07,280
.

2949
03:05:07,280 --> 03:05:09,280
.

2950
03:05:09,280 --> 03:05:11,280
.

2951
03:05:11,280 --> 03:05:13,280
.

2952
03:05:13,280 --> 03:05:15,280
.

2953
03:05:15,280 --> 03:05:17,280
.

2954
03:05:17,280 --> 03:05:19,280
.

2955
03:05:19,280 --> 03:05:21,280
.

2956
03:05:21,280 --> 03:05:23,280
.

2957
03:05:23,280 --> 03:05:25,280
.

2958
03:05:25,280 --> 03:05:27,280
.

2959
03:05:27,280 --> 03:05:29,280
.

2960
03:05:29,280 --> 03:05:31,280
.

2961
03:05:31,280 --> 03:05:33,280
.

2962
03:05:33,280 --> 03:05:35,280
.

2963
03:05:35,280 --> 03:05:37,280
.

2964
03:05:37,280 --> 03:05:39,280
.

2965
03:05:39,280 --> 03:05:41,280
.

2966
03:05:41,280 --> 03:05:43,280
.

2967
03:05:43,280 --> 03:05:45,280
.

2968
03:05:45,280 --> 03:05:47,280
.

2969
03:05:47,280 --> 03:05:49,280
.

2970
03:05:49,280 --> 03:05:51,280
.

2971
03:05:51,280 --> 03:05:53,280
.

2972
03:05:53,280 --> 03:05:55,280
.

2973
03:05:55,280 --> 03:05:57,280
.

2974
03:05:57,280 --> 03:05:59,280
.

2975
03:05:59,280 --> 03:06:01,280
.

2976
03:06:01,280 --> 03:06:03,280
.

2977
03:06:03,280 --> 03:06:05,280
.

2978
03:06:05,280 --> 03:06:07,280
.

2979
03:06:07,280 --> 03:06:09,280
.

2980
03:06:09,280 --> 03:06:11,280
.

2981
03:06:11,280 --> 03:06:13,280
.

2982
03:06:13,280 --> 03:06:15,280
.

2983
03:06:15,280 --> 03:06:17,280
.

2984
03:06:17,280 --> 03:06:19,280
.

2985
03:06:19,280 --> 03:06:21,280
.

2986
03:06:21,280 --> 03:06:23,280
.

2987
03:06:23,280 --> 03:06:25,280
.

2988
03:06:25,280 --> 03:06:27,280
.

2989
03:06:27,280 --> 03:06:29,280
.

2990
03:06:29,280 --> 03:06:31,280
.

2991
03:06:31,280 --> 03:06:33,280
.

2992
03:06:33,280 --> 03:06:35,280
.

2993
03:06:35,280 --> 03:06:37,280
.

2994
03:06:37,280 --> 03:06:39,280
.

2995
03:06:39,280 --> 03:06:41,280
.

2996
03:06:41,280 --> 03:06:43,280
.

2997
03:06:43,280 --> 03:06:45,280
.

2998
03:06:45,280 --> 03:06:47,280
.

2999
03:06:47,280 --> 03:06:49,280
.

3000
03:06:49,280 --> 03:06:51,280
.

3001
03:06:51,280 --> 03:06:53,280
.

3002
03:06:53,280 --> 03:06:55,280
.

3003
03:06:55,280 --> 03:06:57,280
.

3004
03:06:57,280 --> 03:06:59,280
.

3005
03:06:59,280 --> 03:07:01,280
.

3006
03:07:01,280 --> 03:07:03,280
.

3007
03:07:03,280 --> 03:07:05,280
.

3008
03:07:05,280 --> 03:07:07,280
.

3009
03:07:07,280 --> 03:07:09,280
.

3010
03:07:09,280 --> 03:07:11,280
.

3011
03:07:11,280 --> 03:07:13,280
.

3012
03:07:13,280 --> 03:07:15,280
.

3013
03:07:15,280 --> 03:07:17,280
.

3014
03:07:17,280 --> 03:07:19,280
.

3015
03:07:19,280 --> 03:07:21,280
.

3016
03:07:21,280 --> 03:07:23,280
.

3017
03:07:23,280 --> 03:07:25,280
.

3018
03:07:25,280 --> 03:07:27,280
.

3019
03:07:27,280 --> 03:07:29,280
.

3020
03:07:29,280 --> 03:07:31,280
.

3021
03:07:31,280 --> 03:07:33,280
.

3022
03:07:33,280 --> 03:07:35,280
.

3023
03:07:35,280 --> 03:07:37,280
.

3024
03:07:37,280 --> 03:07:39,280
.

3025
03:07:39,280 --> 03:07:41,280
.

3026
03:07:41,280 --> 03:07:43,280
.

3027
03:07:43,280 --> 03:07:45,280
.

3028
03:07:45,280 --> 03:07:47,280
.

3029
03:07:47,280 --> 03:07:49,280
.

3030
03:07:49,280 --> 03:07:51,280
.

3031
03:07:51,280 --> 03:07:53,280
.

3032
03:07:53,280 --> 03:07:55,280
.

3033
03:07:55,280 --> 03:07:57,280
.

3034
03:07:57,280 --> 03:07:59,280
.

3035
03:07:59,280 --> 03:08:01,280
.

3036
03:08:01,280 --> 03:08:03,280
.

3037
03:08:03,280 --> 03:08:05,280
.

3038
03:08:05,280 --> 03:08:07,280
.

3039
03:08:07,280 --> 03:08:09,280
.

3040
03:08:09,280 --> 03:08:11,280
.

3041
03:08:11,280 --> 03:08:13,280
.

3042
03:08:13,280 --> 03:08:15,280
.

3043
03:08:15,280 --> 03:08:17,280
.

3044
03:08:17,280 --> 03:08:19,280
.

3045
03:08:19,280 --> 03:08:21,280
.

3046
03:08:21,280 --> 03:08:23,280
.

3047
03:08:23,280 --> 03:08:25,280
.

3048
03:08:25,280 --> 03:08:27,280
.

3049
03:08:27,280 --> 03:08:29,280
.

3050
03:08:29,280 --> 03:08:31,280
.

3051
03:08:31,280 --> 03:08:33,280
.

3052
03:08:33,280 --> 03:08:35,280
.

3053
03:08:35,280 --> 03:08:37,280
.

3054
03:08:37,280 --> 03:08:39,280
.

3055
03:08:39,280 --> 03:08:41,280
.

3056
03:08:41,280 --> 03:08:43,280
.

3057
03:08:43,280 --> 03:08:45,280
.

3058
03:08:45,280 --> 03:08:47,280
.

3059
03:08:47,280 --> 03:08:49,280
.

3060
03:08:49,280 --> 03:08:51,280
.

3061
03:08:51,280 --> 03:08:53,280
.

3062
03:08:53,280 --> 03:08:55,280
.

3063
03:08:55,280 --> 03:08:57,280
.

3064
03:08:57,280 --> 03:08:59,280
.

3065
03:08:59,280 --> 03:09:01,280
.

3066
03:09:01,280 --> 03:09:03,280
.

3067
03:09:03,280 --> 03:09:05,280
.

3068
03:09:05,280 --> 03:09:07,280
.

3069
03:09:07,280 --> 03:09:09,280
.

3070
03:09:09,280 --> 03:09:11,280
.

3071
03:09:11,280 --> 03:09:13,280
.

3072
03:09:13,280 --> 03:09:15,280
.

3073
03:09:15,280 --> 03:09:17,280
.

3074
03:09:17,280 --> 03:09:19,280
.

3075
03:09:19,280 --> 03:09:21,280
.

3076
03:09:21,280 --> 03:09:23,280
.

3077
03:09:23,280 --> 03:09:25,280
.

3078
03:09:25,280 --> 03:09:27,280
.

3079
03:09:27,280 --> 03:09:29,280
.

3080
03:09:29,280 --> 03:09:31,280
.

3081
03:09:31,280 --> 03:09:33,280
.

3082
03:09:33,280 --> 03:09:35,280
.

3083
03:09:35,280 --> 03:09:37,280
.

3084
03:09:37,280 --> 03:09:39,280
.

3085
03:09:39,280 --> 03:09:41,280
.

3086
03:09:41,280 --> 03:09:43,280
.

3087
03:09:43,280 --> 03:09:45,280
.

3088
03:09:45,280 --> 03:09:47,280
.

3089
03:09:47,280 --> 03:09:49,280
.

3090
03:09:49,280 --> 03:09:51,280
.

3091
03:09:51,280 --> 03:09:53,280
.

3092
03:09:53,280 --> 03:09:55,280
.

3093
03:09:55,280 --> 03:09:57,280
.

3094
03:09:57,280 --> 03:09:59,280
.

3095
03:09:59,280 --> 03:10:01,280
.

3096
03:10:01,280 --> 03:10:03,280
.

3097
03:10:03,280 --> 03:10:05,280
.

3098
03:10:05,280 --> 03:10:07,280
.

3099
03:10:07,280 --> 03:10:09,280
.

3100
03:10:09,280 --> 03:10:11,280
.

3101
03:10:11,280 --> 03:10:13,280
.

3102
03:10:13,280 --> 03:10:15,280
.

3103
03:10:15,280 --> 03:10:17,280
.

3104
03:10:17,280 --> 03:10:19,280
.

3105
03:10:19,280 --> 03:10:21,280
.

3106
03:10:21,280 --> 03:10:23,280
.

3107
03:10:23,280 --> 03:10:25,280
.

3108
03:10:25,280 --> 03:10:27,280
.

3109
03:10:27,280 --> 03:10:29,280
.

3110
03:10:29,280 --> 03:10:31,280
.

3111
03:10:31,280 --> 03:10:33,280
.

3112
03:10:33,280 --> 03:10:35,280
.

3113
03:10:35,280 --> 03:10:37,280
.

3114
03:10:37,280 --> 03:10:39,280
.

3115
03:10:39,280 --> 03:10:41,280
.

3116
03:10:41,280 --> 03:10:43,280
.

3117
03:10:43,280 --> 03:10:45,280
.

3118
03:10:45,280 --> 03:10:47,280
.

3119
03:10:47,280 --> 03:10:49,280
.

3120
03:10:49,280 --> 03:10:51,280
.

3121
03:10:51,280 --> 03:10:53,280
.

3122
03:10:53,280 --> 03:10:55,280
.

3123
03:10:55,280 --> 03:10:57,280
.

3124
03:10:57,280 --> 03:10:59,280
.

3125
03:10:59,280 --> 03:11:01,280
.

3126
03:11:01,280 --> 03:11:03,280
.

3127
03:11:03,280 --> 03:11:05,280
.

3128
03:11:05,280 --> 03:11:07,280
.

3129
03:11:07,280 --> 03:11:09,280
.

3130
03:11:09,280 --> 03:11:11,280
.

3131
03:11:11,280 --> 03:11:13,280
.

3132
03:11:13,280 --> 03:11:15,280
.

3133
03:11:15,280 --> 03:11:17,280
.

3134
03:11:17,280 --> 03:11:19,280
.

3135
03:11:19,280 --> 03:11:21,280
.

3136
03:11:21,280 --> 03:11:23,280
.

3137
03:11:23,280 --> 03:11:25,280
.

3138
03:11:25,280 --> 03:11:27,280
.

3139
03:11:27,280 --> 03:11:29,280
.

3140
03:11:29,280 --> 03:11:31,280
.

3141
03:11:31,280 --> 03:11:33,280
.

3142
03:11:33,280 --> 03:11:35,280
.

3143
03:11:35,280 --> 03:11:37,280
.

3144
03:11:37,280 --> 03:11:39,280
.

3145
03:11:39,280 --> 03:11:41,280
.

3146
03:11:41,280 --> 03:11:43,280
.

3147
03:11:43,280 --> 03:11:45,280
.

3148
03:11:45,280 --> 03:11:47,280
.

3149
03:11:47,280 --> 03:11:49,280
.

3150
03:11:49,280 --> 03:11:51,280
.

3151
03:11:51,280 --> 03:11:53,280
.

3152
03:11:53,280 --> 03:11:55,280
.

3153
03:11:55,280 --> 03:11:57,280
.

3154
03:11:57,280 --> 03:11:59,280
.

3155
03:11:59,280 --> 03:12:01,280
.

3156
03:12:01,280 --> 03:12:03,280
.

3157
03:12:03,280 --> 03:12:05,280
.

3158
03:12:05,280 --> 03:12:07,280
.

3159
03:12:07,280 --> 03:12:09,280
.

3160
03:12:09,280 --> 03:12:11,280
.

3161
03:12:11,280 --> 03:12:13,280
.

3162
03:12:13,280 --> 03:12:15,280
.

3163
03:12:15,280 --> 03:12:17,280
.

3164
03:12:17,280 --> 03:12:19,280
.

3165
03:12:19,280 --> 03:12:21,280
.

3166
03:12:21,280 --> 03:12:23,280
.

3167
03:12:23,280 --> 03:12:25,280
.

3168
03:12:25,280 --> 03:12:27,280
.

3169
03:12:27,280 --> 03:12:29,280
.

3170
03:12:29,280 --> 03:12:31,280
.

3171
03:12:31,280 --> 03:12:33,280
.

3172
03:12:33,280 --> 03:12:35,280
.

3173
03:12:35,280 --> 03:12:37,280
.

3174
03:12:37,280 --> 03:12:39,280
.

3175
03:12:39,280 --> 03:12:41,280
.

3176
03:12:41,280 --> 03:12:43,280
.

3177
03:12:43,280 --> 03:12:45,280
.

3178
03:12:45,280 --> 03:12:47,280
.

3179
03:12:47,280 --> 03:12:49,280
.

3180
03:12:49,280 --> 03:12:51,280
.

3181
03:12:51,280 --> 03:12:53,280
.

3182
03:12:53,280 --> 03:12:55,280
.

3183
03:12:55,280 --> 03:12:57,280
.

3184
03:12:57,280 --> 03:12:59,280
.

3185
03:12:59,280 --> 03:13:01,280
.

3186
03:13:01,280 --> 03:13:03,280
.

3187
03:13:03,280 --> 03:13:05,280
.

3188
03:13:05,280 --> 03:13:07,280
.

3189
03:13:07,280 --> 03:13:09,280
.

3190
03:13:09,280 --> 03:13:11,280
.

3191
03:13:11,280 --> 03:13:13,280
.

3192
03:13:13,280 --> 03:13:15,280
.

3193
03:13:15,280 --> 03:13:17,280
.

3194
03:13:17,280 --> 03:13:19,280
.

3195
03:13:19,280 --> 03:13:21,280
.

3196
03:13:21,280 --> 03:13:23,280
.

3197
03:13:23,280 --> 03:13:25,280
.

3198
03:13:25,280 --> 03:13:27,280
.

3199
03:13:27,280 --> 03:13:29,280
.

3200
03:13:29,280 --> 03:13:31,280
.

3201
03:13:31,280 --> 03:13:33,280
.

3202
03:13:33,280 --> 03:13:35,280
.

3203
03:13:35,280 --> 03:13:37,280
.

3204
03:13:37,280 --> 03:13:39,280
.

3205
03:13:39,280 --> 03:13:41,280
.

3206
03:13:41,280 --> 03:13:43,280
.

3207
03:13:43,280 --> 03:13:45,280
.

3208
03:13:45,280 --> 03:13:47,280
.

3209
03:13:47,280 --> 03:13:49,280
.

3210
03:13:49,280 --> 03:13:51,280
.

3211
03:13:51,280 --> 03:13:53,280
.

3212
03:13:53,280 --> 03:13:55,280
.

3213
03:13:55,280 --> 03:13:57,280
.

3214
03:13:57,280 --> 03:13:59,280
.

3215
03:13:59,280 --> 03:14:01,280
.

3216
03:14:01,280 --> 03:14:03,280
.

3217
03:14:03,280 --> 03:14:05,280
.

3218
03:14:05,280 --> 03:14:07,280
.

3219
03:14:07,280 --> 03:14:09,280
.

3220
03:14:09,280 --> 03:14:11,280
.

3221
03:14:11,280 --> 03:14:13,280
.

3222
03:14:13,280 --> 03:14:15,280
.

3223
03:14:15,280 --> 03:14:17,280
.

3224
03:14:17,280 --> 03:14:19,280
.

3225
03:14:19,280 --> 03:14:21,280
.

3226
03:14:21,280 --> 03:14:23,280
.

3227
03:14:23,280 --> 03:14:25,280
.

3228
03:14:25,280 --> 03:14:27,280
.

3229
03:14:27,280 --> 03:14:29,280
.

3230
03:14:29,280 --> 03:14:31,280
.

3231
03:14:31,280 --> 03:14:33,280
.

3232
03:14:33,280 --> 03:14:35,280
.

3233
03:14:35,280 --> 03:14:37,280
.

3234
03:14:37,280 --> 03:14:39,280
.

3235
03:14:39,280 --> 03:14:41,280
.

3236
03:14:41,280 --> 03:14:43,280
.

3237
03:14:43,280 --> 03:14:45,280
.

3238
03:14:45,280 --> 03:14:47,280
.

3239
03:14:47,280 --> 03:14:49,280
.

3240
03:14:49,280 --> 03:14:51,280
.

3241
03:14:51,280 --> 03:14:53,280
.

3242
03:14:53,280 --> 03:14:55,280
.

3243
03:14:55,280 --> 03:14:57,280
.

3244
03:14:57,280 --> 03:14:59,280
.

3245
03:14:59,280 --> 03:15:01,280
.

3246
03:15:01,280 --> 03:15:03,280
.

3247
03:15:03,280 --> 03:15:05,280
.

3248
03:15:05,280 --> 03:15:07,280
.

3249
03:15:07,280 --> 03:15:09,280
.

3250
03:15:09,280 --> 03:15:11,280
.

3251
03:15:11,280 --> 03:15:13,280
.

3252
03:15:13,280 --> 03:15:15,280
.

3253
03:15:15,280 --> 03:15:17,280
.

3254
03:15:17,280 --> 03:15:19,280
.

3255
03:15:19,280 --> 03:15:21,280
.

3256
03:15:21,280 --> 03:15:23,280
.

3257
03:15:23,280 --> 03:15:25,280
.

3258
03:15:25,280 --> 03:15:27,280
.

3259
03:15:27,280 --> 03:15:29,280
.

3260
03:15:29,280 --> 03:15:31,280
.

3261
03:15:31,280 --> 03:15:33,280
.

3262
03:15:33,280 --> 03:15:35,280
.

3263
03:15:35,280 --> 03:15:37,280
.

3264
03:15:37,280 --> 03:15:39,280
.

3265
03:15:39,280 --> 03:15:41,280
.

3266
03:15:41,280 --> 03:15:43,280
.

3267
03:15:43,280 --> 03:15:45,280
.

3268
03:15:45,280 --> 03:15:47,280
.

3269
03:15:47,280 --> 03:15:49,280
.

3270
03:15:49,280 --> 03:15:51,280
.

3271
03:15:51,280 --> 03:15:53,280
.

3272
03:15:53,280 --> 03:15:55,280
.

3273
03:15:55,280 --> 03:15:57,280
.

3274
03:15:57,280 --> 03:15:59,280
.

3275
03:15:59,280 --> 03:16:01,280
.

3276
03:16:01,280 --> 03:16:03,280
.

3277
03:16:03,280 --> 03:16:05,280
.

3278
03:16:05,280 --> 03:16:07,280
.

3279
03:16:07,280 --> 03:16:09,280
.

3280
03:16:09,280 --> 03:16:11,280
.

3281
03:16:11,280 --> 03:16:13,280
.

3282
03:16:13,280 --> 03:16:15,280
.

3283
03:16:15,280 --> 03:16:17,280
.

3284
03:16:17,280 --> 03:16:19,280
.

3285
03:16:19,280 --> 03:16:21,280
.

3286
03:16:21,280 --> 03:16:23,280
.

3287
03:16:23,280 --> 03:16:25,280
.

3288
03:16:25,280 --> 03:16:27,280
.

3289
03:16:27,280 --> 03:16:29,280
.

3290
03:16:29,280 --> 03:16:31,280
.

3291
03:16:31,280 --> 03:16:33,280
.

3292
03:16:33,280 --> 03:16:35,280
.

3293
03:16:35,280 --> 03:16:37,280
.

3294
03:16:37,280 --> 03:16:39,280
.

3295
03:16:39,280 --> 03:16:41,280
.

3296
03:16:41,280 --> 03:16:43,280
.

3297
03:16:43,280 --> 03:16:45,280
.

3298
03:16:45,280 --> 03:16:47,280
.

3299
03:16:47,280 --> 03:16:49,280
.

3300
03:16:49,280 --> 03:16:51,280
.

3301
03:16:51,280 --> 03:16:53,280
.

3302
03:16:53,280 --> 03:16:55,280
.

3303
03:16:55,280 --> 03:16:57,280
.

3304
03:16:57,280 --> 03:16:59,280
.

3305
03:16:59,280 --> 03:17:01,280
.

3306
03:17:01,280 --> 03:17:03,280
.

3307
03:17:03,280 --> 03:17:05,280
.

3308
03:17:05,280 --> 03:17:07,280
.

3309
03:17:07,280 --> 03:17:09,280
.

3310
03:17:09,280 --> 03:17:11,280
.

3311
03:17:11,280 --> 03:17:13,280
.

3312
03:17:13,280 --> 03:17:15,280
.

3313
03:17:15,280 --> 03:17:17,280
.

3314
03:17:17,280 --> 03:17:19,280
.

3315
03:17:19,280 --> 03:17:21,280
.

3316
03:17:21,280 --> 03:17:23,280
.

3317
03:17:23,280 --> 03:17:25,280
.

3318
03:17:25,280 --> 03:17:27,280
.

3319
03:17:27,280 --> 03:17:29,280
.

3320
03:17:29,280 --> 03:17:31,280
.

3321
03:17:31,280 --> 03:17:33,280
.

3322
03:17:33,280 --> 03:17:35,280
.

3323
03:17:35,280 --> 03:17:37,280
.

3324
03:17:37,280 --> 03:17:39,280
.

3325
03:17:39,280 --> 03:17:41,280
.

3326
03:17:41,280 --> 03:17:43,280
.

3327
03:17:43,280 --> 03:17:45,280
.

3328
03:17:45,280 --> 03:17:47,280
.

3329
03:17:47,280 --> 03:17:49,280
.

3330
03:17:49,280 --> 03:17:51,280
.

3331
03:17:51,280 --> 03:17:53,280
.

3332
03:17:53,280 --> 03:17:55,280
.

3333
03:17:55,280 --> 03:17:57,280
.

3334
03:17:57,280 --> 03:17:59,280
.

3335
03:17:59,280 --> 03:18:01,280
.

