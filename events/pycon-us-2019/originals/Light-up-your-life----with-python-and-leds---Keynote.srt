1
00:00:00,000 --> 00:00:05,720
Can everyone see that?

2
00:00:05,720 --> 00:00:09,520
All right.

3
00:00:09,520 --> 00:00:13,000
Hi, I'm Nina Zakarenko.

4
00:00:13,000 --> 00:00:14,840
Some of you might follow me on Twitter.

5
00:00:14,840 --> 00:00:17,160
I tweet at NNJA.

6
00:00:17,160 --> 00:00:19,440
That's like ninja without the I.

7
00:00:19,480 --> 00:00:30,800
I'm here today to show you how to light up your life with Python and LEDs.

8
00:00:30,800 --> 00:00:35,880
Let's try a little bit, let's try something a little bit different today.

9
00:00:35,880 --> 00:00:39,360
It's pretty fun to live tweet, so if you're learning something new, if you're excited

10
00:00:39,360 --> 00:00:44,160
about what you're learning today, I encourage you to share a tweet and use the hashtag

11
00:00:44,160 --> 00:00:45,760
PyCon2019.

12
00:00:45,760 --> 00:00:52,280
If you'd like, you can at mention me as well.

13
00:00:52,280 --> 00:00:57,840
Software is something that's been with me for a long time.

14
00:00:57,840 --> 00:01:02,720
I used to have a lot of creative energy when I was younger and an interest in computers

15
00:01:02,720 --> 00:01:05,080
from a very young age.

16
00:01:05,080 --> 00:01:13,360
I thought the ability to trick computers into doing what I tell them was pretty awesome.

17
00:01:14,120 --> 00:01:20,280
I thought I would have to give that up when I joined the workforce or nobody would take

18
00:01:20,280 --> 00:01:24,920
me seriously as a developer.

19
00:01:24,920 --> 00:01:29,400
My first few jobs really kind of sucked the creativity out of me.

20
00:01:29,400 --> 00:01:35,840
I worked for some large corporations, I worked for enterprises and financial institutions,

21
00:01:35,840 --> 00:01:40,320
and my opportunities for creative coding faded away.

22
00:01:41,280 --> 00:01:46,720
I slowly built that back up with open source, but tinkering with hardware is what let my

23
00:01:46,720 --> 00:01:50,520
creativity truly explode.

24
00:01:53,240 --> 00:01:59,000
It's taken me years to reconnect with that part of myself and relearn the lesson that

25
00:01:59,000 --> 00:02:02,400
I learned all of those years ago.

26
00:02:02,400 --> 00:02:07,200
That software doesn't have to be serious.

27
00:02:07,200 --> 00:02:08,400
Software could be fun.

28
00:02:08,400 --> 00:02:13,320
You can use it to make code, you can use it to make art like this code right here.

29
00:02:13,320 --> 00:02:19,440
This is a Python version of a processing sketch by Saskia Frick.

30
00:02:19,440 --> 00:02:23,200
And hardware doesn't have to be serious either.

31
00:02:23,200 --> 00:02:32,560
This is how Simone Gerz, she's an incredible maker, this is how she eats her cereal in

32
00:02:32,560 --> 00:02:34,520
the mornings.

33
00:02:39,040 --> 00:02:42,760
Here are some of my personal projects.

34
00:02:42,760 --> 00:02:45,160
Here's one, it's an iridescent headdress.

35
00:02:45,160 --> 00:02:52,680
Just know that this is Arduino code, it's basically a variant of C++.

36
00:02:52,680 --> 00:02:59,000
And I only recently started playing with hardware but I also just instantly fell in love.

37
00:02:59,000 --> 00:03:04,400
I've always been wary of the ephemeral nature of software, that you can't hold it in your

38
00:03:04,400 --> 00:03:07,480
hand, you can't touch it.

39
00:03:07,480 --> 00:03:09,240
Software is different.

40
00:03:09,240 --> 00:03:12,640
You can create a physical manifestation of your code.

41
00:03:12,640 --> 00:03:18,480
And I loved the idea of LEDs, of making really cool wearable projects.

42
00:03:18,480 --> 00:03:22,040
I wanted to make pretty things that fit my aesthetic.

43
00:03:22,040 --> 00:03:32,560
I have pink hair and pink glittery nails and I'll show you all my glittery shoes.

44
00:03:32,560 --> 00:03:37,360
So I wanted to make things that looked like this.

45
00:03:37,400 --> 00:03:41,600
The things that fit my aesthetic is what got me interested in hardware.

46
00:03:41,600 --> 00:03:46,040
And hardware lets me be creative, it lets me imagine something and then bring that imagination

47
00:03:46,040 --> 00:03:47,040
to life.

48
00:03:47,040 --> 00:03:52,200
And I've been inspired by a lot of amazing shared projects and documentation from other

49
00:03:52,200 --> 00:03:54,680
makers like Becky Stern.

50
00:03:54,680 --> 00:03:57,440
Yeah.

51
00:03:57,440 --> 00:04:00,800
Now I'm not an expert in electronics and I'm going to show you that you don't have to be

52
00:04:00,800 --> 00:04:03,000
either.

53
00:04:03,000 --> 00:04:05,920
But a little bit more about me.

54
00:04:06,240 --> 00:04:07,680
My name is Nina Zakarenko.

55
00:04:07,680 --> 00:04:10,480
I've been a software engineer for over a decade.

56
00:04:10,480 --> 00:04:15,600
I've written code for some companies that you might have heard of like HBO, Meetup and

57
00:04:15,600 --> 00:04:16,960
Reddit.

58
00:04:16,960 --> 00:04:21,880
Now I work at Microsoft as a Senior Cloud Developer Advocate where my goal is to make

59
00:04:21,880 --> 00:04:26,640
Visual Studio Code and Azure a pleasure to use for Python developers.

60
00:04:26,640 --> 00:04:30,120
If you're interested in learning more about Python at Microsoft, you can check out this

61
00:04:30,120 --> 00:04:31,920
link aka.ms.

62
00:04:31,920 --> 00:04:36,880
But note that you don't have to jot all these links down.

63
00:04:36,880 --> 00:04:40,760
I will give you a copy of the slides at the end.

64
00:04:40,760 --> 00:04:50,120
A quick aside, this is my seventh PyCon.

65
00:04:50,120 --> 00:04:55,840
It's a dream come true for me to be here on stage sharing what I'm passionate about with

66
00:04:55,840 --> 00:04:57,600
all of you.

67
00:04:57,600 --> 00:04:58,840
So thank you all for having me.

68
00:05:02,720 --> 00:05:10,640
And just note that if you find these slides on Speaker Deck, you're just going to have

69
00:05:10,640 --> 00:05:12,800
to download them to click the links.

70
00:05:12,800 --> 00:05:17,040
There's a lot of links throughout the slide, even a slide for additional resources afterwards

71
00:05:17,040 --> 00:05:18,680
that I won't be going through.

72
00:05:18,680 --> 00:05:20,120
So you'll see the link here.

73
00:05:20,120 --> 00:05:22,560
You'll also see the link on my Twitter.

74
00:05:22,560 --> 00:05:25,760
And I have some live demos to show you today.

75
00:05:25,760 --> 00:05:27,880
So please be patient with me.

76
00:05:28,840 --> 00:05:34,680
And of course, I'm a newly minted hardware enthusiast.

77
00:05:34,680 --> 00:05:41,000
So earlier I mentioned Arduino code, a C++ variant, and showed you some of my projects.

78
00:05:41,000 --> 00:05:46,680
The problem here is that, you know, C++, it's not easy to learn.

79
00:05:46,680 --> 00:05:48,320
It's very error prone.

80
00:05:48,320 --> 00:05:50,520
There's a very specific syntax.

81
00:05:50,520 --> 00:05:54,840
If you forget a semicolon, you know, it's game over.

82
00:05:54,840 --> 00:06:00,640
And we know from experience that Python is the opposite.

83
00:06:00,640 --> 00:06:02,560
It's easy to learn.

84
00:06:02,560 --> 00:06:04,800
It's beginner friendly.

85
00:06:04,800 --> 00:06:07,000
It's great for education.

86
00:06:07,000 --> 00:06:11,320
In fact, it was announced in January that Python is going to be part of the official

87
00:06:11,320 --> 00:06:14,800
curriculum for high school education in France.

88
00:06:15,640 --> 00:06:25,320
So we're at a Python conference, right?

89
00:06:25,320 --> 00:06:30,560
And we want to program devices with Python.

90
00:06:30,560 --> 00:06:35,800
Luckily, I hope you all have your swag bags today.

91
00:06:35,800 --> 00:06:41,480
If you reach in them, you should have a device that looks something like this, right?

92
00:06:41,480 --> 00:06:46,320
I'm going to show you how to program it.

93
00:06:46,320 --> 00:06:48,400
So if you look in your swag bag, you'll see that.

94
00:06:48,400 --> 00:06:52,200
And then let's see if my hardware is coordinating today.

95
00:07:02,480 --> 00:07:04,280
Sorry, it's a little glitchy.

96
00:07:04,280 --> 00:07:05,760
Promise it'll stop in a sec.

97
00:07:05,760 --> 00:07:07,440
Okay, can everyone see that?

98
00:07:07,440 --> 00:07:09,040
Let me try one more light.

99
00:07:09,040 --> 00:07:10,040
That's too bright.

100
00:07:11,480 --> 00:07:14,480
Okay, here we go.

101
00:07:41,560 --> 00:07:51,480
And of course, here you'll see my pink glittery nails and my matching pink USB cable.

102
00:07:51,480 --> 00:07:55,320
Just the important things, right?

103
00:07:55,320 --> 00:07:57,320
So here's this device.

104
00:08:11,480 --> 00:08:13,480
That's the wrong window.

105
00:08:13,480 --> 00:08:15,480
That's the one I want.

106
00:08:17,480 --> 00:08:19,480
This is the...

107
00:08:19,480 --> 00:08:21,480
We're going to write some code here.

108
00:08:25,480 --> 00:08:27,480
Make sure that everyone can see that.

109
00:08:35,480 --> 00:08:37,480
Oops.

110
00:08:37,480 --> 00:08:39,480
Just a little refresh there.

111
00:08:39,480 --> 00:08:41,480
I unplugged it and plugged it back in.

112
00:08:45,480 --> 00:08:51,480
So now you should see that up there.

113
00:08:51,480 --> 00:08:55,480
Okay, so this is just some pretty simple...

114
00:08:55,480 --> 00:08:57,480
It's glitching out a bit.

115
00:08:59,480 --> 00:09:03,480
Of course it wasn't doing this when I tested earlier.

116
00:09:05,480 --> 00:09:07,480
Let me unplug that and plug that back in.

117
00:09:09,480 --> 00:09:11,480
Live demos.

118
00:09:23,480 --> 00:09:25,480
That's me.

119
00:09:25,480 --> 00:09:27,480
All right, that looks a little bit better.

120
00:09:31,480 --> 00:09:33,480
All right, we're just going to deal with it.

121
00:09:35,480 --> 00:09:38,480
So this is just some simple, kind of the simplest code that you can have here.

122
00:09:38,480 --> 00:09:42,480
I'm going to walk you through how this works a little bit later.

123
00:09:42,480 --> 00:09:50,480
But the nice thing about this is it just shows up as a drive, and I can program it pretty quickly.

124
00:09:50,480 --> 00:09:52,480
So I'm just going to make a new color.

125
00:09:52,480 --> 00:09:54,480
We'll talk about this soon.

126
00:09:54,480 --> 00:09:58,480
And then I'm going to update that, and let's see if that works.

127
00:09:58,480 --> 00:10:00,480
All right, easy peasy.

128
00:10:00,480 --> 00:10:02,480
Let's switch things back.

129
00:10:12,480 --> 00:10:16,480
Okay, so there are a few other devices that run Python.

130
00:10:16,480 --> 00:10:22,480
The Raspberry Pi 0W, it's a small development kit with wireless and Bluetooth connectivity.

131
00:10:22,480 --> 00:10:26,480
There's the BBC micro bit, it's a computing device aimed at learning.

132
00:10:26,480 --> 00:10:32,480
It was given free to every child around age 11 across the UK in 2016.

133
00:10:32,480 --> 00:10:37,480
Then there's the Adafruit M0 and M4 line of devices and a lot more.

134
00:10:37,480 --> 00:10:40,480
I'm going to be focusing on Adafruit today.

135
00:10:40,480 --> 00:10:42,480
I'm a big fan.

136
00:10:42,480 --> 00:10:44,480
Not just because they sometimes send me free hardware.

137
00:10:44,480 --> 00:10:46,480
Thank you.

138
00:10:46,480 --> 00:10:48,480
But because it's a woman-owned company, it's based in New York.

139
00:10:48,480 --> 00:10:52,480
Adafruit products are low cost, they're easy to order, and they're very well documented.

140
00:10:52,480 --> 00:10:54,480
They have a ton of projects up on their website.

141
00:10:54,480 --> 00:10:56,480
This is one of my favorite hardware platforms.

142
00:10:56,480 --> 00:10:58,480
It was limited edition for Halloween last year.

143
00:10:58,480 --> 00:11:00,480
It's the Hollowing.

144
00:11:00,480 --> 00:11:15,000
It's a spooky development kit with a little bit of a

145
00:11:15,520 --> 00:11:17,520
with a color screen.

146
00:11:17,520 --> 00:11:20,520
I actually have one with me if someone would like to take a closer look.

147
00:11:20,520 --> 00:11:23,520
How do we get Python running on these things?

148
00:11:23,520 --> 00:11:28,520
Well, MicroPython is a variant of Python 3.

149
00:11:28,520 --> 00:11:33,520
It's optimized for microcontrollers and it's compact enough to fit and run within just

150
00:11:33,520 --> 00:11:37,520
256 kilobytes of code space and 16 kilobytes of RAM.

151
00:11:37,520 --> 00:11:41,520
That's what runs on the micro bit.

152
00:11:42,040 --> 00:11:48,040
Now, CircuitPython is an education-friendly fork by Adafruit of MicroPython.

153
00:11:48,040 --> 00:11:54,040
Since I'm going to be showing you demos on Adafruit hardware, we're going to be using

154
00:11:54,040 --> 00:11:56,040
CircuitPython today.

155
00:11:56,040 --> 00:12:02,040
And most importantly, both are open source, so contribute back.

156
00:12:02,040 --> 00:12:08,040
Now, the red ones in your swag bags, they come with Python preinstalled, but if you

157
00:12:08,560 --> 00:12:12,560
have one from somewhere else, depending on when and where you purchased it, it might

158
00:12:12,560 --> 00:12:14,560
not have Python on it by default.

159
00:12:14,560 --> 00:12:16,560
It's pretty easy to set up.

160
00:12:16,560 --> 00:12:18,560
There's a link to that in my slides.

161
00:12:18,560 --> 00:12:22,560
And it's my favorite option for an introduction to electronics and programming

162
00:12:22,560 --> 00:12:24,560
hardware.

163
00:12:24,560 --> 00:12:32,560
PEP 206 describes this idea of Python's battery-included philosophy.

164
00:12:33,080 --> 00:12:39,080
It says that by having a rich and versatile standard library, which is immediately

165
00:12:39,080 --> 00:12:45,080
available without having to make the user download separate packages, the idea is that

166
00:12:45,080 --> 00:12:49,080
it's helped drive Python's success.

167
00:12:53,080 --> 00:12:59,080
Now, the CircuitPlayground Express, the device in your swag bag, it doesn't actually come

168
00:12:59,080 --> 00:13:01,080
with batteries.

169
00:13:01,600 --> 00:13:07,600
But I imagine that the same philosophy applies.

170
00:13:11,600 --> 00:13:17,600
It has everything that you need to get started with programming hardware on one board.

171
00:13:19,600 --> 00:13:23,600
So let me give you a little bit of a tour.

172
00:13:31,600 --> 00:13:33,600
Turn this off really quick.

173
00:13:37,600 --> 00:13:39,600
And let me amp up the brightness.

174
00:13:39,600 --> 00:13:41,600
And zoom in a little bit.

175
00:13:44,600 --> 00:13:50,600
Okay, so it has a circle of RGB LEDs along the sides.

176
00:13:50,600 --> 00:13:52,600
It has these two programmable buttons.

177
00:13:52,600 --> 00:13:54,600
It has a switch on the front right here.

178
00:13:54,600 --> 00:13:56,600
So no, that's not a power switch.

179
00:13:56,600 --> 00:14:00,600
It's a button that you can use to turn on the lights.

180
00:14:01,120 --> 00:14:03,120
It has a power switch.

181
00:14:03,120 --> 00:14:05,120
This is a switch that you can program.

182
00:14:05,120 --> 00:14:07,120
It has a little speaker right here.

183
00:14:07,120 --> 00:14:09,120
It has a microphone.

184
00:14:09,120 --> 00:14:11,120
There's a light sensor, temperature sensor.

185
00:14:11,120 --> 00:14:17,120
There's even a little accelerometer right there in the middle.

186
00:14:17,120 --> 00:14:23,120
And one of the coolest features is that it has a micro USB port.

187
00:14:23,120 --> 00:14:25,120
That's how you program it.

188
00:14:25,120 --> 00:14:27,120
And it's pretty standard.

189
00:14:27,120 --> 00:14:29,120
It's easy right here.

190
00:14:29,640 --> 00:14:31,640
And it's a little bit more powerful.

191
00:14:31,640 --> 00:14:33,640
It's a little bit more powerful.

192
00:14:33,640 --> 00:14:35,640
And it's a little bit more powerful.

193
00:14:35,640 --> 00:14:37,640
So I'm going to show you a little bit of how the hardware in the

194
00:14:37,640 --> 00:14:41,640
past know how annoying some of the other programming options might

195
00:14:41,640 --> 00:14:43,640
be.

196
00:14:50,640 --> 00:14:52,640
Now, we talked a little bit about microcontrollers.

197
00:14:52,640 --> 00:14:55,640
So the microcontroller is the little processor on that chip that

198
00:14:55,640 --> 00:14:57,640
does the work.

199
00:14:58,160 --> 00:15:00,160
And I'll go over it a little bit.

200
00:15:00,160 --> 00:15:02,160
But it can run in this tiny package.

201
00:15:02,160 --> 00:15:05,160
Best of all, the best thing about this is that there's no soldering

202
00:15:05,160 --> 00:15:10,160
required, which means that it's great for kids, but it's also great

203
00:15:10,160 --> 00:15:12,160
for clumsy adults.

204
00:15:14,160 --> 00:15:20,160
And it can easily connect to other things with alligator clips like

205
00:15:20,160 --> 00:15:22,160
LED strips.

206
00:15:22,160 --> 00:15:24,160
And you can even sew onto it with conductive thread.

207
00:15:24,160 --> 00:15:24,660
thread.

208
00:15:24,660 --> 00:15:29,000
So an alligator clip looks a little bit like this.

209
00:15:29,000 --> 00:15:29,800
Kind of see that?

210
00:15:29,800 --> 00:15:33,360
It's got like a little clip, clip, clip.

211
00:15:33,360 --> 00:15:36,880
And then you can pick an input pin

212
00:15:36,880 --> 00:15:38,440
and just clip it on right like that.

213
00:15:38,440 --> 00:15:42,360
You kind of want to make sure that it's on there pretty good.

214
00:15:42,360 --> 00:15:45,960
So not this, but that.

215
00:15:46,320 --> 00:15:46,820
OK.

216
00:15:52,040 --> 00:15:55,000
So how do we light up these RGB LEDs that

217
00:15:55,000 --> 00:15:58,840
are on the front of it, that circle?

218
00:15:58,840 --> 00:16:01,200
You have to know a little bit about color theory

219
00:16:01,200 --> 00:16:02,780
to figure out how to get this to work,

220
00:16:02,780 --> 00:16:05,760
but I promise just a little bit.

221
00:16:05,760 --> 00:16:09,800
An RGB LED is a combination of three LEDs in one package.

222
00:16:09,800 --> 00:16:12,580
RGB here stands for red, green, and blue.

223
00:16:12,580 --> 00:16:14,920
Take a look at the color wheel.

224
00:16:14,920 --> 00:16:17,600
You can produce almost any color by combining

225
00:16:17,600 --> 00:16:19,760
these three colors in intensities varying

226
00:16:19,760 --> 00:16:24,360
from 0, which is 0%, to 255, which

227
00:16:24,360 --> 00:16:27,600
is 100% on this scale.

228
00:16:27,600 --> 00:16:30,840
0 means that the color is not present,

229
00:16:30,840 --> 00:16:34,400
while 255 means it's at maximum intensity.

230
00:16:34,400 --> 00:16:39,020
So for example, if blue is set to 255, green is set to 0,

231
00:16:39,020 --> 00:16:42,200
and red is set to 0, what color will we see?

232
00:16:42,200 --> 00:16:43,200
Blue.

233
00:16:43,200 --> 00:16:44,800
That's exactly right.

234
00:16:44,840 --> 00:16:46,880
And looking at the color wheel, you can see, well,

235
00:16:46,880 --> 00:16:51,560
if you mix red and blue, then you see purple.

236
00:16:51,560 --> 00:16:58,000
This is one RGB LED under a microscope.

237
00:16:58,000 --> 00:17:01,560
Remember, the LEDs have one tiny LED inside of them

238
00:17:01,560 --> 00:17:04,840
of each color, red, green, and blue.

239
00:17:04,840 --> 00:17:08,000
You'll understand it better if you see it in action,

240
00:17:08,000 --> 00:17:11,040
because the three tiny LEDs, they light up one by one,

241
00:17:11,040 --> 00:17:12,800
but your eye sees them as one color.

242
00:17:12,800 --> 00:17:15,360
That mixes the colors for you.

243
00:17:15,360 --> 00:17:18,720
In this picture, they're all off.

244
00:17:18,720 --> 00:17:22,000
In this one, just the red LED is lit.

245
00:17:22,000 --> 00:17:24,320
That means the whole LED will look red.

246
00:17:24,320 --> 00:17:26,040
You can kind of tell the color of that

247
00:17:26,040 --> 00:17:29,240
by looking at the outside ring.

248
00:17:29,240 --> 00:17:31,640
Now it's just green.

249
00:17:31,640 --> 00:17:34,080
Now it's just blue.

250
00:17:34,080 --> 00:17:36,340
And lastly, if they're all turned on,

251
00:17:36,340 --> 00:17:38,600
the LED will look like an approximation

252
00:17:38,600 --> 00:17:42,440
of white to your eye.

253
00:17:42,480 --> 00:17:43,960
And using this technique, you can

254
00:17:43,960 --> 00:17:46,000
produce all the colors in between.

255
00:17:46,000 --> 00:17:48,720
Know that NeoPixels are the Adafruit brand

256
00:17:48,720 --> 00:17:53,000
for these individually addressable LEDs.

257
00:17:53,000 --> 00:17:56,040
You might also see them called WS2812,

258
00:17:56,040 --> 00:17:59,400
or there's a few other standards there.

259
00:17:59,400 --> 00:18:02,800
OK, so how do we program it?

260
00:18:02,800 --> 00:18:06,640
It's a lot easier than working with Arduino-based platforms.

261
00:18:06,640 --> 00:18:08,920
For those of you in the room that have tried it,

262
00:18:08,920 --> 00:18:10,360
I feel like you know.

263
00:18:10,360 --> 00:18:12,800
I've seen a lot of AVR dude errors in my day.

264
00:18:15,440 --> 00:18:18,520
So you plug it in with a data and charge cable.

265
00:18:18,520 --> 00:18:20,320
This part is very, very important.

266
00:18:20,320 --> 00:18:24,560
Not all micro-USB cables support data transfer.

267
00:18:24,560 --> 00:18:27,000
So it has to be a known good cable.

268
00:18:27,000 --> 00:18:29,360
If you see a circuit Python drive on Mac OS,

269
00:18:29,360 --> 00:18:31,240
it's in volume circuit py.

270
00:18:31,240 --> 00:18:31,960
You're done.

271
00:18:31,960 --> 00:18:34,080
Otherwise, here's a link to install.

272
00:18:34,080 --> 00:18:38,900
And then you can create or edit a code.py or main.py file

273
00:18:38,900 --> 00:18:40,520
in the root directory.

274
00:18:40,520 --> 00:18:44,020
The important thing here is do not unplug or reset the board

275
00:18:44,020 --> 00:18:47,500
before your computer finishes writing the file to the board,

276
00:18:47,500 --> 00:18:49,780
or you can corrupt the drive.

277
00:18:49,780 --> 00:18:52,660
You want to wait until the file is done being saved

278
00:18:52,660 --> 00:18:56,100
before unplugging or resetting your board.

279
00:18:56,100 --> 00:18:58,220
There's some editors you don't want to use,

280
00:18:58,220 --> 00:19:02,620
like idle and notepad, that don't write the file out

281
00:19:02,620 --> 00:19:03,260
right away.

282
00:19:03,260 --> 00:19:05,820
We'll talk about some other editors in a moment.

283
00:19:05,820 --> 00:19:09,300
And the cool thing here is your code runs instantly

284
00:19:09,300 --> 00:19:12,660
because it's auto-reloaded.

285
00:19:12,660 --> 00:19:15,420
Cool, right?

286
00:19:15,420 --> 00:19:21,220
OK, so let's try this out.

287
00:19:21,220 --> 00:19:23,380
Let's hope my camera coordinates with me.

288
00:19:35,820 --> 00:19:45,180
Let me see right here.

289
00:19:45,180 --> 00:19:47,540
Just make sure everything is in focus for you.

290
00:20:03,060 --> 00:20:04,060
Lock that up.

291
00:20:04,060 --> 00:20:04,560
OK.

292
00:20:06,820 --> 00:20:08,420
I don't want everyone in the room

293
00:20:08,420 --> 00:20:09,620
to feel like they need glasses.

294
00:20:15,940 --> 00:20:18,140
There we go.

295
00:20:18,140 --> 00:20:19,500
Switch this over real quick.

296
00:20:29,740 --> 00:20:30,240
OK.

297
00:20:32,940 --> 00:20:33,500
There we go.

298
00:20:33,500 --> 00:20:35,660
Can everyone see that?

299
00:20:35,660 --> 00:20:36,740
Fantastic.

300
00:20:36,740 --> 00:20:37,240
OK.

301
00:20:44,260 --> 00:20:46,060
Make sure we get the whole thing in there.

302
00:20:50,220 --> 00:20:52,540
Brought a lot of gear to make this happen.

303
00:20:56,860 --> 00:21:01,340
All right, so very quickly, let's take a look at this.

304
00:21:01,340 --> 00:21:02,500
Let's see.

305
00:21:02,500 --> 00:21:04,940
Let me just refresh.

306
00:21:04,940 --> 00:21:08,860
If you have the directory open when you unplug it and plug it

307
00:21:08,860 --> 00:21:12,580
back in, you can just quickly refresh with CD dot.

308
00:21:12,580 --> 00:21:14,500
I figured that out a few days ago.

309
00:21:14,500 --> 00:21:15,580
It's been saving my life.

310
00:21:18,220 --> 00:21:24,060
So running tree on here on this volumes circuit py directory.

311
00:21:24,060 --> 00:21:26,620
We'll see this bootout txt.

312
00:21:26,620 --> 00:21:28,260
You don't have to worry about that.

313
00:21:28,260 --> 00:21:30,540
The important thing here is the code.py file

314
00:21:30,540 --> 00:21:31,700
that we'll be working with.

315
00:21:35,940 --> 00:21:38,620
So we saw the most basic demo.

316
00:21:38,620 --> 00:21:41,220
Let's take a look at something a little bit more interesting.

317
00:22:00,100 --> 00:22:03,260
Going back to our most original demo,

318
00:22:03,260 --> 00:22:05,420
I want to quickly walk you through this.

319
00:22:05,420 --> 00:22:08,180
So the important thing that we have here

320
00:22:08,180 --> 00:22:13,500
is importing the Adafruit Circuit Playground dot

321
00:22:13,500 --> 00:22:15,820
Express library.

322
00:22:15,820 --> 00:22:18,900
You want to import it as tpx.

323
00:22:18,900 --> 00:22:22,060
The awesome maintainer of this, Katniss, in the room today.

324
00:22:22,060 --> 00:22:23,780
So if you're enjoying it, just give her

325
00:22:23,780 --> 00:22:24,780
a quick round of applause.

326
00:22:24,780 --> 00:22:26,260
She's awesome.

327
00:22:26,260 --> 00:22:26,760
Yeah.

328
00:22:26,760 --> 00:22:35,840
And then I created my red color, setting 255 for red,

329
00:22:35,840 --> 00:22:38,480
and then 0 for green, 0 for blue.

330
00:22:38,480 --> 00:22:40,840
I'm turning down the brightness here, because by default,

331
00:22:40,840 --> 00:22:41,600
it's very bright.

332
00:22:41,600 --> 00:22:43,680
Those of you who've already plugged in your Circuit

333
00:22:43,680 --> 00:22:47,280
Playground Express know that.

334
00:22:47,280 --> 00:22:49,800
And the important thing here is that while true,

335
00:22:49,800 --> 00:22:52,160
I want to loop forever.

336
00:22:52,160 --> 00:22:55,560
You want to consider this like an animation.

337
00:22:55,560 --> 00:22:57,040
If you just run your code once, it's

338
00:22:57,040 --> 00:22:59,240
going to blink red for a second, and then turn off,

339
00:22:59,240 --> 00:23:01,920
and you're going to be like, what happened?

340
00:23:01,920 --> 00:23:04,040
So this part here is crucial.

341
00:23:04,040 --> 00:23:10,280
And on this line, line 8, I'm calling cpx.pixels.fill.

342
00:23:10,280 --> 00:23:13,560
That's a helper method on that cpx library

343
00:23:13,560 --> 00:23:19,680
that fills in all of the LEDs with one color.

344
00:23:19,680 --> 00:23:23,760
So looking at our more complex example,

345
00:23:23,760 --> 00:23:28,320
again, I'm importing the cpx library here.

346
00:23:28,320 --> 00:23:30,440
I'm making two colors, red and blue.

347
00:23:30,440 --> 00:23:33,400
I'm setting the brightness, and then kind of scrolling

348
00:23:33,400 --> 00:23:36,080
to the interesting part.

349
00:23:36,080 --> 00:23:39,820
So I'm going to keep looping forever.

350
00:23:39,820 --> 00:23:44,520
If button A, that button on the left-hand side,

351
00:23:44,520 --> 00:23:46,960
let me make sure this is oriented correctly.

352
00:23:46,960 --> 00:23:49,340
This one right here, if that button is pressed,

353
00:23:49,340 --> 00:23:51,800
we're going to fill our circle with red.

354
00:23:51,800 --> 00:23:54,320
If button B is pressed, the one right here,

355
00:23:54,320 --> 00:23:56,000
we're going to fill it with blue.

356
00:23:56,000 --> 00:23:58,800
Otherwise, we're going to fill it with black.

357
00:23:58,800 --> 00:24:01,160
Let me quickly zoom in here so that you all

358
00:24:01,160 --> 00:24:06,720
can see that these buttons are actually handily labeled.

359
00:24:06,720 --> 00:24:14,280
So there's the A right there, and there is the B right there.

360
00:24:14,280 --> 00:24:15,920
Should we try it and see if it works?

361
00:24:15,920 --> 00:24:16,420
Yeah.

362
00:24:16,420 --> 00:24:18,280
Woo!

363
00:24:18,280 --> 00:24:23,400
OK, so the Circuit Playground library,

364
00:24:23,400 --> 00:24:28,160
if the button A is pressed, cpx.button underscore A

365
00:24:28,160 --> 00:24:29,380
will return true.

366
00:24:29,380 --> 00:24:31,160
Otherwise, it returns false.

367
00:24:31,160 --> 00:24:32,880
So we're going to fill this with red.

368
00:24:38,640 --> 00:24:42,880
And then we're going to fill this one with blue.

369
00:24:42,880 --> 00:24:47,520
And then when I let it go, it's just off black, right?

370
00:24:47,540 --> 00:24:48,560
Let's add something else.

371
00:24:48,560 --> 00:24:51,160
Let's do a little bit of live coding.

372
00:24:51,160 --> 00:24:53,680
Let me pretend I'm Kelsey Hightower for a minute.

373
00:24:53,680 --> 00:24:57,040
That's not what I want.

374
00:25:00,120 --> 00:25:02,400
OK, so we got 0.

375
00:25:02,400 --> 00:25:07,800
If we want to make green, it's just 255 for that green value.

376
00:25:07,800 --> 00:25:11,720
And let's say that if both buttons are pressed,

377
00:25:11,720 --> 00:25:14,760
we're going to make the circle green.

378
00:25:17,520 --> 00:25:30,320
And then, of course, we have to change one more thing here,

379
00:25:30,320 --> 00:25:32,240
make that an ulcif.

380
00:25:32,240 --> 00:25:36,160
OK, so I've saved, and the code is just autoreloaded.

381
00:25:36,160 --> 00:25:40,840
So now pressing button A gives us red.

382
00:25:40,840 --> 00:25:43,600
Pressing button B gives us blue.

383
00:25:43,600 --> 00:25:46,360
Moment of truth.

384
00:25:46,360 --> 00:25:49,840
There it goes.

385
00:25:53,240 --> 00:25:57,840
And if I let that one go, it kind of works like that.

386
00:25:57,840 --> 00:26:02,960
So it's really pretty easy and pretty straightforward.

387
00:26:02,960 --> 00:26:04,200
Let's try a few more things.

388
00:26:16,360 --> 00:26:32,480
Let me see.

389
00:26:35,280 --> 00:26:37,240
There we go.

390
00:26:37,240 --> 00:26:38,560
My refresh wasn't working.

391
00:26:42,480 --> 00:26:45,360
Now, this code is just a little bit more complicated,

392
00:26:45,360 --> 00:26:47,880
but really just a little bit.

393
00:26:47,880 --> 00:26:50,520
So under here, let me move this for a sec.

394
00:26:50,520 --> 00:26:54,320
I'm importing my CPX library as before.

395
00:26:54,320 --> 00:26:55,920
I'm importing time.

396
00:26:55,920 --> 00:26:59,200
That's just Python's basic time.

397
00:26:59,200 --> 00:27:02,920
I'm setting up my red, green, blue values like I did before,

398
00:27:02,920 --> 00:27:04,760
setting the brightness.

399
00:27:04,760 --> 00:27:10,400
This time, I'm going to define a list of my colors,

400
00:27:10,400 --> 00:27:14,400
and I'm going to define a color position that's the color

401
00:27:14,400 --> 00:27:17,040
that we're currently at.

402
00:27:17,040 --> 00:27:19,680
Looping forever.

403
00:27:19,680 --> 00:27:24,360
Now I'm going to fill in the circle with the color

404
00:27:24,360 --> 00:27:28,240
at color position from my colors list.

405
00:27:28,240 --> 00:27:32,360
Now, if button A or button B is pressed,

406
00:27:32,360 --> 00:27:35,680
increase the color position by one.

407
00:27:35,680 --> 00:27:40,520
Using the modulo operator, if that value

408
00:27:40,520 --> 00:27:44,200
is increased to more than the length of my list,

409
00:27:44,200 --> 00:27:48,120
using modulo will help me wrap that value around back to zero

410
00:27:48,120 --> 00:27:51,760
so I don't get any indexing errors.

411
00:27:51,760 --> 00:27:56,080
And I'm going to sleep for just a fifth of a second here.

412
00:27:56,080 --> 00:27:59,920
To make the button a little bit less sensitive in programming

413
00:27:59,920 --> 00:28:03,960
hardware, this concept is called debouncing.

414
00:28:03,960 --> 00:28:04,640
Oh, no.

415
00:28:04,640 --> 00:28:06,640
And that's also debouncing.

416
00:28:06,640 --> 00:28:07,140
OK.

417
00:28:13,140 --> 00:28:14,360
OK.

418
00:28:14,360 --> 00:28:19,600
So based on this code and the list at line 10,

419
00:28:19,600 --> 00:28:22,920
which let me kind of scroll up for you,

420
00:28:22,920 --> 00:28:26,080
what color should I see next?

421
00:28:26,080 --> 00:28:27,800
Green.

422
00:28:27,800 --> 00:28:28,560
OK.

423
00:28:28,560 --> 00:28:30,320
And next?

424
00:28:30,320 --> 00:28:31,480
Blue.

425
00:28:31,480 --> 00:28:32,880
Oops.

426
00:28:32,880 --> 00:28:34,440
That's why we need debouncing.

427
00:28:34,440 --> 00:28:35,720
OK.

428
00:28:35,720 --> 00:28:36,220
Blue.

429
00:28:36,220 --> 00:28:40,360
And then what color is next?

430
00:28:40,360 --> 00:28:41,680
Red.

431
00:28:41,680 --> 00:28:43,040
Just looping back around.

432
00:28:43,040 --> 00:28:44,040
Doot-doo.

433
00:28:44,040 --> 00:28:44,800
OK.

434
00:28:44,800 --> 00:28:48,680
So let's make this do something a little bit more interesting.

435
00:28:55,960 --> 00:28:58,360
Let me copy a different file here.

436
00:29:06,720 --> 00:29:11,000
And let me refresh that.

437
00:29:11,000 --> 00:29:16,280
So I want to add some more interesting colors to my code

438
00:29:16,280 --> 00:29:20,400
because we've been looking at a lot of red, green, blue.

439
00:29:20,400 --> 00:29:21,840
It's pretty basic, right?

440
00:29:28,280 --> 00:29:30,160
Let me jiggle it, see if that helps.

441
00:29:36,600 --> 00:29:39,280
If that doesn't work, I'm going to take the tried and true

442
00:29:39,280 --> 00:29:41,600
position of turning it off and turning it back on.

443
00:29:45,520 --> 00:29:48,880
So we have our color wheel here on the left.

444
00:29:48,880 --> 00:29:52,400
Did not want to zoom in to that quite so big.

445
00:29:52,400 --> 00:29:53,800
But here we go.

446
00:29:53,800 --> 00:29:56,480
And I have some commented out code here

447
00:29:56,480 --> 00:30:00,520
so that I don't have to remember the color wheel live on stage.

448
00:30:00,520 --> 00:30:02,480
So I'm going to make some new colors.

449
00:30:02,480 --> 00:30:06,240
I'm going to make yellow, which is a mix of red and green.

450
00:30:06,240 --> 00:30:13,320
So now I'm setting 255 for red, 255 for green, and 0 for blue.

451
00:30:13,320 --> 00:30:15,080
I'm going to make a cyan color.

452
00:30:15,080 --> 00:30:16,720
So looking at the color wheel here,

453
00:30:16,720 --> 00:30:18,480
that's mixing green and blue.

454
00:30:18,480 --> 00:30:21,720
And then I'm going to make a purple color mixing

455
00:30:21,720 --> 00:30:24,800
red and blue.

456
00:30:24,800 --> 00:30:26,880
Save that.

457
00:30:26,880 --> 00:30:31,200
So now let's add these to the end of the list.

458
00:30:35,840 --> 00:30:37,440
Let's add the yellow.

459
00:30:37,440 --> 00:30:39,560
Let's add the cyan.

460
00:30:39,560 --> 00:30:41,400
Let's add the purple.

461
00:30:41,400 --> 00:30:43,520
And let's save that.

462
00:30:43,520 --> 00:30:47,240
So now we got our red, our green, and our blue.

463
00:30:47,240 --> 00:30:51,120
And next, yellow.

464
00:30:52,000 --> 00:30:55,000
Yeah.

465
00:30:55,000 --> 00:30:57,080
Next one is cyan.

466
00:30:57,080 --> 00:30:59,480
And the next one is purple.

467
00:30:59,480 --> 00:31:00,560
That matches my hair.

468
00:31:08,040 --> 00:31:10,760
So like I've showed you here, I think the trick really

469
00:31:10,760 --> 00:31:13,800
is to work incrementally.

470
00:31:13,800 --> 00:31:18,760
That will give you a deeper understanding of what's

471
00:31:18,760 --> 00:31:20,960
going on under the hood.

472
00:31:23,880 --> 00:31:26,480
Let's switch things around.

473
00:31:26,480 --> 00:31:29,800
Just going to quickly pass through a few slides.

474
00:31:29,800 --> 00:31:34,880
I had the demos recorded in case things really didn't work.

475
00:31:44,240 --> 00:31:47,440
So what can you use to start writing the code?

476
00:31:47,440 --> 00:31:54,240
Well, the safest bet is to use an editor that writes out

477
00:31:54,240 --> 00:31:57,200
the file completely when you save it.

478
00:31:57,200 --> 00:31:58,920
That does the smart thing so that you

479
00:31:58,920 --> 00:32:02,560
don't have to worry about waiting to save.

480
00:32:02,560 --> 00:32:04,560
You shouldn't just unplug it like I am here.

481
00:32:04,560 --> 00:32:08,240
You should unmount the drive.

482
00:32:08,240 --> 00:32:12,640
But I like VS Code and the Python extension for this

483
00:32:12,640 --> 00:32:16,320
because it's already the editor that I use for Python.

484
00:32:16,320 --> 00:32:18,480
I switched from Emacs a few months ago.

485
00:32:18,480 --> 00:32:22,680
I just used a plugin to set up Emacs keyboard shortcuts.

486
00:32:22,680 --> 00:32:24,040
It has great autocomplete.

487
00:32:24,040 --> 00:32:28,000
It has workspaces, which are nice because the circuit Python

488
00:32:28,000 --> 00:32:31,000
itself only has two megabytes of memory.

489
00:32:31,000 --> 00:32:32,640
So I usually keep the files that I'm

490
00:32:32,640 --> 00:32:37,480
working on a separate folder on my computer.

491
00:32:40,320 --> 00:32:43,000
It has that integrated terminal that you saw me using.

492
00:32:43,000 --> 00:32:45,520
And frankly, I'd be using it even

493
00:32:45,520 --> 00:32:49,680
if I didn't work for Microsoft.

494
00:32:49,680 --> 00:32:54,440
Who picked up their VS Code loves Python socks?

495
00:32:54,440 --> 00:32:55,840
Yeah?

496
00:32:55,840 --> 00:32:56,880
OK, awesome.

497
00:32:56,880 --> 00:32:59,760
I'm glad to see fans in the room.

498
00:32:59,760 --> 00:33:02,520
You can also program with Mew.

499
00:33:02,520 --> 00:33:07,120
It's a simple Python editor for beginner programmers.

500
00:33:07,120 --> 00:33:10,400
It might also be helpful for you if you're also

501
00:33:10,400 --> 00:33:14,880
beginner to programming Python on hardware.

502
00:33:14,880 --> 00:33:18,440
Now, it's helpful to be able to see what's

503
00:33:18,440 --> 00:33:21,240
going on by using print.

504
00:33:21,240 --> 00:33:23,680
The Python interpreter is running on the little device

505
00:33:23,680 --> 00:33:25,160
here.

506
00:33:25,160 --> 00:33:28,720
And it's not running on your machine, right?

507
00:33:28,720 --> 00:33:33,200
So you need to be able to figure out a way of debugging.

508
00:33:33,200 --> 00:33:36,520
So I updated my program to add labels to the colors.

509
00:33:36,520 --> 00:33:39,520
And it's going to keep track of the previous and next colors

510
00:33:39,520 --> 00:33:40,360
now.

511
00:33:40,360 --> 00:33:44,360
So just keeping things simple, using a list of tuples,

512
00:33:44,360 --> 00:33:46,880
building on my previous example.

513
00:33:46,880 --> 00:33:48,640
I'm going to keep looping forever.

514
00:33:48,640 --> 00:33:52,360
Now I'm also going to snag the name and the color at color

515
00:33:52,360 --> 00:33:54,000
position.

516
00:33:54,000 --> 00:33:56,200
I'm going to fill those pixels.

517
00:33:56,200 --> 00:33:59,160
And then if button A or button B is pressed,

518
00:33:59,160 --> 00:34:03,320
I'm also going to snag the next name in the list.

519
00:34:03,320 --> 00:34:05,560
And then I'm going to print out changing color

520
00:34:05,560 --> 00:34:08,760
from what to what.

521
00:34:08,760 --> 00:34:11,040
OK, pretty straightforward.

522
00:34:11,040 --> 00:34:16,680
So in order to view your printouts and your errors,

523
00:34:16,680 --> 00:34:19,080
you're going to need a way to communicate with the Circuit

524
00:34:19,080 --> 00:34:20,200
Playground Express.

525
00:34:20,200 --> 00:34:24,040
And we do that via the Serial Console.

526
00:34:24,040 --> 00:34:29,520
The Serial Console is what receives output from your Circuit

527
00:34:29,520 --> 00:34:32,200
Python board sent over USB and displays it

528
00:34:32,200 --> 00:34:33,600
so that you can see it.

529
00:34:33,600 --> 00:34:36,800
You won't see any printouts without connecting to it.

530
00:34:36,800 --> 00:34:39,560
It's also helpful for troubleshooting errors

531
00:34:39,560 --> 00:34:42,960
because your board will send tracebacks to the Serial

532
00:34:42,960 --> 00:34:45,840
Console as well.

533
00:34:45,840 --> 00:34:51,960
The easy way to do this is with the cross-platform mu editor.

534
00:34:51,960 --> 00:34:54,560
You just click on the button in the top of the bar

535
00:34:54,560 --> 00:34:56,280
if you're in Circuit Python mode,

536
00:34:56,280 --> 00:34:59,640
and it'll pop that open right there.

537
00:34:59,640 --> 00:35:05,240
The advanced way to do it is with the terminal.

538
00:35:05,240 --> 00:35:09,040
You can use a program like Screen for this.

539
00:35:09,040 --> 00:35:11,880
I like using the VS Code integrated terminal for this.

540
00:35:11,880 --> 00:35:14,880
And of course, VS Code is also cross-platform.

541
00:35:14,880 --> 00:35:17,280
But there are plenty of other standalone apps

542
00:35:17,280 --> 00:35:20,000
like Coolterm.

543
00:35:20,000 --> 00:35:22,160
Know that the most important thing

544
00:35:22,160 --> 00:35:25,480
to know about using Screen is how to quit it.

545
00:35:29,600 --> 00:35:34,280
So to quit Screen, you press Control and A, followed by K,

546
00:35:34,280 --> 00:35:36,280
and then you type Y to confirm.

547
00:35:39,040 --> 00:35:39,880
Don't forget that.

548
00:35:39,880 --> 00:35:42,440
It's frustrating.

549
00:35:42,440 --> 00:35:44,000
OK, so let's try it out.

550
00:35:51,400 --> 00:35:55,160
We don't need that anymore.

551
00:35:55,160 --> 00:35:56,840
Get my next demo going here.

552
00:36:04,880 --> 00:36:06,960
Let me close that up.

553
00:36:09,880 --> 00:36:14,240
So just like we talked through earlier,

554
00:36:14,240 --> 00:36:17,280
I have some labels for my colors.

555
00:36:17,280 --> 00:36:20,400
I'm getting the name, current name, and the color.

556
00:36:20,400 --> 00:36:21,900
And then when the button is pressed,

557
00:36:21,900 --> 00:36:23,920
I'm getting the next name and the color.

558
00:36:23,920 --> 00:36:26,920
And the trick here is changing the color from what to what.

559
00:36:30,400 --> 00:36:33,320
So bringing up the integrated terminal here.

560
00:36:33,600 --> 00:36:41,360
I want to LS on dev.tty.

561
00:36:41,360 --> 00:36:45,800
And you should see a USB modem here.

562
00:36:45,800 --> 00:36:49,040
That's the Circuit Playground Express.

563
00:36:49,040 --> 00:36:53,040
If you might see a lot more stuff here

564
00:36:53,040 --> 00:36:55,680
if you have stuff connected on Bluetooth or et cetera,

565
00:36:55,680 --> 00:36:58,280
but it's always going to be a USB modem.

566
00:36:58,280 --> 00:36:59,600
The numbers after it, they're going

567
00:36:59,600 --> 00:37:03,720
to be different for you than they are for me.

568
00:37:03,720 --> 00:37:05,800
And then you just want to paste that whole thing

569
00:37:05,800 --> 00:37:08,240
and type in the screen.

570
00:37:08,240 --> 00:37:11,680
So you won't see any output just yet,

571
00:37:11,680 --> 00:37:13,520
because we have to make it do something.

572
00:37:22,520 --> 00:37:24,400
Let me quickly make this a little bit bigger.

573
00:37:30,480 --> 00:37:32,960
OK.

574
00:37:32,960 --> 00:37:34,320
Oh, no.

575
00:37:34,320 --> 00:37:35,280
I've poked the beast.

576
00:37:40,440 --> 00:37:43,280
OK.

577
00:37:43,280 --> 00:37:44,120
Oh, glitch time.

578
00:37:44,120 --> 00:37:44,840
OK.

579
00:37:44,840 --> 00:37:49,720
So now if I press the button, going back

580
00:37:49,720 --> 00:37:55,800
to the kind of important code here, what will I see?

581
00:37:59,600 --> 00:38:00,920
What should I see printed out here?

582
00:38:06,920 --> 00:38:09,760
Changing color from red to green.

583
00:38:09,760 --> 00:38:11,040
Yeah.

584
00:38:11,040 --> 00:38:13,240
And then I can do it again and again.

585
00:38:13,240 --> 00:38:14,120
Yeah, it's pretty cool.

586
00:38:14,120 --> 00:38:14,640
You can clap.

587
00:38:14,640 --> 00:38:15,400
You're allowed.

588
00:38:15,400 --> 00:38:16,440
You're allowed to clap.

589
00:38:16,440 --> 00:38:23,040
It's pretty fun.

590
00:38:23,040 --> 00:38:24,720
OK, cool.

591
00:38:24,720 --> 00:38:25,560
So there it goes.

592
00:38:25,560 --> 00:38:27,520
That's how we do it.

593
00:38:27,720 --> 00:38:28,400
So there it goes.

594
00:38:28,400 --> 00:38:32,840
That's how we debug our Circuit Playground Express.

595
00:38:32,840 --> 00:38:37,400
One other super cool thing here, kind of a bit of an Easter egg,

596
00:38:37,400 --> 00:38:42,280
if you press Control-C here, you're going to get a message.

597
00:38:42,280 --> 00:38:47,080
And it's going to say, press any key to enter the REPL.

598
00:38:47,080 --> 00:38:49,200
And guess what?

599
00:38:49,200 --> 00:38:51,200
Just hide that there.

600
00:38:51,200 --> 00:38:52,840
Yeah, there we go.

601
00:38:52,840 --> 00:38:54,080
We have a REPL right here.

602
00:38:54,080 --> 00:38:58,920
And here the REPL is running on this device.

603
00:38:58,920 --> 00:39:00,360
So that's pretty cool.

604
00:39:04,040 --> 00:39:08,440
And Scott, the maintainer of Circuit Python, is also here.

605
00:39:08,440 --> 00:39:12,240
And I'm going to give you a way to find him later on in this talk

606
00:39:12,240 --> 00:39:15,320
by plastering a giant picture of his face on the screen.

607
00:39:19,640 --> 00:39:21,000
All right, let's switch back.

608
00:39:24,080 --> 00:39:28,080
Let me go through some of these prerecorded demos.

609
00:39:28,080 --> 00:39:29,080
OK, here we go.

610
00:39:29,080 --> 00:39:31,360
So the Circuit Playground Express

611
00:39:31,360 --> 00:39:35,880
doesn't have batteries included, like actual batteries.

612
00:39:35,880 --> 00:39:44,520
But considering that, how do you go about powering your projects?

613
00:39:44,520 --> 00:39:47,400
Well, USB is the easiest option.

614
00:39:47,400 --> 00:39:50,720
You probably already have a micro USB cable laying around

615
00:39:50,760 --> 00:39:52,640
You have a phone charging battery.

616
00:39:52,640 --> 00:39:55,240
That's one way of making your Circuit Playground Express

617
00:39:55,240 --> 00:39:57,800
portable.

618
00:39:57,800 --> 00:39:59,320
You can power it from a computer,

619
00:39:59,320 --> 00:40:01,440
a portable phone charger, or a wall.

620
00:40:01,440 --> 00:40:03,760
Or you can use the battery pack.

621
00:40:03,760 --> 00:40:07,120
It just has to have a particular type of JST connector.

622
00:40:07,120 --> 00:40:10,760
And you need a minimum of 3.5 volts.

623
00:40:10,760 --> 00:40:14,640
Know that one household AAA battery has 1 and 1 1 by volts,

624
00:40:14,640 --> 00:40:16,240
so you'll need three of them.

625
00:40:16,240 --> 00:40:18,440
And you can use a power adapter.

626
00:40:18,480 --> 00:40:21,840
So you'll need three of them and an enclosure

627
00:40:21,840 --> 00:40:26,320
to power your Circuit Playground this way.

628
00:40:26,320 --> 00:40:29,600
You can also power it with lithium polymer or LiPoly

629
00:40:29,600 --> 00:40:31,880
batteries.

630
00:40:31,880 --> 00:40:35,360
Just a quick warning here, there are only four advanced users.

631
00:40:35,360 --> 00:40:38,280
They are small, lightweight, and they're energy dense.

632
00:40:38,280 --> 00:40:40,960
They have a lot of energy in a small package.

633
00:40:40,960 --> 00:40:44,920
But they're for advanced users only because they're fragile.

634
00:40:44,920 --> 00:40:47,240
They need a lot of special care.

635
00:40:47,320 --> 00:40:51,680
You don't want to heat them, puncture them, bend them.

636
00:40:51,680 --> 00:40:54,000
If they short or they're damaged, they can explode.

637
00:40:57,080 --> 00:41:00,720
And for that reason, the Circuit Playground Express

638
00:41:00,720 --> 00:41:04,360
does not come with charging circuitry for LiPoly batteries.

639
00:41:04,360 --> 00:41:07,520
So if you want to use this option for powering

640
00:41:07,520 --> 00:41:12,600
your devices, you're going to want to buy your own charger

641
00:41:12,600 --> 00:41:16,440
and make sure it's suitable for your battery's capacity.

642
00:41:16,440 --> 00:41:19,880
It should come with a special protection circuitry.

643
00:41:19,880 --> 00:41:22,520
And note that it's not for kids without supervision.

644
00:41:26,080 --> 00:41:28,280
These batteries are difficult to ship.

645
00:41:28,280 --> 00:41:30,240
They're also difficult to dispose of.

646
00:41:30,240 --> 00:41:31,700
So make sure you do your research

647
00:41:31,700 --> 00:41:34,720
and buy them from a reputable source.

648
00:41:34,720 --> 00:41:37,400
So putting it all together, there

649
00:41:37,400 --> 00:41:39,880
is initial code that comes with the Circuit Playground

650
00:41:39,880 --> 00:41:40,720
on your swag bag.

651
00:41:40,720 --> 00:41:42,140
You can investigate it.

652
00:41:42,140 --> 00:41:43,920
There's also more advanced demo code

653
00:41:43,920 --> 00:41:47,440
that came with one of my Circuit Playground Expresses.

654
00:41:47,440 --> 00:41:50,360
I didn't write it, but here's a link to download it.

655
00:41:50,360 --> 00:41:52,200
This came from Adafruit.

656
00:41:52,200 --> 00:41:58,000
And this code covers all of the necessary features

657
00:41:58,000 --> 00:42:00,760
and the sensor readings that you might want to work with.

658
00:42:00,760 --> 00:42:02,280
And there's even a flag you can use

659
00:42:02,280 --> 00:42:04,760
to set the Circuit Playground Express into a piano

660
00:42:04,760 --> 00:42:08,600
using capacitive touchpads.

661
00:42:08,600 --> 00:42:10,000
Let me show you how to do that.

662
00:42:13,920 --> 00:42:20,720
Let's just move that over.

663
00:42:26,280 --> 00:42:29,400
I think switching the source is maybe

664
00:42:29,400 --> 00:42:30,760
what makes the camera unhappy.

665
00:42:30,760 --> 00:42:33,440
So I'll go ahead and not do that.

666
00:42:33,440 --> 00:42:36,400
I'll try to minimize that.

667
00:42:36,400 --> 00:42:38,320
Moving this to the side, I have another one that

668
00:42:38,320 --> 00:42:40,360
comes with this preloaded code.

669
00:42:40,360 --> 00:42:43,080
You'll see it's powered by one of these LiPoly batteries

670
00:42:43,080 --> 00:42:45,840
I told you about.

671
00:42:45,840 --> 00:42:47,680
Normal Circuit Playground Expresses

672
00:42:47,680 --> 00:42:49,600
come in this black color.

673
00:42:49,600 --> 00:42:53,400
But because yours was sponsored by Adafruit and DigiKey,

674
00:42:53,400 --> 00:42:58,400
your special limited edition one is in DigiKey colors.

675
00:42:58,400 --> 00:43:01,560
Yeah, so let's plug that in.

676
00:43:01,560 --> 00:43:06,800
And this code says you can turn on a flag to have it do this.

677
00:43:06,800 --> 00:43:10,920
If the switch is set to, I believe, the on position,

678
00:43:10,960 --> 00:43:14,400
make this thing a tiny noisy piano by using these.

679
00:43:14,400 --> 00:43:16,400
Oops, I pressed the reset button.

680
00:43:16,400 --> 00:43:18,560
That's not what I want to do.

681
00:43:18,560 --> 00:43:22,680
Make these capacitive touch input pads play tones.

682
00:43:22,680 --> 00:43:23,440
So let's see.

683
00:43:27,360 --> 00:43:28,640
You guys can all hear that, right?

684
00:43:28,640 --> 00:43:29,120
Woo!

685
00:43:29,120 --> 00:43:29,600
Yeah!

686
00:43:29,600 --> 00:43:30,100
Yeah!

687
00:43:30,100 --> 00:43:30,600
Yeah!

688
00:43:30,600 --> 00:43:31,100
Yeah!

689
00:43:31,100 --> 00:43:31,600
Yeah!

690
00:43:31,600 --> 00:43:32,100
Yeah!

691
00:43:32,100 --> 00:43:32,600
Yeah!

692
00:43:32,600 --> 00:43:33,100
Yeah!

693
00:43:33,100 --> 00:43:33,600
Yeah!

694
00:43:33,600 --> 00:43:34,100
Yeah!

695
00:43:34,100 --> 00:43:34,600
Yeah!

696
00:43:34,600 --> 00:43:36,100
Yeah!

697
00:43:36,100 --> 00:43:36,880
Cool.

698
00:43:36,880 --> 00:43:39,160
So I didn't write this code.

699
00:43:39,160 --> 00:43:40,760
It came from Adafruit.

700
00:43:40,760 --> 00:43:42,520
Shh, be quiet.

701
00:43:42,520 --> 00:43:43,640
Quiet now.

702
00:43:43,640 --> 00:43:44,800
Let's turn that switch back.

703
00:43:44,800 --> 00:43:45,400
OK.

704
00:43:45,400 --> 00:43:50,560
So the code that comes on your Circuit Playground Express,

705
00:43:50,560 --> 00:43:54,400
this one right here, there is a flag

706
00:43:54,400 --> 00:43:57,640
that you can set to true to make your own noisy piano.

707
00:43:57,640 --> 00:43:59,360
So that's the very first thing you

708
00:43:59,360 --> 00:44:01,720
can do with your Circuit Playground Express.

709
00:44:01,720 --> 00:44:03,000
After the talk, please.

710
00:44:03,280 --> 00:44:11,280
And you can start your own chiptunes jam bands.

711
00:44:11,280 --> 00:44:13,400
OK.

712
00:44:13,400 --> 00:44:14,400
Wrapping things up.

713
00:44:18,000 --> 00:44:20,040
If you want to get started programming hardware

714
00:44:20,040 --> 00:44:23,120
with absolutely zero coding, Microsoft MakeCode

715
00:44:23,120 --> 00:44:24,400
is fantastic for this.

716
00:44:24,400 --> 00:44:27,960
It's a block-based editor.

717
00:44:27,960 --> 00:44:31,040
You can export as JavaScript.

718
00:44:31,040 --> 00:44:35,320
There might be other things coming in the future.

719
00:44:35,320 --> 00:44:36,320
Shh.

720
00:44:36,320 --> 00:44:37,440
Don't clap for this one.

721
00:44:37,440 --> 00:44:37,940
Shh.

722
00:44:37,940 --> 00:44:40,080
Shh.

723
00:44:40,080 --> 00:44:41,880
And there are some pretty cool collaborations there,

724
00:44:41,880 --> 00:44:43,000
like with Cartoon Network.

725
00:44:43,000 --> 00:44:46,960
One of the projects is making a gem from Steven Universe,

726
00:44:46,960 --> 00:44:48,120
which I, yes.

727
00:44:48,120 --> 00:44:50,600
Uh-huh.

728
00:44:50,600 --> 00:44:53,920
And the cool thing there is you don't even need a device.

729
00:44:53,920 --> 00:44:55,160
Hardware is not required.

730
00:44:55,160 --> 00:44:59,200
It includes this built-in emulator.

731
00:44:59,200 --> 00:45:04,640
So I'm not the only one who thinks that hardware is cool.

732
00:45:04,640 --> 00:45:09,280
A study done by the BBC for the micro bit

733
00:45:09,280 --> 00:45:14,840
said that 90% of students that use the micro bit,

734
00:45:14,840 --> 00:45:17,880
it showed them that anyone can code.

735
00:45:17,880 --> 00:45:18,880
It's really important.

736
00:45:21,840 --> 00:45:25,400
86% of students said the micro bit made computer science

737
00:45:25,400 --> 00:45:28,640
more interesting.

738
00:45:28,640 --> 00:45:30,880
This one is a little bit close to heart.

739
00:45:30,880 --> 00:45:33,600
70% more girls said they would choose computing

740
00:45:33,600 --> 00:45:36,560
as a school subject after using the micro bit.

741
00:45:36,560 --> 00:45:37,060
Woo!

742
00:45:37,060 --> 00:45:37,560
Woo!

743
00:45:37,560 --> 00:45:38,060
Woo!

744
00:45:38,060 --> 00:45:38,560
Woo!

745
00:45:38,560 --> 00:45:39,060
Woo!

746
00:45:39,060 --> 00:45:39,560
Woo!

747
00:45:39,560 --> 00:45:40,060
Woo!

748
00:45:40,060 --> 00:45:40,560
Woo!

749
00:45:40,560 --> 00:45:41,060
Woo!

750
00:45:41,060 --> 00:45:41,560
Woo!

751
00:45:41,560 --> 00:45:42,060
Woo!

752
00:45:42,060 --> 00:45:42,560
Woo!

753
00:45:42,560 --> 00:45:43,060
Woo!

754
00:45:43,060 --> 00:45:43,560
Woo!

755
00:45:43,560 --> 00:45:44,060
Woo!

756
00:45:44,060 --> 00:45:44,560
Woo!

757
00:45:44,560 --> 00:45:45,060
Woo!

758
00:45:45,060 --> 00:45:45,560
Woo!

759
00:45:45,560 --> 00:45:46,060
Woo!

760
00:45:46,060 --> 00:45:48,560
Woo!

761
00:45:48,560 --> 00:45:53,400
Uh, a study called Unlocking the Clubhouse

762
00:45:53,400 --> 00:45:58,560
suggested that traditional computing culture is a boys' club,

763
00:45:58,560 --> 00:46:00,280
and it's unfriendly to women, and we

764
00:46:00,280 --> 00:46:03,040
need to find ways to unlock this clubhouse

765
00:46:03,040 --> 00:46:06,440
to make it accessible.

766
00:46:06,440 --> 00:46:12,920
In a study on e-textiles called Lilypad in the Wild,

767
00:46:12,920 --> 00:46:15,560
Lea Buccelli and Benjamin Macco-Hill

768
00:46:15,560 --> 00:46:18,000
suggest a different approach.

769
00:46:18,000 --> 00:46:20,920
They call it building new clubhouses.

770
00:46:20,920 --> 00:46:24,680
Instead of trying to fit people into existing engineering cultures,

771
00:46:24,680 --> 00:46:29,240
it may be more constructive to try to spark and support new cultures,

772
00:46:29,240 --> 00:46:34,000
to build new clubhouses, and make room for more diverse interests

773
00:46:34,000 --> 00:46:36,160
and passions.

774
00:46:36,160 --> 00:46:40,880
Because remember, diversity doesn't stop at gender.

775
00:46:40,880 --> 00:46:45,680
We want to use Python on hardware to encourage everyone to participate.

776
00:46:45,680 --> 00:46:47,920
That includes people of different ethnicities,

777
00:46:47,920 --> 00:46:55,440
socioeconomic statuses, identities, the neurodiverse, those diverse in age,

778
00:46:55,440 --> 00:46:58,080
and so many other factors.

779
00:46:58,080 --> 00:47:01,480
Let's make Python on hardware the most diverse community that we can.

780
00:47:06,880 --> 00:47:09,320
The overall hardware community, it's really awesome

781
00:47:09,320 --> 00:47:12,440
about sharing incredible projects with step-by-step instructions.

782
00:47:12,440 --> 00:47:15,320
There are Adafruit guides, MakeCode, and Structibles

783
00:47:15,320 --> 00:47:16,960
as a great resource.

784
00:47:16,960 --> 00:47:19,760
On the left is a Jack-o-Lantern project.

785
00:47:19,760 --> 00:47:24,480
You only need the board, batteries, and a Ziploc bag

786
00:47:24,480 --> 00:47:26,720
if you're going to opt for a real pumpkin.

787
00:47:30,080 --> 00:47:32,680
And Python on hardware is still relatively new.

788
00:47:32,680 --> 00:47:34,560
It's really just in its infancy.

789
00:47:38,040 --> 00:47:40,520
This is Madison Maxey.

790
00:47:40,520 --> 00:47:46,680
She's the founder of Lumia, an e-textiles smart fabric technology company.

791
00:47:46,720 --> 00:47:53,480
And she says, you can be a creator and an artist, not just a consumer.

792
00:47:53,480 --> 00:47:56,440
And I agree with her here.

793
00:47:56,440 --> 00:47:57,640
Start small.

794
00:47:57,640 --> 00:48:01,120
Start unlocking your own creative coding again.

795
00:48:01,120 --> 00:48:04,080
Continue your momentum.

796
00:48:04,080 --> 00:48:07,000
This is Angela Shien.

797
00:48:07,000 --> 00:48:09,400
Let's see if I can get that video to play.

798
00:48:09,400 --> 00:48:11,520
She's the maker that I look up to.

799
00:48:11,520 --> 00:48:16,880
You can see she's created these incredible infinity mirror LED heels

800
00:48:16,880 --> 00:48:18,800
and a lot more.

801
00:48:18,800 --> 00:48:21,000
If you love her project, she's actually currently

802
00:48:21,000 --> 00:48:24,200
looking for her next opportunity in the Maker Ed tech space.

803
00:48:24,200 --> 00:48:28,000
So someone in this room should snap her up.

804
00:48:28,000 --> 00:48:30,480
Yes.

805
00:48:30,480 --> 00:48:35,640
And she follows the same passion that I do.

806
00:48:35,640 --> 00:48:38,000
She makes things that fit her aesthetic.

807
00:48:41,920 --> 00:48:43,320
And that's the nature of hardware.

808
00:48:43,320 --> 00:48:46,800
It's being able to see instantaneous results.

809
00:48:46,800 --> 00:48:49,680
It lets you customize your projects.

810
00:48:49,680 --> 00:48:53,280
That helps you connect from the very start.

811
00:48:53,280 --> 00:48:56,640
It helps make technology more accessible to those traditionally

812
00:48:56,640 --> 00:48:58,320
underrepresented in it.

813
00:48:58,320 --> 00:49:04,280
This picture of girls with their light up masks that they created

814
00:49:04,280 --> 00:49:09,800
with these huge beaming smiles is one of my absolute favorites.

815
00:49:09,800 --> 00:49:11,200
I mean, how happy are they?

816
00:49:11,200 --> 00:49:16,720
How excited are they to have made these masks that light up?

817
00:49:16,720 --> 00:49:19,760
They're super fun.

818
00:49:19,760 --> 00:49:24,080
E-textiles, sewable electronics, paper crafts,

819
00:49:24,080 --> 00:49:26,280
hardware focused towards education,

820
00:49:26,280 --> 00:49:28,000
they all help introduce technology

821
00:49:28,000 --> 00:49:31,840
in new and unexpected ways.

822
00:49:31,840 --> 00:49:36,400
Introduce it to these Made by Girls participants.

823
00:49:36,400 --> 00:49:40,160
Thank you to the Digital Media Academy

824
00:49:40,160 --> 00:49:43,720
for snapping this photo.

825
00:49:43,720 --> 00:49:46,040
So those of you with eagle eyes might

826
00:49:46,040 --> 00:49:48,320
have noticed that I'm wearing one of my projects today.

827
00:49:56,640 --> 00:49:58,280
Let me show you what it's made out of.

828
00:49:58,280 --> 00:49:58,780
OK.

829
00:50:05,280 --> 00:50:05,760
Let's see.

830
00:50:09,640 --> 00:50:15,880
So the project that I'm wearing is

831
00:50:15,880 --> 00:50:24,240
made with a different board called the Gemma M0.

832
00:50:24,240 --> 00:50:28,760
It's made with some LED rings that look like this,

833
00:50:28,760 --> 00:50:30,720
kind of soldered together.

834
00:50:30,720 --> 00:50:33,120
These ones are nice because you can just snap them out.

835
00:50:36,600 --> 00:50:38,360
You can kind of see that they pop out there.

836
00:50:38,360 --> 00:50:39,800
So cool.

837
00:50:39,800 --> 00:50:43,680
Some individually addressable LEDs.

838
00:50:43,680 --> 00:50:46,160
And then one of those LiPoly batteries

839
00:50:46,160 --> 00:50:47,920
that I told you about.

840
00:50:47,920 --> 00:50:53,320
So just kind of assembled by starting with the LED rings

841
00:50:53,320 --> 00:50:55,840
and then the little batteries sandwiched in.

842
00:50:55,840 --> 00:50:57,560
And the Gemma lives on top.

843
00:50:57,560 --> 00:50:59,400
And it's all soldered together.

844
00:50:59,400 --> 00:51:02,320
There's a fritzing diagram there if you want to see how.

845
00:51:02,320 --> 00:51:02,820
OK.

846
00:51:24,960 --> 00:51:30,200
So these are based on an original design by Becky Stern.

847
00:51:30,200 --> 00:51:33,560
The code is on GitHub because my earrings run Python.

848
00:51:52,400 --> 00:51:55,240
I hope that you've seen now that Python opens up

849
00:51:55,240 --> 00:51:58,160
a whole new world of working with hardware.

850
00:51:58,160 --> 00:52:03,000
I feel like this quote by Lauren Storrell really drives it home.

851
00:52:03,000 --> 00:52:08,360
He says, our inventions mirror our secret wishes.

852
00:52:08,360 --> 00:52:12,800
We want to build things that reflect us.

853
00:52:12,800 --> 00:52:16,120
So for those of you here in the room today,

854
00:52:16,120 --> 00:52:17,960
what are your next steps?

855
00:52:17,960 --> 00:52:19,340
You all have a Circuit Playground

856
00:52:19,340 --> 00:52:21,240
Express in your swag bags.

857
00:52:21,240 --> 00:52:22,740
Remember, I'm not an expert.

858
00:52:22,740 --> 00:52:24,000
I'm just a hobbyist.

859
00:52:24,000 --> 00:52:25,680
And I hope I've shown you today that you

860
00:52:25,680 --> 00:52:28,320
don't need to be an expert either to get started with it

861
00:52:28,320 --> 00:52:29,680
right away.

862
00:52:29,680 --> 00:52:33,560
Pick your editor, your Visual Studio code, your Mew, et cetera.

863
00:52:33,560 --> 00:52:37,000
Write your own code or follow a community guide.

864
00:52:37,000 --> 00:52:39,680
Everyone in this room can pick up a basic project,

865
00:52:39,680 --> 00:52:42,100
even if you're not a programmer.

866
00:52:42,100 --> 00:52:47,400
So I implore you to learn, make things, create, teach others,

867
00:52:47,400 --> 00:52:48,840
share your knowledge.

868
00:52:48,840 --> 00:52:53,600
It's a fantastic cycle that we can all participate in.

869
00:52:53,600 --> 00:52:58,880
And if you're in a position to maybe gift yours

870
00:52:58,880 --> 00:53:02,320
to somebody who's underrepresented in tech

871
00:53:02,320 --> 00:53:07,440
and show them how to get started, it's just an idea.

872
00:53:07,440 --> 00:53:08,600
Yeah, you can clap.

873
00:53:08,600 --> 00:53:09,240
That's all right.

874
00:53:09,240 --> 00:53:20,240
You can give them a platform to unlock their interest

875
00:53:20,240 --> 00:53:24,120
in lighting up their life with hardware, creativity,

876
00:53:24,120 --> 00:53:27,160
and community.

877
00:53:27,160 --> 00:53:30,040
So I want to say, let's start something new.

878
00:53:30,040 --> 00:53:31,840
I noticed that the Python hardware

879
00:53:31,840 --> 00:53:34,560
hashtag has never been used.

880
00:53:34,560 --> 00:53:35,920
So let's make it our own.

881
00:53:38,400 --> 00:53:42,920
Well, it was new, sort of.

882
00:53:42,920 --> 00:53:46,960
Raymond Hedinger caught a preview of this talk yesterday.

883
00:53:46,960 --> 00:53:49,400
And so in good humor, he's the first one

884
00:53:49,400 --> 00:53:52,360
to tweet out on this hashtag.

885
00:53:52,360 --> 00:53:53,320
Thanks, Raymond.

886
00:54:02,680 --> 00:54:04,520
So use this hashtag.

887
00:54:04,520 --> 00:54:05,960
Share your projects.

888
00:54:05,960 --> 00:54:08,680
Share your gifts to the community.

889
00:54:08,680 --> 00:54:10,520
Share who you're teaching.

890
00:54:10,520 --> 00:54:14,760
And let's own this and make it our own.

891
00:54:14,760 --> 00:54:17,080
If you're excited about getting started right away,

892
00:54:17,080 --> 00:54:20,160
CircuitPython is at PyCon.

893
00:54:20,160 --> 00:54:21,960
You can see some of the folks in this photo.

894
00:54:21,960 --> 00:54:22,880
There's Scott.

895
00:54:22,880 --> 00:54:26,280
There's Katniss, a few other lovely folks from Adafruit.

896
00:54:26,280 --> 00:54:30,400
Today, they're going to have an open space in room 22 at 5 PM.

897
00:54:30,400 --> 00:54:33,680
Tomorrow, there are going to be CircuitPython sprints starting

898
00:54:33,680 --> 00:54:36,000
at 9 AM.

899
00:54:36,000 --> 00:54:38,800
And I have an announcement I wanted to share.

900
00:54:38,800 --> 00:54:40,480
I teach Python.

901
00:54:40,480 --> 00:54:43,640
And as a special thank you to PyCon attendees,

902
00:54:43,640 --> 00:54:47,400
I'm releasing my two-day intro and intermediate Python

903
00:54:47,400 --> 00:54:51,000
screencast for free for two weeks at this link.

904
00:55:03,360 --> 00:55:05,160
It's been a pleasure speaking to you today.

905
00:55:05,160 --> 00:55:06,880
Hopefully, I've left you inspired.

906
00:55:06,880 --> 00:55:09,760
You've learned how to program LEDs with Python.

907
00:55:09,760 --> 00:55:11,760
You've learned how to light up your life with code

908
00:55:11,760 --> 00:55:13,040
and creativity.

909
00:55:13,040 --> 00:55:15,800
If you want to take a closer look at some of this hardware,

910
00:55:15,800 --> 00:55:20,480
come find me or any of the Adafruit team

911
00:55:20,480 --> 00:55:22,480
that's here at PyCon.

912
00:55:22,480 --> 00:55:26,720
Slides are going to be posted at this link

913
00:55:26,720 --> 00:55:29,800
if the conference Wi-Fi has cooperated.

914
00:55:29,800 --> 00:55:33,440
If not, they're going to be on my Twitter.

915
00:55:33,440 --> 00:55:36,080
And this image on the right-hand side,

916
00:55:36,080 --> 00:55:39,720
that's the mascot for my team, developer advocate Bit.

917
00:55:39,720 --> 00:55:42,720
So if you think Bit is cute, you can find me afterwards

918
00:55:42,720 --> 00:55:44,120
for stickers.

919
00:55:44,120 --> 00:55:45,960
And thank you all so much.

920
00:55:45,960 --> 00:55:46,460
Woo!

921
00:55:46,460 --> 00:55:46,960
Woo!

922
00:55:46,960 --> 00:55:47,960
Applause

