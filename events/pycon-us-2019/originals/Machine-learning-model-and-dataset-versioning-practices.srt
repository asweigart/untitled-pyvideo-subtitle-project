1
00:00:00,000 --> 00:00:02,840
Very, very sorry about this delay.

2
00:00:02,840 --> 00:00:05,360
I was preparing for the entire night

3
00:00:05,360 --> 00:00:08,240
and a little bit oversleep today.

4
00:00:09,100 --> 00:00:10,120
So, very sorry.

5
00:00:11,680 --> 00:00:14,860
My talk is about machine learning model version control

6
00:00:14,860 --> 00:00:16,980
and data set version control.

7
00:00:20,320 --> 00:00:21,560
My name is Dmitry Petrov.

8
00:00:23,880 --> 00:00:27,140
I will be talking about three open source tools.

9
00:00:27,380 --> 00:00:31,420
One is machine learning MLflow from Databricks.

10
00:00:31,420 --> 00:00:33,820
Another one is Git LFS.

11
00:00:33,820 --> 00:00:38,140
And the third one is DVC, data version control.

12
00:00:38,940 --> 00:00:41,700
I am one of the creator of a DVC project.

13
00:00:41,700 --> 00:00:45,980
So, my opinion might be a little bit biased,

14
00:00:45,980 --> 00:00:49,340
but I try to take a look at this problem

15
00:00:49,340 --> 00:00:50,540
from different angles.

16
00:00:51,580 --> 00:00:55,900
So, let's, first let's ask,

17
00:00:55,900 --> 00:00:58,340
why do we need new tools?

18
00:00:58,340 --> 00:00:59,860
Why machine learning is special

19
00:00:59,860 --> 00:01:03,460
and why should we care about the new best practices

20
00:01:03,460 --> 00:01:04,420
and new tool set?

21
00:01:06,900 --> 00:01:09,580
There is an opinion that machine learning process

22
00:01:09,580 --> 00:01:12,280
is not efficient, it's not efficient enough.

23
00:01:13,220 --> 00:01:16,980
We still don't have any version control tools in place.

24
00:01:17,900 --> 00:01:20,980
We are wasting a lot of time for the process.

25
00:01:21,220 --> 00:01:25,960
Agile might not be or might be the best solution.

26
00:01:26,800 --> 00:01:28,220
And there are new practices

27
00:01:29,580 --> 00:01:32,080
which are not supported by the tool set.

28
00:01:33,780 --> 00:01:36,860
To understand how we can fix that,

29
00:01:36,860 --> 00:01:37,860
let's take a look at the difference

30
00:01:37,860 --> 00:01:40,580
between software engineering and machine learning.

31
00:01:40,580 --> 00:01:44,220
And one of the straightforward differences is

32
00:01:45,420 --> 00:01:47,180
machine learning is matrix driven.

33
00:01:48,180 --> 00:01:52,380
Matrix, this is how we navigate through our project.

34
00:01:52,380 --> 00:01:54,760
This is how we compare results from today,

35
00:01:54,760 --> 00:01:57,540
let's say with results from last week, last month.

36
00:01:59,380 --> 00:02:04,380
We don't use code as the only source of navigation.

37
00:02:07,140 --> 00:02:09,960
Now we use outputs, which is matrix,

38
00:02:11,620 --> 00:02:13,040
to compare our results.

39
00:02:13,880 --> 00:02:17,200
But how can we track the matrix?

40
00:02:17,200 --> 00:02:22,140
If you're only one guy in the project,

41
00:02:22,140 --> 00:02:24,120
you can use just a pen and pencil,

42
00:02:24,120 --> 00:02:27,880
put it down and it works just fine.

43
00:02:27,880 --> 00:02:30,040
But when people start working on a team,

44
00:02:30,040 --> 00:02:31,800
it's just not enough.

45
00:02:31,800 --> 00:02:33,820
They need to use some tools.

46
00:02:35,640 --> 00:02:36,480
You will be surprised,

47
00:02:36,480 --> 00:02:41,420
but the most often used tool is called Excel spreadsheet.

48
00:02:42,420 --> 00:02:45,140
This is how you can put some information,

49
00:02:45,140 --> 00:02:46,660
share them on the team,

50
00:02:46,660 --> 00:02:48,460
and you will see what exactly happened

51
00:02:48,460 --> 00:02:51,500
on each particular step.

52
00:02:51,500 --> 00:02:56,500
With time step, with parameters, and final metrics.

53
00:02:59,740 --> 00:03:02,180
The next problem is models.

54
00:03:02,180 --> 00:03:03,300
We need to track models.

55
00:03:03,300 --> 00:03:06,820
We don't wanna waste time on build model again and again.

56
00:03:08,020 --> 00:03:10,220
And we need to track models as well.

57
00:03:10,220 --> 00:03:13,680
So Excel spreadsheet, again, helps for many companies.

58
00:03:14,580 --> 00:03:18,700
They put the models, file name into Excel file,

59
00:03:19,740 --> 00:03:21,980
and this is how they share information.

60
00:03:23,540 --> 00:03:25,420
Another thing is datasets.

61
00:03:25,420 --> 00:03:27,860
We need to manage these large data files.

62
00:03:27,860 --> 00:03:32,860
We need to move them around from your desktop

63
00:03:33,060 --> 00:03:36,060
to your server with GPU instances.

64
00:03:37,060 --> 00:03:41,540
Sometimes you need your laptop.

65
00:03:41,540 --> 00:03:43,540
Sometimes you need to move data

66
00:03:43,540 --> 00:03:47,240
to your team member machine.

67
00:03:48,900 --> 00:03:52,660
So we need to have some tools in place.

68
00:03:52,660 --> 00:03:54,820
And this problem become even worse

69
00:03:54,820 --> 00:03:57,020
if the dataset evolves.

70
00:03:57,020 --> 00:04:00,200
Because you might have new labels every single week.

71
00:04:01,260 --> 00:04:04,220
You might have many changes in a single day

72
00:04:04,260 --> 00:04:06,520
because you're working with data.

73
00:04:06,520 --> 00:04:08,980
And everything needs to be tracked.

74
00:04:11,100 --> 00:04:14,420
And again, Excel spreadsheet might be used

75
00:04:14,420 --> 00:04:17,140
for organizing this information.

76
00:04:17,140 --> 00:04:20,340
But you will have a lot of different copy of your datasets.

77
00:04:22,020 --> 00:04:23,940
And the last problem is pipelines.

78
00:04:25,300 --> 00:04:26,720
Machine learning pipelines.

79
00:04:29,100 --> 00:04:32,880
Pipelines is basically the way how you manage complexity.

80
00:04:32,880 --> 00:04:36,320
And this is the way how you scale your team.

81
00:04:36,320 --> 00:04:38,840
So one guy can work on data preparation,

82
00:04:38,840 --> 00:04:41,760
another guy on feature extraction,

83
00:04:41,760 --> 00:04:45,040
the third one on training,

84
00:04:45,040 --> 00:04:47,960
and one more probably on some visualization.

85
00:04:52,280 --> 00:04:55,480
Many teams come up with custom pipeline solutions.

86
00:04:55,480 --> 00:04:57,760
They build this from scratch.

87
00:04:58,680 --> 00:05:02,620
And this is how pipeline usually looks like.

88
00:05:03,880 --> 00:05:05,600
It's important to mention that

89
00:05:05,600 --> 00:05:08,880
there are two different types of pipeline in data project.

90
00:05:08,880 --> 00:05:11,680
One is data engineering pipelines like Airflow,

91
00:05:11,680 --> 00:05:14,640
and another one is machine learning pipelines.

92
00:05:14,640 --> 00:05:17,000
In machine learning, we need lightweight version

93
00:05:17,000 --> 00:05:20,720
of the pipeline because our focus not real ability,

94
00:05:20,720 --> 00:05:22,800
our focus is fast iteration.

95
00:05:22,800 --> 00:05:25,540
We need to try ideas faster.

96
00:05:26,520 --> 00:05:30,040
We need to fail faster and produce some results faster.

97
00:05:33,120 --> 00:05:36,680
So the best practices we need in machine learning

98
00:05:36,680 --> 00:05:41,120
are following, matrix tracking, model versioning,

99
00:05:41,120 --> 00:05:44,320
dataset versioning, and machine learning pipeline versioning.

100
00:05:46,080 --> 00:05:47,480
Let's go through the tool.

101
00:05:47,480 --> 00:05:48,920
MLflow is the first one.

102
00:05:51,000 --> 00:05:52,400
They provide for tracking,

103
00:05:52,400 --> 00:05:56,000
they provide a library for Python and Spark.

104
00:05:56,000 --> 00:05:58,400
You can basically put some statements in your code,

105
00:05:58,400 --> 00:06:01,640
and during the training or data processing,

106
00:06:01,640 --> 00:06:04,880
you'll have all the output in some directory.

107
00:06:06,320 --> 00:06:11,000
Then you run UI, and this is what you will see.

108
00:06:11,000 --> 00:06:12,440
Have you recognized the table?

109
00:06:14,320 --> 00:06:17,560
This is actually the first table that I show you.

110
00:06:17,560 --> 00:06:21,000
So they basically replace your manual work

111
00:06:21,000 --> 00:06:22,520
with auto-generated table.

112
00:06:22,520 --> 00:06:24,600
And this is a good engineering practice.

113
00:06:24,600 --> 00:06:28,840
So we just remove manual work, replace it by automation.

114
00:06:29,800 --> 00:06:34,800
So however, MLflow might be not the best tool

115
00:06:35,880 --> 00:06:38,960
for datasets tracking.

116
00:06:41,280 --> 00:06:44,060
So Git LFS, it's a quite popular solution.

117
00:06:44,060 --> 00:06:46,000
It was designed for engineers,

118
00:06:46,000 --> 00:06:49,360
especially for front-end engineers with data files.

119
00:06:49,360 --> 00:06:51,440
It's not data specific.

120
00:06:51,440 --> 00:06:56,440
However, it can be used for model tracking,

121
00:06:56,760 --> 00:07:01,040
like 100 GB, couple GB, or 100 megabytes,

122
00:07:01,040 --> 00:07:03,280
couple gigabytes files sometimes,

123
00:07:03,280 --> 00:07:05,440
maybe even more, up to 10.

124
00:07:05,440 --> 00:07:06,440
It might work.

125
00:07:08,840 --> 00:07:12,840
For large datasets and ML pipelines,

126
00:07:12,840 --> 00:07:15,720
we have created Data Version Control Tool, or DVC.

127
00:07:16,640 --> 00:07:18,560
Initially it was my pet project.

128
00:07:19,640 --> 00:07:23,240
Now we have 50 contributors.

129
00:07:23,240 --> 00:07:24,680
Many companies use that.

130
00:07:25,480 --> 00:07:28,560
The tool set solves two problems,

131
00:07:28,560 --> 00:07:31,760
data versioning and pipeline versioning.

132
00:07:31,760 --> 00:07:35,360
And one additional principle the tool supports.

133
00:07:35,360 --> 00:07:38,640
We compatible with any cloud.

134
00:07:38,640 --> 00:07:40,360
You can use any cloud as a data backend.

135
00:07:40,360 --> 00:07:44,640
You can use S3, Google Cloud, or just SSH server

136
00:07:44,640 --> 00:07:46,140
when you store your datasets.

137
00:07:47,880 --> 00:07:49,840
You can easily find an install tool.

138
00:07:49,840 --> 00:07:51,520
DVC.org is our website.

139
00:07:52,400 --> 00:07:54,160
When you run the tool,

140
00:07:54,160 --> 00:07:58,960
it provides command line experience, like a Git.

141
00:07:58,960 --> 00:08:00,600
It doesn't require any infrastructure.

142
00:08:00,600 --> 00:08:02,700
You don't need to run to any server.

143
00:08:02,700 --> 00:08:07,240
And you will be using your Git as a code repository

144
00:08:07,240 --> 00:08:09,520
for storing your code and metadata information.

145
00:08:09,520 --> 00:08:14,520
And storage, cloud storage for data.

146
00:08:17,080 --> 00:08:18,200
This is how it works.

147
00:08:18,200 --> 00:08:21,680
You run DVC add and file.

148
00:08:21,680 --> 00:08:25,640
It has similar semantic to Git add.

149
00:08:25,640 --> 00:08:28,120
It basically adds file under DVC control.

150
00:08:28,120 --> 00:08:30,760
And when you say DVC push,

151
00:08:30,760 --> 00:08:35,760
data will be in your data storage.

152
00:08:38,360 --> 00:08:40,680
DVC creates some meta files

153
00:08:40,680 --> 00:08:43,880
to know all this information about data files.

154
00:08:43,880 --> 00:08:46,640
You need to commit meta information

155
00:08:46,640 --> 00:08:48,080
to your Git repository.

156
00:08:48,960 --> 00:08:50,640
For example, you need to commit changes in Git ignore

157
00:08:50,640 --> 00:08:53,000
and additional meta information files.

158
00:08:55,720 --> 00:08:59,240
Your teammate can clone this repository

159
00:08:59,240 --> 00:09:00,800
with all the meta information,

160
00:09:00,800 --> 00:09:04,600
and then say DVC pull, and they will get all the data.

161
00:09:06,880 --> 00:09:08,360
There is support for pipelines.

162
00:09:08,360 --> 00:09:12,380
You can run your commands with DVC run prefix.

163
00:09:12,380 --> 00:09:14,760
And so the tool will reconstruct

164
00:09:14,760 --> 00:09:16,680
the entire dependency graph.

165
00:09:16,680 --> 00:09:18,560
And then you can reproduce,

166
00:09:18,560 --> 00:09:19,800
and the tool will understand

167
00:09:19,800 --> 00:09:22,100
what exactly needs to be reproduced.

168
00:09:23,840 --> 00:09:27,720
So as a result, we basically replaced

169
00:09:27,720 --> 00:09:30,800
the last table, Excel spreadsheet,

170
00:09:30,800 --> 00:09:33,960
with data sets, versions.

171
00:09:33,960 --> 00:09:38,280
We replaced those table with your Git history.

172
00:09:38,280 --> 00:09:39,600
And from engineering point of view,

173
00:09:39,600 --> 00:09:43,360
Git history is actually the best documentation you can get.

174
00:09:43,360 --> 00:09:46,160
Git logs is probably the only docs

175
00:09:46,160 --> 00:09:51,080
that every engineer in any project reads.

176
00:09:51,080 --> 00:09:54,040
Now you can go back and forth with your data sets,

177
00:09:54,040 --> 00:09:57,880
with your pipelines, and final models,

178
00:09:57,880 --> 00:10:01,760
instead of writing about this.

179
00:10:01,760 --> 00:10:04,680
So there are a few little optimizations that DVC does.

180
00:10:05,840 --> 00:10:07,320
And this is the final table.

181
00:10:08,640 --> 00:10:10,480
What is important about this table?

182
00:10:11,880 --> 00:10:15,160
You can combine different tool,

183
00:10:15,160 --> 00:10:17,500
depending on your needs.

184
00:10:17,500 --> 00:10:21,520
For example, you can track metrics with MLflow,

185
00:10:21,520 --> 00:10:26,520
and use data versioning, or pipeline versioning,

186
00:10:27,520 --> 00:10:29,760
with Git LFS or DVC.

187
00:10:29,760 --> 00:10:32,120
I have seen many projects when people do that.

188
00:10:34,360 --> 00:10:35,560
So why do we need,

189
00:10:37,600 --> 00:10:40,040
so this tool set, we need this new tool set,

190
00:10:40,040 --> 00:10:42,480
because our environment is changing.

191
00:10:42,480 --> 00:10:45,360
Our entire landscape is changing.

192
00:10:45,360 --> 00:10:47,760
We are basically moving from software engineering

193
00:10:48,680 --> 00:10:52,040
to machine learning, to data science methodology.

194
00:10:54,480 --> 00:10:56,160
We need to invent new tools.

195
00:10:56,160 --> 00:10:59,440
The previous change was a change from hardware design

196
00:10:59,440 --> 00:11:00,960
to software engineering,

197
00:11:00,960 --> 00:11:04,460
and it took us more than 20 years.

198
00:11:04,460 --> 00:11:07,000
We invented version control systems,

199
00:11:07,000 --> 00:11:09,800
issue tracking systems, continuous integration,

200
00:11:09,800 --> 00:11:13,200
and many other techniques and tools.

201
00:11:13,200 --> 00:11:15,640
And now we need to make the same change.

202
00:11:15,640 --> 00:11:19,020
But the question is, if we are making the change,

203
00:11:19,020 --> 00:11:21,600
how can we make it faster?

204
00:11:22,560 --> 00:11:25,320
It doesn't sound like a good idea to wait for 20 years.

205
00:11:27,240 --> 00:11:28,440
I believe to make it faster,

206
00:11:28,440 --> 00:11:31,780
we need to do four different things.

207
00:11:32,760 --> 00:11:37,120
First, we need to think about processes, our workflow.

208
00:11:37,120 --> 00:11:41,600
We need to understand when we waste most of our time,

209
00:11:41,600 --> 00:11:45,560
and when we make most of our errors in the processes.

210
00:11:47,200 --> 00:11:50,760
Second, we need to try new machine learning tools.

211
00:11:50,760 --> 00:11:54,520
If you don't find one, you probably need to invent one.

212
00:11:56,960 --> 00:12:00,920
Third thing, and probably the most important thing,

213
00:12:00,920 --> 00:12:02,480
we need to share this knowledge.

214
00:12:02,480 --> 00:12:03,560
We need to share this knowledge,

215
00:12:03,560 --> 00:12:05,840
our successes and failures.

216
00:12:05,840 --> 00:12:09,160
And the fourth one, if you develop tools,

217
00:12:09,160 --> 00:12:11,080
they probably should be open sourced,

218
00:12:11,080 --> 00:12:13,520
because with open source,

219
00:12:13,520 --> 00:12:16,560
open source is the best way to share this knowledge,

220
00:12:16,560 --> 00:12:21,080
is the best way to communicate with your successes

221
00:12:21,080 --> 00:12:23,160
and failures in the process.

222
00:12:25,880 --> 00:12:29,200
So yeah, you can contact me on Twitter or on any,

223
00:12:29,240 --> 00:12:30,080
or email.

224
00:12:30,080 --> 00:12:34,080
Actually, we have a booth today on the Startup Row.

225
00:12:34,080 --> 00:12:35,880
Please check it out.

226
00:12:35,880 --> 00:12:40,880
Today we are running competition for open source project.

227
00:12:40,880 --> 00:12:43,160
We surprise for open source project.

228
00:12:43,160 --> 00:12:44,200
Please join us.

229
00:12:45,240 --> 00:12:47,040
Now I'm open for the questions.

230
00:12:49,240 --> 00:12:50,080
No questions?

231
00:12:50,080 --> 00:12:51,320
Yeah, all right.

232
00:12:51,320 --> 00:12:52,160
Thank you.

233
00:12:52,520 --> 00:12:53,560
No questions?

234
00:12:53,560 --> 00:12:54,920
Yeah, all right.

235
00:12:54,920 --> 00:12:55,760
Thank you.

