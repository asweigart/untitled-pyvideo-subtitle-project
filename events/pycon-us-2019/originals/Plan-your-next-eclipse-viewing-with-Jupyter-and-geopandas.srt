1
00:00:00,000 --> 00:00:13,000
Good morning, everyone. Welcome to the first talk in this room. This is Plan Your Next

2
00:00:13,000 --> 00:00:18,280
Eclipse Viewing with Jupiter and Geopandas by Chrissy Heaton. She has requested that

3
00:00:18,280 --> 00:00:23,920
she'll be taking your questions outside after the talk in the hall. So please hold off your

4
00:00:23,920 --> 00:00:26,920
questions until then. Chrissy.

5
00:00:26,920 --> 00:00:36,680
Thank you. Thank you for coming, fellow map nerds. So I'm going to be talking about how you can

6
00:00:36,680 --> 00:00:43,960
plan your next solar eclipse viewing with Jupiter and Geopandas. My name is Chrissy. I work for an

7
00:00:43,960 --> 00:00:49,360
environmental consulting firm in Seattle called Floyd Snyder as a data analyst, and I make maps

8
00:00:49,360 --> 00:00:55,480
there. I'm also the organizer of a group in Seattle called Map Time Seattle. We're on meetup.com.

9
00:00:55,920 --> 00:01:01,920
We focus on learning open source geospatial tools together, and we also have fun social events like

10
00:01:01,920 --> 00:01:10,600
Mappy Hour. So if you are interested in that and ever in Seattle, please find us on meetup. So this

11
00:01:10,600 --> 00:01:15,840
entire presentation is running inside of a Jupiter notebook. I love Jupiter notebooks for spatial

12
00:01:15,840 --> 00:01:20,680
analysis because you can document all your code and you can see your plots and maps right there in the

13
00:01:20,680 --> 00:01:30,840
notebook. So here's a little proof. And these are live cells that I just ran. Okay, maps. Cool.

14
00:01:30,840 --> 00:01:37,680
That's why we're here. So did anyone use a map to find the convention center once they got to

15
00:01:37,680 --> 00:01:45,680
Cleveland? Or have you ever gotten a text from a friend asking where are you and your application

16
00:01:45,680 --> 00:01:52,880
prompts you to share your location? That happen? Yeah, we're surrounded by maps. I use a map to

17
00:01:52,880 --> 00:01:59,320
find my bus every morning to find out when it's coming, and I also make maps for my job. Maps are

18
00:01:59,320 --> 00:02:05,920
the best way to understand a network, anything spatial. That's how I would define a map is

19
00:02:05,920 --> 00:02:10,200
anything that helps you understand something spatial. Like it doesn't even have to be to scale

20
00:02:10,200 --> 00:02:17,880
like this DC Metro map. So even though maps are embedded in all our technology, they've been around

21
00:02:17,880 --> 00:02:23,680
a long time and people have been using them for to understand their area and to even do spatial

22
00:02:23,680 --> 00:02:31,040
analysis for a long time. This is a historic map of Cleveland. So when I tell people that I make

23
00:02:31,040 --> 00:02:35,080
maps for a living, they sometimes ask me this question. Hasn't everything already been mapped?

24
00:02:35,080 --> 00:02:43,960
Well, the short answer is no, but to explain it, there are a lot of different kinds of maps. So this

25
00:02:43,960 --> 00:02:50,840
is an aerial photo taken by a satellite. I would say this is a map. It's just a photo, but it tells

26
00:02:50,840 --> 00:02:58,080
you like what's there. Really nice aerial imagery. And maps can also be really heavily stylized. These

27
00:02:58,080 --> 00:03:03,520
are not based on imagery, based on like data layers and styled. I really like this. These are open

28
00:03:03,520 --> 00:03:08,320
source maps from a company called Stamen. They make these really nice styles. We're going to use

29
00:03:08,320 --> 00:03:13,600
them later. And if you've ever used Google Maps, which you probably have, you might have noticed you

30
00:03:13,600 --> 00:03:19,440
can switch between like an aerial imagery and this kind of stylized map, whatever suits your need

31
00:03:19,440 --> 00:03:25,840
better. So in contrast to those two kinds of maps, I would call those base maps, at least for my

32
00:03:25,840 --> 00:03:31,120
purposes, because they just show you what's there, the image and the stylized map. This map in

33
00:03:31,120 --> 00:03:36,400
contrast, I would call a thematic map because it has data on top of it. And the data we can see

34
00:03:36,400 --> 00:03:41,240
from the title is climate destabilization. And we've got all these different shades of orange,

35
00:03:41,240 --> 00:03:47,800
which we can, even if we can't read that text, we can assume the darker orange color is more climate

36
00:03:47,800 --> 00:03:53,160
destabilization. And this map also has little information nuggets on there. And this is closer

37
00:03:53,160 --> 00:04:00,000
to the kind of map that I make. And even if, you know, all the base maps have already made and all

38
00:04:00,000 --> 00:04:07,520
the thematic maps have already been made, there's maps of Middle Earth. I met someone who was trying

39
00:04:07,520 --> 00:04:12,400
to do a spatial analysis using a map of Middle Earth. If you're familiar with the Lord of the

40
00:04:12,400 --> 00:04:18,280
Rings, it's the story of this hobbit named Frodo who carries this ring from Hobbiton to Mordor. And

41
00:04:18,280 --> 00:04:26,680
this guy was looking at if he had taken the shortest path. And even if, you know, even like

42
00:04:26,680 --> 00:04:31,160
there are other planets and galaxies, you could even make maps of the brain and body. So, of course,

43
00:04:31,160 --> 00:04:39,640
not all maps have been made. So I make maps with geographic information systems or GIS. And GIS is

44
00:04:39,640 --> 00:04:45,160
a system that allows you to work with spatial data, visualize it, analyze it, store it properly in

45
00:04:45,160 --> 00:04:54,280
order to understand it better. And GIS is used in organizations of all sizes, in every level of

46
00:04:54,280 --> 00:05:01,200
government. NASA, I use it for environmental consulting. Real estate uses it. So it's widely

47
00:05:01,200 --> 00:05:07,800
used. And then what really drew me to the subject of GIS was that it was a fun mix of data, science,

48
00:05:07,800 --> 00:05:14,720
analysis, and maps. I love all those things. So we use GIS to answer where questions or questions

49
00:05:14,720 --> 00:05:18,800
with some kind of spatial component. So like where's the Convention Center and how do I get

50
00:05:18,800 --> 00:05:25,840
there? Also, like where should we put the next something? We call those site selection problems.

51
00:05:25,840 --> 00:05:31,320
Where should we build our next store so that, well, first of all, we need a spot that has the right

52
00:05:31,320 --> 00:05:37,960
zoning that's available for sale that is going to draw in our most customers. So we can use GIS to

53
00:05:37,960 --> 00:05:44,160
find the best spot for that. And the same thing with like a wind turbine or a solar panel. For example,

54
00:05:44,160 --> 00:05:49,280
we might not want to put a solar panel in Seattle because I'm just kidding. We have some.

55
00:05:49,280 --> 00:05:56,320
Disaster relief or prevention, you know, finding out where a storm is going to hit so you can

56
00:05:56,320 --> 00:06:03,360
evacuate the right people and also provide aid after a hurricane hits. What I do a lot in my job

57
00:06:03,360 --> 00:06:10,120
is find out which area in our cleanup area that we're trying to clean up with at the firm has the

58
00:06:10,120 --> 00:06:15,000
highest concentration of some chemicals so that we can apply the best remedy there. And it's also

59
00:06:15,000 --> 00:06:23,120
used by advertisements to target you and based on your location among other things. So before we get

60
00:06:23,120 --> 00:06:29,280
into our spatial problem, there's a few things to know about spatial data. One thing is the earth is

61
00:06:29,280 --> 00:06:37,360
round and all of our maps on the screen, on paper, are flat. So they have all been projected somehow

62
00:06:37,360 --> 00:06:41,800
and I'm not going to get too into this because there's a lot of ways you can project something.

63
00:06:41,800 --> 00:06:46,960
But it's just good to know whenever you're mapping on a flat surface that you're dealing with some

64
00:06:46,960 --> 00:06:53,320
kind of distortion. And distortion can happen in various aspects of your map. Imagine like taking

65
00:06:53,320 --> 00:06:58,640
a grapefruit, peeling it, and then flattening out that peel. It's going to be all warped and torn.

66
00:06:58,640 --> 00:07:05,440
So we do our best using math to find projections that are, that minimize distortion. And there's a

67
00:07:05,440 --> 00:07:12,760
lot of projections that you can choose from. Another thing to know is a coordinate system. And

68
00:07:12,760 --> 00:07:18,640
this is how you identify a location on the earth with two numbers just like in geometry class where

69
00:07:18,640 --> 00:07:22,920
you have an X and Y coordinate system and you have these two numbers that help you identify a point.

70
00:07:22,920 --> 00:07:29,040
And just like projections, there's a lot of different types of coordinate systems. The one

71
00:07:29,040 --> 00:07:34,680
that we're going to use today just happens to be the geographic or unprojected coordinate system.

72
00:07:34,680 --> 00:07:45,880
And this one is what has a null island. So this one, it covers the entire earth and it uses latitude

73
00:07:45,880 --> 00:07:52,600
and longitude. The equator is the line of latitude zero and the prime meridian is the line of zero

74
00:07:52,600 --> 00:07:57,840
longitude. And so it does have that zero zero origin which we jokingly call null island because

75
00:07:57,840 --> 00:08:02,560
if you ever bring any data that is incomplete or doesn't have or has missing coordinates,

76
00:08:02,560 --> 00:08:09,160
it's going to end up right there. And it's good to be aware. We joke about that so much data has

77
00:08:09,160 --> 00:08:17,040
formed up in that spot that there's an island there now. So when we're using spatial data with

78
00:08:17,040 --> 00:08:24,840
Python, we get this kind of projection coordinate system combo called an EPSG code. And so you can

79
00:08:24,840 --> 00:08:31,720
look up the code for the system that you want to use. So this talk is about planning your next

80
00:08:31,800 --> 00:08:36,120
eclipse viewing which is just a really fun way to talk about maps and doing spatial analysis.

81
00:08:36,120 --> 00:08:43,680
But this topic is really fun because I remember what really got me into it was the eclipse that

82
00:08:43,680 --> 00:08:51,800
happened on August 21st, 2017, which is my birthday. Went with some friends. I live in Seattle so went

83
00:08:51,800 --> 00:08:57,800
with some friends to Oregon to see the totality. So if you're not familiar with what a solar eclipse

84
00:08:57,960 --> 00:09:04,800
is, it's what happens when the moon comes directly between the sun and a point on the earth. And when

85
00:09:04,800 --> 00:09:10,040
this happens, you can look directly at the sun and see something that looks like this. Does anyone

86
00:09:10,040 --> 00:09:22,200
here see the totality? Yeah. So after I saw that eclipse, I was talking to my sister and I was like

87
00:09:22,200 --> 00:09:28,560
bragging like it was so cool. She had missed it. She had heard that traffic was going to be bad or

88
00:09:28,560 --> 00:09:33,600
that it would be really hard to find a spot to see it. So we were talking and I was like,

89
00:09:33,600 --> 00:09:40,360
wait, there's more coming up. You can see them. And she wanted some help planning more in advance

90
00:09:40,360 --> 00:09:46,120
this time. So I identified this as a spatial problem. And after we talked, we came up with

91
00:09:46,120 --> 00:09:50,200
some criteria that were of interest to her in finding out where she could go to see the next

92
00:09:50,200 --> 00:09:56,440
solar eclipse. So she wants to know first off, when and where can she go to see an upcoming solar

93
00:09:56,440 --> 00:10:01,480
eclipse? And then she's really interested in sharing the experience with a lot of people. So

94
00:10:01,480 --> 00:10:06,280
she wants to know which upcoming eclipse is going to pass over the most people. And then once we have

95
00:10:06,280 --> 00:10:11,800
that answer, where can she go to see that eclipse? And she wants to go to a large city so she can fly

96
00:10:11,800 --> 00:10:16,160
there and get accommodations. And if you have totally different criteria than this, you could

97
00:10:16,160 --> 00:10:23,920
use the same process to answer it for yourself. Just you'd have to find your own data. So to

98
00:10:23,920 --> 00:10:29,200
answer these questions, we're going to use some Python mapping libraries. We're going to use

99
00:10:29,200 --> 00:10:35,080
MapPlotlib, which is a really nice plotting library. Makes really publication quality maps

100
00:10:35,080 --> 00:10:42,160
and diagrams. They can be both static and interactive. So we'll import that. And then

101
00:10:42,160 --> 00:10:47,200
we're also going to use Pandas and the GeoPandas, which is mentioned in my talk title. So Pandas is

102
00:10:47,200 --> 00:10:52,640
used primarily for data science. It provides these easy to use tabular data structures and data

103
00:10:52,640 --> 00:11:00,560
analysis tools. So it's pretty popular for data science. And then GeoPandas is Pandas that's been

104
00:11:00,560 --> 00:11:07,120
geographically enabled. So it still has those tabular structures by Pandas, but it also has

105
00:11:07,120 --> 00:11:13,840
a spatial component provided by another library called Shapely. So we'll import both of those.

106
00:11:16,480 --> 00:11:20,800
And just so you know, I'm showing code. If you can't see all the code, it's all available on my

107
00:11:20,800 --> 00:11:26,080
GitHub. And it's all the instructions about how to get it running. So I'll tweet about that later in

108
00:11:26,080 --> 00:11:33,120
my Twitter handle. It's really teeny tiny in the corner. So let's get started. First, we need to

109
00:11:33,120 --> 00:11:40,960
make a base map. So GeoPandas comes when you download and install it. It comes with some

110
00:11:40,960 --> 00:11:48,000
spatial data that you can use right off the bat. So one of the things is worldwide countries.

111
00:11:48,640 --> 00:11:58,720
So I can load that in as a GeoPandas geodata frame and assign it to a variable. And then since

112
00:11:58,720 --> 00:12:02,480
it's spatial data, we want to make sure we at least know the coordinate reference system. That's

113
00:12:02,480 --> 00:12:08,480
what CRS stands for. And it will return us that EPSG code that I mentioned earlier. This one is

114
00:12:08,480 --> 00:12:14,240
4326, which is the geographic worldwide coordinate system, latitude, longitude.

115
00:12:17,360 --> 00:12:23,440
So just like with a Pandas data frame, it has this tabular component. So we can look at the

116
00:12:24,160 --> 00:12:33,440
columns that we have to work with. We have population, GDP, country name, and this geometry

117
00:12:33,440 --> 00:12:40,560
column, which holds the spatial information. So then if we plot that using all the default

118
00:12:40,560 --> 00:12:46,400
customizations, we get this nice little visual of what we have. But usually when you're working with

119
00:12:47,760 --> 00:12:51,920
these kinds of maps, you want to customize it. So here I've made the plot a little bit bigger,

120
00:12:51,920 --> 00:12:55,040
colored things a little bit differently so that you can see everything a little better.

121
00:12:57,440 --> 00:13:04,480
So now we have a nice base map. For the rest of the data sets, I've downloaded data that I want to

122
00:13:04,480 --> 00:13:11,680
use outside of GeoPandas. So some cities, GeoPandas actually does come with city data, but it's only

123
00:13:11,680 --> 00:13:16,800
capitals, and I want as many cities as possible for my analysis. So I've downloaded them from

124
00:13:16,800 --> 00:13:22,320
another place and loaded them in. And then anytime you're plotting data on top of each other,

125
00:13:22,320 --> 00:13:26,080
it needs to be in the same coordinate reference system, so I'm just checking to make sure it is.

126
00:13:29,600 --> 00:13:32,640
And we can look at the first few rows of the tabular component.

127
00:13:33,520 --> 00:13:36,880
Here we have names and populations, and then that same geometry field.

128
00:13:39,520 --> 00:13:45,440
So if we plot the cities, now we have a map where each city is a dot in the location that it exists.

129
00:13:47,600 --> 00:13:53,280
And you can use Python to do quick checks of if everything's in the right coordinate system.

130
00:13:54,320 --> 00:14:00,080
Probably want to do that. Then we can plot both of them together after we verify that they're in

131
00:14:00,080 --> 00:14:06,960
the same coordinate system. So to do this, you add your base map to a variable. You can call it

132
00:14:06,960 --> 00:14:13,200
whatever you want. But then any data that you want to add on top of it, you give it this axis equals

133
00:14:13,200 --> 00:14:17,920
whatever you set the base map to. And then you can do this as many times as you want. You can put 100

134
00:14:17,920 --> 00:14:23,200
data sets on. So now we can see where the cities fall in line with the land masses. And yes,

135
00:14:23,200 --> 00:14:29,680
there are cities out here, I guess, on little islands. So now we have a base map. My sister

136
00:14:29,680 --> 00:14:37,120
wants to know where she can see an upcoming solar eclipse. So I went to nasa.com and downloaded some

137
00:14:37,120 --> 00:14:43,520
data for upcoming eclipses. And you know, cleaned it up. They don't all plot really well if they're

138
00:14:43,520 --> 00:14:50,000
like on the North Pole. So sorry, I removed those. So we have eclipse data. And just like with cities

139
00:14:50,000 --> 00:14:55,680
and countries, we'll check the coordinate reference system, see that it's in the same one.

140
00:14:57,120 --> 00:15:01,920
And then we'll look at the first few rows. So what we're going to use to identify our eclipses is the

141
00:15:01,920 --> 00:15:05,760
year that they're going to occur. We can always find out more specifically when they're going to

142
00:15:05,760 --> 00:15:13,120
happen later. And then we can plot the eclipses. And I have styled these eclipses like the way I

143
00:15:13,120 --> 00:15:18,720
see an eclipse being like shadowy in the middle and kind of bright yellow on the outside. You

144
00:15:18,720 --> 00:15:25,520
could style them however you wanted. And then we can plot those on our country data to see where they

145
00:15:25,520 --> 00:15:32,720
fall. But she wants to know when and where she can see an upcoming solar eclipse. So another thing

146
00:15:32,720 --> 00:15:39,040
we can do is take that year column of the eclipses and color each year differently. So now we can kind

147
00:15:39,040 --> 00:15:43,920
of see, and we could choose to color these differently from like most recent to farthest away

148
00:15:45,120 --> 00:15:50,080
color shading. But in this case, I've just color given them all a random color. But we have a legend

149
00:15:50,080 --> 00:15:57,360
so we can tell which is coming when. So there's a few coming. South America pretty soon. One over

150
00:15:57,440 --> 00:16:04,960
Antarctica, North Pole, and this one coming over the United States. So this answers her first

151
00:16:04,960 --> 00:16:10,640
question. So now she knows when and where she can see an upcoming solar eclipse. Now which eclipse

152
00:16:10,640 --> 00:16:15,600
is going to pass over the most people? And this is going to take a little bit more spatial analysis.

153
00:16:17,920 --> 00:16:22,240
So in order to answer this question, we need to pull in our city data, which does have populations

154
00:16:22,240 --> 00:16:28,160
associated with it that we can use. But first, I just want to plot everything on the map together.

155
00:16:28,720 --> 00:16:33,520
So just visually, we can now see that there are a lot of cities that overlap with a lot of eclipses.

156
00:16:34,160 --> 00:16:38,560
So we need to find out the total population of all the cities inside of each eclipse.

157
00:16:40,720 --> 00:16:47,120
So to do that, I'm using intersection, spatial intersection, just pulling out all the cities that

158
00:16:48,080 --> 00:16:53,520
are inside of the path of any eclipse and giving that its own variable. So now I have a subset of

159
00:16:53,520 --> 00:17:01,680
cities. And just take a look at the first few rows so I can see that it worked. And now these are the

160
00:17:01,680 --> 00:17:06,960
cities, but now they have this year column, which has the eclipse that they're going to overlap with.

161
00:17:08,960 --> 00:17:14,720
And then all I really need from this result is the population and the year. And I'm just going

162
00:17:14,720 --> 00:17:20,560
to put that into a data frame so I can do a summarize on it. But first, I'll just take a look

163
00:17:20,560 --> 00:17:29,280
at it. Now I just have the population and the city and the year. And now I can do that sum. So I'm

164
00:17:29,280 --> 00:17:36,400
taking that data frame. I'm summing all the years by the populations. And then we should just have

165
00:17:37,920 --> 00:17:44,640
a small table that just has the year and the total population of each eclipse. But now we've

166
00:17:44,640 --> 00:17:50,480
lost that spatial component. This is just a data frame. It's still useful, but we can join it back

167
00:17:50,480 --> 00:17:58,160
to our eclipses spatial data. I'm making a new variable. And it's got the same eclipses as before,

168
00:17:58,160 --> 00:18:04,640
but now we've joined that population column back to it. And now if I look at the tabular component

169
00:18:04,640 --> 00:18:15,200
of our eclipses, we have this total population column. So from there, I can sort this and find

170
00:18:15,200 --> 00:18:20,400
out which, if I just sort descending on population, I can find out which eclipse is going to have the

171
00:18:20,400 --> 00:18:29,280
most people. And it's the one that's happening in 2024, looks like. So now I've made my same plot,

172
00:18:29,280 --> 00:18:36,160
but I've colored the eclipses by their estimated population. So the darker the color, the more

173
00:18:36,160 --> 00:18:42,160
people the eclipse is going to pass over. So it kind of looks like this one is the darkest.

174
00:18:49,280 --> 00:18:54,080
And then this is the same plot I made before where each eclipse is colored randomly by the year.

175
00:18:54,640 --> 00:18:59,200
So now we can just verify that this was the darkest one. This is the one happening in 2024,

176
00:18:59,920 --> 00:19:05,600
and it's the one that's going to pass over the most people. And that's the answer to her second

177
00:19:05,600 --> 00:19:11,520
question is, so it's that one. Now we're going to take a closer look at that one and find out which

178
00:19:11,520 --> 00:19:18,240
cities in that path are the largest. So we only need that eclipse now. I'm just going to pull

179
00:19:18,240 --> 00:19:25,520
that one out into its own variable based on the year. And then if I do my plot again with my new

180
00:19:25,520 --> 00:19:31,200
eclipse, it's just showing that one. So we can really focus on that one. And now we just want

181
00:19:31,200 --> 00:19:37,280
to change the zoom of my plot to like the minimum bounding box of that eclipse so that we're focused

182
00:19:37,280 --> 00:19:45,040
right on it. And when you change scale, you often want to take a look at your styles too, because

183
00:19:45,040 --> 00:19:50,480
sometimes it looks better with a different styling at different zoom levels basically.

184
00:19:51,040 --> 00:19:58,720
So I'm going to change my style now to my cities are these little dots. So we want to find out which

185
00:19:58,720 --> 00:20:06,960
of these cities inside the path is the largest. So first we need to find out the cities that are

186
00:20:06,960 --> 00:20:11,680
inside of the path. And this is the same code we used kind of initially to find out all the cities

187
00:20:11,680 --> 00:20:16,960
that overlapped with an eclipse. Now we just want to know these cities that overlap with our 2024

188
00:20:16,960 --> 00:20:24,880
eclipse. And if we plot that out, that looks good. That looks right. Got all these cities inside of

189
00:20:24,880 --> 00:20:35,040
there. One thing you can do to try to find the answer is color is size your city dots by as a

190
00:20:35,040 --> 00:20:40,560
right ratio of the population associated with them. So now our bigger dots are bigger cities,

191
00:20:40,560 --> 00:20:44,640
but still really hard to tell what's going on there. But something fun you can do.

192
00:20:47,120 --> 00:20:51,360
But we actually have the answer already. We can sort descending on our cities that overlap with

193
00:20:51,360 --> 00:20:58,080
that eclipse. Sort descending and we'll find the top five. One of them is Cleveland.

194
00:21:03,440 --> 00:21:08,800
Then we can take those cities and make our own little subset of them. So we just have the top

195
00:21:08,800 --> 00:21:18,880
five. Plot those out with labels and that's the answer. But the problem is my sister doesn't know

196
00:21:18,880 --> 00:21:24,960
GeoPandas. She doesn't know Jupiter. So how am I going to like, and she's also used to like, you

197
00:21:24,960 --> 00:21:29,520
know, maps that you can zoom in and out that are interactive. So I'm going to have to deliver this

198
00:21:29,520 --> 00:21:38,560
to her in a format besides this. In GIS we call like interactive base maps, slippy maps, because

199
00:21:38,560 --> 00:21:45,440
they slip around when you drag them. So to make a slippy map, this is all still in a Jupiter notebook,

200
00:21:45,440 --> 00:21:50,880
by the way. I'm going to import folium, which binds the power of Python with leaflet JS.

201
00:21:51,600 --> 00:21:59,280
I don't know what that means. Import it. And then, yeah, I just looked at the documentation on how to

202
00:21:59,280 --> 00:22:08,080
quickly make these maps. So I'm pulling in, these are slippy. This is from Open Street Map. You can

203
00:22:08,560 --> 00:22:12,640
look on the documentation. There's a lot of different base maps that you can use. But to make this

204
00:22:12,640 --> 00:22:18,800
folium map, you just have to give it a location to start, and you can always change it, move it around

205
00:22:18,800 --> 00:22:22,960
later. And then you also need to give it a zoom start, and this is the zoom level that it's going

206
00:22:22,960 --> 00:22:27,920
to start in. And zoom level is like how zoomed in or out it is. But you can always zoom in and out

207
00:22:29,120 --> 00:22:36,640
whenever it's made. So that's nice. I just want to take a look at some other of my base map options.

208
00:22:36,640 --> 00:22:45,680
I really like this one, black and white, crisp. The one I really like is this watercolor base map.

209
00:22:45,680 --> 00:22:52,960
And this is based on real data. It's just styled like a watercolor. I guess it never gets any labels,

210
00:22:52,960 --> 00:22:57,040
but it looks really pretty. And I like to use this map when I'm doing something fun, because

211
00:22:57,040 --> 00:23:04,800
I can't use it at work. So to map our Eclipse data on one of these,

212
00:23:06,640 --> 00:23:10,400
I need to find the centroid of my Eclipse so that I can say that's where I want the map to start.

213
00:23:12,240 --> 00:23:20,800
Do that with some centroid. Find the centroid x and y. And then I need to make it the map,

214
00:23:20,800 --> 00:23:27,200
but then add my data on top of it. But first it has to be converted into GeoJSON, whereas before

215
00:23:27,200 --> 00:23:33,280
it was GeoPanda's data frames. And then I can add my, once I do that, I can add my top five cities

216
00:23:33,280 --> 00:23:42,320
and my Eclipse data onto the map. So if I plot it, now I have my top five cities in my Eclipse.

217
00:23:44,480 --> 00:23:49,440
But I don't have anything, like I don't know what cities these are. They're just little markers.

218
00:23:49,440 --> 00:23:55,760
So I have a little more work to do. I can, with a little more code, write a function that both

219
00:23:55,760 --> 00:24:03,120
creates my map and generates these little pop-ups that have the name of the city and the population

220
00:24:03,120 --> 00:24:11,920
associated with them and define how I want them to look. And so now it's in a function form. So

221
00:24:11,920 --> 00:24:20,160
to create my map from here, I call the function. And now it looks almost the same except my little

222
00:24:21,040 --> 00:24:27,040
cities are now these dots that I can click on. See the population. So there's Cleveland. Be here

223
00:24:27,040 --> 00:24:36,240
in 2024. This is still not quite ready for my sister. I need to save it as an HTML file

224
00:24:36,800 --> 00:24:43,280
that I can attach to an email and send it to her and then she can open it up. So it'll,

225
00:24:44,960 --> 00:24:49,680
if it opens for me, she's going to get something like this. She can open it up and be like, yay,

226
00:24:51,120 --> 00:24:54,960
I'm used to this kind of thing. So yeah.

227
00:24:57,040 --> 00:25:10,560
That's how you plan your next eclipse viewing with Jupiter and GeoPandas.

