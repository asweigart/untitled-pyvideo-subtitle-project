1
00:00:00,000 --> 00:00:03,080
He told me to pronounce his name as JP Bader,

2
00:00:03,080 --> 00:00:04,840
and if I was having trouble pronouncing it,

3
00:00:04,840 --> 00:00:07,880
I would just think of Darth Vader, but replace it with a V.

4
00:00:07,880 --> 00:00:11,480
So with that being said, please help me in welcoming JP Bader,

5
00:00:11,480 --> 00:00:14,360
and he will give a talk that the title is now gone.

6
00:00:14,360 --> 00:00:15,440
He'll introduce the talk.

7
00:00:15,440 --> 00:00:15,940
That's OK.

8
00:00:15,940 --> 00:00:16,440
That's OK.

9
00:00:16,440 --> 00:00:17,920
That's fantastic.

10
00:00:17,920 --> 00:00:19,400
Thank you so much.

11
00:00:19,400 --> 00:00:21,600
I'm excited to hear it.

12
00:00:21,600 --> 00:00:22,320
All right.

13
00:00:22,320 --> 00:00:23,400
Hi, everybody.

14
00:00:23,400 --> 00:00:25,280
Thank you all for coming.

15
00:00:25,280 --> 00:00:27,040
My name is JP Bader, and I'm going

16
00:00:27,040 --> 00:00:30,920
to talk about digital signal processing using a player

17
00:00:30,920 --> 00:00:32,880
piano.

18
00:00:32,880 --> 00:00:35,600
This is a lot of fun for me.

19
00:00:35,600 --> 00:00:38,040
It's not been so fun for my wife, who's been amazing

20
00:00:38,040 --> 00:00:38,640
to this point.

21
00:00:38,640 --> 00:00:40,160
So thank you all for coming and listening.

22
00:00:40,160 --> 00:00:42,360
She's going to give me evil eyes the entire time.

23
00:00:42,360 --> 00:00:44,120
But I need a big round of applause for her.

24
00:00:44,120 --> 00:00:45,160
Everybody say thank you.

25
00:00:45,160 --> 00:00:45,660
Woo!

26
00:00:45,660 --> 00:00:50,480
All right.

27
00:00:50,480 --> 00:00:51,280
A couple of things.

28
00:00:51,280 --> 00:00:52,800
Real quick, I'm JP Bader.

29
00:00:52,800 --> 00:00:55,600
I'm the founder and president of Next Health Choice.

30
00:00:55,600 --> 00:00:58,120
We're a company that focuses on streamlining and automating

31
00:00:58,120 --> 00:00:59,440
prior authorizations.

32
00:00:59,440 --> 00:01:02,040
A prior authorization was a tool created by insurance companies

33
00:01:02,040 --> 00:01:03,380
to help control costs.

34
00:01:03,380 --> 00:01:05,220
Unfortunately, over the last several decades,

35
00:01:05,220 --> 00:01:07,040
it's become this pervasive bureaucratic nightmare

36
00:01:07,040 --> 00:01:08,240
for health care providers.

37
00:01:08,240 --> 00:01:09,960
So over the last four years, we've

38
00:01:09,960 --> 00:01:12,320
been creating automation to centralize and create

39
00:01:12,320 --> 00:01:14,600
efficiencies in prior authorizations,

40
00:01:14,600 --> 00:01:16,720
marching towards real-time coverage verification,

41
00:01:16,720 --> 00:01:20,000
and using natural language processing and interactive voice

42
00:01:20,000 --> 00:01:20,500
response.

43
00:01:20,500 --> 00:01:23,360
So a lot of nothing that I'm going to show you

44
00:01:23,360 --> 00:01:25,680
has anything to do with what I do professionally.

45
00:01:25,680 --> 00:01:27,680
I'm a recovering software engineer.

46
00:01:27,680 --> 00:01:29,720
I'm no longer allowed to touch production-level code

47
00:01:29,720 --> 00:01:31,920
for a good reason.

48
00:01:31,920 --> 00:01:34,840
But a lot of what I'm doing here is actually,

49
00:01:34,840 --> 00:01:38,400
being the person who runs the company and being post-technical,

50
00:01:38,400 --> 00:01:40,640
I get to greenfield ideas.

51
00:01:40,640 --> 00:01:42,760
And then I get to hand them off very, very quickly

52
00:01:42,760 --> 00:01:45,080
to my team, who says, go back to doing what you do,

53
00:01:45,080 --> 00:01:47,920
which is not writing code.

54
00:01:47,920 --> 00:01:49,800
So that's my professional life.

55
00:01:49,800 --> 00:01:52,880
I might be wondering, why the hell am I here with a player

56
00:01:52,880 --> 00:01:56,240
piano with a circuit board strapped to it, plus a shop vac,

57
00:01:56,240 --> 00:01:59,640
255-watt-hour batteries on a tubular steel frame?

58
00:01:59,640 --> 00:02:02,640
This is a passion and a hobby of mine.

59
00:02:02,640 --> 00:02:05,240
Frankly, there's a lot of reasons

60
00:02:05,240 --> 00:02:08,680
why I wanted to do this, but the two biggest reasons.

61
00:02:08,680 --> 00:02:11,160
One, slightly up because of work and doing interactive voice

62
00:02:11,160 --> 00:02:12,920
response and digital signal processing.

63
00:02:12,920 --> 00:02:16,440
But secondly, if you didn't hear just a few minutes ago,

64
00:02:16,440 --> 00:02:17,760
I was in a hospital.

65
00:02:17,760 --> 00:02:20,200
If you didn't hear just a few minutes ago me playing

66
00:02:20,200 --> 00:02:22,480
the piano, I have a degree in piano performance.

67
00:02:22,480 --> 00:02:24,320
I love playing the piano.

68
00:02:24,320 --> 00:02:27,120
This whole contraption is, this is rev four

69
00:02:27,120 --> 00:02:30,440
of my player piano platform, or my player piano platform,

70
00:02:30,440 --> 00:02:33,880
where I want to be able to busk anywhere I want to go.

71
00:02:33,880 --> 00:02:35,520
And so I have a piano to do that.

72
00:02:35,520 --> 00:02:37,640
But I'm in a garage band, which is really hard when

73
00:02:37,640 --> 00:02:39,160
you're a classical pianist.

74
00:02:39,160 --> 00:02:42,000
And you read everything, and I'm a very visual learner.

75
00:02:42,000 --> 00:02:44,520
And as my wife will attest, I'm a terrible listener.

76
00:02:44,520 --> 00:02:47,360
And I can't learn orally.

77
00:02:47,400 --> 00:02:49,800
So when I hear people playing music, I can't even play

78
00:02:49,800 --> 00:02:52,400
Happy Birthday correctly because I can't hear it right.

79
00:02:52,400 --> 00:02:53,640
I can read it, no problem.

80
00:02:53,640 --> 00:02:56,120
I can play anything I read, but I can't hear it.

81
00:02:56,120 --> 00:03:00,400
So kind of what's born out of this, what created this was,

82
00:03:00,400 --> 00:03:03,000
I want to be able to play the piano and have fun playing

83
00:03:03,000 --> 00:03:05,040
the piano in my rock band and actually sound somewhat better

84
00:03:05,040 --> 00:03:08,280
than just a classical pianist playing Brahms or Rachmaninoff.

85
00:03:08,280 --> 00:03:12,920
And I want to be able to hear and see maybe like the soloist

86
00:03:12,920 --> 00:03:13,920
playing on the guitar riff.

87
00:03:13,920 --> 00:03:16,840
And I could see that here on the piano.

88
00:03:16,840 --> 00:03:20,600
And so that's kind of what was the birth process of a lot of this,

89
00:03:20,600 --> 00:03:23,840
being able to abstract from any kind of song, any kind of

90
00:03:23,840 --> 00:03:29,000
audios file what I wanted to be able to perform on a piano.

91
00:03:29,000 --> 00:03:30,560
And then I can do it myself.

92
00:03:30,560 --> 00:03:33,600
That gives me the visual representation to do it.

93
00:03:33,600 --> 00:03:36,200
Now, I've got some...

94
00:03:36,200 --> 00:03:36,960
I should apologize.

95
00:03:36,960 --> 00:03:38,680
I'm a terrible slide maker.

96
00:03:38,680 --> 00:03:40,000
I'm horrible at this.

97
00:03:40,000 --> 00:03:44,000
So a couple of things about me that also are reasons why this

98
00:03:44,000 --> 00:03:46,000
is happening, I build things all the time.

99
00:03:46,160 --> 00:03:49,160
Much to my wife's chagrin, I built a chicken coop in our backyard.

100
00:03:49,160 --> 00:03:52,680
I built a seven foot tall Lego man costume last year.

101
00:03:52,680 --> 00:03:54,360
I just build things because that's fun.

102
00:03:54,360 --> 00:03:56,960
I'm terrible at documenting because that's not fun.

103
00:03:56,960 --> 00:03:59,040
So as a programmer, this is probably why I'm not a programmer

104
00:03:59,040 --> 00:04:01,480
anymore is because I'm terrible at documenting.

105
00:04:01,480 --> 00:04:07,280
But as an overeducated redneck, I do a lot of fun things in my mind,

106
00:04:07,280 --> 00:04:12,280
which my wife is like that stupid or dangerous, which is more fun.

107
00:04:12,280 --> 00:04:15,360
But I have a lot of fun doing these things.

108
00:04:15,520 --> 00:04:17,120
And I collect instruments.

109
00:04:17,120 --> 00:04:17,720
This is actually...

110
00:04:17,720 --> 00:04:19,360
I was at one point, six different pianos.

111
00:04:19,360 --> 00:04:21,520
I'm down to three.

112
00:04:21,520 --> 00:04:23,560
And it's not a matter of where they go.

113
00:04:23,560 --> 00:04:26,240
It's just, can I get them there?

114
00:04:26,240 --> 00:04:29,480
So, okay.

115
00:04:29,480 --> 00:04:32,240
I want to set expectations for this talk.

116
00:04:32,240 --> 00:04:33,440
This is definitely a production.

117
00:04:33,440 --> 00:04:35,120
This is before a production.

118
00:04:35,120 --> 00:04:37,240
This is an alpha.

119
00:04:37,240 --> 00:04:39,400
What you're going to see here somewhat works.

120
00:04:39,400 --> 00:04:40,960
I have lost a lot of sleep.

121
00:04:40,960 --> 00:04:45,160
To quote Star Wars, many lives were lost getting us to this point.

122
00:04:45,200 --> 00:04:46,280
It was a lot of fun.

123
00:04:46,280 --> 00:04:50,280
But there's...

124
00:04:50,280 --> 00:04:55,680
We have a manifold with four arrays of 22 solenoids on each one being powered by a Raspberry Pi

125
00:04:55,680 --> 00:05:01,760
Zero running Wi-Fi that I'm going to shell into, send commands, as well as copy files

126
00:05:01,760 --> 00:05:05,600
over to, make this play, and a vacuum is going to run because I blew the vacuum three days

127
00:05:05,600 --> 00:05:06,960
ago.

128
00:05:06,960 --> 00:05:09,360
So this is a shop vac that I found laying around.

129
00:05:09,360 --> 00:05:13,640
If any of you are in Chicago or you have a makerspace that's nearby, please, please become

130
00:05:13,640 --> 00:05:14,640
a member.

131
00:05:14,680 --> 00:05:15,680
Don't abuse them.

132
00:05:15,680 --> 00:05:16,680
It's great.

133
00:05:16,680 --> 00:05:17,680
It saved my life on this.

134
00:05:17,680 --> 00:05:22,160
They just need better mattresses there.

135
00:05:22,160 --> 00:05:23,960
Also, okay.

136
00:05:23,960 --> 00:05:26,880
So without any further ado, all right.

137
00:05:26,880 --> 00:05:31,360
Some of the challenges I've had in getting to a digital signal processing that allows

138
00:05:31,360 --> 00:05:32,560
me to play this all on a player piano.

139
00:05:32,560 --> 00:05:34,320
I had a lot of challenges, as you can imagine.

140
00:05:34,320 --> 00:05:37,400
I knew nothing about digital signal processing when I proposed this.

141
00:05:37,400 --> 00:05:38,760
I actually said, this would be fun.

142
00:05:38,760 --> 00:05:40,480
Isn't this easy?

143
00:05:40,480 --> 00:05:43,320
Not at all.

144
00:05:43,360 --> 00:05:48,320
I have learned a lot, but I went down so many wrong rabbit holes that I know as programmers

145
00:05:48,320 --> 00:05:49,320
none of us ever do that.

146
00:05:49,320 --> 00:05:52,360
We all find a problem, we solve it, and we move on.

147
00:05:52,360 --> 00:05:56,600
Except for my case, I found so many cool rabbit holes, and I kept digging into them thinking

148
00:05:56,600 --> 00:05:57,600
there's something cool there.

149
00:05:57,600 --> 00:06:01,040
It turns out there are really cool things there, but not really appropriate to just

150
00:06:01,040 --> 00:06:02,480
write the freaking code.

151
00:06:02,480 --> 00:06:07,720
So I had to actually rebuild my player piano, and this player piano doesn't have a vacuum

152
00:06:07,720 --> 00:06:08,720
underneath.

153
00:06:08,720 --> 00:06:09,720
Pianos actually work really cool.

154
00:06:09,720 --> 00:06:12,480
This is a 110-year-old player piano.

155
00:06:12,480 --> 00:06:16,480
It's really amazing that it's built on vacuums and things are machined to, you know, they

156
00:06:16,480 --> 00:06:19,960
use tenths of inches because they're not scientific.

157
00:06:19,960 --> 00:06:23,200
But things are milled extremely precisely.

158
00:06:23,200 --> 00:06:25,040
But these rubber hoses are 100-plus years old.

159
00:06:25,040 --> 00:06:26,200
They snapped when you touched them.

160
00:06:26,200 --> 00:06:30,760
I got this off somebody's back porch, you know, and so I had to rebuild a lot of this.

161
00:06:30,760 --> 00:06:32,200
I took the vacuum system out.

162
00:06:32,200 --> 00:06:35,040
I'm now running a shop vac, so I apologize.

163
00:06:35,040 --> 00:06:37,560
Anybody in the back, I don't know if you'll be able to hear the piano being played or

164
00:06:37,560 --> 00:06:38,560
not.

165
00:06:38,560 --> 00:06:39,560
You might hear a shop vac.

166
00:06:39,640 --> 00:06:43,400
You're sitting too far back.

167
00:06:43,400 --> 00:06:44,680
So then we have vacuums.

168
00:06:44,680 --> 00:06:45,680
Audio conversion.

169
00:06:45,680 --> 00:06:49,440
That was actually somewhat tricky, not tricky.

170
00:06:49,440 --> 00:06:54,920
In this realm of the things I'm going to talk about as far as DSP goes, I didn't invent

171
00:06:54,920 --> 00:06:56,140
a single algorithm.

172
00:06:56,140 --> 00:07:00,600
As any good smart programmer did, I found other smarter people and used their code.

173
00:07:00,600 --> 00:07:04,720
And so this talk is actually going to go through several different libraries I had.

174
00:07:04,880 --> 00:07:12,000
I'm going to use one song in particular to just show the examples of how these libraries

175
00:07:12,000 --> 00:07:15,560
have different ways of taking their sounds apart.

176
00:07:15,560 --> 00:07:20,600
There are many rabbit holes like the Music Information Retrieval Society, or MIIR.

177
00:07:20,600 --> 00:07:24,480
That was one rabbit hole I went down as well as like trying to learn at Fourier, which

178
00:07:24,480 --> 00:07:28,220
I think is almost the next slide.

179
00:07:28,220 --> 00:07:29,880
And then hardware for the player piano itself.

180
00:07:30,040 --> 00:07:34,800
This circuit board here was just a nightmare that we got working this week.

181
00:07:34,800 --> 00:07:37,080
And the people who helped me with it, they went to a different conference.

182
00:07:37,080 --> 00:07:39,960
They didn't want to be within 500 miles of me.

183
00:07:39,960 --> 00:07:42,840
So I don't blame them.

184
00:07:42,840 --> 00:07:44,320
All right.

185
00:07:44,320 --> 00:07:51,560
So DSP is a huge, huge, huge field of which I admittedly was extremely naive as to me

186
00:07:51,560 --> 00:07:53,320
solving this problem right away.

187
00:07:53,320 --> 00:07:57,080
But DSP is used in a lot of different things, not just audio engineering, but for animal

188
00:07:57,080 --> 00:08:03,240
communications, NSA spying, machine fault tolerances.

189
00:08:03,240 --> 00:08:11,080
But in the realm of audio, this is really where I'm going to focus on just as to take

190
00:08:11,080 --> 00:08:15,920
sound, again, separate out the important parts to me, like the guitar soloist or a singer,

191
00:08:15,920 --> 00:08:18,760
and be able to put that into a format that I could then play on here.

192
00:08:18,760 --> 00:08:22,920
I don't know if you can see that very well.

193
00:08:22,920 --> 00:08:23,920
Sorry.

194
00:08:23,920 --> 00:08:25,360
That's my blackboard, my whiteboard right behind me.

195
00:08:25,360 --> 00:08:28,640
This is the maths I was learning over the last four months.

196
00:08:28,640 --> 00:08:30,440
This is a different rabbit hole.

197
00:08:30,440 --> 00:08:32,400
Furrier transform.

198
00:08:32,400 --> 00:08:35,920
This is me trying to figure out furrier transform.

199
00:08:35,920 --> 00:08:38,400
And I'm not a math major.

200
00:08:38,400 --> 00:08:39,400
But furrier.

201
00:08:39,400 --> 00:08:40,680
Oh, there's some notes in here.

202
00:08:40,680 --> 00:08:41,760
I didn't mean to leave up there.

203
00:08:41,760 --> 00:08:46,960
But the furrier transform is actually quite a fascinating thing.

204
00:08:46,960 --> 00:08:48,220
It's really cool.

205
00:08:48,220 --> 00:08:51,520
In the realm of music, what is a sine wave?

206
00:08:51,520 --> 00:08:55,960
A sine wave is a representation of the frequency that a note is traveling at.

207
00:08:55,960 --> 00:08:59,520
If I'm playing an A440, that is really out of tune.

208
00:08:59,520 --> 00:09:04,560
But the idea is that that is traveling at 440 hertz, which is giving us a sine wave

209
00:09:04,560 --> 00:09:08,360
that if you just represent that alone, it's got a very unique signature.

210
00:09:08,360 --> 00:09:13,640
And if we were to take that, Furrier did a lot of cool math a few hundred years ago.

211
00:09:13,640 --> 00:09:15,480
And he didn't quite get banished.

212
00:09:15,480 --> 00:09:17,380
But a lot of people ignored him for a while.

213
00:09:17,380 --> 00:09:22,660
But his math was spot on on being able to help us identify sound and sound fingerprints.

214
00:09:22,660 --> 00:09:26,940
If we take the frequency at which sound travels and we take the cycles per second and match

215
00:09:26,940 --> 00:09:30,660
them up, we actually get something that's similar to what's called an epicycle.

216
00:09:30,660 --> 00:09:36,540
The idea that sound can travel around in a graphical pattern.

217
00:09:36,540 --> 00:09:39,500
So not only do you have a sine wave going up and down, but if we were to twist that

218
00:09:39,500 --> 00:09:45,260
around in a circle, we get a very unique signature for any sound that we hear.

219
00:09:45,260 --> 00:09:49,580
Furrier allows us to then say, all right, we have a fingerprint for any sound.

220
00:09:49,580 --> 00:09:50,660
What does that fingerprint look like?

221
00:09:50,660 --> 00:09:55,020
So A has a different signature than B flat.

222
00:09:55,020 --> 00:10:00,180
And if we take a lot of sounds together, we might have a representation of sound.

223
00:10:00,180 --> 00:10:05,180
But Furrier would allow us to see the epicycle variations on each note.

224
00:10:05,180 --> 00:10:08,380
And we can extract the sounds from that.

225
00:10:08,380 --> 00:10:12,300
I'm talking about this mainly just so you can know the algorithms.

226
00:10:12,340 --> 00:10:15,140
This is the rabbit hole I went down because I had to understand the algorithms that I

227
00:10:15,140 --> 00:10:18,060
was then going to be using, which again, I'm not inventing algorithms because there are

228
00:10:18,060 --> 00:10:19,980
smarter people who do that.

229
00:10:19,980 --> 00:10:25,060
We have Euler who has some great math that helps in the epicycles.

230
00:10:25,060 --> 00:10:30,180
And then Furrier creates, he's got fast Furrier transform, there's a QFT, STFT, which is a

231
00:10:30,180 --> 00:10:31,540
short time Furrier transform.

232
00:10:31,540 --> 00:10:33,900
There's a CFT there.

233
00:10:33,900 --> 00:10:38,820
There are lots of different variations of us being able to pull sounds apart.

234
00:10:39,340 --> 00:10:44,940
I was able to learn a lot of this, again, back to that previous photo of my desktop

235
00:10:44,940 --> 00:10:46,500
and my whiteboard.

236
00:10:46,500 --> 00:10:49,620
It's really hard on my brain to wrap my head around all this math.

237
00:10:49,620 --> 00:10:55,060
But it was fun times for my family included.

238
00:10:55,060 --> 00:10:57,740
Getting beyond that, and I'm going to get to some examples very, very shortly because

239
00:10:57,740 --> 00:11:00,140
the rest of my talk really is examples.

240
00:11:00,140 --> 00:11:01,740
And I'm just going to go through the libraries I've talked about.

241
00:11:01,740 --> 00:11:06,540
But I used a couple of tools like Audacity and SoundEquivisualizer to help demonstrate

242
00:11:06,740 --> 00:11:10,100
what the sounds look like from people who have been doing this long enough.

243
00:11:10,100 --> 00:11:13,260
They can, audio engineers, what they're looking at and what they see.

244
00:11:13,260 --> 00:11:17,980
And so we have some great tools, free open source tools, as well as some plugins that

245
00:11:17,980 --> 00:11:20,720
allow us to pull apart sounds.

246
00:11:20,720 --> 00:11:23,880
There are some commercial grade applications that if you want to pay a few hundred dollars,

247
00:11:23,880 --> 00:11:28,440
you can get to look at what sound waves are.

248
00:11:28,440 --> 00:11:32,700
But one of the problems I ran into, and everybody's as naive as I am, was like, oh, you want to

249
00:11:32,700 --> 00:11:36,180
be able to just know the note that's being played in a song at any point in time.

250
00:11:36,180 --> 00:11:37,780
It's not that easy.

251
00:11:37,780 --> 00:11:39,020
It's really, really hard.

252
00:11:39,020 --> 00:11:45,180
And it's really hard because computers don't see timbre, pitch velocity, quantization of

253
00:11:45,180 --> 00:11:46,180
sound.

254
00:11:46,180 --> 00:11:50,500
They get this mash of notes and audio frequencies.

255
00:11:50,500 --> 00:11:52,620
And you can create spectrograms.

256
00:11:52,620 --> 00:11:58,300
You can create visualizations, heat maps where the noises are, chromographs.

257
00:11:58,300 --> 00:12:03,860
But it's really hard to actually get a computer to understand an A major chord is different

258
00:12:03,900 --> 00:12:07,100
than somebody who's singing in a major chord or three people singing it.

259
00:12:07,100 --> 00:12:13,820
And then if you have that alongside with a section of guitars or bass or other instruments,

260
00:12:13,820 --> 00:12:16,220
suddenly you have a conglomeration of sound.

261
00:12:16,220 --> 00:12:21,240
Monophonic single voice music is really easy in comparison to a symphony.

262
00:12:21,240 --> 00:12:33,820
And then you get more complex situations where you have people adding special effects, reverb,

263
00:12:34,820 --> 00:12:35,820
auto-tuning.

264
00:12:35,820 --> 00:12:39,740
All these things are, I would say, catastrophic in the realm of DSP and where you want to,

265
00:12:39,740 --> 00:12:44,620
again, extract a signal from the sound you're trying to create.

266
00:12:44,620 --> 00:12:45,620
Okay.

267
00:12:45,620 --> 00:12:49,260
So that is it for my slides, the boring parts.

268
00:12:49,260 --> 00:12:50,260
All right.

269
00:12:50,260 --> 00:12:54,980
I'm going to now mirror my screen and show you my Jupyter Notebook.

270
00:12:54,980 --> 00:12:57,900
And I hope all of you can appreciate it.

271
00:12:57,900 --> 00:12:59,860
All right.

272
00:12:59,860 --> 00:13:01,620
Is that it?

273
00:13:01,620 --> 00:13:02,620
All right.

274
00:13:02,620 --> 00:13:06,820
So we're going to go right into examples.

275
00:13:06,820 --> 00:13:13,060
And I'm going to just walk through what the sounds, again, how I got to the place where

276
00:13:13,060 --> 00:13:14,060
I am now.

277
00:13:14,060 --> 00:13:18,860
These are all the rabbit holes I kind of went down that allowed me to learn a lot of what

278
00:13:18,860 --> 00:13:23,060
DSP is and also what it isn't and what I wanted to do and not do.

279
00:13:23,060 --> 00:13:25,540
So some basic stuff.

280
00:13:25,540 --> 00:13:29,340
Python's got baked in a WAV library, which is really great.

281
00:13:29,340 --> 00:13:31,460
And you should explore that.

282
00:13:31,460 --> 00:13:36,940
I was able to start taking some audio files and start instantly playing with it.

283
00:13:36,940 --> 00:13:41,340
And this allowed me to start seeing, you know, what's the frequency?

284
00:13:41,340 --> 00:13:45,340
What is the how many channels are in there?

285
00:13:45,340 --> 00:13:48,940
This is a lot of basic idea, basic information about a music file.

286
00:13:48,940 --> 00:13:54,460
It's not expected that, you know, from WAV library, I'm not going to get, you know, this

287
00:13:54,460 --> 00:13:58,300
is a lot of what the computer would see and how you're translating that out, skipping

288
00:13:58,300 --> 00:14:00,980
down.

289
00:14:00,980 --> 00:14:04,020
This actually didn't work for my charting, so I apologize.

290
00:14:04,020 --> 00:14:07,300
But this is just basic concepts of just Python has a WAV file.

291
00:14:07,300 --> 00:14:09,340
You can convert MP3s to WAV.

292
00:14:09,340 --> 00:14:12,100
It works really well.

293
00:14:12,100 --> 00:14:13,100
Visualizations.

294
00:14:13,100 --> 00:14:14,100
All right.

295
00:14:14,100 --> 00:14:17,220
So now math.

296
00:14:17,220 --> 00:14:18,220
I'm sucking at math.

297
00:14:18,220 --> 00:14:19,220
I'm very sorry.

298
00:14:19,220 --> 00:14:20,220
Very important.

299
00:14:20,220 --> 00:14:22,320
NumPy, matplotlib.

300
00:14:22,320 --> 00:14:25,140
Thank you to anybody who's contributing to those.

301
00:14:25,140 --> 00:14:28,340
All right.

302
00:14:28,340 --> 00:14:29,340
So here we go.

303
00:14:29,340 --> 00:14:31,740
I wanted to see some of what the sine waves look like.

304
00:14:31,740 --> 00:14:36,140
And this is not an example of if we dug down and looked at every single note throughout

305
00:14:36,140 --> 00:14:38,180
the song, you'd see a lovely sine wave pattern going on.

306
00:14:38,180 --> 00:14:43,180
This is actually a representation of every note all at once for all the entire song plotted

307
00:14:43,180 --> 00:14:44,180
out onto a chart.

308
00:14:44,180 --> 00:14:48,180
And these are all the different frequencies you're going to see inside of a song.

309
00:14:48,180 --> 00:14:53,220
You can filter for just what you're trying to identify as a main signal.

310
00:14:53,220 --> 00:14:57,980
And actually, I will part of what I was doing here was not even at a song point.

311
00:14:58,020 --> 00:15:02,220
I believe at this point I'm using examples from David Beasley, who is showing how the

312
00:15:02,220 --> 00:15:07,860
Kansas City Auto Tone can be used to record data on a computer that's older than I think

313
00:15:07,860 --> 00:15:09,260
everybody in this room.

314
00:15:09,260 --> 00:15:17,180
Not everybody, but how magnetic tapes were recording audio data and using that, how you're

315
00:15:17,180 --> 00:15:18,380
getting data in and out of it.

316
00:15:18,380 --> 00:15:23,220
And really, the signal was if there was a flat signal, you had a certain, there's no

317
00:15:23,220 --> 00:15:24,220
data being transmitted.

318
00:15:24,260 --> 00:15:25,260
If you have a modem, you have a spike.

319
00:15:25,260 --> 00:15:30,660
And if you think of modems 20 years ago, the annoying sound, they were just using signals

320
00:15:30,660 --> 00:15:34,500
and sending data, transmitting data, audio.

321
00:15:34,500 --> 00:15:38,820
So more examples.

322
00:15:38,820 --> 00:15:41,740
All right, some basic DSP examples.

323
00:15:48,700 --> 00:15:49,700
Which chart is this?

324
00:15:49,700 --> 00:15:51,980
This is just plotting frequencies for a song.

325
00:15:52,220 --> 00:15:58,420
Now I'm actually, at this point I believe, using the song I'm actually working on for

326
00:15:58,420 --> 00:16:04,940
the entire rest of this is Bruce Springsteen did a great cover of Old Dan Tucker and the

327
00:16:04,940 --> 00:16:05,940
Seeger Sessions.

328
00:16:05,940 --> 00:16:09,900
If you haven't heard it, I insist you all listen for just one quick second.

329
00:16:09,900 --> 00:16:12,140
I don't know if there's audio.

330
00:16:12,140 --> 00:16:13,140
Does it play?

331
00:16:13,140 --> 00:16:14,540
It's not playing any audio?

332
00:16:14,540 --> 00:16:15,540
All right.

333
00:16:17,740 --> 00:16:19,340
No, I don't have any audio.

334
00:16:19,340 --> 00:16:21,900
No audio coming out of my laptop.

335
00:16:21,900 --> 00:16:22,900
That's okay though.

336
00:16:22,900 --> 00:16:25,380
I'll save you the rest.

337
00:16:25,380 --> 00:16:28,460
If I didn't mention it earlier, I'm going to ruin music as far as what people are used

338
00:16:28,460 --> 00:16:29,460
to listening to.

339
00:16:29,460 --> 00:16:32,540
So it's better that you don't hear how good that song is.

340
00:16:32,540 --> 00:16:35,260
So when you hear how bad I play it, you'll think it sounds great.

341
00:16:39,260 --> 00:16:43,020
There are things that we're trying to capture.

342
00:16:43,020 --> 00:16:46,980
The different sounds that are coming out, and again this is some of the Fourier transforms

343
00:16:46,980 --> 00:16:48,980
that are going through.

344
00:16:49,060 --> 00:16:51,940
This is how sound degrades over time.

345
00:16:51,940 --> 00:16:56,340
So as you have sound signals that are going over a certain period of time, you'll start

346
00:16:56,340 --> 00:17:01,980
sending out signals and then one of the problems that you have with DSP and audio signals is

347
00:17:01,980 --> 00:17:07,980
I might play an A440, but it also resonates across a lot of other signals, different notes,

348
00:17:07,980 --> 00:17:10,660
and you're going to pick up the resonance of the different notes.

349
00:17:10,660 --> 00:17:11,940
So I might play A440.

350
00:17:11,940 --> 00:17:16,180
It's also vibrating the A220 and any other sympathetic notes that are going to go in

351
00:17:16,180 --> 00:17:17,180
there.

352
00:17:17,180 --> 00:17:19,740
And the leaders again have a hard time being able to pull that apart.

353
00:17:19,740 --> 00:17:23,100
And so you can see even though I might be playing a note right in the middle of this

354
00:17:23,100 --> 00:17:30,740
chart, it's actually showing gradations of change and signal loss.

355
00:17:30,740 --> 00:17:37,420
So the next one is actually a spectrogram, visualization of sound that allows you to

356
00:17:37,420 --> 00:17:41,220
see we have two different channels going on here.

357
00:17:41,260 --> 00:17:48,780
What I try to separate here are what should be vocal lines and percussive lines.

358
00:17:48,780 --> 00:17:52,580
And it looks really dark, so I apologize.

359
00:17:52,580 --> 00:17:55,500
When I'm done with this talk, all of these will be online and you can play with these

360
00:17:55,500 --> 00:18:01,140
notebooks as much as you want and break everything and yell at the authors, not me.

361
00:18:01,140 --> 00:18:06,420
But this is just ways again of seeing what this data looks like.

362
00:18:12,220 --> 00:18:15,220
I skipped example four because it was broken.

363
00:18:15,220 --> 00:18:17,980
Okay.

364
00:18:17,980 --> 00:18:24,060
Getting to the actual meat of playing this on the circuit board, not only is it important

365
00:18:24,060 --> 00:18:31,380
to know how to visualize or extract the specific sounds from the player piano, we have to know

366
00:18:31,380 --> 00:18:34,300
important things about the song like what's your beats per minute?

367
00:18:34,300 --> 00:18:35,300
What's your tempo?

368
00:18:35,300 --> 00:18:40,980
A lot of the quantization of the sounds isolation is knowing inside of a specific time frame

369
00:18:41,060 --> 00:18:45,420
what are the notes that are happening at that time frame and how can you then take an example

370
00:18:45,420 --> 00:18:48,020
and then spread that across the rest of the song.

371
00:18:48,020 --> 00:18:52,500
So several of the libraries I've been using now have to help me figure out what's the

372
00:18:52,500 --> 00:18:56,620
beats per minute in a song, what's the ability for me to know how fast or slow am I playing

373
00:18:56,620 --> 00:18:58,060
something.

374
00:18:58,060 --> 00:19:02,260
And that allows me to figure out am I listening to a banjo playing or am I listening to a

375
00:19:02,260 --> 00:19:03,900
singer singing.

376
00:19:03,900 --> 00:19:07,660
They might sound the same to a computer because they're in the same vocal range or same auditory

377
00:19:07,700 --> 00:19:11,140
range but they have different timbres.

378
00:19:11,140 --> 00:19:14,180
So again, more code.

379
00:19:14,180 --> 00:19:17,100
This is a library called Aubio.

380
00:19:17,100 --> 00:19:23,180
This was allowing me to actually find out, all right, within this song we have a specific

381
00:19:23,180 --> 00:19:27,900
frequency that we're running approximately 98 beats per minute.

382
00:19:27,900 --> 00:19:33,940
This is more fun when I get to start comparing different libraries and knowing from Aubio

383
00:19:34,140 --> 00:19:39,420
or I have a different library called LeBrosa or a different library called Mido.

384
00:19:39,420 --> 00:19:40,420
Are they close?

385
00:19:40,420 --> 00:19:41,420
Are they accurate?

386
00:19:41,420 --> 00:19:42,820
They're using different algorithms to come to a conclusion.

387
00:19:42,820 --> 00:19:46,660
How close do I get to knowing that information?

388
00:19:46,660 --> 00:19:53,140
All right.

389
00:19:53,140 --> 00:19:57,020
So now we're into actual melody extraction.

390
00:19:57,020 --> 00:20:02,260
And this is where I'm not sure if the audio might be good if I could pull it up.

391
00:20:02,340 --> 00:20:06,420
I might just have to pull the cable out so I get audio off my laptop.

392
00:20:06,420 --> 00:20:07,580
I don't know if that will work.

393
00:20:11,580 --> 00:20:15,580
Oh, it's coming out my display mini port.

394
00:20:28,580 --> 00:20:29,580
That one?

395
00:20:33,260 --> 00:20:35,260
Oh, they're going to plug me into something different.

396
00:20:38,260 --> 00:20:39,260
Yeah, no, that just...

397
00:20:39,260 --> 00:20:40,260
There you go.

398
00:20:40,260 --> 00:20:41,260
That's exactly what you want.

399
00:20:41,260 --> 00:20:42,260
Yeah, well, that's coming out of here.

400
00:20:42,260 --> 00:20:43,260
Perfect.

401
00:20:43,260 --> 00:20:44,260
Okay.

402
00:20:44,260 --> 00:20:45,260
Huzzah.

403
00:20:45,260 --> 00:20:46,260
All right.

404
00:20:46,260 --> 00:20:49,420
So this is...I'll give it a second.

405
00:20:49,420 --> 00:20:52,700
So I'm going to now run music and everybody's going to hear how great Bruce Springsteen

406
00:20:52,700 --> 00:20:57,540
is and how ungreat digital signal processing is when you're trying to make Bruce Springsteen

407
00:20:57,540 --> 00:21:01,260
play on a piano when he doesn't want you to.

408
00:21:01,260 --> 00:21:02,260
All right.

409
00:21:19,260 --> 00:21:20,260
Okay.

410
00:21:20,260 --> 00:21:21,260
It's a great song.

411
00:21:21,260 --> 00:21:24,260
I played a lot too often at times.

412
00:21:25,260 --> 00:21:33,260
So at this point, running what this outputs, and I'm going to be bad at live coding some

413
00:21:33,260 --> 00:21:34,260
of this.

414
00:21:34,260 --> 00:21:35,260
I apologize.

415
00:21:35,260 --> 00:21:39,260
But if I'm going to do this real quickly, I apologize for live coding.

416
00:21:39,260 --> 00:21:41,260
It's not what I was hoping to do.

417
00:21:41,260 --> 00:21:44,260
But we're going to call this AB for a second.

418
00:21:44,260 --> 00:21:45,260
Hold on.

419
00:21:45,260 --> 00:21:48,260
I'm just going to call it AB.

420
00:21:48,260 --> 00:21:49,260
I'm sorry.

421
00:21:49,260 --> 00:21:51,260
We want the input file.

422
00:21:54,260 --> 00:21:56,260
Go to example output.

423
00:21:59,260 --> 00:22:01,260
I'm going to call it example AB.midi.

424
00:22:01,260 --> 00:22:07,260
This is just examples of doing some melody extraction.

425
00:22:07,260 --> 00:22:08,260
It worked.

426
00:22:08,260 --> 00:22:09,260
Huzzah.

427
00:22:09,260 --> 00:22:11,260
All right.

428
00:22:11,260 --> 00:22:12,260
Okay.

429
00:22:12,260 --> 00:22:16,260
So now let's look at my example of outputs.

430
00:22:16,260 --> 00:22:18,260
There we go.

431
00:22:18,260 --> 00:22:19,260
This is what...

432
00:22:19,260 --> 00:22:31,260
If you gave 88 children a lot of alcohol and one key to play, this is where it starts sounding...

433
00:22:31,260 --> 00:22:34,260
But you can hear the melody, right?

434
00:22:34,260 --> 00:22:36,260
It's going on in there.

435
00:22:36,260 --> 00:22:43,260
But we're extracting the melody line against a mandolin or a banjo that's playing this.

436
00:22:43,260 --> 00:22:47,260
And it's got to be able to pull the sounds apart.

437
00:22:47,260 --> 00:22:51,260
And then we're also only going for the foreground notes.

438
00:22:51,260 --> 00:22:52,260
All right.

439
00:22:52,260 --> 00:22:53,260
It's distracting.

440
00:22:53,260 --> 00:22:58,260
We're going for the foreground notes and not the background notes, which is actually a really complex situation.

441
00:22:58,260 --> 00:23:00,260
So I'm going to jump...

442
00:23:00,260 --> 00:23:01,260
No.

443
00:23:01,260 --> 00:23:02,260
Save.

444
00:23:02,260 --> 00:23:03,260
That's fine.

445
00:23:03,260 --> 00:23:04,260
All right.

446
00:23:04,260 --> 00:23:05,260
Now, whatever I do...

447
00:23:05,260 --> 00:23:06,260
No.

448
00:23:06,260 --> 00:23:07,260
Wrong save.

449
00:23:07,260 --> 00:23:14,260
Whatever I do put into my notebooks and put up to git, I don't know if those will be actually...

450
00:23:14,260 --> 00:23:19,260
You'll have to probably use your own sound files because I don't think I'm allowed to share for copyright reasons.

451
00:23:19,260 --> 00:23:21,260
Okay.

452
00:23:21,260 --> 00:23:24,260
So did this go into the right one?

453
00:23:24,260 --> 00:23:25,260
Did I use the wrong?

454
00:23:25,260 --> 00:23:27,260
I should be going to example seven.

455
00:23:27,260 --> 00:23:29,260
It's a good thing I have the other ones right here.

456
00:23:29,260 --> 00:23:30,260
All right.

457
00:23:30,260 --> 00:23:31,260
All right.

458
00:23:31,260 --> 00:23:33,260
Mel power.

459
00:23:33,260 --> 00:23:40,260
This is a wonderful way of seeing what we call in here...

460
00:23:40,260 --> 00:23:41,260
That was a Mel chart.

461
00:23:41,260 --> 00:23:56,260
So again, the coloring is really hard to see, but this is now starting to get into a lot of what sometimes in commercial grade applications, but also what you might see in Audacity is ways that you can represent the sound in different levels.

462
00:23:56,260 --> 00:23:57,260
And you kind of get a heat map.

463
00:23:57,260 --> 00:24:05,260
It's a little hard to see, but you can see some orange dots going in there near the middle to around the 512 range all across the bar.

464
00:24:05,260 --> 00:24:13,260
That's more of a representation of the singer's voice being spotted throughout at different levels throughout time than it is the other instruments you hear.

465
00:24:13,260 --> 00:24:20,260
And when I played the original song, you heard a lot of bass, you had guitar, and those are different sounds that are going to be percussive and start lining up.

466
00:24:20,260 --> 00:24:21,260
All right.

467
00:24:21,260 --> 00:24:22,260
I'm halfway through my examples.

468
00:24:22,260 --> 00:24:24,260
I've got 15 minutes to go.

469
00:24:24,260 --> 00:24:28,260
I'm going to do my best to not put you to sleep.

470
00:24:28,260 --> 00:24:29,260
All right.

471
00:24:29,260 --> 00:24:38,260
Now, extracting harmonic or the percussive, the harmonic parts from the percussive parts is another part of the DSP that's really important to do.

472
00:24:38,260 --> 00:24:43,260
Otherwise, you start getting weird noises that aren't even close.

473
00:24:43,260 --> 00:24:54,260
Visually speaking, you can see at the top chart here, you've actually got the harmonic parts going on, which are the singing, the guitar, any kind of musical intonations while the percussive.

474
00:24:54,260 --> 00:24:57,260
And you can see there are vertical lines of notes.

475
00:24:57,260 --> 00:25:00,260
Those are the percussive beats, the drumming, the bass line.

476
00:25:00,260 --> 00:25:02,260
That gives a sense of moving forward.

477
00:25:02,260 --> 00:25:11,260
So this is one of the first times where now we're talking about separating some of the sound and separating in a way that's visual at this point in time.

478
00:25:11,260 --> 00:25:15,260
All right.

479
00:25:15,260 --> 00:25:16,260
Okay.

480
00:25:16,260 --> 00:25:28,260
LeBrosa has got a chroma visualization, which now is a different way of seeing what these sounds start looking like and giving us at different pitch frequencies.

481
00:25:28,260 --> 00:25:29,260
These are actual notes.

482
00:25:29,260 --> 00:25:35,260
But again, we have no idea which instrument, which person, which voice is creating those notes.

483
00:25:35,260 --> 00:25:36,260
That's more complex.

484
00:25:36,260 --> 00:25:43,260
But we're starting to actually now see in the range of time all the notes are being played at any point in time in the range from C to B.

485
00:25:43,260 --> 00:25:46,260
And we just took a very small slice of note range.

486
00:25:46,260 --> 00:26:00,260
And going over the course of two minutes, you can now see how these notes lay out over time period.

487
00:26:00,260 --> 00:26:01,260
Okay.

488
00:26:01,260 --> 00:26:03,260
The male frequency, sepstral coefficients.

489
00:26:03,260 --> 00:26:08,260
I was going to apologize to our stenographer because I didn't put this in my slides earlier.

490
00:26:08,260 --> 00:26:09,260
So I'm sorry.

491
00:26:09,260 --> 00:26:11,260
Thank you, though.

492
00:26:11,260 --> 00:26:18,260
So this is a different way of breaking across the sound.

493
00:26:18,260 --> 00:26:25,260
Again, visualizing different ways of hearing the harmonics and the vocal singers.

494
00:26:25,260 --> 00:26:29,260
I'm going to not talk long about this because this is more math than I could actually understand.

495
00:26:29,260 --> 00:26:30,260
And it hurt my head.

496
00:26:30,260 --> 00:26:37,260
But this is something that audio engineers and people with PhDs are really loving and talking a lot about.

497
00:26:37,260 --> 00:26:38,260
And there's a competition every year.

498
00:26:38,260 --> 00:26:44,260
The music information retrieval society has these competitions to see who can do better at pulling these songs and stuff out.

499
00:26:44,260 --> 00:26:45,260
All right.

500
00:26:45,260 --> 00:26:51,260
So back to the LaBrosa and beats per minute, feature aggregation.

501
00:26:51,260 --> 00:26:56,260
So this is where now we're starting to get to the point of reducing the clutter, the extra sound.

502
00:26:56,260 --> 00:27:03,260
So nothing's as cool as CSI when they say, hey, can you zoom in on that fuzzy part in the back and then extrapolate and let's get it super clear.

503
00:27:04,260 --> 00:27:13,260
It's kind of like what the DSP is trying to do is how can we get one person's voice out of the song and clean that up a lot so we don't hear all the extra sounds?

504
00:27:17,260 --> 00:27:22,260
This is a spectrogram showing which part is this showing?

505
00:27:22,260 --> 00:27:24,260
Is this the foreground or background?

506
00:27:24,260 --> 00:27:25,260
I'm not sure. I apologize.

507
00:27:25,260 --> 00:27:26,260
This is just the beat tracker.

508
00:27:26,260 --> 00:27:31,260
So now we're able to just find various symmetrical beat patterns going on throughout the song.

509
00:27:31,260 --> 00:27:32,260
That's important.

510
00:27:32,260 --> 00:27:42,260
Now we can do an analysis through feature aggregation, then start pulling out the the the male coefficient against the beats per sound.

511
00:27:42,260 --> 00:27:53,260
This gets more important as we go along and we start looking at the chromogram across time and you can start seeing where we might have a vocal pattern that is going to follow what the song is.

512
00:27:53,260 --> 00:27:58,260
So we can then pull out more important stuff like the person who's singing.

513
00:27:58,260 --> 00:28:01,260
One of the coolest libraries I came across is this is called Nuzle.

514
00:28:01,260 --> 00:28:04,260
This is the Northwestern University Sound something labs.

515
00:28:04,260 --> 00:28:06,260
This something is not right.

516
00:28:09,260 --> 00:28:22,260
But this is this is examples where I started going through and this is these are a lot of people that were going through and coming up with really great algorithms and using like what I showed you with the LeBrosa audio.

517
00:28:22,260 --> 00:28:27,260
There's a couple of different other audio signal duet, Repet.

518
00:28:27,260 --> 00:28:31,260
It's actually pronounced Repeat F2D2 HPSS.

519
00:28:31,260 --> 00:28:33,260
These are different algorithms they have.

520
00:28:33,260 --> 00:28:39,260
And again, I was I was going through trying to understand after I spent way too much time learning about Fourier transform.

521
00:28:39,260 --> 00:28:42,260
I had to write code and I was looking at this code and going, OK, this is really cool.

522
00:28:42,260 --> 00:28:44,260
I can I can I can make this work.

523
00:28:44,260 --> 00:28:45,260
People are separating sounds.

524
00:28:45,260 --> 00:28:47,260
I can use their work to do this.

525
00:28:47,260 --> 00:28:53,260
And so I started doing that and I started using things like repeat, which is this repeat pattern extraction technique.

526
00:28:53,260 --> 00:28:59,260
And it comes out really interesting what what sounds you get at the very end.

527
00:28:59,260 --> 00:29:03,260
So I'm going to start with 14A as my output.

528
00:29:03,260 --> 00:29:12,260
And I'm playing this right now just on my computer so you can hear when we're separating out the sound.

529
00:29:12,260 --> 00:29:15,260
So now we've actually taken the foreground off.

530
00:29:15,260 --> 00:29:19,260
We're trying to just hear the background noise of what's being played.

531
00:29:19,260 --> 00:29:21,260
So we're not trying to hear too much of Bruce singing.

532
00:29:21,260 --> 00:29:25,260
We now want to just hear the music.

533
00:29:25,260 --> 00:29:26,260
So you can kind of hear in the background.

534
00:29:26,260 --> 00:29:35,260
It's there, but it's very muted.

535
00:29:35,260 --> 00:29:36,260
But this is the song, right?

536
00:29:36,260 --> 00:29:39,260
We've now eliminated as much as we can.

537
00:29:39,260 --> 00:29:40,260
The singer.

538
00:29:40,260 --> 00:29:43,260
That's important.

539
00:29:43,260 --> 00:29:47,260
In a good way, in a good way, a good way.

540
00:29:47,260 --> 00:29:48,260
All right.

541
00:29:48,260 --> 00:30:00,260
But the foreground, if we do the similar if we do a similar sound.

542
00:30:00,260 --> 00:30:09,260
You have to really love this song.

543
00:30:09,260 --> 00:30:11,260
Just taking the audio signal.

544
00:30:11,260 --> 00:30:19,260
The singer.

545
00:30:19,260 --> 00:30:21,260
And half the back of the song is gone.

546
00:30:21,260 --> 00:30:22,260
So all right.

547
00:30:22,260 --> 00:30:23,260
Moving on.

548
00:30:23,260 --> 00:30:27,260
Now I'm going to actually start showing you what this sounds like on a piano because that was the entire intention of all this.

549
00:30:27,260 --> 00:30:28,260
You guys have sat through all this.

550
00:30:28,260 --> 00:30:29,260
I'm so sorry.

551
00:30:29,260 --> 00:30:30,260
But OK.

552
00:30:30,260 --> 00:30:31,260
So I'm going to play to do this.

553
00:30:31,260 --> 00:30:34,260
And this is where it gets a little fickle.

554
00:30:34,260 --> 00:30:40,260
So I'm going to now connect hopefully to my Raspberry Pi.

555
00:30:40,260 --> 00:30:45,260
Hopefully I am now in my Raspberry Pi.

556
00:30:45,260 --> 00:30:47,260
We're going to play a couple of different examples.

557
00:30:47,260 --> 00:30:49,260
I just got to make sure which ones are already over there.

558
00:30:49,260 --> 00:30:50,260
Twinkle, twinkle does not.

559
00:30:50,260 --> 00:30:52,260
I'm going to actually try twinkle, twinkle little star.

560
00:30:52,260 --> 00:30:55,260
This may or may not work.

561
00:30:55,260 --> 00:31:01,260
So.

562
00:31:01,260 --> 00:31:04,260
OK.

563
00:31:04,260 --> 00:31:05,260
I will turn the vacuum on.

564
00:31:05,260 --> 00:31:07,260
Just wait.

565
00:31:07,260 --> 00:31:08,260
Little star.

566
00:31:08,260 --> 00:31:10,260
And then I need to actually set the sleep.

567
00:31:10,260 --> 00:31:14,260
So one of the things that we learned beats per minute is really important, especially some of the libraries are using.

568
00:31:14,260 --> 00:31:22,260
If you don't set this like what you think your time between every event is going to happen in a midi file, which is what now I'm creating midi files the entire time.

569
00:31:22,260 --> 00:31:25,260
So I'm skipping a whole lot just to get to the fun part.

570
00:31:25,260 --> 00:31:30,260
But basically the entire part, entire talk was about getting sound separated.

571
00:31:30,260 --> 00:31:31,260
I'm now creating midi files.

572
00:31:31,260 --> 00:31:36,260
Once I create a midi file, I'm using that, sending it to the Raspberry Pi, converting that to spy.

573
00:31:36,260 --> 00:31:42,260
And then spy is then running this on solenoids, which are about you're about to hear somewhat.

574
00:31:42,260 --> 00:31:48,260
The thing is you have to make sure when you're creating a midi file, you know how many beats per minute you're using as far as what a quarter note is equal to.

575
00:31:48,260 --> 00:31:51,260
The library I'm using is a Python midi converter.

576
00:31:51,260 --> 00:31:58,260
It works in microseconds and that doesn't help you because math.

577
00:31:58,260 --> 00:32:02,260
So let's go with I'm going to say 10,000.

578
00:32:02,260 --> 00:32:05,260
This might go really fast.

579
00:32:05,260 --> 00:32:13,260
I didn't work at all.

580
00:32:13,260 --> 00:32:14,260
No, that's not going to work.

581
00:32:14,260 --> 00:32:15,260
All right.

582
00:32:15,260 --> 00:32:17,260
I'm going to take a different song that I know worked earlier.

583
00:32:17,260 --> 00:32:19,260
We tried old Dan Tucker.

584
00:32:19,260 --> 00:32:20,260
You guys have sat this long.

585
00:32:20,260 --> 00:32:25,260
I should let you at least hear this one.

586
00:32:25,260 --> 00:32:26,260
All right.

587
00:32:26,260 --> 00:32:30,260
The fun part about this library is that it actually takes a while to build the entire file.

588
00:32:30,260 --> 00:32:35,260
There's nothing streaming about it, but it does build the entire file to then put out onto here.

589
00:32:35,260 --> 00:32:40,260
I'm going to hold this against here.

590
00:32:40,260 --> 00:32:44,260
Really jankity.

591
00:32:44,260 --> 00:32:46,260
All right.

592
00:32:46,260 --> 00:32:48,260
Oh, I forgot a sleep timer.

593
00:32:48,260 --> 00:32:49,260
Sorry.

594
00:32:49,260 --> 00:32:51,260
It actually the default is 0.3 seconds.

595
00:32:51,260 --> 00:32:57,260
And, you know, the sleep time by 0.3 versus sleep by like, you know, a thousand.

596
00:32:57,260 --> 00:32:59,260
Big difference.

597
00:32:59,260 --> 00:33:07,260
Big difference.

598
00:33:07,260 --> 00:33:11,260
And the reason I have to hold this here is we learned on Tuesday that the tracker bar,

599
00:33:11,260 --> 00:33:16,260
which is what this manifold sits up against, has a slight curvature of about one millimeter somewhere in the middle,

600
00:33:16,260 --> 00:33:21,260
which means all vacuum is gone when we don't have this push there.

601
00:33:21,260 --> 00:33:31,260
So I'm going to hold this.

602
00:33:31,260 --> 00:33:42,260
Sounds like the song, right?

603
00:33:42,260 --> 00:33:44,260
Nah.

604
00:33:44,260 --> 00:33:45,260
All right.

605
00:33:45,260 --> 00:33:47,260
I'm going to kill this one real quick.

606
00:33:47,260 --> 00:33:51,260
One other song I wanted to try and get, but I don't know if this will work or not.

607
00:33:51,260 --> 00:34:05,260
Some of the examples I had on here just to make sure I'm getting it in.

608
00:34:05,260 --> 00:34:07,260
No, that fell apart quickly.

609
00:34:07,260 --> 00:34:08,260
All right.

610
00:34:08,260 --> 00:34:15,260
So maybe that won't work as well as I'd hoped.

611
00:34:15,260 --> 00:34:16,260
No.

612
00:34:16,260 --> 00:34:20,260
Unfortunately, I'm not going to get the correct file to work right now.

613
00:34:20,260 --> 00:34:21,260
I only have one across.

614
00:34:21,260 --> 00:34:24,260
Okay.

615
00:34:24,260 --> 00:34:28,260
But that is essentially, you know, you're looking at a prototype of what we've been working on.

616
00:34:28,260 --> 00:34:38,260
I got this far with the help of some of the great friends like Peter Ziba, who is an amazing circuit board guy who helped me actually do a lot of the hardware part.

617
00:34:38,260 --> 00:34:40,260
Carl Karsten helped me put together all this.

618
00:34:40,260 --> 00:34:41,260
I should turn that off too.

619
00:34:41,260 --> 00:34:46,260
You guys don't need to hear the vacuum, but it makes me feel better, warmer, and fuzzier.

620
00:34:46,260 --> 00:35:00,260
But basically, a lot of this has just been something that is a passion of mine that as much as my wife has been very angry that I spent a lot of time doing this, this allows me now to move forward as to getting the notes separated better and get a better manifold gasket.

621
00:35:00,260 --> 00:35:06,260
If anybody here knows how to use nitrogen and freeze rubber so we can laser cut it, that'd be helpful.

622
00:35:06,260 --> 00:35:14,260
But we're also looking at other ways to get the sound down, you know, creating better vacuums and putting sound together.

623
00:35:14,260 --> 00:35:22,260
What I'd like to do in the future is be able to have a moving piano calliope where I could just have this going down the street, play music on its own.

624
00:35:22,260 --> 00:35:28,260
And, you know, it's that scene in Star Wars where Han Solo is in carbonite just going across Boba Fett's got it.

625
00:35:28,260 --> 00:35:29,260
That's kind of what driving this piano is like.

626
00:35:29,260 --> 00:35:33,260
But if it could play music, mouths would be open.

627
00:35:33,260 --> 00:35:40,260
So what I'd really love to do and a lot of the libraries that I've been working on and using are old defunct libraries.

628
00:35:40,260 --> 00:35:48,260
So almost all of them, no, I'd say about half of what I came up with and was using, Librosa, Aubio, Mido, W-A-O-N,

629
00:35:48,260 --> 00:35:52,260
these are things that have been out there for 10 plus years that nobody's touched.

630
00:35:52,260 --> 00:35:56,260
Maybe it was like a PhD student who came up with an idea, put this out there and worked on it.

631
00:35:56,260 --> 00:36:00,260
And then it didn't go anywhere after they did something with it.

632
00:36:00,260 --> 00:36:05,260
And I would love to get some help and support in finding ways to make this more exciting,

633
00:36:05,260 --> 00:36:11,260
especially because I'm trying to get a player piano to play again on its own.

634
00:36:11,260 --> 00:36:16,260
So with that, I don't know if I do questions and answers now or oh, yeah, I'm going to do questions and answers.

635
00:36:16,260 --> 00:36:26,260
So thank you all for.

636
00:36:26,260 --> 00:36:30,260
Almost knocked that over. Thanks, JP Bader. That was a good talk.

637
00:36:30,260 --> 00:36:31,260
So now we open the floor to questions.

638
00:36:31,260 --> 00:36:33,260
So if you do have questions, please are two microphones.

639
00:36:33,260 --> 00:36:37,260
Walk up, give the question, try to keep it short because we only have so much time.

640
00:36:37,260 --> 00:36:41,260
If you think it's a long question, maybe you want to talk to them out in the hall about it.

641
00:36:41,260 --> 00:36:44,260
And if we run short on time, I'll kind of interrupt you guys.

642
00:36:44,260 --> 00:36:46,260
So OK, we have one question.

643
00:36:46,260 --> 00:36:49,260
What's the mechanism of actuating the strings?

644
00:36:49,260 --> 00:36:52,260
So we've got solenoids inside of here.

645
00:36:52,260 --> 00:36:56,260
We're using a spy bus that's sending the signals directly to the solenoids.

646
00:36:56,260 --> 00:36:59,260
So we're I don't know if that answers completely your question.

647
00:36:59,260 --> 00:37:02,260
What's the vacuum doing? Oh, the vacuum. OK.

648
00:37:02,260 --> 00:37:05,260
So old school player pianos run on a vacuum system.

649
00:37:05,260 --> 00:37:11,260
There's a stack inside of here that has pouches for every single note across this tracker bar are 88 holes.

650
00:37:11,260 --> 00:37:15,260
These 88 holes each represent literally a binary bit on off the moment.

651
00:37:15,260 --> 00:37:18,260
An old piece of paper would be going across that tracker bar.

652
00:37:18,260 --> 00:37:21,260
A hole in there on no hole off.

653
00:37:21,260 --> 00:37:27,260
So all we're doing is sealing or unsealing the holes to the manifold.

654
00:37:27,260 --> 00:37:30,260
OK, another question on the left.

655
00:37:30,260 --> 00:37:34,260
You mentioned you mentioned a repository.

656
00:37:34,260 --> 00:37:37,260
I was a little bit late, so maybe I missed it.

657
00:37:37,260 --> 00:37:42,260
But can we find your work online? Yes, I'm going to put everything will be on GitHub.

658
00:37:42,260 --> 00:37:46,260
My in the middle on the bottom Lord Vader is my GitHub repo.

659
00:37:46,260 --> 00:37:54,260
I'll be putting all the all my notebooks, my slides and you can yell horrible epithets at me afterwards.

660
00:37:54,260 --> 00:37:57,260
Yeah, everything will be online. Thank you. Thank you.

661
00:37:57,260 --> 00:38:02,260
You mentioned a lot of different tools that you use to visualize the sound and things like that.

662
00:38:02,260 --> 00:38:10,260
Which which were the libraries or tools that you actually used to get the sound from the MP3 player MP3 file to get it to the Raspberry Pi?

663
00:38:10,260 --> 00:38:12,260
What are the core pieces?

664
00:38:12,260 --> 00:38:23,260
Their G streamer wave from from Python were just converting any any audio file when I was playing around with this MP3s and whatnot to wave Melodia was one of the core libraries.

665
00:38:23,260 --> 00:38:28,260
Was one of the core libraries to convert from any way file to midi.

666
00:38:28,260 --> 00:38:37,260
And then from midi itself, there's a Python library that we were just extracting to what they called an opus.

667
00:38:37,260 --> 00:38:39,260
And that was what's going to spy.

668
00:38:39,260 --> 00:38:45,260
We built our own converter for setting it to spy. Thank you.

669
00:38:45,260 --> 00:38:46,260
Thank you.

670
00:38:46,260 --> 00:38:49,260
I think we have time for one more.

671
00:38:49,260 --> 00:38:55,260
Yeah. How did you get that here? Did you just put it on the back of a truck or?

672
00:38:55,260 --> 00:39:00,260
If you wait until I'm done, I will show you how I drove it in here and I will drive it out.

673
00:39:00,260 --> 00:39:05,260
It's on a tubular steel frame that I harvested the parts out of an electric wheelchair I bought off a dead guy.

674
00:39:05,260 --> 00:39:10,260
And I basically this is read for this platform.

675
00:39:10,260 --> 00:39:14,260
It's drivable. It goes about six and a half miles per hour at full speed.

676
00:39:14,260 --> 00:39:16,260
So please be careful.

677
00:39:16,260 --> 00:39:23,260
But I threw it in the back of a trailer yesterday morning. Yesterday morning and drove it from Chicago.

678
00:39:23,260 --> 00:39:25,260
If it made ice cream, you'd have a business.

679
00:39:25,260 --> 00:39:27,260
I didn't hear you. I'm sorry.

680
00:39:27,260 --> 00:39:29,260
I said if it made ice cream, then you'd have a business.

681
00:39:29,260 --> 00:39:34,260
It's funny you should mention that.

682
00:39:34,260 --> 00:39:38,260
A lot of these ideas start off that way.

683
00:39:38,260 --> 00:39:39,260
So many ideas. All right.

684
00:39:39,260 --> 00:39:41,260
OK. So one more round of applause for our speaker.

685
00:39:41,260 --> 00:39:44,260
Thank you so much.

