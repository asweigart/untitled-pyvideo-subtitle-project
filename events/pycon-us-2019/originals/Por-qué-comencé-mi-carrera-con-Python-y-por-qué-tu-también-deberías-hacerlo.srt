1
00:00:00,000 --> 00:00:05,200
Esta ya vamos a iniciar con la segunda parte de las Python charlas.

2
00:00:05,200 --> 00:00:07,940
Tenemos el honor de tener a Brisaida Mariscal.

3
00:00:07,940 --> 00:00:11,140
Ella viene originalmente de Panamá,

4
00:00:11,140 --> 00:00:16,140
pero viene ahorita de San Francisco y nos va a presentar

5
00:00:16,140 --> 00:00:20,940
por qué comencé mi carrera con Python y tú deberías de hacerlo.

6
00:00:22,940 --> 00:00:23,940
Aplausos.

7
00:00:26,940 --> 00:00:27,940
Gracias, Alonso.

8
00:00:28,880 --> 00:00:32,880
Buenas tardes. Me llamo Brisaida Mariscal.

9
00:00:32,880 --> 00:00:36,880
Mi charla hoy se titula, ¿Por qué comencé mi carrera con Python

10
00:00:36,880 --> 00:00:38,880
y por qué también deberías de hacerlo?

11
00:00:39,880 --> 00:00:41,880
Sí puedes hacerlo.

12
00:00:41,880 --> 00:00:43,880
You can do it.

13
00:00:43,880 --> 00:00:47,880
¿Quién soy y de dónde vengo?

14
00:00:47,880 --> 00:00:51,880
Yo emigré desde Panamá cuando tenía 11 años de edad

15
00:00:51,880 --> 00:00:54,880
y crecí en Seattle.

16
00:00:55,820 --> 00:01:01,820
Y yo fui guardia de seguridad después de ganar mi bachillerato en antropología.

17
00:01:01,820 --> 00:01:06,820
Fui guardia de seguridad por dos años y no estaba contenta con mi carrera

18
00:01:06,820 --> 00:01:08,820
y quería algo más en mi vida.

19
00:01:08,820 --> 00:01:10,820
Entonces comencé a estudiar Python

20
00:01:12,820 --> 00:01:16,820
y después me enfoqué en JavaScript para enigrar un bootcamp

21
00:01:16,820 --> 00:01:18,820
que se llama Hack Reactor.

22
00:01:18,820 --> 00:01:22,820
Y el bootcamp fue tres meses después de un año de estudiar sola.

23
00:01:23,760 --> 00:01:27,760
Yo he sido programadora de software por ya casi dos años

24
00:01:27,760 --> 00:01:29,760
y trabajo en un startup que se llama Optimizely

25
00:01:29,760 --> 00:01:33,760
y ahí trabajo en el backend escribiendo en Python.

26
00:01:37,760 --> 00:01:43,760
De curiosidad, ¿cómo ser programadora es como ser guardia de seguridad?

27
00:01:43,760 --> 00:01:45,760
Bueno, hay que tener mucha paciencia

28
00:01:45,760 --> 00:01:49,760
y hay que saber escuchar a las personas a cualquier problema

29
00:01:50,700 --> 00:01:54,700
y hay que saber comunicar cualquier problema que encuentres

30
00:01:54,700 --> 00:01:56,700
y lo que veas con otras personas.

31
00:01:56,700 --> 00:02:02,700
También hay que pensar soluciones.

32
00:02:02,700 --> 00:02:08,700
Tienes que solver problemas y cuando no esperas solverlos

33
00:02:08,700 --> 00:02:12,700
todo puede pasar muy rápido y tienes que responder.

34
00:02:14,700 --> 00:02:18,700
Bueno, en mi opinión, JavaScript yo creo que es bueno si quieres trabajar en Frontend

35
00:02:19,640 --> 00:02:23,640
porque todos sabemos que JavaScript es la lengua de la web

36
00:02:23,640 --> 00:02:27,640
y Python si quieres trabajar en el backend.

37
00:02:27,640 --> 00:02:33,640
Pero si eres principiante y te están enseñando optimismo

38
00:02:33,640 --> 00:02:36,640
yo recomiendo que comiences con Python.

39
00:02:36,640 --> 00:02:38,640
¿Y por qué es eso?

40
00:02:42,640 --> 00:02:48,640
¿Y por qué es Python y JavaScript las lenguas más populares en la web de este día?

41
00:02:49,580 --> 00:02:52,580
Es porque son lenguas que son fácil de aprender,

42
00:02:52,580 --> 00:02:55,580
son lenguas de script de alto nivel

43
00:02:55,580 --> 00:02:59,580
y hay muchas comunidades en el mundo que

44
00:02:59,580 --> 00:03:03,580
saben las dos lenguas y te pueden enseñar si quieres aprender.

45
00:03:05,580 --> 00:03:08,580
¿Qué cosas deben saber los principiantes?

46
00:03:08,580 --> 00:03:12,580
El sintaxis básico de la lengua y cómo leerlo,

47
00:03:12,580 --> 00:03:16,580
los for loops, the while loops, las declaraciones condicionales

48
00:03:17,520 --> 00:03:21,520
y necesitas saber cómo funcionan las funciones y los scopes,

49
00:03:21,520 --> 00:03:25,520
cómo hacer un objeto y cómo funcionan los objetos.

50
00:03:25,520 --> 00:03:29,520
Y también necesitas saber identificar tus errores

51
00:03:29,520 --> 00:03:33,520
y cómo corregirlos para mejorar tu técnica.

52
00:03:33,520 --> 00:03:37,520
Entonces, ¿por qué digo que debes aprender Python primero?

53
00:03:37,520 --> 00:03:41,520
Bueno, en mi opinión, Python no es una lengua perfecta

54
00:03:42,460 --> 00:03:48,460
pero es fácil de leerlo y fácil de aprender.

55
00:03:48,460 --> 00:03:51,460
En realidad, Python no es perfecto

56
00:03:51,460 --> 00:03:55,460
porque es una lengua scripting interpretada

57
00:03:55,460 --> 00:04:01,460
y uno de esos problemas que uno encuentra en Python

58
00:04:01,460 --> 00:04:04,460
y también en JavaScript es hoisting.

59
00:04:04,460 --> 00:04:07,460
Hoisting es la declaración de un variable

60
00:04:08,400 --> 00:04:12,400
que se mueve al inicio del scope al que pertenecen.

61
00:04:14,400 --> 00:04:18,400
Y aquí les presento ejemplos de hoisting en Python.

62
00:04:18,400 --> 00:04:22,400
Aquí estamos adentro de una función que se llama foo

63
00:04:22,400 --> 00:04:26,400
y cuando llamas la función te da un error

64
00:04:28,400 --> 00:04:32,400
porque la X que llama ahí, que llama adentro de la función,

65
00:04:33,340 --> 00:04:35,340
está hoisted.

66
00:04:35,340 --> 00:04:38,340
Aquí en el for loop, el ejemplo de abajo,

67
00:04:38,340 --> 00:04:42,340
ahí está un for loop y ves que declaras el variable y

68
00:04:45,340 --> 00:04:49,340
y ese variable lo puedes accesar afuera del for loop.

69
00:04:51,340 --> 00:04:55,340
Y lo mismo se puede ver en JavaScript

70
00:04:55,340 --> 00:04:58,340
adentro de la función.

71
00:04:58,340 --> 00:05:01,340
Ahí ves que la función está hoistada.

72
00:05:02,280 --> 00:05:06,280
Aquí la función está hoistada en el variable X

73
00:05:06,280 --> 00:05:10,280
y en for loop puedes ver que igualmente

74
00:05:10,280 --> 00:05:14,280
como Python el variable Y se puede accesar

75
00:05:14,280 --> 00:05:18,280
afuera del scope.

76
00:05:22,280 --> 00:05:25,280
¿Y por qué debes aprender Python primero?

77
00:05:25,280 --> 00:05:28,280
Porque Python usa herencia de clases

78
00:05:29,220 --> 00:05:32,220
y no herencia de prototipos como JavaScript.

79
00:05:32,220 --> 00:05:35,220
Cuando yo comencé a aprender JavaScript,

80
00:05:35,220 --> 00:05:38,220
ya yo había aprendido un poquito de Python,

81
00:05:38,220 --> 00:05:41,220
así que yo sabía que eran las herencias y las clases

82
00:05:41,220 --> 00:05:44,220
y cómo hacer objetos y todo eso.

83
00:05:44,220 --> 00:05:46,220
Así que cuando entré a aprender JavaScript se me hizo

84
00:05:46,220 --> 00:05:48,220
el concepto más fácil.

85
00:05:48,220 --> 00:05:51,220
Porque si comienzas con JavaScript y los prototipos

86
00:05:51,220 --> 00:05:55,220
se puede hacer, puede ser muy confuso

87
00:05:56,160 --> 00:06:00,160
y no es una herencia que es una cadena de prototipos.

88
00:06:04,160 --> 00:06:07,160
Aquí usé un recurso de Architech Garro

89
00:06:07,160 --> 00:06:10,160
que explica la diferencia de herencia

90
00:06:10,160 --> 00:06:14,160
basada en clases y herencia basada en prototipos.

91
00:06:16,160 --> 00:06:19,160
La estructura de clases es en Python.

92
00:06:19,160 --> 00:06:22,160
La estructura de clases se crea utilizando la definición

93
00:06:22,160 --> 00:06:24,160
de clases.

94
00:06:25,100 --> 00:06:28,100
Y en JavaScript se usa la cadena de prototipos.

95
00:06:28,100 --> 00:06:31,100
Lo que hace esto, la cadena de prototipos,

96
00:06:31,100 --> 00:06:34,100
bueno, para JavaScript es que es dinámico.

97
00:06:34,100 --> 00:06:39,100
Uno puede cambiar las propiedades de un prototipo

98
00:06:42,100 --> 00:06:45,100
mientras el programa está ejecutando

99
00:06:47,100 --> 00:06:50,100
y uno puede hacer cambios dinámicos

100
00:06:51,100 --> 00:06:54,100
cuando el programa corre.

101
00:06:55,040 --> 00:06:58,040
Eso se puede hacer en Python.

102
00:06:58,040 --> 00:07:01,040
En Python todo está añadido y listo

103
00:07:03,040 --> 00:07:06,040
al tiempo que el programa ejecute.

104
00:07:10,040 --> 00:07:12,040
Más en las herencias.

105
00:07:14,040 --> 00:07:17,040
Aquí tengo una clase,

106
00:07:17,040 --> 00:07:20,040
el superclass que se llama mamífero.

107
00:07:20,040 --> 00:07:23,040
Y aquí defino el prototype,

108
00:07:23,980 --> 00:07:26,980
el método que se llama habla.

109
00:07:29,980 --> 00:07:32,980
Y después del superclass mamífero

110
00:07:32,980 --> 00:07:35,980
yo puedo declarar un subclass que se llama gato.

111
00:07:35,980 --> 00:07:37,980
Y cuando hago eso

112
00:07:39,980 --> 00:07:41,980
y conecto el prototype de gato

113
00:07:41,980 --> 00:07:44,980
al prototype de mamífero en la línea 19,

114
00:07:46,980 --> 00:07:49,980
ahí declaro la herencia entre

115
00:07:50,920 --> 00:07:53,920
la superclass mamífero y la subclass gato.

116
00:07:56,920 --> 00:08:00,920
Y abajo ahí hice una class que se llama perro.

117
00:08:00,920 --> 00:08:04,920
Y el perro hice una instancia que se llama cookie

118
00:08:04,920 --> 00:08:07,920
que es mi perrita ahí en la foto.

119
00:08:07,920 --> 00:08:10,920
Y cuando llames a cookie, ahí puede,

120
00:08:10,920 --> 00:08:13,920
la cookie es una instancia de mamífero

121
00:08:13,920 --> 00:08:16,920
y una instancia de perro.

122
00:08:20,920 --> 00:08:23,920
Esto es como

123
00:08:23,920 --> 00:08:26,920
JavaScript declara clases en ES5.

124
00:08:28,920 --> 00:08:31,920
Y ahora en ES6 uno puede ver

125
00:08:33,920 --> 00:08:36,920
que es más claro leer clases,

126
00:08:36,920 --> 00:08:39,920
pero el

127
00:08:39,920 --> 00:08:42,920
abajo del,

128
00:08:42,920 --> 00:08:45,920
debajo de lo que ves es,

129
00:08:45,920 --> 00:08:48,920
esto es una abstracción sobre los prototype

130
00:08:49,860 --> 00:08:52,860
sobre la gerencia prototípica.

131
00:08:52,860 --> 00:08:55,860
Ahí puede ver el constructor,

132
00:08:55,860 --> 00:08:58,860
el constructor en la clase animal,

133
00:08:58,860 --> 00:09:01,860
el constructor en la clase gorila y cómo gorila

134
00:09:01,860 --> 00:09:04,860
extiende,

135
00:09:04,860 --> 00:09:07,860
extiende de la clase animal.

136
00:09:12,860 --> 00:09:15,860
Y aquí podemos ver que ES6 hace JavaScript

137
00:09:15,860 --> 00:09:18,860
más claro y más fácil de leer,

138
00:09:19,800 --> 00:09:22,800
pero el problema es que necesitas

139
00:09:22,800 --> 00:09:25,800
entender la gerencia prototípica

140
00:09:27,800 --> 00:09:30,800
para saber cómo funcionan las clases

141
00:09:30,800 --> 00:09:33,800
en JavaScript.

142
00:09:33,800 --> 00:09:36,800
En Python es más simple.

143
00:09:36,800 --> 00:09:39,800
Ahí tenemos un constructor,

144
00:09:39,800 --> 00:09:42,800
ahí inicializa tu clase persona

145
00:09:42,800 --> 00:09:45,800
y tienes un método que se llama imprimeNombre.

146
00:09:46,740 --> 00:09:49,740
Y si quieres crear una clase que hereda

147
00:09:49,740 --> 00:09:52,740
de persona, de tu superclass,

148
00:09:52,740 --> 00:09:55,740
ahí puedes construir

149
00:09:55,740 --> 00:09:58,740
la clase estudiante y pasar

150
00:09:58,740 --> 00:10:01,740
persona

151
00:10:01,740 --> 00:10:04,740
en la clase.

152
00:10:04,740 --> 00:10:07,740
Y pasando persona en la clase,

153
00:10:07,740 --> 00:10:10,740
tú extiendes de,

154
00:10:10,740 --> 00:10:13,740
tú extiendes la clase estudiante de la clase persona.

155
00:10:14,680 --> 00:10:17,680
Para mí se hizo muy fácil aprender clases

156
00:10:17,680 --> 00:10:20,680
de esta forma porque todo está encapsulado.

157
00:10:20,680 --> 00:10:23,680
No tienes que aprender de prototipos

158
00:10:23,680 --> 00:10:26,680
o cómo crear un objeto

159
00:10:26,680 --> 00:10:29,680
y hacer una cadena de objetos.

160
00:10:29,680 --> 00:10:32,680
Todo es más claro y más compacto.

161
00:10:34,680 --> 00:10:37,680
¿Qué pasa con errores?

162
00:10:37,680 --> 00:10:40,680
Como nueva programación, tú debes

163
00:10:41,620 --> 00:10:44,620
aprender cómo ver tus errores

164
00:10:44,620 --> 00:10:47,620
y resolver tus errores.

165
00:10:47,620 --> 00:10:50,620
Si no sabes cuánto pasan los errores,

166
00:10:50,620 --> 00:10:53,620
nunca vas a aprender, en mi opinión.

167
00:10:53,620 --> 00:10:56,620
En JavaScript, JavaScript es muy indulgente.

168
00:10:58,620 --> 00:11:01,620
Si creas una función

169
00:11:01,620 --> 00:11:04,620
con un argumento cuenta

170
00:11:04,620 --> 00:11:07,620
y no pasas el argumento,

171
00:11:07,620 --> 00:11:10,620
en JavaScript no...

172
00:11:11,560 --> 00:11:14,560
no te deja que llames la función.

173
00:11:14,560 --> 00:11:17,560
Nada más te dará un undefined

174
00:11:17,560 --> 00:11:20,560
pero te va a dejar llamar la función sin el argumento.

175
00:11:22,560 --> 00:11:25,560
JavaScript, como una lengua de la web, te deja

176
00:11:25,560 --> 00:11:28,560
hacer errores o ignora tus errores

177
00:11:28,560 --> 00:11:31,560
para que tu website no se explote,

178
00:11:31,560 --> 00:11:34,560
no se quiebre.

179
00:11:34,560 --> 00:11:37,560
Pero si estás aprendiendo a programar,

180
00:11:37,560 --> 00:11:40,560
eso te va a confundir mucho

181
00:11:41,500 --> 00:11:44,500
y te va a hacer más problemas en el futuro

182
00:11:44,500 --> 00:11:47,500
cuando decidas aprender otra lengua.

183
00:11:49,500 --> 00:11:52,500
En cambio, Python,

184
00:11:52,500 --> 00:11:55,500
si declaras una función sin argumento,

185
00:11:57,500 --> 00:12:00,500
ahí vas a ver un type error

186
00:12:00,500 --> 00:12:03,500
y tu programa no va a funcionar.

187
00:12:03,500 --> 00:12:06,500
Así que de una vez vas a saber si algo se quiebra,

188
00:12:06,500 --> 00:12:09,500
si algo no sirve, y te va a ayudar a aprender

189
00:12:10,440 --> 00:12:13,440
cómo tratar los errores bien,

190
00:12:13,440 --> 00:12:16,440
cómo cacharlos o tirarlos

191
00:12:16,440 --> 00:12:19,440
y vas a... ya cuando vayas a otras lenguas

192
00:12:19,440 --> 00:12:22,440
como Java o otras Object Oriented Languages,

193
00:12:22,440 --> 00:12:25,440
vas a tener...

194
00:12:25,440 --> 00:12:28,440
vas a ver cómo agarrar los errores

195
00:12:28,440 --> 00:12:31,440
y todo se va a hacer muy fácil.

196
00:12:33,440 --> 00:12:36,440
Y Python, en...

197
00:12:36,440 --> 00:12:39,440
Python en experiencia te ayuda a escribir código

198
00:12:40,380 --> 00:12:43,380
Python usa los espacios

199
00:12:43,380 --> 00:12:46,380
y te obliga a usar la sangría.

200
00:12:48,380 --> 00:12:51,380
Y también te obliga a usar

201
00:12:51,380 --> 00:12:54,380
números de variables

202
00:12:54,380 --> 00:12:57,380
más verbosos

203
00:12:59,380 --> 00:13:02,380
para que... bueno, yo creo...

204
00:13:02,380 --> 00:13:05,380
en todas las lenguas eso depende del programador, ¿no?

205
00:13:05,380 --> 00:13:08,380
Pero el espacio que uno usa

206
00:13:10,380 --> 00:13:13,380
para... cuando uno programa Python

207
00:13:13,380 --> 00:13:16,380
te hace programar más fácil

208
00:13:16,380 --> 00:13:19,380
y leer lo que escribes más fácil.

209
00:13:23,380 --> 00:13:26,380
Cuando yo comencé a aprender Python...

210
00:13:31,380 --> 00:13:34,380
Cuando yo comencé a aprender Python

211
00:13:34,380 --> 00:13:37,380
yo usé muchos recursos.

212
00:13:38,320 --> 00:13:41,320
En el Internet hay programas en edX

213
00:13:41,320 --> 00:13:44,320
que puedes tomar.

214
00:13:44,320 --> 00:13:47,320
Hay un programa de MIT

215
00:13:47,320 --> 00:13:50,320
que ofrece a...

216
00:13:50,320 --> 00:13:53,320
una clase de Python

217
00:13:53,320 --> 00:13:56,320
y algoritmos y estructuras de datos en Python.

218
00:13:56,320 --> 00:13:59,320
Es muy reguloso

219
00:13:59,320 --> 00:14:02,320
y es como un curso de colegio

220
00:14:02,320 --> 00:14:05,320
aunque nunca fui al colegio

221
00:14:06,260 --> 00:14:09,260
y no estudié Computer Science en el colegio

222
00:14:09,260 --> 00:14:12,260
yo me sentí que yo tenía un profesor ahí

223
00:14:12,260 --> 00:14:15,260
y tenía apoyo de mis compañeros en esa clase.

224
00:14:15,260 --> 00:14:18,260
Mi experiencia en esta clase fue bien buena

225
00:14:18,260 --> 00:14:21,260
pero había tiempos

226
00:14:21,260 --> 00:14:24,260
que me frustró bastante.

227
00:14:28,260 --> 00:14:31,260
Era muy frustroso

228
00:14:31,260 --> 00:14:34,260
porque había tanta información

229
00:14:35,200 --> 00:14:38,200
tan rápido, pero esa experiencia

230
00:14:38,200 --> 00:14:41,200
me preparó para ir a un Bootcamp

231
00:14:41,200 --> 00:14:44,200
después de unos meses después.

232
00:14:44,200 --> 00:14:47,200
Así que el Bootcamp me tomó tres meses

233
00:14:47,200 --> 00:14:50,200
pero este programa que tomé también me tomó tres meses.

234
00:14:50,200 --> 00:14:53,200
Haciéndolo poquito a poquito

235
00:14:53,200 --> 00:14:56,200
cada semana, pero con paciencia

236
00:14:56,200 --> 00:14:59,200
y perseverencia se puede hacer todo.

237
00:15:05,200 --> 00:15:08,200
También hay un MOOC

238
00:15:08,200 --> 00:15:11,200
en Coursera

239
00:15:11,200 --> 00:15:14,200
de la Universidad de Rice

240
00:15:14,200 --> 00:15:17,200
que es una universidad en Texas.

241
00:15:19,200 --> 00:15:22,200
Ahí puedes hacer jueguitos

242
00:15:22,200 --> 00:15:25,200
y es muy divertido. Puedes hacer un juego de POM

243
00:15:25,200 --> 00:15:28,200
o de Rock, Paper, Scissors

244
00:15:28,200 --> 00:15:31,200
que es piedra, papel y tijeras.

245
00:15:32,140 --> 00:15:35,140
Hay tres cursos ahí y puedes

246
00:15:35,140 --> 00:15:38,140
hacer algo divertido

247
00:15:38,140 --> 00:15:41,140
y rápido.

248
00:15:41,140 --> 00:15:44,140
Ahí en ese curso te enseñan cómo usar la lengua de Python

249
00:15:44,140 --> 00:15:47,140
para hacer más que unos short scripts.

250
00:15:47,140 --> 00:15:50,140
Puedes hacer juegos

251
00:15:50,140 --> 00:15:53,140
y un juego de...

252
00:15:53,140 --> 00:15:56,140
una alarma

253
00:15:56,140 --> 00:15:59,140
y es más...

254
00:16:00,080 --> 00:16:03,080
te...

255
00:16:03,080 --> 00:16:06,080
es interesante y te sientes

256
00:16:06,080 --> 00:16:09,080
como un niño de nuevo, como si te estés cubriendo

257
00:16:09,080 --> 00:16:12,080
un mundo nuevo.

258
00:16:12,080 --> 00:16:15,080
Python tiene muchas librerías

259
00:16:15,080 --> 00:16:18,080
para los principiantes que pueden agarrar y aprender.

260
00:16:18,080 --> 00:16:21,080
También los principiantes pueden ir al

261
00:16:21,080 --> 00:16:24,080
libcode, Hackerank o Project Oolr

262
00:16:24,080 --> 00:16:27,080
y pueden escribir códigos ahí.

263
00:16:28,020 --> 00:16:31,020
Es un ejemplo de una list comprehension que yo hice en Hackerank.

264
00:16:31,020 --> 00:16:34,020
Aunque se vea...

265
00:16:34,020 --> 00:16:37,020
es una list comprehension

266
00:16:37,020 --> 00:16:40,020
pero en mi trabajo el día al día

267
00:16:40,020 --> 00:16:43,020
yo no uso list comprehensions así

268
00:16:43,020 --> 00:16:46,020
porque se hace difícil para mis compañeros

269
00:16:46,020 --> 00:16:49,020
leerlos y no es muy bueno mantenerlos,

270
00:16:49,020 --> 00:16:52,020
mantener un código así. Así que

271
00:16:52,020 --> 00:16:55,020
es divertido cuando tenga tomas clases

272
00:16:55,960 --> 00:16:58,960
y cuando se vuelva el internet o cuando

273
00:16:58,960 --> 00:17:01,960
solvas problemas de programación,

274
00:17:01,960 --> 00:17:04,960
pero en la vida de reales se hace muy difícil

275
00:17:04,960 --> 00:17:07,960
escribir código así.

276
00:17:07,960 --> 00:17:10,960
Para principiantes hay librerías como PILO

277
00:17:10,960 --> 00:17:13,960
para manipular imágenes y request

278
00:17:13,960 --> 00:17:16,960
para hacer llamadas a APIs.

279
00:17:16,960 --> 00:17:19,960
Puedes hacer llamadas a YouTube API

280
00:17:19,960 --> 00:17:22,960
y hay muchos otros APIs que son divertidos.

281
00:17:23,900 --> 00:17:26,900
Para comenzar escribiendo código.

282
00:17:32,900 --> 00:17:35,900
Python tiene una comunidad amable.

283
00:17:35,900 --> 00:17:38,900
Yo recomiendo que muchas personas

284
00:17:38,900 --> 00:17:41,900
lean el libro de OWL

285
00:17:41,900 --> 00:17:44,900
que

286
00:17:44,900 --> 00:17:47,900
tiene instrucciones que dicen

287
00:17:47,900 --> 00:17:50,900
como...

288
00:17:51,840 --> 00:17:54,840
hacer programas para ayudarte

289
00:17:54,840 --> 00:17:57,840
en tu día a día,

290
00:17:57,840 --> 00:18:00,840
como mover a files,

291
00:18:00,840 --> 00:18:03,840
como organizar tu computadora

292
00:18:03,840 --> 00:18:06,840
y todo en tu vida.

293
00:18:06,840 --> 00:18:09,840
Y tiene dibujitos

294
00:18:09,840 --> 00:18:12,840
y es muy...

295
00:18:15,840 --> 00:18:18,840
es muy personable.

296
00:18:19,780 --> 00:18:22,780
Así que recomiendo para niños también

297
00:18:22,780 --> 00:18:25,780
o para adultos que quieren aprender

298
00:18:25,780 --> 00:18:28,780
y sienten que el programar es muy intimidable,

299
00:18:28,780 --> 00:18:31,780
es muy intimidante.

300
00:18:31,780 --> 00:18:34,780
También recomiendo el curso de Corey Schaeffer

301
00:18:34,780 --> 00:18:37,780
en YouTube para los tutoriales ahí

302
00:18:37,780 --> 00:18:40,780
que te enseñan cómo instanciar clases,

303
00:18:40,780 --> 00:18:43,780
cómo usar diferentes librerías

304
00:18:43,780 --> 00:18:46,780
y cómo hacer Python divertido.

305
00:18:47,720 --> 00:18:50,720
Yo sé que es difícil de aprender a programar,

306
00:18:50,720 --> 00:18:53,720
pero no es imposible.

307
00:18:53,720 --> 00:18:56,720
Yo no soy buena en matemáticas ni tampoco fui...

308
00:18:56,720 --> 00:18:59,720
nunca fui buena

309
00:18:59,720 --> 00:19:02,720
en problemas lógicos.

310
00:19:02,720 --> 00:19:05,720
Pero cuando comencé a aprender,

311
00:19:05,720 --> 00:19:08,720
después de cuatro meses, algo clickeó.

312
00:19:08,720 --> 00:19:11,720
Una luz en mi mente se prendió

313
00:19:11,720 --> 00:19:14,720
y me fascinó como sobre problemas

314
00:19:15,660 --> 00:19:18,660
y me recomendó que no tengas miedo,

315
00:19:18,660 --> 00:19:21,660
aunque sea difícil.

316
00:19:21,660 --> 00:19:24,660
Hay mucha gente en tu...

317
00:19:24,660 --> 00:19:27,660
experimentando lo que tú sientes,

318
00:19:27,660 --> 00:19:30,660
sí que no te rindas.

319
00:19:30,660 --> 00:19:33,660
Vuelve a internet,

320
00:19:33,660 --> 00:19:36,660
ahí reddit,

321
00:19:36,660 --> 00:19:39,660
puedes ir a python.com y puedes pedir ayuda

322
00:19:39,660 --> 00:19:42,660
y puedes preguntar.

323
00:19:43,600 --> 00:19:46,600
Si no entiendes algo,

324
00:19:46,600 --> 00:19:49,600
no es porque eres tonto,

325
00:19:49,600 --> 00:19:52,600
es porque todo el mundo se siente así

326
00:19:52,600 --> 00:19:55,600
algunos días.

327
00:19:55,600 --> 00:19:58,600
Aunque he programado por dos años ya,

328
00:19:58,600 --> 00:20:01,600
hay días que no sé cómo resolver algo,

329
00:20:01,600 --> 00:20:04,600
no sé cómo...

330
00:20:04,600 --> 00:20:07,600
no sé cómo algo funciona.

331
00:20:07,600 --> 00:20:10,600
Pero yo hablo con mis compañeros

332
00:20:11,540 --> 00:20:14,540
y les pido ayuda.

333
00:20:14,540 --> 00:20:17,540
Nunca tengo miedo a pedir ayuda.

334
00:20:19,540 --> 00:20:22,540
A veces se siente que estás solo,

335
00:20:22,540 --> 00:20:25,540
que estás tú subiendo una montaña solito

336
00:20:25,540 --> 00:20:28,540
y estás frustrado,

337
00:20:28,540 --> 00:20:31,540
pero en verdad hay toda una comunidad

338
00:20:31,540 --> 00:20:34,540
que te puede ayudar.

339
00:20:34,540 --> 00:20:37,540
Y ellos siempre van a estar ahí,

340
00:20:37,540 --> 00:20:40,540
no lo tienes que preguntar.

341
00:20:41,480 --> 00:20:44,480
Gracias.

342
00:20:44,480 --> 00:20:47,480
Aplausos

343
00:20:54,480 --> 00:20:57,480
¿Preguntas?

344
00:21:10,540 --> 00:21:13,540
Sí.

345
00:21:16,540 --> 00:21:19,540
Sí.

346
00:21:35,540 --> 00:21:38,540
Yo ahora mismo trabajo en compañía

347
00:21:38,540 --> 00:21:41,540
con un amigo que usa python,

348
00:21:41,540 --> 00:21:44,540
así que uso python todos los días.

349
00:21:44,540 --> 00:21:47,540
Y yo me gusta python mejor que javascript

350
00:21:47,540 --> 00:21:50,540
porque es fácil aprender

351
00:21:50,540 --> 00:21:53,540
pocas cosas que necesito usar todos los días

352
00:21:53,540 --> 00:21:56,540
y es fácil de leer.

353
00:21:56,540 --> 00:21:59,540
Cuando leo el repo

354
00:21:59,540 --> 00:22:02,540
de mi trabajo,

355
00:22:02,540 --> 00:22:05,540
hay muchas líneas de código,

356
00:22:05,540 --> 00:22:08,540
que nada más son palabras

357
00:22:08,540 --> 00:22:11,540
que yo puedo leer y entender.

358
00:22:11,540 --> 00:22:14,540
En python se hace eso más fácil,

359
00:22:14,540 --> 00:22:17,540
que javascript tiene más nuances,

360
00:22:17,540 --> 00:22:20,540
tienen cosas así que son tricky

361
00:22:20,540 --> 00:22:23,540
o no funcionan como tú esperas.

362
00:22:23,540 --> 00:22:26,540
Y en python no es así.

363
00:22:26,540 --> 00:22:29,540
Así que me gustó python mejor.

364
00:22:35,540 --> 00:22:38,540
Sí.

365
00:22:38,540 --> 00:22:41,540
¿Alguien que entiende

366
00:22:41,540 --> 00:22:44,540
que python es más fácil

367
00:22:44,540 --> 00:22:47,540
que javascript?

368
00:22:47,540 --> 00:22:50,540
O alguien que es más fácil

369
00:22:50,540 --> 00:22:53,540
que javascript?

370
00:22:53,540 --> 00:22:56,540
O alguien mejor

371
00:22:56,540 --> 00:22:59,540
que javascript?

372
00:22:59,540 --> 00:23:02,540
O alguien más que javascript?

373
00:23:02,540 --> 00:23:05,540
Yo creo que será difícil

374
00:23:05,540 --> 00:23:08,540
porque no hay tantos recursos en español

375
00:23:08,540 --> 00:23:11,540
comparado con inglés.

376
00:23:11,540 --> 00:23:14,540
Si buscas python en internet

377
00:23:14,540 --> 00:23:17,540
y buscas cómo hacer clases en python

378
00:23:17,540 --> 00:23:20,540
o cómo hacer funciones en python,

379
00:23:20,540 --> 00:23:23,540
los recursos en inglés son más.

380
00:23:23,540 --> 00:23:26,540
Y también hay más libros en inglés.

381
00:23:26,540 --> 00:23:29,540
Y programas que yo mencioné, todos son en inglés,

382
00:23:29,540 --> 00:23:32,540
porque estos programas no hay en español.

383
00:23:32,540 --> 00:23:35,540
Y espero que en este cuarto algún día

384
00:23:35,540 --> 00:23:38,540
podamos hacer más recursos

385
00:23:38,540 --> 00:23:41,540
para otros hispanohablantes.

386
00:23:41,540 --> 00:23:44,540
O más videos en youtube,

387
00:23:44,540 --> 00:23:47,540
más libros

388
00:23:47,540 --> 00:23:50,540
y más páginas en internet,

389
00:23:50,540 --> 00:23:53,540
un blog en español que ayudan bastante.

390
00:23:53,540 --> 00:23:56,540
Y espero un día escribir

391
00:23:56,540 --> 00:23:59,540
un blog para principiantes para ayudarlos en español.

392
00:24:02,540 --> 00:24:05,540
Sí.

393
00:24:05,540 --> 00:24:08,540
Oh, sí.

394
00:24:08,540 --> 00:24:11,540
Oh, sí, sí, por supuesto.

395
00:24:16,540 --> 00:24:19,540
Y es todo. Muchas gracias.

