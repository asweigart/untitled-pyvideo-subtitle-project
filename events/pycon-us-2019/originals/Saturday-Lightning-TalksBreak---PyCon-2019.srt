1
00:00:00,000 --> 00:00:17,520
One, two, one, two, one, two, one, two, check.

2
00:00:17,520 --> 00:00:19,020
Fine welcome everyone.

3
00:00:19,020 --> 00:00:20,240
Come close to the front.

4
00:00:20,240 --> 00:00:23,860
All the speakers will appreciate that.

5
00:00:23,860 --> 00:00:24,860
I can see everyone at the back.

6
00:00:24,860 --> 00:00:26,940
Quick, come close to the front as close as you can.

7
00:00:26,940 --> 00:00:27,940
Come in the middle.

8
00:00:27,940 --> 00:00:28,940
Come in these seats.

9
00:00:28,940 --> 00:00:30,380
Come down here in the front row.

10
00:00:30,380 --> 00:00:31,500
Speakers love seeing these people.

11
00:00:31,500 --> 00:00:33,180
You can see them in the whites of their eyes.

12
00:00:33,180 --> 00:00:35,660
If you look happy down here, this speaker is going to be happy.

13
00:00:35,660 --> 00:00:36,660
That speaker is going to be happy.

14
00:00:36,660 --> 00:00:38,740
We're all going to have a great time.

15
00:00:38,740 --> 00:00:39,740
Come to the front.

16
00:00:39,740 --> 00:00:40,740
Come to the front.

17
00:00:40,740 --> 00:00:41,740
Quick as you can.

18
00:00:41,740 --> 00:00:46,900
If anyone like jogs lightly without endangering themselves, that would be great.

19
00:00:46,900 --> 00:00:50,740
Don't increase the risk, but increase the speed.

20
00:00:50,740 --> 00:00:53,740
Yeah.

21
00:00:53,740 --> 00:00:57,740
All right.

22
00:00:57,740 --> 00:01:04,140
I'm just going to wait for a few more people to come down that lift.

23
00:01:04,140 --> 00:01:05,340
Come close to the front, everyone.

24
00:01:05,340 --> 00:01:06,900
There's lots of room up here on the left.

25
00:01:06,900 --> 00:01:08,660
There's four seats right here in the front row.

26
00:01:08,660 --> 00:01:12,220
There's a bunch over in the middle here.

27
00:01:12,220 --> 00:01:19,380
How's everyone been enjoying the saturday of PyCon?

28
00:01:19,380 --> 00:01:21,420
That's a sort of three star applause.

29
00:01:21,420 --> 00:01:24,780
I mean, it's nice, but I feel like maybe you're getting a little tired.

30
00:01:24,780 --> 00:01:25,780
I don't know.

31
00:01:25,780 --> 00:01:27,420
I don't think we want to.

32
00:01:28,100 --> 00:01:29,100
That's what we want to hear.

33
00:01:29,100 --> 00:01:30,100
Come on, folks.

34
00:01:30,100 --> 00:01:31,900
This is going to be the saturday afternoon lightning talks.

35
00:01:31,900 --> 00:01:35,660
All the lightning talk slots are often the best slots of the whole conference, and often

36
00:01:35,660 --> 00:01:39,340
the saturday afternoon is the best lightning talk slots of all the lightning talk slots.

37
00:01:39,340 --> 00:01:43,100
These two guys are intelligent, attractive, and they've got lots of exciting things to

38
00:01:43,100 --> 00:01:44,100
say.

39
00:01:44,100 --> 00:01:48,940
This is going to be the best lightning talk slots of this conference and indeed of history.

40
00:01:48,940 --> 00:01:49,940
Yes.

41
00:01:49,940 --> 00:02:01,940
So, please welcome our first streaper who was bumped from this morning, but we managed

42
00:02:01,940 --> 00:02:03,460
to get him on this afternoon.

43
00:02:03,460 --> 00:02:06,740
Christian, please give him a big hand.

44
00:02:06,740 --> 00:02:08,620
Okay.

45
00:02:08,620 --> 00:02:11,540
Hello, everyone.

46
00:02:11,540 --> 00:02:14,220
So let's be really quick with this thing.

47
00:02:14,220 --> 00:02:17,100
So create your first UI with Qt for Python.

48
00:02:17,100 --> 00:02:20,140
So I am currently working as a software engineer in the Qt company.

49
00:02:20,140 --> 00:02:23,380
So the Qt company is just the company that is backing the Qt project.

50
00:02:23,380 --> 00:02:24,860
Maybe you have heard about it.

51
00:02:24,860 --> 00:02:26,780
So you can find me there.

52
00:02:26,780 --> 00:02:30,300
And since some people were showing some maps, so I just wanted to show something.

53
00:02:30,300 --> 00:02:32,100
I am originally from Chile.

54
00:02:32,100 --> 00:02:36,700
I am living in Germany for a couple of years, and now I'm here.

55
00:02:36,700 --> 00:02:38,700
So just saying.

56
00:02:38,700 --> 00:02:42,860
So Qt is a cross platform C++ framework.

57
00:02:42,860 --> 00:02:47,260
So for UI and many other things, in my own words, kind of provide things that we get

58
00:02:47,260 --> 00:02:50,180
for free in Python to C++ developers.

59
00:02:50,180 --> 00:02:52,980
So it's really nice for them to have, but we already have them.

60
00:02:52,980 --> 00:02:58,660
So C++ is a really beautiful language, but of course it could be also a little bit scary

61
00:02:58,660 --> 00:03:01,480
when you try to do more advanced things.

62
00:03:01,480 --> 00:03:06,000
So now since last year, we are officially supporting Python as an official language

63
00:03:06,000 --> 00:03:08,300
to support Qt in general.

64
00:03:08,300 --> 00:03:13,660
So we are adding Python to our ecosystem, and we officially released Qt for Python and

65
00:03:13,660 --> 00:03:15,260
the Python 2 module.

66
00:03:15,260 --> 00:03:16,500
So how do we do it?

67
00:03:16,500 --> 00:03:17,740
It's really easy.

68
00:03:17,740 --> 00:03:20,760
So we use Clang for parsing all the headers from the C++.

69
00:03:20,760 --> 00:03:26,820
We have our own binding generator tool, some type system to declare things and play around

70
00:03:26,820 --> 00:03:31,340
with ownership and stuff, and then we have some C Python code and expose it with the

71
00:03:31,340 --> 00:03:32,920
Python 2 module.

72
00:03:32,920 --> 00:03:34,340
So how do you get it?

73
00:03:34,340 --> 00:03:36,940
Just pip install as any other Python module.

74
00:03:36,940 --> 00:03:38,480
And how does it look like?

75
00:03:38,480 --> 00:03:42,620
So I will not code everything from scratch, just because we have some time constraints,

76
00:03:42,620 --> 00:03:45,100
but the structure is really simple.

77
00:03:45,100 --> 00:03:46,820
So this is the final application.

78
00:03:46,820 --> 00:03:49,740
So I will just show you more or less this is the structure.

79
00:03:49,740 --> 00:03:56,220
You declare an application, overload some widget classes, you show it, and then for

80
00:03:56,220 --> 00:03:59,000
the widget class, you just need to add things around.

81
00:03:59,000 --> 00:04:05,940
So you can start to read some files, for example, and then you create a label, a button, and

82
00:04:05,940 --> 00:04:08,900
then you can connect this button with some actions.

83
00:04:08,900 --> 00:04:11,540
Every time you click it, you are connecting this with a slot.

84
00:04:11,540 --> 00:04:17,940
A slot is not necessarily a method in the class, so here you have a simple layout, and

85
00:04:17,940 --> 00:04:19,420
there is some slot there.

86
00:04:19,420 --> 00:04:24,420
So once you execute this thing, you have this amazing graphical user application so you

87
00:04:24,420 --> 00:04:29,740
can post it in your GitHub and get thousands of stars.

88
00:04:29,740 --> 00:04:32,060
So just a big thank you.

89
00:04:32,060 --> 00:04:38,140
Here all this information to get more about the project, and you can find us on IREMFreenote.

90
00:04:38,140 --> 00:04:39,260
That's my username.

91
00:04:39,260 --> 00:04:42,260
So please take a look at it.

92
00:04:42,260 --> 00:04:45,100
But most importantly, please support your local groups.

93
00:04:45,100 --> 00:04:49,420
So a big shout out to all the meetups that we have there in Berlin.

94
00:04:49,420 --> 00:04:54,180
Python user Berlin, Python data Berlin.

95
00:04:54,180 --> 00:04:58,820
So a big thank you for making Berlin one of the best Python communities there.

96
00:04:58,820 --> 00:04:59,820
So thank you very much.

97
00:04:59,820 --> 00:05:07,940
Thank you very much.

98
00:05:07,940 --> 00:05:11,180
No time to delay from one lightning talk speaker straight into the next one.

99
00:05:11,180 --> 00:05:20,460
Please give a big hand for Andrew.

100
00:05:20,460 --> 00:05:21,460
Howdy, y'all.

101
00:05:21,460 --> 00:05:22,460
My name is Andy Knight.

102
00:05:22,460 --> 00:05:24,340
I work at Precision Lender in North Carolina.

103
00:05:24,340 --> 00:05:28,160
And today I'm going to give you three quick tips for software blogging.

104
00:05:28,160 --> 00:05:31,040
You may also know me as the Automation Panda.

105
00:05:31,040 --> 00:05:35,800
I've been writing automationpanda.com as my own blog since January 2017.

106
00:05:35,800 --> 00:05:39,680
I have over 100 articles out there and I get about a thousand hits a day.

107
00:05:39,680 --> 00:05:40,680
Feel free to check it out.

108
00:05:40,680 --> 00:05:42,180
I'm also on Twitter.

109
00:05:42,180 --> 00:05:43,180
I love writing.

110
00:05:43,180 --> 00:05:45,800
I was actually a creative writing minor in college.

111
00:05:45,800 --> 00:05:49,760
And so it was kind of recently in my software career where I decided, hey, why don't I write

112
00:05:49,760 --> 00:05:50,760
a blog?

113
00:05:50,760 --> 00:05:54,000
And so what I want to do today is kind of encourage all of y'all, yes, you can write,

114
00:05:54,000 --> 00:05:55,000
you should write.

115
00:05:55,000 --> 00:06:00,840
Here's some basic tips for how to get started if you're not sure how to begin.

116
00:06:00,840 --> 00:06:04,080
So first thing I always recommend to people, if you think you want to write a blog, I would

117
00:06:04,080 --> 00:06:05,940
say set a purpose.

118
00:06:05,940 --> 00:06:09,480
There's a big difference between somebody saying, I just want to write something and

119
00:06:09,480 --> 00:06:11,960
I have a purpose for writing something.

120
00:06:11,960 --> 00:06:14,560
So what do you want to blog?

121
00:06:14,560 --> 00:06:20,900
Do you want to blog something like personal info or guides or tutorials, example code?

122
00:06:20,900 --> 00:06:24,960
Is it just your own journal or blog or just your own little notes you write down to yourself?

123
00:06:25,960 --> 00:06:29,280
Is your blog a platform through which you want to connect with other people?

124
00:06:29,280 --> 00:06:31,920
Or maybe you want that to be your electronic business card.

125
00:06:31,920 --> 00:06:34,060
These are all great reasons.

126
00:06:34,060 --> 00:06:39,560
Two reasons I typically tell people to avoid would be looking for fame and fortune because

127
00:06:39,560 --> 00:06:42,520
you're probably not going to find that in a blog.

128
00:06:42,520 --> 00:06:46,800
Overall, though, make sure that whatever you write about, you're self-motivated to write

129
00:06:46,800 --> 00:06:50,960
about because you are your biggest enemy when it comes to writing and comes to writer's

130
00:06:50,960 --> 00:06:52,040
block.

131
00:06:52,040 --> 00:06:56,620
So be self-motivated, set a purpose and keep yourself to it.

132
00:06:56,620 --> 00:07:01,480
The second piece of advice I would give is write new and helpful content.

133
00:07:01,480 --> 00:07:05,580
We all know the web has way too much information out there.

134
00:07:05,580 --> 00:07:07,720
So don't repeat existing content.

135
00:07:07,720 --> 00:07:10,800
Instead, make something new, make something unique.

136
00:07:10,800 --> 00:07:18,220
A perfect example I think of is I once wrote a website in Django for my wife, small businesses,

137
00:07:18,220 --> 00:07:23,680
and I had to do some translations in the administration pages of Django because my

138
00:07:23,680 --> 00:07:27,820
wife needed somebody to use it who only spoke Chinese.

139
00:07:27,820 --> 00:07:32,720
And so I looked how to do Django app translations for the admin and I couldn't find anything

140
00:07:32,720 --> 00:07:33,720
on Google.

141
00:07:33,720 --> 00:07:36,820
So I figured it out, I wrote a blog post and boom, unique content.

142
00:07:36,820 --> 00:07:38,880
So try to find things like that.

143
00:07:38,880 --> 00:07:42,620
Search engines will reward you, employers will notice you, and people will ultimately

144
00:07:42,620 --> 00:07:44,940
thank you for adding something helpful.

145
00:07:45,840 --> 00:07:49,800
A third thing I've learned is that the tools and platforms really don't matter.

146
00:07:49,800 --> 00:07:52,560
I know this might sound blasphemous, but just hear me out.

147
00:07:52,560 --> 00:07:56,000
When it comes to writing a blog, you care more about the content than the technology

148
00:07:56,000 --> 00:07:57,200
necessarily.

149
00:07:57,200 --> 00:08:01,260
So if you wanted something simple, you could look at something like WordPress or Wix.

150
00:08:01,260 --> 00:08:06,120
If you want to make your own kind of thing, you could build your own Django site.

151
00:08:06,120 --> 00:08:09,860
Wagtail's app at AWS has a really cool thing you can do to string it together and throw

152
00:08:09,860 --> 00:08:12,740
it out there and it's super fast, super quick, and super cheap.

153
00:08:12,760 --> 00:08:15,580
I also have a friend who's recommended Hugo.

154
00:08:15,580 --> 00:08:22,000
And there's also this page on the Python Wiki that can recommend some Python blogging software.

155
00:08:22,000 --> 00:08:25,680
So if you want to learn more about this, feel free to hit me up on Twitter or through my

156
00:08:25,680 --> 00:08:26,680
blog.

157
00:08:26,680 --> 00:08:29,760
I'd be more than happy to talk about things or encourage you.

158
00:08:29,760 --> 00:08:33,680
And real quick, if anybody is interested in bringing a regional Python conference to the

159
00:08:33,680 --> 00:08:36,280
Carolinas, please let me know because we're trying to start that.

160
00:08:36,280 --> 00:08:37,280
Thank you.

161
00:08:43,740 --> 00:08:45,080
All right.

162
00:08:45,080 --> 00:08:46,080
Next speaker is David.

163
00:08:46,080 --> 00:08:47,080
Here he goes.

164
00:08:47,080 --> 00:08:48,080
Hey, so I have...

165
00:08:48,080 --> 00:08:49,080
Wait.

166
00:08:49,080 --> 00:08:50,080
Give him a big hand.

167
00:08:54,080 --> 00:08:55,160
Hey, I'm David.

168
00:08:55,160 --> 00:08:59,280
I'm singing Wolf Boy on Mastodon and I have one weird trick for you to make it easier

169
00:08:59,280 --> 00:09:01,760
for people to see what your name is at lunch.

170
00:09:01,760 --> 00:09:07,940
I found this amazing stock photo image which seemed perfect for this talk and also hilarious.

171
00:09:07,940 --> 00:09:11,480
So the problem that you have is when you're sitting at the table and your lanyard is too

172
00:09:11,500 --> 00:09:15,020
long and it falls below the table, nobody can tell what it says.

173
00:09:15,020 --> 00:09:16,020
So what is the name of this guy?

174
00:09:16,020 --> 00:09:17,020
I have no idea.

175
00:09:17,020 --> 00:09:19,580
The solution to this problem is really easy.

176
00:09:19,580 --> 00:09:24,360
You just tie a little knot in the top of your lanyard and it makes it shorter.

177
00:09:24,360 --> 00:09:27,900
And as a result, when you're sitting at the table, you can see the name tag of the person

178
00:09:27,900 --> 00:09:29,380
sitting across from you.

179
00:09:29,380 --> 00:09:30,380
That's it.

180
00:09:30,380 --> 00:09:31,380
That's my entire lightning talk.

181
00:09:31,380 --> 00:09:32,380
Thank you.

182
00:09:32,380 --> 00:09:43,760
Thank you very much.

183
00:09:43,760 --> 00:09:46,600
In case anyone is still here in the morning, we didn't get through all the lightning talk

184
00:09:46,600 --> 00:09:48,200
speakers from this morning.

185
00:09:48,200 --> 00:09:52,080
So as a result, we had a bit of a scheduling snafu with who is going to be on this afternoon.

186
00:09:52,080 --> 00:09:54,840
So I think a few people who were promised they could be on this morning didn't manage

187
00:09:54,840 --> 00:09:55,900
to make it on.

188
00:09:55,900 --> 00:10:01,560
And that is my fault for not talking to my co-lightning talk host and also my fault for

189
00:10:01,700 --> 00:10:05,200
kind of talking whilst what you really wanted to see is the lightning talks.

190
00:10:05,200 --> 00:10:06,740
So I apologize to all of you.

191
00:10:06,740 --> 00:10:08,340
I apologize to anyone who didn't get on.

192
00:10:08,340 --> 00:10:10,340
I am really sorry about that.

193
00:10:10,340 --> 00:10:12,100
Steve, are you ready to talk?

194
00:10:12,100 --> 00:10:20,020
So give Steve a big, big, big, big, big, big, big, big, big hand.

195
00:10:20,020 --> 00:10:21,020
Okay.

196
00:10:21,020 --> 00:10:26,660
XDB is a database, file-based, similar to Berkeley DB or whatever.

197
00:10:26,660 --> 00:10:31,160
In process, you're using a C library so your program is doing the lookups.

198
00:10:31,180 --> 00:10:33,900
So it doesn't have a query language.

199
00:10:33,900 --> 00:10:37,900
You're using Python as your query language.

200
00:10:37,900 --> 00:10:40,020
I call it XDB, not the best name ever.

201
00:10:40,020 --> 00:10:45,340
It's extra features on top of LMDB, which is a fabulous C library, very well-debugged,

202
00:10:45,340 --> 00:10:46,940
very fast.

203
00:10:46,940 --> 00:10:51,400
LMDB, you give it bytes, it gives you bytes.

204
00:10:51,400 --> 00:10:56,200
But usually in Python, I have a Python string and I want a Python dictionary or something.

205
00:10:56,200 --> 00:10:59,980
So I was writing a lot of code that looks like this.

206
00:10:59,980 --> 00:11:07,640
Move the key to get bytes, get the data, decompress it, convert it from JSON or whatever.

207
00:11:07,640 --> 00:11:10,480
That boilerplate, many, many times, don't repeat yourself.

208
00:11:10,480 --> 00:11:12,760
I said I want it to look like this.

209
00:11:12,760 --> 00:11:15,280
And that is what XDB gives you.

210
00:11:15,280 --> 00:11:18,200
This, not that.

211
00:11:18,200 --> 00:11:19,200
Drink it in.

212
00:11:19,200 --> 00:11:25,560
XDB has multiple options for marshalling.

213
00:11:25,980 --> 00:11:33,900
You can pack the data yourself with Python struct.pack.

214
00:11:33,900 --> 00:11:37,280
Several kinds of compression, including Z standard, which came from Facebook and is

215
00:11:37,280 --> 00:11:43,820
great if you have data like mine, many, many records that are individually small.

216
00:11:43,820 --> 00:11:47,980
It works very well for multiprocess, such as, for example, a web app running a bunch of

217
00:11:47,980 --> 00:11:49,620
workers.

218
00:11:49,620 --> 00:11:53,980
And the next table acts a lot like a dict, except that it can be very large without using

219
00:11:54,000 --> 00:11:58,000
up your memory.

220
00:11:58,000 --> 00:12:00,600
Here's an example of creating a file.

221
00:12:00,600 --> 00:12:02,500
So we use with because we're good.

222
00:12:02,500 --> 00:12:04,360
We give it the file name.

223
00:12:04,360 --> 00:12:10,080
We give it an identifier and a string, and a version number, I mean, and on opening a

224
00:12:10,080 --> 00:12:14,640
file, you tell it what identifier and what version number to check for.

225
00:12:14,640 --> 00:12:20,760
So if you give it an obsolete file or a file from the future, it doesn't just crash randomly.

226
00:12:20,760 --> 00:12:26,340
It prints the message, hey, I expected foo version 1 and you gave me foo version 2.

227
00:12:26,340 --> 00:12:27,860
Very nice.

228
00:12:27,860 --> 00:12:31,180
You open a table, you tell it how you want to marshal, how you want to compress, and

229
00:12:31,180 --> 00:12:35,380
then you can just start putting data in it.

230
00:12:35,380 --> 00:12:39,860
Because there's common structure and common metadata associated with this, instead of

231
00:12:39,860 --> 00:12:46,300
just bytes, I have some standard tools, dump out the information, dump out examples of

232
00:12:47,000 --> 00:12:54,000
the data, and my favorite, the rep, the repel, it opens a Python interpreter and preloads

233
00:12:54,000 --> 00:12:57,600
everything so you can immediately start using it.

234
00:12:57,600 --> 00:13:04,000
And I used the XDB shell interpreter to make these examples of using it.

235
00:13:04,000 --> 00:13:05,480
I should say I'm using it heavily.

236
00:13:05,480 --> 00:13:08,960
I made it to solve my own problems.

237
00:13:08,960 --> 00:13:10,960
And it's working great for me.

238
00:13:10,960 --> 00:13:13,600
So here's an example.

239
00:13:13,600 --> 00:13:20,700
You can put whatever you want into an XDB namespace or table, whatever you want to call it.

240
00:13:20,700 --> 00:13:25,540
So there's no indexing features provided by it, but you can write an index.

241
00:13:25,540 --> 00:13:28,940
So I've got this table, loke IDX is an index.

242
00:13:28,940 --> 00:13:35,080
So using this key system that I invented, we say in the U.S., in New York, anything

243
00:13:35,080 --> 00:13:37,320
named Long Island.

244
00:13:37,320 --> 00:13:42,880
And it turns out there are about six things named Long Island in the state of New York.

245
00:13:42,880 --> 00:13:48,540
Another example, more of a query, here's a list comprehension that loops over country

246
00:13:48,540 --> 00:13:53,220
codes, two-letter country codes, and makes a list of all the country codes that happen

247
00:13:53,220 --> 00:13:55,560
to also be U.S. state codes.

248
00:13:55,560 --> 00:13:59,340
There are 32 of them.

249
00:13:59,340 --> 00:14:03,380
I am going to be sprinting on adding this to the Python package index.

250
00:14:03,380 --> 00:14:09,180
If you're going to be around during the sprint, you can look me up and say hi.

251
00:14:09,180 --> 00:14:12,180
Thank you very much.

252
00:14:12,180 --> 00:14:17,980
Thank you, Steve.

253
00:14:17,980 --> 00:14:20,940
Our next speaker you may remember is Veronica.

254
00:14:20,940 --> 00:14:24,940
I couldn't bear to have cut her off and not find out what is at the end of this talk about

255
00:14:24,940 --> 00:14:26,880
putting images in your Git commits.

256
00:14:26,880 --> 00:14:30,580
So we only ever do this exceptionally, but there's two more minutes.

257
00:14:30,580 --> 00:14:32,780
She did resubmit and follow the process.

258
00:14:32,780 --> 00:14:40,540
So please give Veronica a big hand.

259
00:14:40,540 --> 00:14:43,300
But not too long of a bib can, okay?

260
00:14:43,300 --> 00:14:44,300
Okay.

261
00:14:44,300 --> 00:14:45,300
So here I was.

262
00:14:45,300 --> 00:14:49,460
I decided that I needed to add screenshots to my documentation.

263
00:14:49,460 --> 00:14:52,660
And so I came back to bring you all the sequel.

264
00:14:52,660 --> 00:14:58,160
So if you were here this morning, but just in case you weren't, our hero was struggling

265
00:14:59,160 --> 00:15:07,160
messages that brought to mind the visual changes that were being made in her frontend projects.

266
00:15:07,160 --> 00:15:13,640
And so this brought the frustration as you're learning both design principles and working

267
00:15:13,640 --> 00:15:19,500
on your frontend work, rolling back those commits to the right one is really difficult

268
00:15:19,500 --> 00:15:23,440
and can really mess with your flow if you're additionally learning Git.

269
00:15:23,440 --> 00:15:26,520
I swear I tried everything I could.

270
00:15:26,520 --> 00:15:31,520
I tried to handle one problem at a time and I said perhaps since I'm keeping a folder

271
00:15:31,520 --> 00:15:35,040
of screenshots, I will just refer to that.

272
00:15:35,040 --> 00:15:40,140
But it wasn't connected to any particular commit message, so I still ran into that commit

273
00:15:40,140 --> 00:15:42,680
problem I had before.

274
00:15:42,680 --> 00:15:48,880
Once I was within my editor, I had some help from plugins that allowed me to see what colors

275
00:15:48,880 --> 00:15:54,400
I was using, but that really didn't solve the problem that I had in mind.

276
00:15:54,400 --> 00:15:59,400
So as I was moving towards a solution, I said maybe this folder of screenshots could

277
00:15:59,400 --> 00:16:06,680
be placed inside my repo and then linked.

278
00:16:06,680 --> 00:16:10,040
So I did have some problems with this.

279
00:16:10,040 --> 00:16:12,440
Time spent taking the screenshot by hand.

280
00:16:12,440 --> 00:16:14,200
I might forget to add that screenshot.

281
00:16:14,200 --> 00:16:16,240
I had used all the tools I could.

282
00:16:16,240 --> 00:16:23,560
I learned about screenshot diffing and talked to some designers and then learned that they

283
00:16:23,560 --> 00:16:30,280
had a Git for design and that was amazing and eventually got ready to dive in and use

284
00:16:30,280 --> 00:16:39,080
some of the tools of screenshot diffing, puppeteer and pipetteer, and use Git hooks to kind of

285
00:16:39,080 --> 00:16:42,600
tap puppeteer or pipetteer.

286
00:16:42,600 --> 00:16:49,760
One thing I'm working on right now is creating a terminal prompt to help me save by hand

287
00:16:49,840 --> 00:16:53,600
and my helpful timer tells me that I am out of time.

288
00:16:53,600 --> 00:16:57,480
So I wanted to share with all of you this information.

289
00:16:57,480 --> 00:17:03,240
If you want to find out more about the tools that I use, this is the slide to take a picture

290
00:17:03,240 --> 00:17:09,240
of and I wish all of you a wonderful day.

291
00:17:09,240 --> 00:17:19,640
Thank you so much.

292
00:17:19,640 --> 00:17:21,720
I'm so glad we finally got to the end of that.

293
00:17:21,720 --> 00:17:27,080
It's so nice when you get a long story and you finally get closure at the end.

294
00:17:27,080 --> 00:17:32,320
I enjoy that sort of thing.

295
00:17:32,320 --> 00:17:38,880
Please give Brian a good hand for his next talk.

296
00:17:38,920 --> 00:17:40,360
Hi, my name is Brian Skin.

297
00:17:40,360 --> 00:17:44,640
I'm a chemical engineer by day and I dabble quite a bit in Python on the side.

298
00:17:44,640 --> 00:17:49,640
For this lightning talk, what I want to do is give a quick demo of a side project I'm

299
00:17:49,640 --> 00:17:50,640
working on.

300
00:17:50,640 --> 00:17:56,040
Hard to resist the recursive acronym, PENT extracts numerical text.

301
00:17:56,040 --> 00:18:01,440
Who has had to work with data in a file or a string trying to scrape it and getting it

302
00:18:01,440 --> 00:18:04,080
into a data structure?

303
00:18:04,080 --> 00:18:08,760
Who has beaten their head against the wall trying to get the data out of that file or

304
00:18:08,760 --> 00:18:09,760
data structure?

305
00:18:09,760 --> 00:18:10,760
All right.

306
00:18:10,760 --> 00:18:11,760
Awesome.

307
00:18:11,760 --> 00:18:12,760
You're in the right place.

308
00:18:12,760 --> 00:18:13,760
Hopefully.

309
00:18:13,760 --> 00:18:19,320
So what I put together, I pull up Python here.

310
00:18:19,320 --> 00:18:21,000
So this is just a data file.

311
00:18:21,000 --> 00:18:25,200
It's something that I'm playing with on the side but it's got numbers in it.

312
00:18:25,200 --> 00:18:31,080
There's obviously structure to it but it's all one big string if you pull it into Python.

313
00:18:31,480 --> 00:18:37,440
You can write reg X and then proofread your reg X and maintain your reg X and it hurts.

314
00:18:37,440 --> 00:18:42,440
So this project PENT, let me pull in the data first.

315
00:18:42,440 --> 00:18:45,440
Real quick.

316
00:18:45,440 --> 00:18:46,440
Data.txt.

317
00:18:46,440 --> 00:18:47,440
Read text.

318
00:18:47,440 --> 00:18:48,440
All right.

319
00:18:48,440 --> 00:18:49,440
We have data.

320
00:18:49,440 --> 00:19:00,440
So in just a couple of lines, I'm going to take this block of code and I'm going to take

321
00:19:00,760 --> 00:19:04,360
this block of data and I'm going to pull it into a list.

322
00:19:04,360 --> 00:19:17,080
PENT works around a parser and this block of data has a header to it that you can specify

323
00:19:17,080 --> 00:19:18,080
this way.

324
00:19:18,080 --> 00:19:23,000
So there's this, I'm typing a mini language here that I'm not going to explain because

325
00:19:23,000 --> 00:19:26,560
I don't have time.

326
00:19:26,880 --> 00:19:31,360
What I'm doing is I'm laying in the framework of this data in a way that the parser will

327
00:19:31,360 --> 00:19:36,840
understand it and only take what I want.

328
00:19:36,840 --> 00:19:37,840
All right.

329
00:19:37,840 --> 00:19:40,320
That's okay with that.

330
00:19:40,320 --> 00:19:45,520
So I'm now going to capture the body of this on data.

331
00:19:45,520 --> 00:19:47,320
There it is.

332
00:19:47,320 --> 00:19:50,320
One line.

333
00:19:50,320 --> 00:19:53,960
So maybe somebody has done this before.

334
00:19:53,960 --> 00:19:58,040
If they have, please tell me so I don't have to keep figuring this out.

335
00:19:58,040 --> 00:20:02,920
All this is doing under the hood is just generating regex so you don't have to.

336
00:20:02,920 --> 00:20:04,560
Isn't that nice?

337
00:20:04,560 --> 00:20:08,560
Isn't that lovely?

338
00:20:08,560 --> 00:20:10,280
So you can tweak it.

339
00:20:10,280 --> 00:20:17,200
If I want to capture both the leading integer, I just add one character, run it again, and

340
00:20:17,200 --> 00:20:18,560
I get them both.

341
00:20:18,560 --> 00:20:21,920
So I'm here through the first day of sprints on Monday.

342
00:20:21,920 --> 00:20:27,800
If you have any questions about it or really what I need are people to try it on live data

343
00:20:27,800 --> 00:20:30,560
and tell me where it doesn't work so that I can fix it.

344
00:20:30,560 --> 00:20:32,840
So that's all I've got.

345
00:20:32,840 --> 00:20:38,840
Again the repo is Bskin on GitHub, BTskin on Twitter if you want to find me.

346
00:20:38,840 --> 00:20:40,480
The documentation is in progress.

347
00:20:40,480 --> 00:20:44,160
If you do install it, make sure you install dash dash pre, pip install for pre-releases

348
00:20:44,160 --> 00:20:46,520
because it's pre-released at the moment.

349
00:20:46,520 --> 00:20:47,520
Thank you very much.

350
00:20:47,520 --> 00:20:57,040
Thanks very much.

351
00:20:57,040 --> 00:20:58,760
Having a few AV problems on the left.

352
00:20:58,760 --> 00:21:01,760
With the next speaker that's up on this side, come and start getting ready.

353
00:21:01,760 --> 00:21:05,320
I have to do my job up and cover up some dead air.

354
00:21:05,320 --> 00:21:08,920
So the style of jokes that I like is called a shaggy dog story.

355
00:21:08,920 --> 00:21:12,440
Did you know there is actually an original shaggy dog story?

356
00:21:12,440 --> 00:21:14,920
Does anyone know the original shaggy dog story?

357
00:21:14,920 --> 00:21:22,600
Well, I'm here to fill in that gap in your knowledge everyone.

358
00:21:22,600 --> 00:21:26,760
So there's this boy and he has a dog and everyone seems to comment on the fact that it's a very

359
00:21:26,760 --> 00:21:31,440
shaggy dog and they say boy, your dog is sure shaggy.

360
00:21:31,440 --> 00:21:32,680
And so he goes, you know what I'm going to do?

361
00:21:32,680 --> 00:21:36,560
I'm going to enter my dog into the village shaggy dog competition.

362
00:21:36,560 --> 00:21:39,600
And there's a number of quite shaggy dogs but it turns out the judges decide that his

363
00:21:39,600 --> 00:21:40,920
is the shaggiest and he wins the prize.

364
00:21:40,920 --> 00:21:42,720
And he's like, wow, that's amazing.

365
00:21:42,720 --> 00:21:46,880
And the judges go, by the way, you are qualified to enter the regional shaggy dog championships.

366
00:21:46,880 --> 00:21:49,280
And he goes, okay.

367
00:21:49,280 --> 00:21:50,280
I haven't thought about it.

368
00:21:50,280 --> 00:21:52,600
I won't win but let's give it a go.

369
00:21:52,600 --> 00:21:56,640
He takes his dog to the regional shaggy dog championship and convinces his parents to

370
00:21:56,640 --> 00:21:59,600
go there on a Saturday.

371
00:21:59,600 --> 00:22:04,720
And wow, there's some amazingly shaggy dogs like this thing, the shagginess of them.

372
00:22:04,720 --> 00:22:08,640
And he goes, gosh, I've never seen dogs of this shagginess but fine, I guess I'm here.

373
00:22:08,640 --> 00:22:09,640
We'll give it a go.

374
00:22:10,560 --> 00:22:16,000
Despite the strength of the competition, the judges vote his dog is the shaggiest dog in

375
00:22:16,000 --> 00:22:17,000
the region.

376
00:22:17,000 --> 00:22:18,000
And so he wins.

377
00:22:18,000 --> 00:22:22,240
And that qualifies him for the nationals.

378
00:22:22,240 --> 00:22:23,760
And so he goes, well, mom, would this be okay?

379
00:22:23,760 --> 00:22:27,040
I mean, I know it's a bit silly but like, I mean, it's just going to be a Saturday or

380
00:22:27,040 --> 00:22:28,040
whatever.

381
00:22:28,040 --> 00:22:29,040
We could take it away.

382
00:22:29,040 --> 00:22:30,040
The nationals, come on.

383
00:22:30,040 --> 00:22:31,520
I never thought we were going to do this with just my shaggy dog.

384
00:22:31,520 --> 00:22:33,560
And his parents say, okay, fine.

385
00:22:33,560 --> 00:22:36,280
They go to the national competition of the shaggiest dog.

386
00:22:36,920 --> 00:22:39,960
And he goes, that's going to be the end of it.

387
00:22:39,960 --> 00:22:43,720
So I'll tell you what happens at the national shaggy dog championships with our boy and

388
00:22:43,720 --> 00:22:45,800
his dog after the next talk.

389
00:22:45,800 --> 00:22:47,800
Please give our speaker a big hand.

390
00:22:47,800 --> 00:22:53,240
Hi, everybody.

391
00:22:53,240 --> 00:22:56,320
I'm here to represent Pai Ladies Brazil.

392
00:22:56,320 --> 00:22:57,320
My name is Deborah Azevedo.

393
00:22:57,320 --> 00:22:59,440
It's my first PaiCon.

394
00:22:59,440 --> 00:23:03,800
And I'm really excited to be here.

395
00:23:03,800 --> 00:23:06,480
And I'm here because I love to spread the word about Pai Ladies.

396
00:23:06,480 --> 00:23:10,880
So if you want to reach me, you can find me at PaiDab over there.

397
00:23:10,880 --> 00:23:13,320
This information is going to be in the last slide, too.

398
00:23:13,320 --> 00:23:19,000
So I'm here to talk about a very nice conference that we had last year in Brazil for women

399
00:23:19,000 --> 00:23:21,720
only, which was called Pai Ladies BRConf.

400
00:23:21,720 --> 00:23:30,480
Pai Ladies BRConf was thought because we had the fifth anniversary of Pai Ladies Brazil.

401
00:23:30,480 --> 00:23:33,240
We've been there for five years now.

402
00:23:33,680 --> 00:23:38,440
We thought of this conference to celebrate the birthday and all our accomplishments and

403
00:23:38,440 --> 00:23:40,240
everything.

404
00:23:40,240 --> 00:23:45,800
So we had 200 people enrolled, 150 attendees.

405
00:23:45,800 --> 00:23:50,640
And this event was 100% made and attended by women.

406
00:23:50,640 --> 00:23:55,680
We only had women organizing and we only had women, people who identified themselves as

407
00:23:55,680 --> 00:23:58,120
women, attending this event.

408
00:23:58,120 --> 00:24:00,800
So here we have some pictures of the people.

409
00:24:00,800 --> 00:24:03,360
Unfortunately, it was a morning and afternoon event.

410
00:24:03,360 --> 00:24:06,120
So some people, they were in the morning, they were in the afternoon.

411
00:24:06,120 --> 00:24:09,080
But it was really, really nice.

412
00:24:09,080 --> 00:24:14,660
And I want to thank you, to thank the PSF who helped us to make this happen.

413
00:24:14,660 --> 00:24:18,420
And also the Brazilian Python Association, which also supported us.

414
00:24:18,420 --> 00:24:21,240
So thank you very much.

415
00:24:21,240 --> 00:24:26,900
And we've been changing this scenario of the Python conferences in Brazil.

416
00:24:27,000 --> 00:24:32,060
So we usually had a lot more men than we do now.

417
00:24:32,060 --> 00:24:38,020
So one of the biggest things that we did to make this happen was to start crowdfunding

418
00:24:38,020 --> 00:24:44,900
to make Pai Ladies from different Pai Ladies chapters all over Brazil to go to this conference.

419
00:24:44,900 --> 00:24:52,140
Because it usually happens in a city that's far from most of the Pai Ladies chapter cities.

420
00:24:52,140 --> 00:24:58,140
So we started doing this crowdfunding and it helped us increase a lot of number of women.

421
00:24:58,140 --> 00:25:03,160
Not only attendees, but also speakers, people who propose tutorials and everything.

422
00:25:03,160 --> 00:25:04,580
So I have some pictures.

423
00:25:04,580 --> 00:25:11,860
So this was Pai Ladies Brazil, the representation of Pai Ladies Brazil in the PyCon Brazil 2016.

424
00:25:11,860 --> 00:25:16,300
And here we have in 2017, which has already increased.

425
00:25:16,300 --> 00:25:24,300
And here we have the picture of the last Python Brazil, the PyCon Brazil from last year.

426
00:25:24,300 --> 00:25:29,140
So in Pai Ladies Brazil we have over 30 active groups.

427
00:25:29,140 --> 00:25:34,020
So I dare to say that Pai Ladies Brazil is the biggest Pai Ladies chapter of the world.

428
00:25:34,020 --> 00:25:38,540
It's a really huge number of actually active groups.

429
00:25:38,540 --> 00:25:45,300
So we have the chapters in the cities, but then we are like this huge sisterhood of the

430
00:25:45,300 --> 00:25:49,100
chapters all together in a unique place.

431
00:25:49,100 --> 00:25:54,300
And then we have 20 registered chapters in the official Pai Ladies website.

432
00:25:54,300 --> 00:25:59,160
So we are still working on it to have all the chapters like officialized.

433
00:25:59,160 --> 00:26:05,800
So if you want to know if there is Pai Ladies in your city in Brazil, you can go to PaiLadies.com

434
00:26:05,800 --> 00:26:07,940
and you'll find it there.

435
00:26:07,940 --> 00:26:14,200
Our Telegram group has more than 400 users and we use it to communicate informally.

436
00:26:14,200 --> 00:26:18,040
We have our Google groups to talk about official things.

437
00:26:18,040 --> 00:26:21,320
But is it 100% success?

438
00:26:21,320 --> 00:26:23,160
Well, it's not.

439
00:26:23,160 --> 00:26:26,360
It's a lot of hard work and working with people is hard.

440
00:26:26,360 --> 00:26:30,320
As it was already told here in this conference, that is easy.

441
00:26:30,320 --> 00:26:31,520
People are hard.

442
00:26:31,520 --> 00:26:34,320
So we are working on that.

443
00:26:34,320 --> 00:26:39,400
So we have a lot of things to work on, for example, documenting how to organize a conference

444
00:26:39,400 --> 00:26:42,720
or how to organize Pai Ladies Brazil Conv.

445
00:26:42,840 --> 00:26:44,080
That's what happens.

446
00:26:44,080 --> 00:26:50,560
We did Pai Ladies by Ladies Conv last year, one day before the main conference of Pai

447
00:26:50,560 --> 00:26:52,340
from Brazil happened.

448
00:26:52,340 --> 00:26:57,480
So we used to do this prior to the main conference so we can take advantage of the girls who

449
00:26:57,480 --> 00:26:59,780
are going to attend the conference.

450
00:26:59,780 --> 00:27:01,740
But it's really hard to organize all that.

451
00:27:01,740 --> 00:27:03,360
How to do a crowdfunding.

452
00:27:03,360 --> 00:27:07,240
So you're having some trouble to document it.

453
00:27:07,320 --> 00:27:12,920
Well, I wish I could see you guys tomorrow in the open space, 2 p.m., room 22, to talk

454
00:27:12,920 --> 00:27:17,800
about Pai Ladies and how to keep the community engaged, keep people doing things, keep them

455
00:27:17,800 --> 00:27:19,800
motivated to do things.

456
00:27:19,800 --> 00:27:22,520
Because it's a lot of hard work, it's volunteer work.

457
00:27:22,520 --> 00:27:24,720
So it's really hard.

458
00:27:24,720 --> 00:27:28,960
And we want to keep it active, organic, and keep people engaged.

459
00:27:28,960 --> 00:27:30,360
So thank you very much.

460
00:27:30,360 --> 00:27:33,440
If you have any questions, you can email me or find me at Twitter.

461
00:27:33,440 --> 00:27:34,440
Thank you.

462
00:27:34,440 --> 00:27:35,440
Thank you.

463
00:27:44,480 --> 00:27:49,160
So he takes his dog to the national Shaggy Dog Championships.

464
00:27:49,160 --> 00:27:53,600
And I mean, there's some incredibly shaggy dogs here and they line up the sort of top

465
00:27:53,600 --> 00:27:54,600
ten.

466
00:27:54,600 --> 00:27:56,160
The judges inspect them one by one.

467
00:27:56,160 --> 00:28:01,560
They come up to his dog and they look at it and feel the shagginess of its hair.

468
00:28:01,560 --> 00:28:02,560
And there's a lot of suspense.

469
00:28:02,960 --> 00:28:04,760
They announce the winners in reverse order.

470
00:28:04,760 --> 00:28:06,720
Obviously, he's not number three and he's not number two.

471
00:28:06,720 --> 00:28:07,800
And he goes, fine, let's go home.

472
00:28:07,800 --> 00:28:09,360
But yeah, he wins.

473
00:28:09,360 --> 00:28:12,120
He wins the national Shaggy Dog Championships.

474
00:28:12,120 --> 00:28:16,080
And that qualifies him for the worldwide Shaggy Dog Championships.

475
00:28:16,080 --> 00:28:18,120
He's like, this is crazy.

476
00:28:18,120 --> 00:28:19,120
I never thought in my life.

477
00:28:19,120 --> 00:28:21,560
And his parents, like, by this stage, they're like, of course, of course, you know, we'll

478
00:28:21,560 --> 00:28:22,560
pay.

479
00:28:22,560 --> 00:28:24,480
And they're in Uzbekistan.

480
00:28:24,480 --> 00:28:29,280
And so they fly to Uzbekistan with the dog and they ruffle up its hair especially so

481
00:28:29,280 --> 00:28:31,400
that it looks extra shaggy.

482
00:28:31,440 --> 00:28:35,840
And they get to this, like, the international worldwide Shaggy Dog Competition.

483
00:28:35,840 --> 00:28:37,640
And there's some incredible dogs here.

484
00:28:37,640 --> 00:28:39,880
Not only are they shaggy, but they've got special features.

485
00:28:39,880 --> 00:28:40,880
This one is curly.

486
00:28:40,880 --> 00:28:43,880
This one is straight.

487
00:28:43,880 --> 00:28:45,520
And so, you know, same sort of setup.

488
00:28:45,520 --> 00:28:47,920
It's the same sort of setup.

489
00:28:47,920 --> 00:28:51,320
The dogs climb up onto various podiums and the judges come by and inspect them one by

490
00:28:51,320 --> 00:28:52,320
one.

491
00:28:52,320 --> 00:28:54,560
And he's sort of nervous there sitting there with his shaggy dog.

492
00:28:54,560 --> 00:29:00,120
The judges come over and they look at his dog and they go, it's not that shaggy.

493
00:29:01,600 --> 00:29:15,040
Are you ready, Anthony, to tell us about Fair OSS?

494
00:29:15,040 --> 00:29:16,040
Yes, I am.

495
00:29:16,040 --> 00:29:21,920
Please give Anthony a big hand.

496
00:29:21,920 --> 00:29:22,920
Thanks everybody.

497
00:29:22,920 --> 00:29:24,000
Delighted to see you all.

498
00:29:24,000 --> 00:29:30,480
So I'm here to talk about Fair OSS, which is a new startup that we're just getting started

499
00:29:30,840 --> 00:29:33,600
It's a public benefit corporation.

500
00:29:33,600 --> 00:29:37,720
Before we get into that, just a couple of moments on who I am.

501
00:29:37,720 --> 00:29:40,800
I am the founding treasurer of NumbFocus.

502
00:29:40,800 --> 00:29:44,960
I've been around the Pydata ecosystem for a really long time.

503
00:29:44,960 --> 00:29:46,840
And I work at QuantSight now.

504
00:29:46,840 --> 00:29:50,800
And Fair OSS is my next big thing.

505
00:29:50,800 --> 00:29:52,920
So what is Fair OSS?

506
00:29:52,920 --> 00:29:58,340
So it is a public benefit corporation structured around Fair open source.

507
00:29:58,340 --> 00:30:02,660
And then the last S can mean one of three things, depending on how you want to look

508
00:30:02,660 --> 00:30:03,660
at it.

509
00:30:03,660 --> 00:30:08,460
So either society, sustainability, or software.

510
00:30:08,460 --> 00:30:14,740
And really what this means is, or what our goal is rather, is to amplify the production

511
00:30:14,740 --> 00:30:19,020
and maintenance of freely shareable intellectual property.

512
00:30:19,020 --> 00:30:23,200
So we all know that open source software has a huge maintenance burden.

513
00:30:23,200 --> 00:30:29,440
And we're trying to tackle that in a community-led, developer-owned way.

514
00:30:29,440 --> 00:30:36,240
And so we're trying to set up a system that isn't a 501c3 like NumbFocus, but instead

515
00:30:36,240 --> 00:30:42,040
is this public benefit corporation that everyone can be a part of.

516
00:30:42,040 --> 00:30:46,380
And you can think about this kind of analogous to other public benefit corporations that

517
00:30:46,380 --> 00:30:51,560
exist that we all kind of know and love, like the Fair Trade Movement, Organic Certification,

518
00:30:51,560 --> 00:30:56,440
and those kinds of labeling activities.

519
00:30:56,440 --> 00:30:58,700
And so there's sort of two sides to this.

520
00:30:58,700 --> 00:31:00,960
So the one side is you all.

521
00:31:00,960 --> 00:31:05,280
It's the developers and the creators of the open source software or other intellectual

522
00:31:05,280 --> 00:31:07,080
property.

523
00:31:07,080 --> 00:31:12,520
And this is where your input is really needed on what does it mean to be fair and how you

524
00:31:12,520 --> 00:31:16,360
want to participate with companies in a fair way.

525
00:31:16,360 --> 00:31:18,300
And then the other side is the businesses.

526
00:31:18,300 --> 00:31:25,480
So what Ferro Assess will be doing is we'll be providing certifications that businesses

527
00:31:25,480 --> 00:31:31,980
are adhering to the best principles of our ecosystem and our communities.

528
00:31:31,980 --> 00:31:33,720
And there's a number of strategies there.

529
00:31:33,720 --> 00:31:36,300
But we're in the very early stages of just setting this up.

530
00:31:36,300 --> 00:31:43,220
We finally incorporated on Thursday, so that's excellent.

531
00:31:43,220 --> 00:31:48,180
And one thing I think we need to be successful is to really connect with communities outside

532
00:31:48,180 --> 00:31:51,780
of the Python community and outside of the PyData community.

533
00:31:51,780 --> 00:31:55,140
Obviously we want to start here, but there's a lot of open source software out there in

534
00:31:55,140 --> 00:31:56,140
the world.

535
00:31:56,140 --> 00:31:59,500
And, you know, we need more eyes than just ourselves.

536
00:31:59,500 --> 00:32:05,460
So to that end, we're developing what we're, for lack of a better term right now, we're

537
00:32:05,460 --> 00:32:07,120
calling equity badges.

538
00:32:07,120 --> 00:32:09,500
So there's obviously a few different levels, right?

539
00:32:09,500 --> 00:32:13,180
So you can think of this as sort of silver, gold, platinum.

540
00:32:13,180 --> 00:32:15,200
We might come up with different names.

541
00:32:15,200 --> 00:32:19,880
But basically what happens is, or what we envision happening is that Ferro Assess will

542
00:32:19,880 --> 00:32:24,880
go out and certify a business that they're responsibly and sustainably using open source

543
00:32:24,880 --> 00:32:30,240
in some way, and then we'll license to them a trademark that they can use that then you

544
00:32:30,240 --> 00:32:34,960
all will know this company is doing open source the right way.

545
00:32:34,960 --> 00:32:36,940
And they can use that in marketing and recruitment.

546
00:32:36,940 --> 00:32:42,320
So that's kind of the one of the fundraising mechanisms that we'll employ.

547
00:32:42,320 --> 00:32:49,160
And then we'll use that money from the licensing to feed back into the maintenance, pay for

548
00:32:49,160 --> 00:32:53,080
maintainers to do maintenance and those other activities.

549
00:32:53,080 --> 00:32:59,380
And so really, if a company is successful, then the open source projects that they're

550
00:32:59,380 --> 00:33:00,920
using are also successful.

551
00:33:00,920 --> 00:33:05,660
So we're trying to couple those things a lot more than they are right now.

552
00:33:05,660 --> 00:33:09,720
And companies that are sort of already engaging with us in this process, even though we're

553
00:33:09,720 --> 00:33:16,440
in a really early stage, are Auto Auto, Tennovox, Vertelo, Saturn Cloud, OpenTeams, and of course

554
00:33:16,440 --> 00:33:19,680
QuantSight and slash QuantSight Futures.

555
00:33:19,680 --> 00:33:21,360
So thank you all.

556
00:33:21,360 --> 00:33:23,360
We'd love to hear your feedback.

557
00:33:23,360 --> 00:33:27,640
I'm at Scopet's kind of everywhere, or you can email me.

558
00:33:27,640 --> 00:33:29,640
It's going to be a great journey.

559
00:33:29,640 --> 00:33:35,980
Thanks.

560
00:33:35,980 --> 00:33:36,980
Thank you, Anthony.

561
00:33:36,980 --> 00:33:41,100
Can I also get a round of applause for the AV technicians who took this failing laptop

562
00:33:41,100 --> 00:33:42,220
as an absolute challenge.

563
00:33:42,220 --> 00:33:43,900
They would not give up.

564
00:33:43,900 --> 00:33:44,900
They had one.

565
00:33:44,900 --> 00:33:46,260
Then there were two of them.

566
00:33:46,260 --> 00:33:48,060
They switched it on and off about 12 times.

567
00:33:48,060 --> 00:33:50,080
And it is now finally working.

568
00:33:50,080 --> 00:33:52,300
So Joey is going to be able to give us his talk.

569
00:33:52,300 --> 00:33:54,300
Please give him a round of applause.

570
00:33:54,300 --> 00:33:55,300
Okay.

571
00:33:55,300 --> 00:33:59,100
All right.

572
00:33:59,100 --> 00:34:02,860
So what a fitting introduction.

573
00:34:02,860 --> 00:34:06,580
This is sort of the premise of my talk is kind of easing the experience for developers

574
00:34:06,580 --> 00:34:10,340
whenever they're beginning on a project.

575
00:34:10,340 --> 00:34:15,540
So this always comes up, at least whenever I'm developing a feature or working with some

576
00:34:15,540 --> 00:34:16,540
users.

577
00:34:16,540 --> 00:34:19,380
We always talk about the user experience.

578
00:34:19,380 --> 00:34:21,120
This not so much.

579
00:34:21,120 --> 00:34:24,420
This doesn't always often come up.

580
00:34:24,420 --> 00:34:27,740
And so at MailChimp, I hear this a lot.

581
00:34:27,740 --> 00:34:32,140
I've heard this every software project I've ever worked on in my entire life.

582
00:34:32,140 --> 00:34:34,220
And I think I'll always probably hear that.

583
00:34:34,220 --> 00:34:37,420
And I feel like I encountered that today during my presentation.

584
00:34:37,420 --> 00:34:40,180
I feel like every single speaker has had zero issue.

585
00:34:40,180 --> 00:34:44,700
And then I come up here and had several.

586
00:34:44,700 --> 00:34:49,900
So at MailChimp, we kind of have some some givens.

587
00:34:49,900 --> 00:34:53,940
Basically we sort of have a very uniform hardware and OS environment.

588
00:34:53,940 --> 00:34:57,120
So we all pretty much have MacBook Pros.

589
00:34:57,120 --> 00:34:59,180
And then we all mostly run Mac OS.

590
00:34:59,180 --> 00:35:03,280
Some people, you do have the freedom and flexibility to choose Linux if you want.

591
00:35:03,280 --> 00:35:07,020
But a lot of our tooling and a lot of our decisions are made under the assumption that

592
00:35:07,020 --> 00:35:10,460
our development teams will be using this kind of uniform environment.

593
00:35:10,460 --> 00:35:12,000
So we covered those first.

594
00:35:12,000 --> 00:35:17,720
And then sort of when you choose Linux, that's a sort of choose your own adventure.

595
00:35:17,720 --> 00:35:21,660
And then I also tend to support my Linux users, at least for the internal products that I

596
00:35:21,660 --> 00:35:22,660
work for.

597
00:35:22,660 --> 00:35:25,180
I try to include everybody.

598
00:35:25,180 --> 00:35:28,760
But not every team will have that kind of flexibility.

599
00:35:28,760 --> 00:35:33,860
So this is sort of an engineering message that we carry internally at MailChimp.

600
00:35:33,860 --> 00:35:37,040
And so it's the idea of reducing cognitive load as much as possible.

601
00:35:37,040 --> 00:35:40,600
And so again, this kind of follows the pattern of having a uniform environment where I don't

602
00:35:40,600 --> 00:35:43,660
have to consider every single tiny little edge case.

603
00:35:43,660 --> 00:35:49,100
I can hit sort of the main group and then that encompasses everything.

604
00:35:49,100 --> 00:35:50,840
So these are kind of some of the things to keep in mind.

605
00:35:50,840 --> 00:35:54,800
Again, this is a little bit opinionated and given how we do things where we are.

606
00:35:54,800 --> 00:35:58,900
But hopefully you can apply it to your development project.

607
00:35:58,900 --> 00:36:00,700
And then this is another one.

608
00:36:00,700 --> 00:36:05,360
So what I'm about to tell you in demo in a second, it's not going to be new and trendy.

609
00:36:05,360 --> 00:36:09,380
I'm pretty sure the majority of you will maybe roll your eyes or begin looking at your phone

610
00:36:09,380 --> 00:36:11,920
and scrolling through Twitter, but that's okay.

611
00:36:11,920 --> 00:36:16,980
The idea is just to kind of work towards what can get us going and what can get us developing

612
00:36:16,980 --> 00:36:22,100
features and increasing our user experience and helping them and our developer experience

613
00:36:22,120 --> 00:36:25,360
by not over complicating.

614
00:36:25,360 --> 00:36:27,000
So with that, we'll go ahead.

615
00:36:27,000 --> 00:36:29,000
Oops, wrong way.

616
00:36:29,000 --> 00:36:30,000
Demo.

617
00:36:30,000 --> 00:36:36,840
So this would be basically just it's a kind of a blank, empty demo kind of application.

618
00:36:36,840 --> 00:36:39,940
But typically this is sort of what something would look like.

619
00:36:39,940 --> 00:36:43,200
And so you'll notice that there's this script directory.

620
00:36:43,200 --> 00:36:44,200
Hopefully this is big enough.

621
00:36:44,200 --> 00:36:46,200
I can increase it.

622
00:36:46,200 --> 00:36:47,200
Oops.

623
00:36:47,200 --> 00:36:48,200
Oops.

624
00:36:48,200 --> 00:36:51,200
Maybe I can't.

625
00:36:51,300 --> 00:36:52,300
Nope.

626
00:36:52,300 --> 00:36:55,300
Sorry about that.

627
00:36:55,300 --> 00:36:56,300
There's my history.

628
00:36:56,300 --> 00:37:05,300
So I'll try again.

629
00:37:05,300 --> 00:37:07,300
So here's your directory.

630
00:37:07,300 --> 00:37:10,300
Again, we have this script directory.

631
00:37:10,300 --> 00:37:14,220
And so what's in here, these are all mostly bash scripts that actually run and each one

632
00:37:14,220 --> 00:37:16,020
has a very clear purpose.

633
00:37:16,020 --> 00:37:19,620
And these are very uniformly named across the company in every single project that we

634
00:37:19,620 --> 00:37:20,620
have.

635
00:37:21,040 --> 00:37:25,720
And so when I come into a project, all I do is I clone the repo out of GitHub.

636
00:37:25,720 --> 00:37:30,320
And then basically I know that I already have my machine is set with the core things that

637
00:37:30,320 --> 00:37:31,320
I need.

638
00:37:31,320 --> 00:37:34,840
And then I begin running sort of like there's certain scripts.

639
00:37:34,840 --> 00:37:40,520
So one thing that we often do is if you run script help, that kind of gives you a directory

640
00:37:40,520 --> 00:37:43,040
listing of everything that's here and what you need to run.

641
00:37:43,040 --> 00:37:46,380
And so the ones I like to point out is we have a script slash bootstrap.

642
00:37:46,380 --> 00:37:47,880
And so basically you just run this.

643
00:37:48,140 --> 00:37:51,380
And then in a few minutes later it downloads basically all the software, all the libraries,

644
00:37:51,380 --> 00:37:53,220
all the dependencies, everything you need.

645
00:37:53,220 --> 00:37:56,860
It checks all of your configuration of anything locally installed.

646
00:37:56,860 --> 00:38:00,240
But we do have our development environments for the most part in Docker.

647
00:38:00,240 --> 00:38:03,540
And so basically it's just making sure your Docker environments there.

648
00:38:03,540 --> 00:38:04,540
There's no kind of special configs.

649
00:38:04,540 --> 00:38:06,340
And if there is, it alerts you.

650
00:38:06,340 --> 00:38:08,100
And then again, all of these little helpers.

651
00:38:08,100 --> 00:38:12,740
So when we want to vendor something, add it in, remove it, there's a helper for you.

652
00:38:12,740 --> 00:38:15,220
So you would just say vendor install package name.

653
00:38:15,220 --> 00:38:16,700
I want to remove this package.

654
00:38:16,720 --> 00:38:17,720
And then it would just say here uninstall.

655
00:38:17,720 --> 00:38:20,360
And then it would remove it from the project.

656
00:38:20,360 --> 00:38:21,680
And so that's kind of basically it.

657
00:38:21,680 --> 00:38:25,000
If this interests you or anything, it's sort of a different pattern.

658
00:38:25,000 --> 00:38:28,960
The more common one that you may see is make files.

659
00:38:28,960 --> 00:38:31,840
There's a lot of reasons why we don't use make files internally.

660
00:38:31,840 --> 00:38:35,200
And I can discuss that if you'd like.

661
00:38:35,200 --> 00:38:36,800
But there we go.

662
00:38:36,800 --> 00:38:37,800
Thank you very much.

663
00:38:37,940 --> 00:38:45,420
Thank you very much.

664
00:38:45,420 --> 00:38:47,260
A little bit of housekeeping.

665
00:38:47,260 --> 00:38:50,340
Anyone that was thinking of doing a lightning talk about a conference, we actually have

666
00:38:50,340 --> 00:38:54,220
a special slot for people who want to announce conferences.

667
00:38:54,220 --> 00:38:57,460
And we basically give conference speakers just one minute and one slide.

668
00:38:57,460 --> 00:38:58,940
And we do that on Sunday morning.

669
00:38:58,940 --> 00:39:03,580
So if you'd like to advertise one of your local conferences or even the next PyCon,

670
00:39:03,580 --> 00:39:05,180
I don't know.

671
00:39:05,360 --> 00:39:10,920
Maybe someone will advertise the next conference in more than one slide in more than one minute.

672
00:39:10,920 --> 00:39:15,240
But yes, please send us your slides.

673
00:39:15,240 --> 00:39:19,520
And we'll fit a slot for just all the conference announcements tomorrow morning on Sunday at

674
00:39:19,520 --> 00:39:21,640
what is also a very good slot for lightning talks.

675
00:39:21,640 --> 00:39:27,760
I am certainly looking forward to the 8.30 a.m. Sunday lightning talks session that I

676
00:39:27,760 --> 00:39:28,760
have to chair.

677
00:39:28,760 --> 00:39:29,760
Yeah.

678
00:39:29,760 --> 00:39:30,760
Uh-huh.

679
00:39:30,760 --> 00:39:33,840
So please give, I was going to say Scott, yes, please give Scott a huge hand.

680
00:39:33,840 --> 00:39:40,780
Hey, everybody.

681
00:39:40,780 --> 00:39:42,220
My name is Scott Sanderson.

682
00:39:42,220 --> 00:39:47,420
I'm a software engineer working for a startup in Boston called Quantopian.

683
00:39:47,420 --> 00:39:48,820
And that's my day job.

684
00:39:48,820 --> 00:39:55,780
In my spare time, I often enjoy sort of working on strange, unreasonable metaprogramming projects.

685
00:39:55,780 --> 00:40:00,580
So if you may remember me from last year, I showed you how to take all the expressive

686
00:40:00,580 --> 00:40:05,780
power of C-style for loops and put them in your Python class bodies.

687
00:40:05,780 --> 00:40:11,540
And so I was thinking, you know, what new kinds of expressive power we could add to

688
00:40:11,540 --> 00:40:14,180
the Python language.

689
00:40:14,180 --> 00:40:16,580
And I thought and thought and had some kind of different ideas.

690
00:40:16,580 --> 00:40:24,140
And then I realized that I was really being selfish in how I was trying to add new features

691
00:40:24,140 --> 00:40:25,500
to the language.

692
00:40:25,500 --> 00:40:29,460
I think that really is rooted in the fact that I'm part of the millennial generation,

693
00:40:29,500 --> 00:40:35,140
which if you watch any cable news, you know is the most selfish generation.

694
00:40:35,140 --> 00:40:38,620
And I think Python, unfortunately, is language really contributes a lot to that selfishness

695
00:40:38,620 --> 00:40:42,220
because we use the keyword self in a lot of places.

696
00:40:42,220 --> 00:40:46,140
You know, we have self.x, self.y.

697
00:40:46,140 --> 00:40:47,740
We use self everywhere.

698
00:40:47,740 --> 00:40:53,980
And so I was trying to think of ways how can I make the Python language less selfish.

699
00:40:53,980 --> 00:40:58,900
So this is writing selfless Python.

700
00:40:59,140 --> 00:41:01,700
The answer that I came up with is this little library.

701
00:41:01,700 --> 00:41:07,660
So I can do from selfless, import selfless.

702
00:41:07,660 --> 00:41:12,220
And when we're selfless, in a selfless society, we also don't have classes anymore.

703
00:41:12,220 --> 00:41:15,700
Or at least we don't talk about classes explicitly.

704
00:41:15,700 --> 00:41:24,340
So in our selfless programs, what we're going to do is we're going to write classes, but

705
00:41:24,340 --> 00:41:26,220
we're going to pretend as though they were functions.

706
00:41:26,260 --> 00:41:29,900
So I'm going to write a function and decorate it with selfless.

707
00:41:29,900 --> 00:41:34,340
And then we're going to make a simple two-dimensional vector class with an x field and a y field.

708
00:41:34,340 --> 00:41:38,700
So I'm going to do def, vec2, x, y.

709
00:41:38,700 --> 00:41:43,340
And we need to assign the local variable or the instance variables of our class.

710
00:41:43,340 --> 00:41:47,220
So we're just going to do x equals x and y equals y.

711
00:41:47,220 --> 00:41:50,380
And then we should probably put a wrapper on our class so we can read it nicely.

712
00:41:50,380 --> 00:41:53,020
So I'm just going to do def, done to wrapper.

713
00:41:53,020 --> 00:41:54,020
No arguments.

714
00:41:54,860 --> 00:41:57,060
And we'll return.

715
00:41:57,060 --> 00:41:59,100
We'll use a fancy new Python feature, fstrings.

716
00:41:59,100 --> 00:42:01,420
If you're not using fstrings already, they're awesome.

717
00:42:01,420 --> 00:42:05,060
We'll do x equals x and y equals y.

718
00:42:10,860 --> 00:42:15,420
And so now if we look at my vec2 here, you might expect us to have a function here.

719
00:42:15,420 --> 00:42:18,600
But in fact, vec2 is a type.

720
00:42:18,600 --> 00:42:23,960
So I can do v equals vec2.

721
00:42:23,960 --> 00:42:24,960
Construct that.

722
00:42:24,960 --> 00:42:28,520
And I've got a vector here with two fields, x and y.

723
00:42:28,520 --> 00:42:34,760
And of course, we can add more methods to our vector class.

724
00:42:34,760 --> 00:42:38,120
So if I want to add, say, like an add method to this.

725
00:42:38,120 --> 00:42:42,240
So def, add, x, y.

726
00:42:42,240 --> 00:42:46,840
And we're going to return a new vector, vec2.

727
00:42:46,840 --> 00:42:49,280
And we'll do x.

728
00:42:49,280 --> 00:42:52,160
And we need to get that local variable out of our class, of course.

729
00:42:52,160 --> 00:42:55,600
Sorry, this should be another vector.

730
00:42:55,600 --> 00:42:59,880
So we need to get x out of not self, but our vector.

731
00:42:59,880 --> 00:43:09,240
So do x plus v dot x and y plus v dot y.

732
00:43:09,240 --> 00:43:21,240
And now if I do vec2, 1, 2, and I can do v dot add v, now I get a new vector.

733
00:43:21,240 --> 00:43:26,160
So this should be moderately concerning to you, probably, I think.

734
00:43:26,160 --> 00:43:28,000
But so far, we're only reading local variables.

735
00:43:28,000 --> 00:43:33,960
And of course, we all know that the most important best code uses mutable state as much as possible.

736
00:43:33,960 --> 00:43:37,360
So we need to make sure that we can mutate these variables as well.

737
00:43:37,360 --> 00:43:41,120
So we can just do that like def set x.

738
00:43:41,120 --> 00:43:43,720
And we'll take a new x.

739
00:43:43,720 --> 00:43:48,240
And then it's important that mutation of a local variable in our function looks the same

740
00:43:48,240 --> 00:43:51,080
as mutation of an instance variable of the class.

741
00:43:51,080 --> 00:43:52,400
So we can make that happen.

742
00:43:52,400 --> 00:43:58,320
So I can just do x equals new x.

743
00:43:58,320 --> 00:44:00,880
Someone's enjoying that.

744
00:44:00,960 --> 00:44:09,320
So now I've got my vector, but I can do v dot set x, 10, and now my vector is 10.

745
00:44:09,320 --> 00:44:13,000
So if you're curious or horrified or both by any of this and you want to learn about

746
00:44:13,000 --> 00:44:19,760
how this works, this is using a library that I maintain called Code Transformer where I've

747
00:44:19,760 --> 00:44:21,640
implemented this idea.

748
00:44:21,640 --> 00:44:25,800
There's still some kinks to be worked out, but I think this might be the future of a

749
00:44:25,800 --> 00:44:27,360
selfless classless Python.

750
00:44:27,360 --> 00:44:28,080
So thank you very much.

751
00:44:30,880 --> 00:44:38,000
Thank you.

752
00:44:38,000 --> 00:44:39,240
Our next speaker is Travis.

753
00:44:39,240 --> 00:44:40,240
Travis, are you ready to go?

754
00:44:40,240 --> 00:44:41,240
I'm ready to go.

755
00:44:41,240 --> 00:44:42,240
Take it away, Travis.

756
00:44:42,240 --> 00:44:43,240
All right.

757
00:44:43,240 --> 00:44:44,240
Wait, give him a big hand first.

758
00:44:44,240 --> 00:44:47,240
Can you hear me?

759
00:44:47,240 --> 00:44:48,240
Is there's a mic on now?

760
00:44:48,240 --> 00:44:49,240
All right, great.

761
00:44:49,240 --> 00:44:50,720
I don't know whether to be scared or excited by that.

762
00:44:50,720 --> 00:44:51,720
That was pretty interesting.

763
00:44:51,720 --> 00:44:55,520
I get to talk to a lot of folks at QuantSight also who do interesting things but also a

764
00:44:55,520 --> 00:44:56,800
little nervous kinds of things.

765
00:44:56,800 --> 00:44:58,400
There's a lot of things to explore in the world.

766
00:44:58,480 --> 00:45:02,160
I'm here to talk about QuantSight Initiate, which is one of the new things we're doing

767
00:45:02,160 --> 00:45:06,280
at QuantSight to help companies grow out of open source.

768
00:45:06,280 --> 00:45:07,280
Really want to help.

769
00:45:07,280 --> 00:45:08,520
I realize what I want to do when I grow up.

770
00:45:08,520 --> 00:45:10,360
I want to help people build companies.

771
00:45:10,360 --> 00:45:14,320
I was the founder of Anaconda, helped Anaconda grow, and now at QuantSight we're trying to

772
00:45:14,320 --> 00:45:16,280
help other companies grow as well.

773
00:45:16,280 --> 00:45:21,400
So we spun out of Anaconda, we formed QuantSight, and we hope to spin out multiple companies.

774
00:45:21,400 --> 00:45:24,800
We're a service organization at heart, but we build companies.

775
00:45:24,800 --> 00:45:26,920
One of the things we're doing is QuantSight Labs.

776
00:45:26,960 --> 00:45:30,160
Rolf Gommers just joined us as the director, and the goal there is to build a group of

777
00:45:30,160 --> 00:45:33,080
maintainers for the NumPy ecosystem.

778
00:45:33,080 --> 00:45:37,000
Started the NumPy project, started the Sci-Fi project, done lots of work in the open source

779
00:45:37,000 --> 00:45:41,360
community, but kind of feel a little guilty that there's nobody funding this stuff still.

780
00:45:41,360 --> 00:45:44,520
There's just a bunch of people out there, volunteers, wonderful volunteers, but nobody's

781
00:45:44,520 --> 00:45:45,520
funding it primarily.

782
00:45:45,520 --> 00:45:46,760
So we're working at that.

783
00:45:46,760 --> 00:45:50,760
QuantSight Labs will host and hire people to work in that community.

784
00:45:50,760 --> 00:45:52,240
Excited about that, but not going to talk about that.

785
00:45:52,240 --> 00:45:54,360
Going to talk about open source is eating the world.

786
00:45:54,560 --> 00:45:57,920
This is a famous quote by Andreessen Horowitz, but it's not just software.

787
00:45:57,920 --> 00:45:58,920
Open source.

788
00:45:58,920 --> 00:46:02,720
I believe that all software in the future, foundation of that software will be open source.

789
00:46:02,720 --> 00:46:06,520
There'll be some proprietary software, but the foundation will be open source.

790
00:46:06,520 --> 00:46:09,520
All the major buzzwords, all based on open source.

791
00:46:09,520 --> 00:46:12,600
It's winning, and there's articles out there that talk about why it's winning.

792
00:46:12,600 --> 00:46:16,160
Most of them actually don't recognize that the big reason it's winning is because of

793
00:46:16,160 --> 00:46:17,160
the community.

794
00:46:17,160 --> 00:46:19,600
It's about the connectivity it gives us with each other.

795
00:46:19,600 --> 00:46:21,360
It's about connecting people.

796
00:46:21,360 --> 00:46:23,040
That's why it's very similar to businesses.

797
00:46:23,040 --> 00:46:25,000
Businesses are about connecting people also.

798
00:46:25,000 --> 00:46:29,480
So QuantSight Initiate is about trying to help businesses connect with the communities

799
00:46:29,480 --> 00:46:34,960
that they're serving and build new, profitable, explosive businesses around open source.

800
00:46:34,960 --> 00:46:38,120
I've been involved with open source a long, long time.

801
00:46:38,120 --> 00:46:39,920
Some of this has given me some useful information.

802
00:46:39,920 --> 00:46:41,720
Some of these things I probably need to unlearn.

803
00:46:41,720 --> 00:46:47,640
But nonetheless, I've learned a lot about appropriate ways that people can make money

804
00:46:47,640 --> 00:46:51,080
inside of communities, help those communities, and sustain them together.

805
00:46:51,080 --> 00:46:52,080
So QuantSight Initiate.

806
00:46:52,120 --> 00:46:54,000
It's an early-stage seed fund.

807
00:46:54,000 --> 00:46:57,920
We invest in companies that use and rely heavily on open source software.

808
00:46:57,920 --> 00:46:58,920
Companies of interest.

809
00:46:58,920 --> 00:46:59,920
They can be anything.

810
00:46:59,920 --> 00:47:00,920
Come inspire me.

811
00:47:00,920 --> 00:47:02,000
Come excite me about something you're working on.

812
00:47:02,000 --> 00:47:04,800
Tools and platforms that improve OSS collaboration.

813
00:47:04,800 --> 00:47:06,440
Disruptions to legacy software.

814
00:47:06,440 --> 00:47:09,640
There's a lot of that opportunity out there.

815
00:47:09,640 --> 00:47:12,560
Efficiently solve a broad pain point using open source.

816
00:47:12,560 --> 00:47:16,160
QuantSight itself is a service organization that spins out companies well, and we help

817
00:47:16,160 --> 00:47:17,160
those as well.

818
00:47:17,160 --> 00:47:18,160
We have a current portfolio.

819
00:47:18,160 --> 00:47:19,760
It's still early stages.

820
00:47:19,760 --> 00:47:21,800
We're just kicking off the ground.

821
00:47:21,800 --> 00:47:26,480
Saveday, Tenenvox, Rotalo, Anaconda, Auto Auto, Saturn Cloud, Ferro SS.

822
00:47:26,480 --> 00:47:28,280
These are all early-stage companies.

823
00:47:28,280 --> 00:47:30,760
I'll tell you briefly before I go about one of them.

824
00:47:30,760 --> 00:47:31,760
Really excited about it.

825
00:47:31,760 --> 00:47:33,240
Open Teams just started.

826
00:47:33,240 --> 00:47:35,320
We just hired the CEO of this company.

827
00:47:35,320 --> 00:47:37,400
She's going to basically take it and make it big.

828
00:47:37,400 --> 00:47:42,160
And Open Teams is about helping people create, share, and sustain open source projects.

829
00:47:42,160 --> 00:47:45,560
It connects communities and companies at scale.

830
00:47:45,560 --> 00:47:46,620
QuantSight does that.

831
00:47:46,620 --> 00:47:47,800
We do it on a service basis.

832
00:47:47,800 --> 00:47:49,480
We do it on a small basis with individuals.

833
00:47:49,480 --> 00:47:52,040
We can only scale to about 100 people.

834
00:47:52,040 --> 00:47:56,000
Open Teams is about helping us scale that to millions of people connecting hundreds

835
00:47:56,000 --> 00:47:57,720
of thousands of companies.

836
00:47:57,720 --> 00:47:59,240
That's our goal with Open Teams.

837
00:47:59,240 --> 00:48:01,400
Connect, sign up, log in.

838
00:48:01,400 --> 00:48:05,240
You can make a profile for yourself, a way for you to showcase what you do.

839
00:48:05,240 --> 00:48:08,040
We want to make sure people get the credit they deserve, the open source they contribute

840
00:48:08,040 --> 00:48:11,240
to, not just the code credit, but also the presentation credit, the help credit, the

841
00:48:11,240 --> 00:48:15,160
Stack Overflow credit, the credit, all the kinds of contributors that make open source

842
00:48:15,160 --> 00:48:16,160
work.

843
00:48:16,160 --> 00:48:18,940
Let's have all those folks get the credit they deserve from the communities who want

844
00:48:18,940 --> 00:48:20,060
to give it to them.

845
00:48:20,060 --> 00:48:24,280
And then using that, help them get connected to the companies that want to build with those

846
00:48:24,280 --> 00:48:26,500
open source software that they're building.

847
00:48:26,500 --> 00:48:30,340
So help people get compensated for their work, showcase their contributions, and then help

848
00:48:30,340 --> 00:48:35,300
you as a company recruit open source contributors, as well as build projects around your organization.

849
00:48:35,300 --> 00:48:36,300
This is just kicking off.

850
00:48:36,300 --> 00:48:37,300
It's early stages.

851
00:48:37,300 --> 00:48:38,300
There's something there now.

852
00:48:38,300 --> 00:48:39,460
Be looking forward over the next few months.

853
00:48:39,460 --> 00:48:43,260
There'll be a revamp of the site, and it'll be even nicer and even better, but a place

854
00:48:43,260 --> 00:48:45,500
to kind of show your support and get involved.

855
00:48:45,500 --> 00:48:46,540
So that's Open Teams.

856
00:48:46,540 --> 00:48:48,100
That's QuantSight Initiate.

857
00:48:48,100 --> 00:48:49,100
Come talk to me.

858
00:48:49,100 --> 00:48:50,860
Love to have you part of our family.

859
00:48:50,860 --> 00:48:51,860
Thanks.

860
00:48:51,860 --> 00:48:52,860
Thank you very much.

861
00:48:52,860 --> 00:48:59,860
Rami, do you want to do a microphone check?

862
00:48:59,860 --> 00:49:00,860
Hello?

863
00:49:00,860 --> 00:49:01,860
That worked.

864
00:49:01,860 --> 00:49:04,860
Please give Rami a big hand.

865
00:49:04,860 --> 00:49:05,860
Hello.

866
00:49:05,860 --> 00:49:06,860
That worked.

867
00:49:06,860 --> 00:49:07,860
All right.

868
00:49:07,860 --> 00:49:10,860
My name is Rami, like I said.

869
00:49:11,620 --> 00:49:14,620
And I'd like to talk to you about comments.

870
00:49:14,620 --> 00:49:17,620
So we're sometimes told, and I know I've told people this in the past, that comments are

871
00:49:17,620 --> 00:49:20,620
for the future version of you, and that's why you should write them.

872
00:49:20,620 --> 00:49:23,620
I've changed my mind on this a little bit.

873
00:49:23,620 --> 00:49:28,620
I'm not entirely sure that's entirely true, but you should write them anyway.

874
00:49:28,620 --> 00:49:32,620
So the thing is, as developers, we get mixed messages about commenting our code.

875
00:49:32,620 --> 00:49:37,620
We're taught sometimes to comment profusely, put comments in a lot of different ways.

876
00:49:38,380 --> 00:49:41,380
That way, everyone knows what's going on.

877
00:49:41,380 --> 00:49:45,380
And we're taught other times that actually commenting is redundant and your code should

878
00:49:45,380 --> 00:49:50,380
be self-explanatory and people should just read the docs if they don't know what it does.

879
00:49:50,380 --> 00:49:53,380
And who has time anyway, right?

880
00:49:53,380 --> 00:49:56,380
Well, all right.

881
00:49:56,380 --> 00:49:58,380
Who wants to read code like that?

882
00:49:58,380 --> 00:50:01,380
Raise your hand if you know exactly what's going on right now.

883
00:50:01,380 --> 00:50:02,380
Yeah, I didn't think so.

884
00:50:02,380 --> 00:50:03,380
Okay.

885
00:50:03,380 --> 00:50:04,380
Let's refactor it.

886
00:50:04,380 --> 00:50:05,380
Okay?

887
00:50:06,140 --> 00:50:07,140
Let's refactor it.

888
00:50:07,140 --> 00:50:08,140
Okay?

889
00:50:08,140 --> 00:50:12,620
Let's refactor it, add some meaningful variable names, call some methods instead of using

890
00:50:12,620 --> 00:50:14,260
obscure operators.

891
00:50:14,260 --> 00:50:15,260
Still know what's going on?

892
00:50:15,260 --> 00:50:16,260
No?

893
00:50:16,260 --> 00:50:17,260
Okay.

894
00:50:17,260 --> 00:50:18,260
How about now?

895
00:50:18,260 --> 00:50:19,740
I don't know about you.

896
00:50:19,740 --> 00:50:23,220
I actually find it much easier to understand what's going on now, even with the harder

897
00:50:23,220 --> 00:50:27,580
read version of the code, because there's context.

898
00:50:27,580 --> 00:50:34,100
We're all problem solvers, but to solve problems efficiently and effectively, you need context.

899
00:50:34,100 --> 00:50:37,620
So also the thing to remember and the thing that I want to remind people is that your

900
00:50:37,620 --> 00:50:40,620
primary domain is many other people's secondary domain.

901
00:50:40,620 --> 00:50:43,300
So I've given everyone a chance to look at this code.

902
00:50:43,300 --> 00:50:45,300
Raise your hand if you know what's going on.

903
00:50:45,300 --> 00:50:46,300
All right.

904
00:50:46,300 --> 00:50:48,580
I see a small number of hands up.

905
00:50:48,580 --> 00:50:49,580
Okay.

906
00:50:49,580 --> 00:50:50,580
How about now?

907
00:50:50,580 --> 00:50:55,140
You know what's going on?

908
00:50:55,140 --> 00:50:58,040
As good problem solvers, we don't just work in isolation.

909
00:50:58,040 --> 00:51:01,340
We know that our solutions are read much more often than they're written.

910
00:51:02,340 --> 00:51:05,180
And a little bit of this, let's say you're a data scientist and one of your coworkers

911
00:51:05,180 --> 00:51:09,020
who's primarily a web developer goes in and has to work on some of your code.

912
00:51:09,020 --> 00:51:11,700
Well, this way you can be pretty sure that they're going to do it right.

913
00:51:11,700 --> 00:51:15,300
They're not going to change any of the logic that you worked so hard to perfect.

914
00:51:15,300 --> 00:51:18,940
And they know what's going on in your code.

915
00:51:18,940 --> 00:51:20,540
I don't want to hate on web developers.

916
00:51:20,540 --> 00:51:21,540
I'm a web developer myself.

917
00:51:21,540 --> 00:51:26,100
Let's say you're a web developer and you say, okay, I have to help my data scientist colleagues

918
00:51:26,100 --> 00:51:28,220
post some functionality as a REST API.

919
00:51:28,220 --> 00:51:30,620
I give them this code snippet, call it a day.

920
00:51:31,580 --> 00:51:32,780
Oh, how about now?

921
00:51:32,780 --> 00:51:37,980
See, now they make sure that they actually know how to use that code snippet and they're

922
00:51:37,980 --> 00:51:41,180
not going to break stuff that you're going to be called upon to fix later.

923
00:51:41,180 --> 00:51:44,060
Comments are good.

924
00:51:44,060 --> 00:51:47,880
Also remember that many other people's primary domain is your secondary domain.

925
00:51:47,880 --> 00:51:49,740
And so, you know, it kind of goes both ways.

926
00:51:49,740 --> 00:51:53,580
Who looks at that React component and goes, woohoo, I know what's happening.

927
00:51:53,580 --> 00:51:54,580
Okay.

928
00:51:54,580 --> 00:51:56,820
I see a small number of names.

929
00:51:56,820 --> 00:51:58,100
Tell a lot of people that's clear as day.

930
00:51:58,100 --> 00:52:01,940
I personally, I still struggle with the order of arguments to reduce.

931
00:52:01,940 --> 00:52:04,620
I frequently forget to put the accumulator in.

932
00:52:04,620 --> 00:52:05,620
Lots of things.

933
00:52:05,620 --> 00:52:09,660
I have to look at it to figure out what the hell is going on.

934
00:52:09,660 --> 00:52:12,180
I find this much, much easier to understand.

935
00:52:12,180 --> 00:52:13,180
There's comments.

936
00:52:13,180 --> 00:52:14,180
I know what's going on.

937
00:52:14,180 --> 00:52:18,820
And critically, I could make that one line change that I actually wanted to make without

938
00:52:18,820 --> 00:52:21,940
having to remember things like the order of arguments to reduce or whether I should use

939
00:52:21,940 --> 00:52:27,180
accumulator.concat or .push.

940
00:52:27,180 --> 00:52:30,140
So even future you doesn't remember context.

941
00:52:30,140 --> 00:52:31,780
Sometimes you're wary of over commenting.

942
00:52:31,780 --> 00:52:33,620
You're in the middle of flow.

943
00:52:33,620 --> 00:52:35,060
You've got your code working.

944
00:52:35,060 --> 00:52:36,060
You know what's happening.

945
00:52:36,060 --> 00:52:37,860
The person reviewing your code knows what's happening.

946
00:52:37,860 --> 00:52:40,020
You put a one line comment in and call it a day.

947
00:52:40,020 --> 00:52:41,020
You comment it, right?

948
00:52:41,020 --> 00:52:42,780
You put context in.

949
00:52:42,780 --> 00:52:46,820
But then six months later, someone looks at that code and says, were they having a philosophical

950
00:52:46,820 --> 00:52:49,620
discussion about the meaning of free will?

951
00:52:49,620 --> 00:52:52,420
Oh, okay.

952
00:52:52,420 --> 00:52:53,420
That's what they were doing.

953
00:52:53,420 --> 00:52:57,020
So this is for tests to make sure we don't break our test so now everybody's happy.

954
00:52:57,020 --> 00:53:00,260
And we still have code coverage in our CI passes and GitHub has the little green check

955
00:53:00,260 --> 00:53:02,100
mark.

956
00:53:02,100 --> 00:53:06,860
So I'm just saying think of other people that might read your code, not just future you.

957
00:53:06,860 --> 00:53:08,660
But if you're a data scientist, think of a web developer.

958
00:53:08,660 --> 00:53:11,300
If you're a web developer, think of a DevOps person.

959
00:53:11,300 --> 00:53:14,380
If you're a DevOps person, think of a data scientist.

960
00:53:14,380 --> 00:53:20,320
And if you're all three, come talk to me.

961
00:53:20,320 --> 00:53:25,140
And you may be surprised by who your comments help out, even if they're not a traditional

962
00:53:26,140 --> 00:53:27,140
So, yeah.

963
00:53:27,140 --> 00:53:28,140
I'm Rami.

964
00:53:28,140 --> 00:53:30,700
You can find me on the internet as Necris.

965
00:53:30,700 --> 00:53:33,900
You can find me in real life by this giant purple hat.

966
00:53:33,900 --> 00:53:42,780
Thank you for listening.

967
00:53:42,780 --> 00:53:43,780
Thanks very much.

968
00:53:43,780 --> 00:53:50,140
Here's a tip for both seasoned conference goers and newcomers.

969
00:53:50,140 --> 00:53:53,420
When you're at lunch and you've lost all your normal friends, you could spend a long time

970
00:53:53,420 --> 00:53:56,740
trying to find your normal friends or just go and join a table full of random people.

971
00:53:56,740 --> 00:53:59,100
It's a much better way of meeting people.

972
00:53:59,100 --> 00:54:02,300
So if you haven't done that, people do want you to come and sit at their table, interrupt

973
00:54:02,300 --> 00:54:03,300
their conversation.

974
00:54:03,300 --> 00:54:04,300
Hi, my name's X.

975
00:54:04,300 --> 00:54:05,300
What are you talking about?

976
00:54:05,300 --> 00:54:07,540
We're all here to meet new people.

977
00:54:07,540 --> 00:54:09,580
That is one of the primary purposes of the conference.

978
00:54:09,580 --> 00:54:12,260
So if you're ever feeling shy about that, please do that.

979
00:54:12,260 --> 00:54:14,340
If it hadn't occurred to you, please do that.

980
00:54:14,340 --> 00:54:17,700
Join a table of people you've never met before each lunchtime or whenever you're not with

981
00:54:17,700 --> 00:54:19,420
your friends.

982
00:54:19,420 --> 00:54:22,620
With that said, please give our next speaker the biggest hand yet.

983
00:54:22,620 --> 00:54:23,620
Okay.

984
00:54:23,620 --> 00:54:24,620
Okay, good evening.

985
00:54:24,620 --> 00:54:30,900
I'm here to introduce the Python test runner.

986
00:54:30,900 --> 00:54:35,220
It's a small Python wrapper to all our favorite tools that crawls your repo.

987
00:54:35,220 --> 00:54:36,220
I'm Cooper Lees.

988
00:54:36,220 --> 00:54:38,620
I work on those radios at Facebook, Facebook connectivity labs.

989
00:54:38,620 --> 00:54:43,700
They're 60 gigahertz, wireless point to point radios that can do about 1.8 gigabit per second.

990
00:54:43,700 --> 00:54:48,680
And we had partners that wouldn't run our tests, so I tried to make it easier for them.

991
00:54:48,680 --> 00:54:51,180
Do you want CI, but it takes so long to set up?

992
00:54:51,180 --> 00:54:53,900
Do you have multiple projects in one big repo?

993
00:54:53,900 --> 00:54:56,900
Do they all have different testing coverage, linting and formatting requirements?

994
00:54:56,900 --> 00:55:00,860
If so, then PTR or Python test runner is probably for you.

995
00:55:00,860 --> 00:55:06,980
Also, it doesn't tie you into GitHub pre-hooks, so it can run in some vendors' strange CI

996
00:55:06,980 --> 00:55:07,980
environment.

997
00:55:07,980 --> 00:55:13,580
It runs on all modern operating systems and Linus.

998
00:55:13,580 --> 00:55:15,060
And so what are we actually going to be doing?

999
00:55:15,060 --> 00:55:16,480
So we're going to run unit tests.

1000
00:55:16,480 --> 00:55:20,060
We have the ability to enforce coverage on per file basis.

1001
00:55:20,060 --> 00:55:22,700
We can apply formatting with everyone's favorite formatter.

1002
00:55:22,700 --> 00:55:26,380
We can check for lint errors, and then we also do some static type analysis.

1003
00:55:26,380 --> 00:55:28,660
All our favorite projects, as you'd expect.

1004
00:55:28,660 --> 00:55:33,300
Coverage Black, Flake8, MyPy, and PyR, which is Facebook's type checker.

1005
00:55:33,300 --> 00:55:37,320
So just go off, run pip install PTR and PTR help, and away you go.

1006
00:55:37,320 --> 00:55:39,200
But let's have a quicker look.

1007
00:55:39,200 --> 00:55:42,220
The nice thing it does different to TOCs or any other test runner is if you have a mono

1008
00:55:42,220 --> 00:55:46,400
repo where there's a project in A, B, and C directories, we will crawl in there and

1009
00:55:46,400 --> 00:55:49,400
look for a setup.cfg or a setup.py.

1010
00:55:49,400 --> 00:55:52,940
And there will be a stanza in your setup.cfg that we'll take a look at in a sec, or in

1011
00:55:52,940 --> 00:55:56,640
setup.cfg you'll have a stanza in the I and I file.

1012
00:55:56,640 --> 00:56:01,880
And also uses async IOTA subprocess and run them all in parallel, and you can set that

1013
00:56:01,880 --> 00:56:06,920
parallelism based on your AWS instances or capacity.

1014
00:56:06,920 --> 00:56:10,200
The example of setup.cfg, you just have a PTR stanza.

1015
00:56:10,200 --> 00:56:14,640
You said your entry point modules and some other if you want to run Black, MyPy, et cetera.

1016
00:56:14,640 --> 00:56:19,400
So if you go and look at the CI of PTR itself, it runs PTR, so it's testing meta, testing

1017
00:56:19,400 --> 00:56:23,480
inception, and it will also run every single option.

1018
00:56:23,480 --> 00:56:27,000
Then if you want to also, if you're still traditional like I am predominantly, you can

1019
00:56:27,000 --> 00:56:31,820
add a dictionary to setup.py and we'll pass the AST to pull out that configuration and

1020
00:56:31,820 --> 00:56:35,560
run the CI that you want.

1021
00:56:35,560 --> 00:56:41,040
To do a sample run, because I'm scared of live demos, basically make a virtual env,

1022
00:56:41,040 --> 00:56:44,840
call PTR and then basically run it from the root of your repository.

1023
00:56:44,840 --> 00:56:49,880
It'll crawl and find those configured projects and run all the CI that you ask it to.

1024
00:56:49,880 --> 00:56:53,600
Otherwise you can use the dash B option to just run your project while you're working

1025
00:56:53,600 --> 00:56:56,920
on it so you don't run the whole repos and you can use it locally on Mac, Windows and

1026
00:56:56,920 --> 00:56:57,920
Linux.

1027
00:56:57,920 --> 00:56:59,440
I'll be around at the sprints if you want to see it.

1028
00:56:59,440 --> 00:57:01,560
I can help plummet up to your CI.

1029
00:57:01,560 --> 00:57:05,160
That's PTR available now on PyPI.

1030
00:57:05,160 --> 00:57:12,040
Thanks very much.

1031
00:57:12,040 --> 00:57:16,040
Please give all of our lightning talk speakers from today, from yesterday and from this evening

1032
00:57:16,040 --> 00:57:18,600
a huge, huge hand.

1033
00:57:18,600 --> 00:57:22,400
Thanks very much to each and every one of you for coming here, for being here for this

1034
00:57:22,400 --> 00:57:25,200
whole conference and specifically for this session.

1035
00:57:25,200 --> 00:57:29,720
That is the end of PyCon's talks period for today, but there's lots more activities as

1036
00:57:29,720 --> 00:57:30,900
I'm sure you know.

1037
00:57:31,900 --> 00:57:35,700
Check out the open spaces, check out dinners, check out after party events or get home early

1038
00:57:35,700 --> 00:57:36,700
to bed.

1039
00:57:36,700 --> 00:57:37,700
That's one option.

1040
00:57:37,700 --> 00:57:43,700
If you have to come to the lightning talks tomorrow morning, there are 8.30, not 8.31.

1041
00:57:43,700 --> 00:57:47,460
And people who are giving talks should be informed about those shortly.

1042
00:57:47,460 --> 00:57:51,500
And so you have to show up like me at like 8.15, okay?

1043
00:57:51,500 --> 00:57:55,500
So that means you have to have breakfast by 8, work backwards.

1044
00:57:55,500 --> 00:57:58,900
If you've got jet lag that's getting you up at about 5 a.m. every day, you might have

1045
00:57:58,900 --> 00:58:00,540
a chance.

1046
00:58:00,540 --> 00:58:02,940
Always it's just your commitment and discipline.

1047
00:58:02,940 --> 00:58:05,940
Ah, good night everyone.

