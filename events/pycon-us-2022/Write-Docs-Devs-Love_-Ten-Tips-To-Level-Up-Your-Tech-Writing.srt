1
00:00:00,000 --> 00:00:10,880
All right, folks, thank you very much for the last talk of this session.

2
00:00:10,880 --> 00:00:16,920
If you get a chance, download the QR code, actually, download it, photograph it, take

3
00:00:16,920 --> 00:00:18,280
a picture of it.

4
00:00:18,280 --> 00:00:20,340
These slides are amazing.

5
00:00:20,340 --> 00:00:22,140
So you'll want to like have an extra copy.

6
00:00:22,140 --> 00:00:24,200
You can peruse them while you're watching the talk.

7
00:00:24,200 --> 00:00:26,240
Zoom in on them if you like to feel like that.

8
00:00:26,600 --> 00:00:28,160
But I'll give you an extra minute to do that and

9
00:00:28,160 --> 00:00:29,800
hopefully we won't overload the Wi-Fi.

10
00:00:33,800 --> 00:00:37,560
All right, and with that being said, I'm gonna introduce Mason Egger.

11
00:00:37,560 --> 00:00:41,480
And he's gonna teach us How to Write Docs Devs Love,

12
00:00:41,480 --> 00:00:44,440
10 Tricks to Level Up Your Tech Writing.

13
00:00:44,440 --> 00:00:45,440
Take it away.

14
00:00:45,440 --> 00:00:46,560
Awesome, thank you everyone.

15
00:00:46,560 --> 00:00:47,200
How's everybody going?

16
00:00:47,200 --> 00:00:47,720
Woo.

17
00:00:47,720 --> 00:00:53,600
This is my first in-person conference talk since 2019.

18
00:00:53,600 --> 00:00:54,800
It's great to be back.

19
00:00:54,800 --> 00:00:57,800
Yes, these slides are dense.

20
00:00:57,800 --> 00:00:59,600
I have a lot of information on them.

21
00:00:59,600 --> 00:01:03,120
So if you want to follow along, I know that it's gonna be hard to see from the back.

22
00:01:03,120 --> 00:01:04,280
You'll be able to follow along from there.

23
00:01:05,600 --> 00:01:06,520
So yeah, first, who am I?

24
00:01:06,520 --> 00:01:07,480
My name is Mason Egger.

25
00:01:07,480 --> 00:01:11,520
I am a developer advocate at Gretel, which is a synthetic data company.

26
00:01:11,520 --> 00:01:12,200
Talk about that later.

27
00:01:13,280 --> 00:01:16,560
Prior to my work at Gretel, I was a developer advocate and

28
00:01:16,560 --> 00:01:21,760
community author at DigitalOcean, which is where I learned a lot of

29
00:01:21,760 --> 00:01:23,240
everything that I'm about to teach you today.

30
00:01:23,240 --> 00:01:27,120
If you've never seen or used DigitalOcean's tutorials, they're fantastic.

31
00:01:27,120 --> 00:01:30,400
There was a lot of great people there that taught me a lot about documentation,

32
00:01:30,400 --> 00:01:32,280
and now I'm gonna share that with you.

33
00:01:32,280 --> 00:01:36,360
So just to kind of set the stage a little bit, start out.

34
00:01:36,360 --> 00:01:37,960
Let's talk about what is tech writing.

35
00:01:39,480 --> 00:01:43,440
So think about that feeling you get when you follow an online tutorial.

36
00:01:43,440 --> 00:01:46,480
You're copying and pasting the code blocks, you're executing stuff, and

37
00:01:46,480 --> 00:01:48,520
it just magically works on the first run.

38
00:01:48,520 --> 00:01:51,400
You don't have to go hunt anything down, it just works.

39
00:01:51,400 --> 00:01:53,400
And you're like, wow, that's amazing.

40
00:01:53,400 --> 00:01:57,480
And then think about all the time you've wasted hunting down documentation that

41
00:01:57,480 --> 00:02:00,320
doesn't work, it forgot a step, something's missing.

42
00:02:01,560 --> 00:02:04,440
It just doesn't work at all, and now you're frustrated and

43
00:02:04,440 --> 00:02:06,760
you don't know what to do and you have to go Google.

44
00:02:06,760 --> 00:02:08,200
It's not good docs.

45
00:02:08,200 --> 00:02:10,680
So what is the difference between the two of those?

46
00:02:10,680 --> 00:02:15,040
What made one successful and what made the other one unsuccessful?

47
00:02:15,040 --> 00:02:17,800
And we're gonna talk about that in this talk today.

48
00:02:17,800 --> 00:02:20,080
But just a quick high level overview.

49
00:02:20,080 --> 00:02:21,760
I like defining things.

50
00:02:21,760 --> 00:02:23,640
Technical writing is instructional or

51
00:02:23,640 --> 00:02:29,240
informative writing that focuses on how to accomplish a task using a specific tool.

52
00:02:29,240 --> 00:02:31,480
So why is technical writing important?

53
00:02:31,480 --> 00:02:33,760
Well, technical writing is very important,

54
00:02:33,760 --> 00:02:36,760
cuz it's usually the first impression that someone has of your project.

55
00:02:38,080 --> 00:02:41,040
If someone goes to your project, tries to use it, can't figure out the docs,

56
00:02:41,040 --> 00:02:45,560
usually within a couple of minutes, they're going to go somewhere else.

57
00:02:45,560 --> 00:02:49,200
There are very few libraries in the world that are the only library on Earth

58
00:02:49,200 --> 00:02:50,160
that do it.

59
00:02:50,160 --> 00:02:53,800
So your docs are actually one of your first levels of marketing and

60
00:02:53,800 --> 00:02:57,080
getting people to use your product, your open source project or anything.

61
00:02:58,880 --> 00:03:02,120
Your technical docs teach people how to use your project or your code.

62
00:03:02,120 --> 00:03:05,600
And if you're not teaching people how to use it, what are you doing?

63
00:03:05,600 --> 00:03:07,240
You kinda need to have it there.

64
00:03:07,240 --> 00:03:11,280
When was the last time that you found out about a new project just by looking at

65
00:03:11,280 --> 00:03:15,560
code, by going to GitHub and opening up somebody's app.py?

66
00:03:15,560 --> 00:03:18,760
The read me doesn't count, the read me or technical docs.

67
00:03:18,760 --> 00:03:21,520
Very few people will actually find new projects and

68
00:03:21,520 --> 00:03:24,880
new code by opening up GitHub and reading source code.

69
00:03:24,880 --> 00:03:29,040
If you do, congrats, I applaud you, but most of the world doesn't do it that way.

70
00:03:30,600 --> 00:03:34,280
Technical documentation teaches users how to use your project effectively and

71
00:03:34,280 --> 00:03:35,200
safely.

72
00:03:35,200 --> 00:03:38,800
Imagine you were filling up your tire and the documentation said,

73
00:03:38,800 --> 00:03:44,640
fill up the tire with air or fill up the tire with air to 35 psi.

74
00:03:44,640 --> 00:03:46,760
That last part, if you don't have that,

75
00:03:46,760 --> 00:03:49,840
could lead to some disastrous efforts if you don't include it.

76
00:03:49,840 --> 00:03:53,760
So having technical writing helps you build community around your projects.

77
00:03:53,760 --> 00:03:57,560
Actually one of the first steps in building community around any project.

78
00:03:57,560 --> 00:03:59,320
It allows people to come back.

79
00:03:59,320 --> 00:04:01,480
It's very likely to bring people back.

80
00:04:01,480 --> 00:04:03,120
People will want to contribute.

81
00:04:03,120 --> 00:04:05,840
People get really excited, but those docs are so great.

82
00:04:05,840 --> 00:04:08,800
I wanna go contribute to that project and they'll do so.

83
00:04:08,800 --> 00:04:10,440
And then they'll tell their friends about it,

84
00:04:10,440 --> 00:04:12,680
which is how we all know that we're all at PyCon.

85
00:04:12,680 --> 00:04:15,880
I know a lot of you have shared that, you should check out this library,

86
00:04:15,880 --> 00:04:16,960
you should check out that library.

87
00:04:16,960 --> 00:04:20,240
Word of mouth is a great way of talking about stuff.

88
00:04:20,240 --> 00:04:24,200
So you need to have your docs, kind of work is like helping you build your

89
00:04:24,200 --> 00:04:25,560
community.

90
00:04:25,560 --> 00:04:30,360
So today I'm gonna talk about my top ten tricks and tips to,

91
00:04:30,360 --> 00:04:34,280
I put trips on there cuz I decided to combine them and can't spell,

92
00:04:34,280 --> 00:04:36,120
for improving your technical writing.

93
00:04:36,120 --> 00:04:37,720
Disclaimer, these are mine.

94
00:04:37,720 --> 00:04:41,640
These are mine, as in, this is my opinion.

95
00:04:41,640 --> 00:04:45,080
There may be something on here that I completely have left out that you think

96
00:04:45,120 --> 00:04:47,440
is amazing, doesn't make it any less amazing.

97
00:04:47,440 --> 00:04:50,840
This is just what I've dealt with and what I've learned in my,

98
00:04:50,840 --> 00:04:53,160
the two and a half years that I spent working at DigitalOcean,

99
00:04:53,160 --> 00:04:55,160
working on writing content.

100
00:04:55,160 --> 00:04:58,320
Just because it's not on here doesn't mean it's not great.

101
00:04:58,320 --> 00:04:59,760
And picking ten was tough.

102
00:04:59,760 --> 00:05:01,640
If I was able to give this talk in its entirety,

103
00:05:01,640 --> 00:05:05,480
this would be Mason's 374 tips on improving your documentation.

104
00:05:05,480 --> 00:05:07,280
None of you would stay for that talk.

105
00:05:07,280 --> 00:05:09,360
I wouldn't stay for that talk, I'd get up and leave.

106
00:05:09,360 --> 00:05:11,240
So we're gonna go with ten today and

107
00:05:11,240 --> 00:05:14,280
hopefully they will be able to help you improve your documentation.

108
00:05:14,320 --> 00:05:17,800
So, tip number ten, make your end goal clear.

109
00:05:17,800 --> 00:05:22,080
Have a clear, concise goal in your documentation in the first paragraph,

110
00:05:22,080 --> 00:05:25,920
in the very beginning, saying, this is what I want you to do.

111
00:05:25,920 --> 00:05:28,360
This library will allow you to do X.

112
00:05:28,360 --> 00:05:32,200
In this tutorial, you will do X by using this.

113
00:05:32,200 --> 00:05:37,840
Be very upfront with the end goal as soon as you start writing your documentation.

114
00:05:37,840 --> 00:05:41,840
If you're writing a tutorial, don't spend a thousand words at the beginning

115
00:05:41,840 --> 00:05:44,320
telling the user how great the technology is.

116
00:05:44,320 --> 00:05:45,400
They already know this.

117
00:05:45,400 --> 00:05:46,720
They're there learning about your stuff.

118
00:05:46,720 --> 00:05:51,000
You don't need to spend the first paragraph on this network library.

119
00:05:51,000 --> 00:05:53,960
Well, in 1976 or 67, they decided to build DARPA.

120
00:05:53,960 --> 00:05:55,240
And like, no, you went too far back.

121
00:05:55,240 --> 00:05:57,040
That's a waste of time and effort.

122
00:05:57,040 --> 00:06:00,320
Don't spend time grandiosing over your tech.

123
00:06:00,320 --> 00:06:02,880
Developers, if they wanna read a novel, they'll go read a novel.

124
00:06:02,880 --> 00:06:05,680
Developers are here to get things done and

125
00:06:05,680 --> 00:06:07,040
they're just gonna skip over that anyway.

126
00:06:07,720 --> 00:06:12,680
Make it blatantly obvious what the reader's gonna learn from this.

127
00:06:12,680 --> 00:06:17,840
Make it like, in this tutorial, you will set up a Apache web server and

128
00:06:17,840 --> 00:06:22,120
you will deploy a static site using Hugo as your static site generator.

129
00:06:22,120 --> 00:06:23,680
Make it, this is what you're gonna get.

130
00:06:23,680 --> 00:06:27,000
That way people can know what they're doing and get going with it.

131
00:06:27,000 --> 00:06:29,240
That's a weird way of phrasing that.

132
00:06:29,240 --> 00:06:33,400
Okay, tip number nine, don't be overly verbose.

133
00:06:33,400 --> 00:06:36,280
Technical documentation should be concise, not a novel.

134
00:06:36,320 --> 00:06:38,840
There are plenty of really good software engineering novels.

135
00:06:38,840 --> 00:06:40,440
I recommend you check them out.

136
00:06:40,440 --> 00:06:43,160
But technical documentation should not be a novel.

137
00:06:43,160 --> 00:06:45,480
SAT words are not necessary here.

138
00:06:45,480 --> 00:06:49,360
If you're unaware of the SAT, it's a collegiate preparatory exam where they

139
00:06:49,360 --> 00:06:53,080
ask you if you know of these words that are in English that nobody uses in

140
00:06:53,080 --> 00:06:55,760
regular vernacular anymore at all.

141
00:06:55,760 --> 00:06:58,360
Vernacular, great word there, no need SAT words here.

142
00:06:59,600 --> 00:07:04,040
Always assume your readers don't speak the same language that you do.

143
00:07:04,080 --> 00:07:08,240
Always assume that they are maybe English native second speakers.

144
00:07:08,240 --> 00:07:10,360
And using really big words or

145
00:07:10,360 --> 00:07:14,840
using words that are not common in everyday speech is going to slow them down.

146
00:07:14,840 --> 00:07:17,320
It's not that they won't know them, but again, it's a waste of time.

147
00:07:18,960 --> 00:07:20,360
Aim for a low reading level.

148
00:07:20,360 --> 00:07:21,680
You can use apps like this.

149
00:07:21,680 --> 00:07:24,880
This is a picture on the side of the Hemingway editor.

150
00:07:24,880 --> 00:07:25,920
Grammarly does this.

151
00:07:25,920 --> 00:07:31,680
Aim for a very low reading level to just get people to be able to read your docs

152
00:07:31,720 --> 00:07:36,240
really quickly and not spend time trying to figure out what the docs say and

153
00:07:36,240 --> 00:07:38,400
more how to do what the docs say.

154
00:07:38,400 --> 00:07:41,960
I personally aim for a third grade reading level.

155
00:07:41,960 --> 00:07:46,000
You should not have to put that much effort into figuring out these docs.

156
00:07:46,000 --> 00:07:47,320
Sometimes it's difficult, so

157
00:07:47,320 --> 00:07:50,600
I'll allow myself to go as high as sixth grade reading level.

158
00:07:50,600 --> 00:07:52,760
Again, this goes back up to my previous point.

159
00:07:52,760 --> 00:07:55,840
This really helps non-native speakers with your documentation.

160
00:07:57,600 --> 00:08:00,840
Tip number eight, use inclusive language.

161
00:08:00,880 --> 00:08:03,160
Avoid using things like gendered pronouns and

162
00:08:03,160 --> 00:08:05,080
go for more gender neutral pronouns.

163
00:08:05,080 --> 00:08:07,920
Don't be afraid to use the second person.

164
00:08:07,920 --> 00:08:09,200
You will do this.

165
00:08:09,200 --> 00:08:10,680
It's totally acceptable.

166
00:08:10,680 --> 00:08:14,480
Somewhere in, at least in my educational experience,

167
00:08:14,480 --> 00:08:16,440
we got told don't use second person.

168
00:08:16,440 --> 00:08:17,560
Always use third.

169
00:08:17,560 --> 00:08:19,240
No, you can use second person.

170
00:08:19,240 --> 00:08:21,800
Use right the way that people speak and

171
00:08:21,800 --> 00:08:23,840
they'll be able to use your docs a whole lot better.

172
00:08:24,920 --> 00:08:28,600
If you're looking for second person plural, I personally, I'm from Texas.

173
00:08:28,600 --> 00:08:30,080
I love the word y'all.

174
00:08:30,080 --> 00:08:33,760
I have an entire talk on the word y'all that I can give at a later date if you

175
00:08:33,760 --> 00:08:37,520
ask me very nicely or if you buy me enough drinks in a bar.

176
00:08:37,520 --> 00:08:38,400
It's really funny.

177
00:08:38,400 --> 00:08:39,720
There is a recording of it on the Internet.

178
00:08:39,720 --> 00:08:40,560
You have to go find it.

179
00:08:41,920 --> 00:08:47,320
Avoid using known Internet slang that can be viewed as demeaning or derogatory.

180
00:08:47,320 --> 00:08:50,600
Words like noobs or 10X developers or dummies.

181
00:08:50,600 --> 00:08:53,280
Your docs are there to teach people not to start a fight.

182
00:08:55,160 --> 00:08:58,120
There's a great series of everything's like blank for dummies.

183
00:08:58,120 --> 00:08:59,040
And it's a great series.

184
00:08:59,040 --> 00:09:00,680
I love them. I think they're great.

185
00:09:00,680 --> 00:09:02,720
I know people who will not buy those books because they're like,

186
00:09:02,720 --> 00:09:04,040
I'm not a dummy.

187
00:09:04,040 --> 00:09:05,160
I get it.

188
00:09:05,160 --> 00:09:05,760
Don't do that.

189
00:09:05,760 --> 00:09:11,440
Don't make people not want to use your docs because of non-inclusive language.

190
00:09:11,440 --> 00:09:12,160
It's only hurting you.

191
00:09:12,160 --> 00:09:13,880
It's not hurting them.

192
00:09:13,880 --> 00:09:17,520
Avoid words that can make someone question or doubt their skill level.

193
00:09:17,520 --> 00:09:22,000
So using stuff like simple or easy, like you should just simply do this,

194
00:09:22,000 --> 00:09:22,560
is not great.

195
00:09:22,560 --> 00:09:25,400
Imagine if you logged on to the Python website and

196
00:09:25,440 --> 00:09:30,000
the first part of the documentation was simply compile and install Python from source.

197
00:09:30,000 --> 00:09:31,960
There's nothing simple about that.

198
00:09:31,960 --> 00:09:35,240
And if I saw that, I'd be like, nope, I'm going to another language,

199
00:09:35,240 --> 00:09:36,600
something that's easier.

200
00:09:36,600 --> 00:09:39,720
So try to avoid using these words.

201
00:09:39,720 --> 00:09:41,480
I mean, you'd be surprised.

202
00:09:41,480 --> 00:09:44,560
You may think that this bullet point is a little bit weird, but

203
00:09:44,560 --> 00:09:46,080
you would be surprised.

204
00:09:46,080 --> 00:09:49,360
You'd be surprised how many people get turned off by seeing something that

205
00:09:49,360 --> 00:09:51,160
other people tell them is simple.

206
00:09:51,160 --> 00:09:54,880
And then it's not simple to them and it turns them off the entire project.

207
00:09:54,880 --> 00:09:56,800
So just avoid using that.

208
00:09:56,800 --> 00:09:58,760
Limit technical jargon.

209
00:09:58,760 --> 00:10:02,040
For those of you, jargon itself is jargon, which I think is hilarious.

210
00:10:02,040 --> 00:10:06,880
Jargon are special words or expressions that are used by a particular profession or

211
00:10:06,880 --> 00:10:11,200
group and are difficult to understand if you're not in that group.

212
00:10:11,200 --> 00:10:15,080
Overuse of jargon can make it difficult for beginners to grok your content.

213
00:10:15,080 --> 00:10:16,120
Did you see what I did there?

214
00:10:16,120 --> 00:10:22,360
I will admit, I was like eight years into the industry before I finally

215
00:10:22,360 --> 00:10:23,680
figured out what that word meant.

216
00:10:23,680 --> 00:10:26,120
I thought people were just making chicken noises.

217
00:10:26,120 --> 00:10:29,800
And I was like, this is a weird way to write code, but I mean, yeah, we'll do it.

218
00:10:29,800 --> 00:10:32,800
So it works.

219
00:10:32,800 --> 00:10:36,040
Knowing your audience will help you decide how much jargon you can use.

220
00:10:36,040 --> 00:10:40,400
So this is, I say limit, this really does depend on the situation.

221
00:10:40,400 --> 00:10:43,280
Are you writing internal documentation for your team?

222
00:10:43,280 --> 00:10:46,520
You may be able to get away with it more because the team is expected to know this

223
00:10:46,520 --> 00:10:47,120
kind of stuff.

224
00:10:48,440 --> 00:10:51,280
If you don't know who your audience is for your documentation,

225
00:10:51,280 --> 00:10:52,880
always assume beginners.

226
00:10:52,880 --> 00:10:56,680
Assume the lowest level and you'll write much better docs.

227
00:10:56,680 --> 00:10:58,720
Again, and this can be a recurring theme,

228
00:10:58,720 --> 00:11:02,600
think back to the person who does not speak your language natively.

229
00:11:02,600 --> 00:11:04,920
It's a lot easier not to use it.

230
00:11:04,920 --> 00:11:08,960
Beginners will always appreciate you overly explaining.

231
00:11:08,960 --> 00:11:12,400
All of you people who are experts, many of you in this field who are experts,

232
00:11:12,400 --> 00:11:15,160
you know you don't read documentation word for word, you know you skim it.

233
00:11:15,160 --> 00:11:16,960
And you're not gonna notice if there's a word there or not,

234
00:11:16,960 --> 00:11:18,680
because you skim and you look for what you need.

235
00:11:19,640 --> 00:11:23,280
So tip number six, define all acronyms.

236
00:11:23,280 --> 00:11:27,320
Tech has way too many acronyms.

237
00:11:27,320 --> 00:11:29,480
It's disheartening and it hurts my soul.

238
00:11:29,480 --> 00:11:32,680
We have so many acronyms that some have two or three meanings.

239
00:11:32,680 --> 00:11:35,080
And you have to use context clues around acronyms.

240
00:11:36,280 --> 00:11:39,840
I would love to see the public school system use that in their English test.

241
00:11:39,840 --> 00:11:41,880
Nobody would get it right, they'd all fail.

242
00:11:41,880 --> 00:11:45,000
Trying to figure out which of these acronyms do you mean?

243
00:11:45,040 --> 00:11:47,720
Acronyms can easily scare away readers.

244
00:11:47,720 --> 00:11:51,360
New learners are very often intimidated.

245
00:11:51,360 --> 00:11:55,240
And acronyms, cuz you can't context clue your way into acronyms.

246
00:11:55,240 --> 00:11:59,960
You just kinda have to know, acronyms will scare your readers away, hands down.

247
00:11:59,960 --> 00:12:04,480
So write out the full name of the acronym when you first introduce it.

248
00:12:04,480 --> 00:12:08,720
So if you're gonna say something like add a record to DNS.

249
00:12:08,720 --> 00:12:12,080
Add, so you would say something like add a record to the domain name system,

250
00:12:12,120 --> 00:12:15,800
comma, DNS, and look, you've now defined it.

251
00:12:15,800 --> 00:12:20,120
And now the reader can understand it and can go forward knowing what it means.

252
00:12:20,120 --> 00:12:25,080
If you plan to use the acronym for the rest of the documentation, say so.

253
00:12:25,080 --> 00:12:30,520
So you take that example, add a record to the domain name system, comma, DNS.

254
00:12:30,520 --> 00:12:33,800
We will refer to the domain name system as DNS for

255
00:12:33,800 --> 00:12:36,720
the rest of this documentation or tutorial.

256
00:12:36,720 --> 00:12:39,280
That really works in longer form content.

257
00:12:39,280 --> 00:12:42,600
If you are planning on, if this is actual technical documentation,

258
00:12:42,600 --> 00:12:44,400
there's nothing wrong with a glossary.

259
00:12:44,400 --> 00:12:47,440
You could just have a glossary and every time you use it, you link to it.

260
00:12:47,440 --> 00:12:49,760
And it could either be a highlight bubble that comes up, or

261
00:12:49,760 --> 00:12:52,960
it can just link to another part of the documentation that is a glossary of all

262
00:12:52,960 --> 00:12:53,680
of your terms.

263
00:12:54,760 --> 00:12:59,160
I spent more time being afraid of acronyms and not using tech because of

264
00:12:59,160 --> 00:13:01,720
the acronyms, and I would like to see them all go away,

265
00:13:01,720 --> 00:13:03,360
at least in beginner-focused content.

266
00:13:04,640 --> 00:13:08,560
Tip number five, and this is the hardest one for me, because I love memes.

267
00:13:08,560 --> 00:13:10,960
I grew up on memes, they're the best thing ever.

268
00:13:10,960 --> 00:13:14,600
But avoid memes, idioms, and regional language.

269
00:13:14,600 --> 00:13:16,960
So you need to avoid using them.

270
00:13:16,960 --> 00:13:20,160
Unless you are positive, you know who your audience is.

271
00:13:20,160 --> 00:13:24,640
For those of you that don't know idioms, it's a group of words established by

272
00:13:24,640 --> 00:13:28,240
a usage that's not deductible by normal people.

273
00:13:28,240 --> 00:13:31,280
So if you use something that's like, that was a piece of cake, or

274
00:13:31,280 --> 00:13:32,920
pulling out all the stops.

275
00:13:32,920 --> 00:13:38,360
These things are not comprehensible to people who are not aware of that idiom,

276
00:13:38,360 --> 00:13:42,880
especially, again, if they're not native speakers of your language,

277
00:13:42,880 --> 00:13:45,160
they'll be overly confusing to use these.

278
00:13:45,160 --> 00:13:46,400
So try to avoid them.

279
00:13:47,560 --> 00:13:50,160
Your six co-workers, if you're writing internal documentation,

280
00:13:50,160 --> 00:13:51,640
might understand these.

281
00:13:51,640 --> 00:13:55,320
A global audience who may have never seen SpongeBob may not get the upper case,

282
00:13:55,320 --> 00:13:58,480
lower case meme, like it just may not happen.

283
00:13:58,480 --> 00:14:02,320
So, and I love memes, I think they're a great way of teaching.

284
00:14:03,400 --> 00:14:06,200
But you should try to avoid them for inclusive documentation.

285
00:14:06,960 --> 00:14:11,600
Avoid using regional language that might confuse native and non-native speakers.

286
00:14:13,000 --> 00:14:16,880
Something like performing this command will totally trash your system, or

287
00:14:16,880 --> 00:14:20,160
don't use this library, it's dodgy, which I had to look up because I don't

288
00:14:20,160 --> 00:14:22,960
understand non-American English.

289
00:14:22,960 --> 00:14:28,160
And we get a lot of regional variants in the United States too.

290
00:14:28,160 --> 00:14:30,400
Coke versus pop versus soda.

291
00:14:30,400 --> 00:14:33,640
Like, just avoid using these kind of phrases, or these kind of things,

292
00:14:33,640 --> 00:14:37,280
where people that aren't from that region won't understand what it is.

293
00:14:39,120 --> 00:14:44,640
Whew, tip number four, use meaningful code samples and variable names.

294
00:14:44,640 --> 00:14:49,640
Use examples of real world problems that your product can solve or

295
00:14:49,640 --> 00:14:51,680
your open source library can solve.

296
00:14:51,680 --> 00:14:54,960
Readers want to know what problems your code solves, show them.

297
00:14:54,960 --> 00:14:57,360
Don't tell them what it does, show them.

298
00:14:57,360 --> 00:15:00,280
If you take nothing away from this talk,

299
00:15:00,280 --> 00:15:04,840
do not tell people what your library does, show people what your library does.

300
00:15:04,840 --> 00:15:07,040
They'll get way more out of it than anything else.

301
00:15:08,040 --> 00:15:11,200
Very often readers will just skip to the code.

302
00:15:11,200 --> 00:15:15,400
How many of you have read the explanation on every Stack Overflow you've ever

303
00:15:15,400 --> 00:15:16,600
Googled?

304
00:15:16,600 --> 00:15:18,800
How many of you have scrolled mid-page down and

305
00:15:18,800 --> 00:15:21,800
only just looked at the answer and didn't even read the text underneath it?

306
00:15:21,800 --> 00:15:23,760
Yeah, raise your hand, I've done it too.

307
00:15:23,760 --> 00:15:27,080
Okay, people skip the text, they go to the code,

308
00:15:27,080 --> 00:15:30,840
so make sure that you're using real world problems for it.

309
00:15:30,840 --> 00:15:32,520
Use meaningful variable names.

310
00:15:32,520 --> 00:15:35,560
We all say snarky things like code should be self-documenting,

311
00:15:35,560 --> 00:15:37,000
which is a lie we tell ourselves.

312
00:15:37,000 --> 00:15:38,920
That's gonna be the title of my autobiography,

313
00:15:38,920 --> 00:15:41,480
code should be self-documenting and other lies we tell ourselves.

314
00:15:42,840 --> 00:15:46,080
Documentation should also be self-documenting.

315
00:15:46,080 --> 00:15:49,440
Foo and bar are useless, they need to go, stop using them.

316
00:15:49,440 --> 00:15:53,320
They mean nothing, nobody understands them, let them go.

317
00:15:53,320 --> 00:15:58,400
Include everything that is needed to run the code.

318
00:15:58,400 --> 00:16:01,040
So this includes things like import statements.

319
00:16:01,040 --> 00:16:03,120
Sometimes I have read documentation where it's like,

320
00:16:03,120 --> 00:16:05,760
great, it's this great piece of code block, and I read through it.

321
00:16:06,840 --> 00:16:09,280
And then I can't get it to work because they didn't tell me how to import their

322
00:16:09,280 --> 00:16:10,560
library.

323
00:16:10,560 --> 00:16:13,600
And I'm like, no, this is sad, and then I have to go figure it out.

324
00:16:13,600 --> 00:16:17,560
Include things, include everything that the user needs to do it.

325
00:16:17,560 --> 00:16:20,960
Always have a completed copy of the code for copy and pasting.

326
00:16:20,960 --> 00:16:24,960
So if you are going to build out, say, a tutorial,

327
00:16:24,960 --> 00:16:28,560
where you're going through and stepping somebody through piece by piece.

328
00:16:28,560 --> 00:16:32,800
So these are the imports, this is how you do part one, part two, part three.

329
00:16:32,800 --> 00:16:36,960
At the very end, include a code block that contains the entire thing.

330
00:16:36,960 --> 00:16:39,600
So people don't have to copy five different code blocks,

331
00:16:39,600 --> 00:16:42,480
they can copy one code block and immediately take it over.

332
00:16:43,800 --> 00:16:46,800
So meaningful code samples, and again, another one.

333
00:16:46,800 --> 00:16:49,880
And this is a tweet quote, if you want, foo and bar are useless,

334
00:16:49,880 --> 00:16:51,000
get rid of them.

335
00:16:51,000 --> 00:16:53,160
That will be my campaign slogan when I run for president.

336
00:16:56,040 --> 00:16:59,960
Tip number three, avoid making your readers leave your docs.

337
00:16:59,960 --> 00:17:03,120
This is a big one that a lot of people don't tend to think about.

338
00:17:03,120 --> 00:17:08,640
So try to avoid sending readers to other sites or to other links.

339
00:17:08,640 --> 00:17:12,640
We all, the internet has all given us this ability to completely forget about

340
00:17:12,640 --> 00:17:15,760
900 tabs at the top of our browser window.

341
00:17:15,760 --> 00:17:17,080
And as soon as you go on to the next one,

342
00:17:17,080 --> 00:17:18,640
it's very likely you'll ever make it back.

343
00:17:19,560 --> 00:17:23,760
Everything necessary to complete your task should be self-contained

344
00:17:23,760 --> 00:17:25,680
within the documentation or within the tutorial.

345
00:17:26,680 --> 00:17:30,880
Copying a few steps from another set of documentation is actually better than

346
00:17:30,880 --> 00:17:33,200
sending your users to like 15 different sites.

347
00:17:34,560 --> 00:17:38,400
If you are going to do this, please don't plagiarize, maybe rewrite it.

348
00:17:38,400 --> 00:17:42,120
Or you could like quote it and give credit back to the author, but

349
00:17:42,120 --> 00:17:43,240
please don't plagiarize.

350
00:17:44,480 --> 00:17:46,680
If you are going to make the reader leave your article,

351
00:17:46,680 --> 00:17:51,600
which again I don't recommend, have a reason and a way to bring them back.

352
00:17:51,600 --> 00:17:53,280
So do it all at the beginning.

353
00:17:53,280 --> 00:17:55,920
And this was something that DigitalOcean did really well with our tutorials and

354
00:17:55,920 --> 00:17:57,120
it's one of the things I loved.

355
00:17:57,120 --> 00:18:01,360
Is at the very top there was a list of prerequisites for the tutorials.

356
00:18:01,360 --> 00:18:05,280
You needed to have Ubuntu installed, you needed to have Python installed, and

357
00:18:05,280 --> 00:18:07,520
you needed, maybe you needed Java installed because you're doing a Minecraft

358
00:18:07,520 --> 00:18:08,760
server or something.

359
00:18:08,760 --> 00:18:11,680
These were well defined at the top and

360
00:18:11,720 --> 00:18:16,800
they were linked to them that would take you out to other places that would do it.

361
00:18:16,800 --> 00:18:19,560
And then you'd come back and as soon as you got into the body of the tutorial,

362
00:18:19,560 --> 00:18:21,920
you would never leave the tutorial again.

363
00:18:21,920 --> 00:18:23,480
So link out to them.

364
00:18:23,480 --> 00:18:27,400
If you have documentation yourself that you've already written that can like link

365
00:18:27,400 --> 00:18:30,000
out to, link out to your own stuff of course.

366
00:18:30,000 --> 00:18:33,960
But try not to leave people hanging and making them go elsewhere.

367
00:18:33,960 --> 00:18:36,400
Don't just say go install Python.

368
00:18:36,400 --> 00:18:40,320
Give them a tutorial that sets them up for success that allows them to do this and

369
00:18:40,320 --> 00:18:42,840
allows them to come back when they have finished.

370
00:18:42,840 --> 00:18:46,480
But yeah, avoid making your reader leave and go to other sites.

371
00:18:46,480 --> 00:18:47,880
You'll never get them back.

372
00:18:47,880 --> 00:18:53,160
You'll be yet another tab in a sea of 600 chrome tabs.

373
00:18:53,160 --> 00:18:56,960
Your computer will overheat because chrome takes all your RAM and

374
00:18:56,960 --> 00:18:58,280
then they reboot and it's gone.

375
00:18:58,280 --> 00:19:00,960
Is that the only one that that happens to?

376
00:19:02,760 --> 00:19:07,160
Okay, tip number two and probably one of the most important tips.

377
00:19:07,160 --> 00:19:09,600
Make your content scannable.

378
00:19:09,920 --> 00:19:11,640
Again, this goes back to that stack overflow thing.

379
00:19:11,640 --> 00:19:13,560
We don't read full documentation.

380
00:19:13,560 --> 00:19:15,520
We scan for what we're looking for.

381
00:19:15,520 --> 00:19:19,160
This is very prevalent amongst the expert and the advanced users.

382
00:19:19,160 --> 00:19:22,040
Beginners, on the other hand, will read all the way through it.

383
00:19:22,040 --> 00:19:26,040
So make it easy for your reader to find a single piece of information.

384
00:19:26,040 --> 00:19:30,200
They may not need the full tutorial on how to install Apache and

385
00:19:30,200 --> 00:19:32,480
get Hugo running and install a static site.

386
00:19:32,480 --> 00:19:36,880
They may just need that one command to figure out how do I actually run

387
00:19:36,880 --> 00:19:38,960
the compilation step to make Hugo work.

388
00:19:39,440 --> 00:19:40,920
They don't need the whole tutorial for that, but

389
00:19:40,920 --> 00:19:43,280
they're gonna go to your tutorial and they're gonna find it.

390
00:19:43,280 --> 00:19:47,640
So, like I said, beginners tend to read entire posts where experienced users

391
00:19:47,640 --> 00:19:51,240
scan for what they need, they get what they need, and they leave.

392
00:19:51,240 --> 00:19:54,240
Use headings and subheadings to break up content.

393
00:19:54,240 --> 00:19:58,680
Outline big changes such as a next step or a change of context.

394
00:19:58,680 --> 00:20:02,280
So if you are in your documentation, you're like, next we're going to do this.

395
00:20:02,280 --> 00:20:05,880
Once you finish one section, introduce the next section, continue on.

396
00:20:07,040 --> 00:20:08,640
Use table of contents.

397
00:20:08,640 --> 00:20:10,000
I love table of contents.

398
00:20:10,000 --> 00:20:13,200
Again, this helps with the people who are scanning.

399
00:20:13,200 --> 00:20:15,820
Because again, they're not trying to read everything.

400
00:20:15,820 --> 00:20:18,960
They're trying to solve a very specific problem very quickly.

401
00:20:18,960 --> 00:20:20,840
And if they've made it to your documentation and

402
00:20:20,840 --> 00:20:25,280
they don't get the answer within 30 seconds, they're gonna go to Stack Overflow.

403
00:20:26,560 --> 00:20:29,960
I wish I had the actual statistics, but

404
00:20:29,960 --> 00:20:34,400
I think the average time per site people spend on websites is like six seconds.

405
00:20:34,400 --> 00:20:35,800
They click on it, they look for what they need.

406
00:20:35,800 --> 00:20:37,200
If it's not there, they're gone.

407
00:20:37,200 --> 00:20:39,360
That's why if you ever look at something like Google Analytics,

408
00:20:39,360 --> 00:20:42,360
you'll see your bounce rate, which is how quickly they left your site.

409
00:20:42,360 --> 00:20:43,280
It's really small.

410
00:20:43,280 --> 00:20:46,120
Because they came to your site, they looked for what they needed.

411
00:20:46,120 --> 00:20:48,920
They didn't find it in a blink of an eye, and they left.

412
00:20:48,920 --> 00:20:49,920
And that happens all the time.

413
00:20:51,000 --> 00:20:53,600
Use consistent styling when writing.

414
00:20:53,600 --> 00:20:57,800
If you are going to write, have a large open source project, or

415
00:20:57,800 --> 00:21:00,680
you're gonna start your own blog, have a consistent style.

416
00:21:00,680 --> 00:21:02,200
Develop a consistent voice.

417
00:21:03,160 --> 00:21:05,320
For an example, if you're gonna write,

418
00:21:05,320 --> 00:21:10,440
make all of the library names bold in all of your file paths, italics.

419
00:21:10,440 --> 00:21:11,640
Make sure it's consistent.

420
00:21:11,640 --> 00:21:15,520
That allows, again, when people are scanning, they become accustomed to your style.

421
00:21:15,520 --> 00:21:18,520
And they're like, that's bold, that's a file, that's a library name.

422
00:21:18,520 --> 00:21:19,760
I immediately know that.

423
00:21:19,760 --> 00:21:24,080
If you change it up all throughout, it makes it a lot more difficult to scan, and

424
00:21:24,080 --> 00:21:25,160
people won't come back to it.

425
00:21:26,440 --> 00:21:29,800
The user quickly picks up on these styles a lot quicker than you would think.

426
00:21:30,280 --> 00:21:32,920
And again, it makes it more scannable, and consistency is key.

427
00:21:32,920 --> 00:21:36,000
You have to be consistent with this.

428
00:21:36,000 --> 00:21:39,720
Otherwise, people aren't gonna be able to use your documentation, and

429
00:21:39,720 --> 00:21:40,640
they'll go somewhere else.

430
00:21:42,400 --> 00:21:45,080
Tip number one, and this is the most important one.

431
00:21:45,080 --> 00:21:48,000
Please, verify your documentation.

432
00:21:48,000 --> 00:21:50,120
Test your documentation.

433
00:21:50,120 --> 00:21:53,280
Always verify your instructions and test your work.

434
00:21:53,280 --> 00:21:57,240
The only thing worse than no documentation is incorrect documentation.

435
00:21:57,240 --> 00:22:01,040
Because no documentation means I go somewhere else to look for it.

436
00:22:01,040 --> 00:22:03,840
Incorrect documentation wastes my time.

437
00:22:03,840 --> 00:22:05,960
And time is valuable, we all know this.

438
00:22:05,960 --> 00:22:08,480
I think we've all learned this over the last three years.

439
00:22:08,480 --> 00:22:11,280
That time is extraordinarily valuable, please don't waste it.

440
00:22:12,360 --> 00:22:15,080
If possible, let someone else test your work.

441
00:22:15,080 --> 00:22:17,840
You would be surprised, you'll get a bias.

442
00:22:17,840 --> 00:22:21,720
You're gonna get a bias when you're writing your tutorial or

443
00:22:21,720 --> 00:22:27,200
your documentation, because you're the subject matter expert on this library.

444
00:22:27,200 --> 00:22:30,400
So it's not really helpful for you, because you're gonna fill in the blanks and

445
00:22:30,400 --> 00:22:32,400
not even know you're filling in the blanks.

446
00:22:32,400 --> 00:22:34,400
So get someone else to test your work.

447
00:22:34,400 --> 00:22:38,880
This is a great way to introduce new open source maintainers to open source projects.

448
00:22:38,880 --> 00:22:42,400
And I'll talk about this in a later slide with something about Hacktoberfest.

449
00:22:42,400 --> 00:22:47,080
But getting people involved, it's a great way, make them test your docs.

450
00:22:48,800 --> 00:22:51,080
Use a fresh environment for testing.

451
00:22:51,080 --> 00:22:53,640
Yes, you have to use a fresh environment for testing.

452
00:22:53,640 --> 00:22:57,040
There are so many remnant artifacts that you don't know what you've installed.

453
00:22:57,600 --> 00:23:01,120
Maybe one day you accidentally pip installed something and you weren't in a VN, and

454
00:23:01,120 --> 00:23:02,480
you never went back and cleaned it up.

455
00:23:02,480 --> 00:23:06,200
And now there's something lingering in system Python that makes it where only you work.

456
00:23:06,200 --> 00:23:09,240
It works on your machine, trademark, works on my machine.

457
00:23:10,760 --> 00:23:13,840
So always have a fresh environment when you're testing.

458
00:23:13,840 --> 00:23:17,320
It's just gonna make it a lot easier and it's gonna make it a lot more consistent.

459
00:23:17,320 --> 00:23:21,960
Bonus tip, because I always, ten was too few, I had to add one more.

460
00:23:21,960 --> 00:23:22,680
Practice.

461
00:23:22,680 --> 00:23:27,920
Like everything in life, the only way to get better at anything is to practice.

462
00:23:27,920 --> 00:23:29,640
So you have to practice technical writing.

463
00:23:29,640 --> 00:23:32,240
Just like you practice code, just like if you're a musician,

464
00:23:32,240 --> 00:23:36,600
you've practiced playing the guitar, you have to practice.

465
00:23:36,600 --> 00:23:40,760
Try to set aside an amount of time, daily or weekly, to just write.

466
00:23:42,520 --> 00:23:43,680
You don't have to publish it.

467
00:23:43,680 --> 00:23:47,160
The code that I write just to practice coding,

468
00:23:47,160 --> 00:23:52,040
I don't submit a library of Mason doing hacker rank programs.

469
00:23:52,200 --> 00:23:53,320
You can just keep it for yourself.

470
00:23:53,320 --> 00:23:54,360
It doesn't have to be public.

471
00:23:54,360 --> 00:23:57,840
No one ever has to see it but you, but the practice will still help.

472
00:23:57,840 --> 00:24:00,600
But one thing, don't throw it away.

473
00:24:00,600 --> 00:24:01,520
Save it in a folder.

474
00:24:01,520 --> 00:24:03,400
You'll never know when you'll wanna dust it off.

475
00:24:03,400 --> 00:24:06,360
You'll never know when it might inspire you for something else.

476
00:24:06,360 --> 00:24:08,600
You never know when you might write about something, and

477
00:24:08,600 --> 00:24:11,560
then you forget about it six months later, and you're like, yeah, I wrote about it.

478
00:24:11,560 --> 00:24:13,560
And you can dust off your own notes, and now you have it.

479
00:24:15,040 --> 00:24:17,080
So how can you get started with technical writing?

480
00:24:18,560 --> 00:24:19,840
Write documentation at work.

481
00:24:19,840 --> 00:24:21,440
I guarantee you, your manager will love you.

482
00:24:23,040 --> 00:24:27,800
Every single promotion I've ever gotten while I was an engineer was because I

483
00:24:27,800 --> 00:24:32,800
decided to take on the task of documenting everything I could find in my site.

484
00:24:32,800 --> 00:24:34,200
There's always something to be documented.

485
00:24:34,200 --> 00:24:38,560
If you work at a place where there's nothing that can be documented, never leave.

486
00:24:38,560 --> 00:24:45,440
Like, if you have to cement yourself to the building because you're working at a unicorn.

487
00:24:46,640 --> 00:24:47,400
Start a blog.

488
00:24:47,400 --> 00:24:48,960
This is a great way to do it.

489
00:24:49,000 --> 00:24:53,080
The best part about blogs is it can be freeing, freer.

490
00:24:53,080 --> 00:24:54,120
Okay, it can be freer.

491
00:24:54,120 --> 00:24:55,120
I didn't even know my own word there.

492
00:24:56,480 --> 00:25:00,920
If someone is paying you to write or you're writing at your company,

493
00:25:00,920 --> 00:25:02,520
you're kind of limited in what you can write about.

494
00:25:02,520 --> 00:25:04,400
When you have your own blog, you can write about anything.

495
00:25:04,400 --> 00:25:06,760
You can write about tech.

496
00:25:06,760 --> 00:25:08,200
You can write about not tech stuff.

497
00:25:08,200 --> 00:25:10,880
I write about a mixture of both if you ever go check out my blog.

498
00:25:10,880 --> 00:25:12,800
So it's a lot freer.

499
00:25:12,800 --> 00:25:14,000
Great for practicing.

500
00:25:14,000 --> 00:25:17,120
And then another thing you can do is you can contribute to open source projects.

501
00:25:17,120 --> 00:25:21,480
Many, many, many, many open source projects always need help with their documentation.

502
00:25:21,480 --> 00:25:24,720
It's very rarely perfect and it's very rarely ever complete.

503
00:25:24,720 --> 00:25:26,800
And even still, they always need examples.

504
00:25:26,800 --> 00:25:28,680
Examples are a great thing for documentation.

505
00:25:29,880 --> 00:25:32,560
Hacktoberfest is a great place to start and it's where I started.

506
00:25:32,560 --> 00:25:34,400
So I worked at DigitalOcean for two and a half years.

507
00:25:34,400 --> 00:25:35,960
I recently left.

508
00:25:35,960 --> 00:25:40,400
Hacktoberfest is a great program in the month of October where you just get

509
00:25:40,400 --> 00:25:45,120
incentivized to try to commit pull requests and get them accepted by maintainers.

510
00:25:45,160 --> 00:25:49,840
And the last two years, I've used my Hacktoberfest contributions to just make

511
00:25:49,840 --> 00:25:52,880
some docs better and some projects that I thought could be better.

512
00:25:52,880 --> 00:25:55,000
And trust me, they'll love it.

513
00:25:55,000 --> 00:25:58,720
And there are a lot of people here who have gotten their start in

514
00:25:58,720 --> 00:26:02,200
Hacktoberfest and are now amazing contributors.

515
00:26:02,200 --> 00:26:05,040
And can I point you out?

516
00:26:05,040 --> 00:26:06,160
Yes.

517
00:26:06,160 --> 00:26:13,200
Marietta, the amazing CPython developer, got part of her start in Hacktoberfest.

518
00:26:13,200 --> 00:26:14,520
She's sitting right here in my talk.

519
00:26:14,520 --> 00:26:18,920
She was the first female CPython contributor, love her to death.

520
00:26:18,920 --> 00:26:20,880
She's now on the Hacktoberfest board.

521
00:26:20,880 --> 00:26:22,560
She got started doing it.

522
00:26:22,560 --> 00:26:24,240
You can all start in the exact same way.

523
00:26:24,240 --> 00:26:26,480
You have to start somewhere.

524
00:26:26,480 --> 00:26:27,320
It's a great place to start.

525
00:26:28,440 --> 00:26:30,320
That's all I have for this time.

526
00:26:30,320 --> 00:26:34,800
You can follow me on Twitter if you want to tweet at me and I'll answer questions.

527
00:26:34,800 --> 00:26:39,960
I have an open space that's going on right after this in 250 AB on synthetic data.

528
00:26:39,960 --> 00:26:43,320
But if you want to come talk to me about documentation, totally fine.

529
00:26:43,320 --> 00:26:47,840
You can find the slides on the QR code again, or they're on my website.

530
00:26:47,840 --> 00:26:50,680
Thank you for your time, and I hope that you'll make your docs better.

531
00:26:50,680 --> 00:26:51,680
.

