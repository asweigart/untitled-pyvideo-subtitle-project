1
00:00:00,000 --> 00:00:09,440
All right. Is it time?

2
00:00:09,440 --> 00:00:13,180
It is time. Welcome everyone.

3
00:00:13,180 --> 00:00:14,640
Thanks for coming.

4
00:00:14,640 --> 00:00:17,220
We are here for the documenting your code

5
00:00:17,220 --> 00:00:20,520
from Docstrings to automated builds tutorial.

6
00:00:20,520 --> 00:00:22,240
It's the first day of college,

7
00:00:22,240 --> 00:00:23,480
everybody's in the right room,

8
00:00:23,480 --> 00:00:24,680
don't need to go down the hall.

9
00:00:24,680 --> 00:00:27,880
Okay. Welcome.

10
00:00:28,280 --> 00:00:33,520
We'll get to them again.

11
00:00:33,520 --> 00:00:38,840
So if you haven't got the links yet, no worries.

12
00:00:38,920 --> 00:00:42,000
I am Jacob Deppen.

13
00:00:42,000 --> 00:00:45,640
You can find me on Twitter if you care to read tweets

14
00:00:45,640 --> 00:00:50,560
about my kids and Disney things and other stuff like that.

15
00:00:50,560 --> 00:00:53,240
Also data science sometimes.

16
00:00:53,720 --> 00:00:57,480
Yeah. We're going to talk about documentation.

17
00:00:57,880 --> 00:01:01,480
Thanks to everyone who filled out the survey that I sent around.

18
00:01:01,480 --> 00:01:03,480
We got really good participation in that.

19
00:01:03,480 --> 00:01:07,520
It was super helpful for me to understand where you're coming from.

20
00:01:07,520 --> 00:01:11,680
I've been able to refactor some things a little bit in the talk,

21
00:01:11,680 --> 00:01:14,620
hopefully that we'll meet folks where they are,

22
00:01:14,620 --> 00:01:17,760
and we can hopefully have a successful session together.

23
00:01:17,760 --> 00:01:22,040
I want this to be open enough that you can ask questions as we go.

24
00:01:22,040 --> 00:01:24,040
I'm happy to be interrupted.

25
00:01:24,040 --> 00:01:26,440
If I'm in a flow or something,

26
00:01:26,440 --> 00:01:30,520
I'll just tell you to hold on for a second and that's totally cool.

27
00:01:30,520 --> 00:01:34,600
I'm going to now pass out some Post-it notes.

28
00:01:34,600 --> 00:01:36,560
This is a thing that I love to do.

29
00:01:36,560 --> 00:01:38,960
Has anybody ever taken a Carpentries Workshop,

30
00:01:38,960 --> 00:01:41,200
Software Carpentry, Data Carpentry?

31
00:01:41,200 --> 00:01:42,560
We do Post-it notes.

32
00:01:42,560 --> 00:01:45,880
Everybody needs a green Post-it and a pink Post-it,

33
00:01:45,880 --> 00:01:49,160
and you're going to keep them next to you.

34
00:01:49,160 --> 00:01:53,040
These are your way of telling me that you're following along,

35
00:01:53,040 --> 00:01:56,360
or that you are lost or you need help.

36
00:01:56,360 --> 00:01:58,520
Something like that. So green is good,

37
00:01:58,520 --> 00:02:02,680
red is I got some problem, I'm not done yet.

38
00:02:02,680 --> 00:02:04,400
In a big group like this,

39
00:02:04,400 --> 00:02:06,160
it's easier for me to see Post-its rather

40
00:02:06,160 --> 00:02:08,760
than really walking around and finding out.

41
00:02:08,760 --> 00:02:10,720
So just grab one of each,

42
00:02:10,720 --> 00:02:12,120
one off the top, one off the bottom,

43
00:02:12,120 --> 00:02:15,140
and please pass them towards the back as we go.

44
00:02:15,140 --> 00:02:16,760
We won't need them yet for a while,

45
00:02:16,760 --> 00:02:20,000
but get them circulated now.

46
00:02:20,000 --> 00:02:27,520
So why does documentation matter?

47
00:02:27,520 --> 00:02:30,040
I don't think I need to spend a lot of time on this.

48
00:02:30,040 --> 00:02:31,600
You probably wouldn't be here if you didn't

49
00:02:31,600 --> 00:02:34,400
think documentation mattered or you

50
00:02:34,400 --> 00:02:36,400
didn't care about writing documentation,

51
00:02:36,400 --> 00:02:38,560
building documentation. So hopefully,

52
00:02:38,560 --> 00:02:39,880
we're past that.

53
00:02:39,880 --> 00:02:43,200
But I want to get us all on the same terms.

54
00:02:43,200 --> 00:02:47,280
This is how I think about the values of documentation.

55
00:02:47,280 --> 00:02:50,560
First of all, we want to help ourselves.

56
00:02:50,560 --> 00:02:52,160
You're the one who's going to read

57
00:02:52,160 --> 00:02:53,960
your code more than anybody else.

58
00:02:53,960 --> 00:02:55,680
So you want to help yourself with

59
00:02:55,680 --> 00:02:58,200
documentation to revisit your own code.

60
00:02:58,200 --> 00:02:59,280
What was I doing there?

61
00:02:59,280 --> 00:03:02,440
Why did I make the choice that I made?

62
00:03:02,440 --> 00:03:05,120
Next up from that, your team or

63
00:03:05,120 --> 00:03:08,360
your collaborators want to be using your code,

64
00:03:08,360 --> 00:03:13,820
and you might not be available to help them use your code.

65
00:03:13,820 --> 00:03:15,600
So documentation needs to help

66
00:03:15,600 --> 00:03:17,880
them get oriented with your code,

67
00:03:17,880 --> 00:03:20,360
read your code, maybe for code review purposes,

68
00:03:20,360 --> 00:03:22,520
you're going to have documentation and it's going to make

69
00:03:22,520 --> 00:03:24,920
the code review smoother when they know why you made

70
00:03:24,920 --> 00:03:28,400
certain choices or the way you did things.

71
00:03:28,800 --> 00:03:32,960
Above that, we want to help strangers use your code.

72
00:03:32,960 --> 00:03:35,600
That's the ultimate is getting people that

73
00:03:35,600 --> 00:03:38,560
you've never met to use your code.

74
00:03:38,560 --> 00:03:41,600
Whether that's people at your company in the future,

75
00:03:41,600 --> 00:03:43,160
whether it's an open source project

76
00:03:43,160 --> 00:03:44,960
that you're distributing to the world,

77
00:03:44,960 --> 00:03:49,120
you want to build documentation that other people can use.

78
00:03:49,120 --> 00:03:51,120
If it isn't documented,

79
00:03:51,120 --> 00:03:52,800
then your code doesn't exist.

80
00:03:52,800 --> 00:03:55,720
This is something you've maybe heard said before,

81
00:03:55,720 --> 00:03:58,440
if it's not documented, it doesn't exist.

82
00:03:58,440 --> 00:04:02,480
That's pretty much true to some extent.

83
00:04:02,480 --> 00:04:07,320
Finally, reaching documentation enlightenment,

84
00:04:07,320 --> 00:04:10,440
our documentations will actually do some teaching for us.

85
00:04:10,440 --> 00:04:12,800
They'll do some teaching to other people,

86
00:04:12,800 --> 00:04:15,440
to strangers about how to use our code.

87
00:04:15,440 --> 00:04:17,760
What our code does, why it does it,

88
00:04:17,760 --> 00:04:21,880
how are, what are some interesting ways to use the code?

89
00:04:22,240 --> 00:04:25,320
You never have to interact with those people.

90
00:04:25,320 --> 00:04:27,840
You think about all the open source projects where you've

91
00:04:27,840 --> 00:04:29,840
never interacted with the maintainers but

92
00:04:29,840 --> 00:04:32,560
you've somehow learned to use the code.

93
00:04:32,560 --> 00:04:35,760
Maybe never taken a formal class in

94
00:04:35,760 --> 00:04:38,080
some coding technique or whatever,

95
00:04:38,080 --> 00:04:40,720
but you've somehow learned it because

96
00:04:40,720 --> 00:04:43,520
the documentation was there for you to learn it.

97
00:04:43,520 --> 00:04:47,160
That's what we're eventually want to try to reach.

98
00:04:47,160 --> 00:04:52,520
But who am I? I have a bunch of different things going on for me,

99
00:04:52,520 --> 00:04:54,160
but I'm a data scientist.

100
00:04:54,160 --> 00:04:55,720
I work for Corteva Agriscience,

101
00:04:55,720 --> 00:04:59,800
a big tech ag company.

102
00:04:59,800 --> 00:05:02,640
I'm also simultaneously finishing up

103
00:05:02,640 --> 00:05:05,720
my PhD in archeology at the University of Washington,

104
00:05:05,720 --> 00:05:09,240
where I did a lot of data science stuff for my PhD project.

105
00:05:09,240 --> 00:05:11,960
I maintain a couple of open source libraries,

106
00:05:11,960 --> 00:05:13,160
one's called PandasVet,

107
00:05:13,160 --> 00:05:18,840
which is a linter tool specifically designed to help you out with Pandas.

108
00:05:18,840 --> 00:05:22,360
Prospect, which is a simulation tool for archeologists.

109
00:05:22,360 --> 00:05:24,520
I like to do a lot of stuff in the community.

110
00:05:24,520 --> 00:05:27,160
The Puget Sound Python community has been

111
00:05:27,160 --> 00:05:29,120
something that's been really influential for me,

112
00:05:29,120 --> 00:05:31,560
and I've tried to give back a little bit there.

113
00:05:31,560 --> 00:05:34,960
The Carpentries, I mentioned that with the Sticky Notes,

114
00:05:34,960 --> 00:05:39,920
a great organization that teaches groups of folks,

115
00:05:39,920 --> 00:05:44,560
mostly people in research fields, how to start coding,

116
00:05:44,560 --> 00:05:48,560
how to start using digital tools in various ways to make their work better,

117
00:05:48,560 --> 00:05:51,480
more reproducible, and make them

118
00:05:51,480 --> 00:05:57,080
better data scientists or better scientists who use digital tools.

119
00:05:57,720 --> 00:06:02,360
But who I am not is any of these people,

120
00:06:02,640 --> 00:06:06,560
people who really think deeply about documentation and do

121
00:06:06,560 --> 00:06:11,160
documentation if not full-time job as a big part of what they do.

122
00:06:11,160 --> 00:06:13,600
I wanted to put their names up there because

123
00:06:13,600 --> 00:06:17,080
a lot of what I know about documentation is drawn from their work.

124
00:06:17,080 --> 00:06:19,800
Some of the tools we're going to use today are built by them,

125
00:06:19,800 --> 00:06:25,120
and they are the experts of the experts.

126
00:06:25,360 --> 00:06:29,240
There's links to everybody's Twitter profiles and stuff like that in

127
00:06:29,240 --> 00:06:33,160
that links page so you can find out more there.

128
00:06:33,320 --> 00:06:35,480
But if I'm not an expert,

129
00:06:35,480 --> 00:06:38,920
why am I leading a tutorial on documentation?

130
00:06:38,920 --> 00:06:44,000
Like a lot of you, I suspect I like good documentation,

131
00:06:44,000 --> 00:06:46,120
I value good documentation,

132
00:06:46,120 --> 00:06:49,840
and I also want to get stuff done.

133
00:06:49,840 --> 00:06:54,120
I don't want to have to become one of those people you saw on

134
00:06:54,120 --> 00:06:57,800
the previous slide in order to be writing good documentation,

135
00:06:57,800 --> 00:06:59,240
building good documentation.

136
00:06:59,240 --> 00:07:04,560
I want to be able to find a way to make documentation a little bit easier for me,

137
00:07:04,560 --> 00:07:09,040
find a way to make documentation a little bit quicker.

138
00:07:09,040 --> 00:07:14,480
There's all kinds of incentives out there in, I work in industry.

139
00:07:14,480 --> 00:07:18,520
Documentation is not part of my evaluation,

140
00:07:18,520 --> 00:07:20,920
it's not how I measured in my job.

141
00:07:20,920 --> 00:07:22,480
So for a lot of us,

142
00:07:22,480 --> 00:07:25,960
it's a secondary thought,

143
00:07:26,480 --> 00:07:29,080
but we still want it to be good.

144
00:07:29,080 --> 00:07:34,960
So we want it to be as quick and easy as possible to get to that good stage,

145
00:07:34,960 --> 00:07:36,200
or get to that stage,

146
00:07:36,200 --> 00:07:40,440
whatever it might be, stage that works for you.

147
00:07:41,160 --> 00:07:44,240
So I've gone through this process for a while.

148
00:07:44,240 --> 00:07:46,320
I've thought about what works for me.

149
00:07:46,320 --> 00:07:49,160
I've tried a lot of different documentation workflows,

150
00:07:49,160 --> 00:07:51,240
and tools, and things like that.

151
00:07:51,240 --> 00:07:53,720
What I'm going to teach you today,

152
00:07:53,720 --> 00:07:59,040
what we're going to build together is a workflow that I think works pretty well.

153
00:07:59,040 --> 00:08:07,280
For those of us who don't can't or don't want to become super deep in the documentation world,

154
00:08:07,280 --> 00:08:09,960
but we still want good documentation.

155
00:08:09,960 --> 00:08:15,440
I want documentation that I can build and write with tools that I already know.

156
00:08:15,440 --> 00:08:17,000
I do a lot with Markdown.

157
00:08:17,000 --> 00:08:19,280
A lot of folks do a lot with Markdown.

158
00:08:19,280 --> 00:08:21,160
Markdown is everywhere these days.

159
00:08:21,160 --> 00:08:23,560
So wouldn't it be great if I could write all my docs in

160
00:08:23,560 --> 00:08:26,800
Markdown? I also do a lot of stuff in Jupiter notebooks.

161
00:08:26,800 --> 00:08:30,000
Wouldn't it be great if I could write all my docs in Jupiter notebooks?

162
00:08:30,000 --> 00:08:34,640
I write doc strings for my functions and classes and all that good stuff.

163
00:08:34,640 --> 00:08:36,440
I want my docs to use those.

164
00:08:36,440 --> 00:08:39,080
I want to just press a button and have it go,

165
00:08:39,080 --> 00:08:43,200
find all those, give me some nice pretty documentation.

166
00:08:43,200 --> 00:08:46,640
I don't want to mess around with CI-CD too much.

167
00:08:46,640 --> 00:08:48,800
You're going to always have to mess around with CI-CD.

168
00:08:48,800 --> 00:08:53,320
If you've ever tried to set anything up on any CI-CD system,

169
00:08:53,320 --> 00:08:58,240
there's always 12 commits of you fussing with it and trying to get it to work.

170
00:08:58,240 --> 00:09:00,400
A lot of us have been there.

171
00:09:00,400 --> 00:09:04,600
But we can make it as minimally fussy as possible, I think.

172
00:09:04,600 --> 00:09:08,240
That's a goal. I want it to look nice by default.

173
00:09:08,240 --> 00:09:14,480
We don't want to have to spend a lot of time custom tweaking CSS,

174
00:09:14,480 --> 00:09:17,120
which is something that I know basically nothing about.

175
00:09:17,120 --> 00:09:19,200
I want it to look nice right out of the box.

176
00:09:19,200 --> 00:09:21,960
I don't want to have to call in a product designer to get

177
00:09:21,960 --> 00:09:26,800
some documentation that's going to be nice and readable and modern looking.

178
00:09:26,800 --> 00:09:30,320
So what about Sphinx?

179
00:09:30,320 --> 00:09:34,160
Sphinx, I know some people based on the survey,

180
00:09:34,160 --> 00:09:37,440
have tried Sphinx or used Sphinx a little bit.

181
00:09:37,440 --> 00:09:41,160
Sphinx is, I call it the human-headed line in the room.

182
00:09:41,160 --> 00:09:42,960
Get it? It's a Sphinx.

183
00:09:43,400 --> 00:09:47,840
It's a tool that has been around for quite a long time,

184
00:09:47,840 --> 00:09:51,880
and it is the de facto standard in Python.

185
00:09:52,400 --> 00:09:55,720
But if you've played around with it very much,

186
00:09:55,720 --> 00:10:01,520
you know that Sphinx is of a time longer ago,

187
00:10:01,520 --> 00:10:03,600
and it's not the most modern of tools.

188
00:10:03,600 --> 00:10:06,080
It is incredibly powerful,

189
00:10:06,080 --> 00:10:10,120
but that also leads to a lot of complexity.

190
00:10:10,120 --> 00:10:12,640
It's often complexity that we're never going to

191
00:10:12,640 --> 00:10:15,720
touch in the projects that we need to document.

192
00:10:15,720 --> 00:10:19,200
Professional documentation writers use Sphinx,

193
00:10:19,200 --> 00:10:22,640
and they use it to great effect to do really amazing things

194
00:10:22,640 --> 00:10:25,280
and build really amazing documentation.

195
00:10:25,280 --> 00:10:28,040
But for most of the projects that folks in

196
00:10:28,040 --> 00:10:30,080
the Python community are going to be working on,

197
00:10:30,080 --> 00:10:34,280
we're not going to have that level of documentation.

198
00:10:34,280 --> 00:10:38,440
You might want to document a little Python package that you've been

199
00:10:38,440 --> 00:10:41,480
working on for your team in your company,

200
00:10:41,480 --> 00:10:48,120
and it doesn't need to be totally vetted for a broad audience.

201
00:10:48,120 --> 00:10:50,000
It needs to be understandable to the people,

202
00:10:50,000 --> 00:10:52,440
10, 12 people in your team maybe.

203
00:10:52,440 --> 00:10:55,080
So that's the scale that we're thinking about here.

204
00:10:55,080 --> 00:10:58,440
We're not thinking about the most complicated projects in the world,

205
00:10:58,440 --> 00:11:02,880
and that's why I think we're going to try to touch on Sphinx.

206
00:11:02,880 --> 00:11:05,320
Sphinx is going to be behind everything we do today.

207
00:11:05,320 --> 00:11:10,400
So I don't want to make it seem like we're getting rid of Sphinx,

208
00:11:10,400 --> 00:11:12,600
because Sphinx is actually there the whole time.

209
00:11:12,600 --> 00:11:14,520
It's the backbone of everything we're going to do.

210
00:11:14,680 --> 00:11:20,120
But I'd like to touch Sphinx as little as possible because of that complexity,

211
00:11:20,120 --> 00:11:24,280
and we want to try to reduce that complexity for us as much as possible.

212
00:11:24,280 --> 00:11:27,200
So there's pros to Sphinx.

213
00:11:27,200 --> 00:11:30,080
It is the backbone of tools that we're going to use like

214
00:11:30,080 --> 00:11:33,640
Jupyter Book and many other kinds of things that interact with Sphinx.

215
00:11:33,640 --> 00:11:37,320
Has a really large ecosystem and this is part of that complexity,

216
00:11:37,320 --> 00:11:39,240
different kinds of templates,

217
00:11:39,240 --> 00:11:42,600
the extensions is what we're going to make use of today.

218
00:11:42,600 --> 00:11:46,160
If you want to host your docs on Read the Docs,

219
00:11:46,160 --> 00:11:50,200
you've almost undoubtedly found documentation hosted on Read the Docs,

220
00:11:50,200 --> 00:11:52,360
if you've done anything in Python.

221
00:11:52,360 --> 00:11:55,000
It works really nicely with Sphinx.

222
00:11:55,000 --> 00:11:57,720
So there's a lot of compatibility there that's

223
00:11:57,720 --> 00:12:01,840
very natural on both sides of that equation.

224
00:12:01,840 --> 00:12:07,720
But Sphinx is complicated, complex,

225
00:12:07,720 --> 00:12:10,000
maybe is better than complicated.

226
00:12:10,000 --> 00:12:14,520
It relies on things or can rely on things like make files and

227
00:12:14,520 --> 00:12:18,080
other technologies that you may not have a lot of experience with,

228
00:12:18,080 --> 00:12:23,200
or you may not want to learn as part of documenting your Python package.

229
00:12:23,320 --> 00:12:27,000
It may not be compatible with whatever system you're on and you have to find

230
00:12:27,000 --> 00:12:30,200
a workaround and that's the kind of complexity that starts to

231
00:12:30,200 --> 00:12:33,880
compound and ends up with people just not building the docs.

232
00:12:33,880 --> 00:12:36,120
Not writing the docs, not maintaining the docs,

233
00:12:36,120 --> 00:12:39,120
because it's a pain to update them and all of those things.

234
00:12:39,120 --> 00:12:42,360
We don't want to be there. We want to keep our docs as light and

235
00:12:42,360 --> 00:12:46,280
flexible as possible until you become NumPy and

236
00:12:46,280 --> 00:12:50,360
a massive open source project that needs really complicated documentation

237
00:12:50,360 --> 00:12:52,960
and really a lot of thought in it.

238
00:12:52,960 --> 00:12:55,440
But most of us aren't doing that.

239
00:12:56,760 --> 00:13:02,840
Sphinx in its original form relies on restructured text.

240
00:13:02,840 --> 00:13:07,160
I don't know of things beyond Sphinx that use restructured text.

241
00:13:07,200 --> 00:13:10,880
I'm sure there are some, but they're not common in

242
00:13:10,880 --> 00:13:13,720
the daily workflow of somebody who's doing a lot of Python stuff.

243
00:13:13,720 --> 00:13:16,880
Things like Markdown, Jupyter Notebooks with Markdown.

244
00:13:16,880 --> 00:13:19,080
That's something we're usually a little bit more familiar with.

245
00:13:19,080 --> 00:13:26,720
Restructured text is its own world of markup.

246
00:13:27,000 --> 00:13:30,960
If you don't want to learn it, we can mostly skip it.

247
00:13:30,960 --> 00:13:33,680
We'll do a little bit of restructured text here in a little while,

248
00:13:33,680 --> 00:13:35,280
but just enough.

249
00:13:35,280 --> 00:13:38,400
So we're going to do just enough to be useful.

250
00:13:38,400 --> 00:13:41,560
In my pre-survey, I asked folks how many people had

251
00:13:41,560 --> 00:13:43,720
tried to use Sphinx to build documentation,

252
00:13:43,720 --> 00:13:46,120
and how many people were successful.

253
00:13:46,120 --> 00:13:50,720
Ten people had tried and four people were successful.

254
00:13:50,720 --> 00:13:57,080
This is a gap that I think it's a leak in the pipeline of documentation,

255
00:13:57,080 --> 00:14:00,560
that I think a lot of people encounter in the Python ecosystem.

256
00:14:00,560 --> 00:14:02,720
You try to do the right thing,

257
00:14:02,720 --> 00:14:04,800
you try to build documentation for your project,

258
00:14:04,800 --> 00:14:07,680
but Sphinx is a little more complicated than you

259
00:14:07,680 --> 00:14:11,160
wanted and there's other priorities in your work.

260
00:14:11,160 --> 00:14:14,040
So it gets pushed back and pushed back,

261
00:14:14,040 --> 00:14:16,960
and something you're going to do later or something that just

262
00:14:16,960 --> 00:14:21,160
never quite happens or never gets updated after you get it built one time.

263
00:14:21,160 --> 00:14:26,200
So I think this is a common story where you try Sphinx,

264
00:14:26,200 --> 00:14:27,960
maybe you get something working,

265
00:14:27,960 --> 00:14:31,600
maybe you don't, and then maybe your project has documentation,

266
00:14:31,600 --> 00:14:33,160
and maybe it doesn't.

267
00:14:33,680 --> 00:14:38,960
So we're going to start with a little bit of a motivating case for today.

268
00:14:38,960 --> 00:14:43,160
This is where I hope that we're going to end up by the end of our session.

269
00:14:43,160 --> 00:14:45,520
We're going to build all this together.

270
00:14:45,520 --> 00:14:55,280
Oops. We're going to build a web page.

271
00:14:55,280 --> 00:14:59,440
It's going to be live on the Internet that looks something like this.

272
00:14:59,440 --> 00:15:01,320
It's not the most glamorous.

273
00:15:01,320 --> 00:15:04,880
There's the ability to add images here that I haven't done,

274
00:15:04,880 --> 00:15:07,440
but it's live.

275
00:15:07,440 --> 00:15:10,680
It has, let's check out some features.

276
00:15:10,680 --> 00:15:13,400
Well, one, it has a search feature built-in.

277
00:15:13,400 --> 00:15:17,000
We don't have to do anything special to get a search.

278
00:15:17,240 --> 00:15:20,560
We can put a guide here.

279
00:15:20,560 --> 00:15:23,480
We have a nice table of contents on the right side.

280
00:15:23,480 --> 00:15:25,960
We get some code blocks.

281
00:15:25,960 --> 00:15:30,000
We get the auto copy little thing.

282
00:15:30,000 --> 00:15:32,000
This is becoming more and more common.

283
00:15:32,000 --> 00:15:33,720
You start to see this in documentation,

284
00:15:33,720 --> 00:15:34,880
and it's so useful,

285
00:15:34,880 --> 00:15:40,040
just this little guy to copy what's in the box.

286
00:15:40,960 --> 00:15:43,880
There'll be syntax highlighting and other things.

287
00:15:43,880 --> 00:15:48,320
This is a Jupyter Notebook that I have added

288
00:15:48,320 --> 00:15:52,920
some special little box to make a note.

289
00:15:52,920 --> 00:15:58,240
You might add a caution or a tip or something like that, a call-out.

290
00:15:58,240 --> 00:16:02,640
I can put code, I can mix it with Markdown.

291
00:16:02,640 --> 00:16:06,280
This might be something familiar if you've used Jupyter Notebooks a lot.

292
00:16:06,280 --> 00:16:08,280
But mixing all that together into

293
00:16:08,280 --> 00:16:11,560
a guide or a more prose style documentation.

294
00:16:11,560 --> 00:16:17,480
But we also get some technical documentation,

295
00:16:17,480 --> 00:16:20,520
reference documentation that you're probably familiar with.

296
00:16:20,520 --> 00:16:24,560
Function signatures, arguments, types,

297
00:16:24,560 --> 00:16:28,840
all of that formatted nicely for us.

298
00:16:28,840 --> 00:16:34,720
We can even click on the source and see the raw code that's behind it.

299
00:16:37,240 --> 00:16:39,280
So here we start to have

300
00:16:39,280 --> 00:16:43,200
a pretty good foundation for documentation.

301
00:16:43,200 --> 00:16:47,400
We have the ability to drop a Markdown file in and add a new guide,

302
00:16:47,400 --> 00:16:51,640
to add a new module to our package and get it

303
00:16:51,640 --> 00:16:54,720
built automatically in the reference documentation

304
00:16:54,720 --> 00:16:59,720
with nice syntax highlighting and all of that stuff.

305
00:16:59,720 --> 00:17:03,240
There are some other extra features that we'll see along the way.

306
00:17:03,240 --> 00:17:07,960
A lot of this functionality comes from Jupyter Book,

307
00:17:07,960 --> 00:17:11,400
and that's the tool we're going to try today.

308
00:17:15,280 --> 00:17:18,320
So that was our goal.

309
00:17:18,320 --> 00:17:21,040
The sticky notes I mentioned.

310
00:17:21,040 --> 00:17:23,440
Green is all good.

311
00:17:23,440 --> 00:17:28,000
I'm finished with something that we're working on or I'm ready to move on.

312
00:17:28,000 --> 00:17:32,360
Pink is, I have a question.

313
00:17:32,360 --> 00:17:36,400
Some of you in the back, I still might not be able to see your pink sticky notes.

314
00:17:36,400 --> 00:17:37,800
So if you do have a question,

315
00:17:37,800 --> 00:17:41,440
please go ahead and raise your hand. That's totally cool.

316
00:17:41,440 --> 00:17:44,280
But the sticky notes are good when everybody's working on

317
00:17:44,280 --> 00:17:47,160
something and I can take a look around.

318
00:17:47,160 --> 00:17:52,360
Or help, I'm lost. That can be good as well.

319
00:17:52,640 --> 00:17:57,480
So if we haven't gotten the code,

320
00:17:57,480 --> 00:18:00,720
we need to fork the repository from

321
00:18:00,720 --> 00:18:06,600
GitHub and then clone that to our local machine.

322
00:18:07,920 --> 00:18:12,640
Is there anyone who has not been able to do that yet?

323
00:18:12,760 --> 00:18:16,160
I have time built in. We can wait.

324
00:18:16,160 --> 00:18:18,840
So if you have done that,

325
00:18:18,840 --> 00:18:23,120
put a green sticky note up. Yes. Thank you.

326
00:18:23,120 --> 00:18:26,880
You can just put it on the top of your machine maybe.

327
00:18:27,240 --> 00:18:31,600
That can help me know where we're at.

328
00:18:31,600 --> 00:18:36,320
If you haven't, keep your green sticky note down,

329
00:18:36,320 --> 00:18:38,360
or if you have a question about that,

330
00:18:38,360 --> 00:18:41,840
you can put the pink sticky note up or flag me down.

331
00:18:46,160 --> 00:18:49,600
All right.

332
00:19:16,160 --> 00:19:39,800
Intruders. You should be ending up something like this.

333
00:19:39,800 --> 00:19:44,440
If you can open whatever your preferred editor is.

334
00:19:46,160 --> 00:19:49,120
So we have access to this.

335
00:19:52,040 --> 00:19:56,880
What I've done here is created what is effectively in

336
00:19:56,880 --> 00:20:03,000
its current state on the main branch is a runnable Python package.

337
00:20:03,000 --> 00:20:05,600
Everything should work, I think.

338
00:20:05,600 --> 00:20:10,000
I think it works. But it's not documented at all.

339
00:20:10,000 --> 00:20:11,520
There's no documentation in it.

340
00:20:11,520 --> 00:20:13,680
So what we're going to do is progressively over

341
00:20:13,680 --> 00:20:15,880
the next couple of hours is add more features

342
00:20:15,880 --> 00:20:18,680
of documentation to this existing package.

343
00:20:18,680 --> 00:20:22,120
We're going to take it from zero docs to what I showed you,

344
00:20:22,120 --> 00:20:25,800
hopefully the full thing live on the Internet.

345
00:20:35,000 --> 00:20:39,840
This is setting up an environment.

346
00:20:39,840 --> 00:20:45,920
If you haven't installed all the dependencies,

347
00:20:47,040 --> 00:20:50,560
who has not installed all the dependencies yet?

348
00:20:50,560 --> 00:20:53,360
Doesn't have everything going yet.

349
00:21:09,840 --> 00:21:26,880
All right.

350
00:21:26,880 --> 00:21:29,880
I like to use Conda to manage my environment.

351
00:21:29,880 --> 00:21:34,920
So I'm going to activate my environment.

352
00:21:39,840 --> 00:21:49,400
I'm going to do a git status.

353
00:21:49,400 --> 00:21:53,080
Cool. I'm on the main branch here.

354
00:21:54,880 --> 00:21:59,600
So you-all can work on the main branch if you want of your fork.

355
00:21:59,600 --> 00:22:00,920
I don't care where you work.

356
00:22:00,920 --> 00:22:02,920
But I'm going to switch to

357
00:22:02,920 --> 00:22:05,440
a new branch just so that I don't mess up

358
00:22:05,440 --> 00:22:07,560
my nicely put together tutorial

359
00:22:07,560 --> 00:22:09,640
by accidentally putting something on main.

360
00:22:09,640 --> 00:22:19,640
So I am going to just start from a new branch myself.

361
00:22:25,320 --> 00:22:29,720
All right. I'm going to move forward.

362
00:22:29,720 --> 00:22:32,120
If you haven't finished that,

363
00:22:32,120 --> 00:22:36,120
keep working on it and you'll have time,

364
00:22:36,120 --> 00:22:38,760
I think, before we really need to.

365
00:22:39,640 --> 00:22:44,440
So I want to take a few minutes, explore the code.

366
00:22:44,440 --> 00:22:47,200
So look at that randomly package.

367
00:22:47,200 --> 00:22:49,240
There's four modules in there.

368
00:22:49,240 --> 00:22:53,960
What are they? Facts, Palette, Points, and Password.

369
00:22:53,960 --> 00:22:58,880
Take a look through those and see if anything seems familiar to you,

370
00:22:58,880 --> 00:23:01,520
anything that you could see yourself writing.

371
00:23:01,520 --> 00:23:05,120
They're dummy functions, so cut me some slack.

372
00:23:05,120 --> 00:23:08,880
But something that you want to work with and then we'll

373
00:23:09,400 --> 00:23:11,920
or you can work with that particular module

374
00:23:11,920 --> 00:23:13,920
through the next series of steps that we're going to do.

375
00:23:13,920 --> 00:23:16,920
I'm not going to ask you to document every single module and

376
00:23:16,920 --> 00:23:19,720
every function in there through the whole workshop.

377
00:23:19,720 --> 00:23:23,320
So see if anything seems interesting to you.

378
00:23:23,320 --> 00:23:25,600
Get familiar with it, maybe what it does,

379
00:23:25,600 --> 00:23:27,600
how it works as best you

380
00:23:27,600 --> 00:23:33,400
can because we're going to have to write some documentation about it.

381
00:24:08,880 --> 00:24:34,520
Flag me down if you need any help with setup or questions.

382
00:29:08,880 --> 00:29:12,480
Selected a favorite module to use.

383
00:29:15,840 --> 00:29:22,400
I'm just curious, how many people chose the Facts module?

384
00:29:22,840 --> 00:29:26,960
How many people chose the Palette module?

385
00:29:26,960 --> 00:29:31,960
How many people chose the Points?

386
00:29:31,960 --> 00:29:34,800
How many people chose Password?

387
00:29:34,800 --> 00:29:38,400
Interesting. I'm happy I hit

388
00:29:38,400 --> 00:29:40,360
a pretty good cross-section.

389
00:29:40,360 --> 00:29:43,440
I figured Palette would be the least popular,

390
00:29:43,440 --> 00:29:47,120
but I'm glad. Great.

391
00:29:47,440 --> 00:29:53,280
So let's work on what I call documentation level one.

392
00:29:53,280 --> 00:29:58,680
This is this bare minimum stuff that we want to be there,

393
00:29:58,680 --> 00:30:02,720
that you can control pretty easily without any building tools,

394
00:30:02,720 --> 00:30:05,480
without any extra stuff.

395
00:30:05,480 --> 00:30:09,720
Just regular, plain old Python can get you documentation level one.

396
00:30:09,720 --> 00:30:11,120
Things like code comments,

397
00:30:11,120 --> 00:30:13,720
type annotations, docstrings.

398
00:30:13,720 --> 00:30:16,920
Some people don't maybe think of these as documentation,

399
00:30:16,920 --> 00:30:18,720
but docstrings I bet you do.

400
00:30:18,720 --> 00:30:24,120
But code comments are a very fundamental form of documentation.

401
00:30:25,360 --> 00:30:31,760
Code comments, we start with the hash number sign and then something there,

402
00:30:31,760 --> 00:30:34,920
we can write whatever we want in our Python files.

403
00:30:34,920 --> 00:30:37,960
There's no limit.

404
00:30:37,960 --> 00:30:41,600
Maybe there's some theoretical limit to bytes and things like that.

405
00:30:41,600 --> 00:30:46,000
But there's no real limit to what we can write as a code comment.

406
00:30:46,000 --> 00:30:49,520
It's the easiest way to add some documentation to your code.

407
00:30:49,520 --> 00:30:51,720
Put something right next to the code that you're

408
00:30:51,720 --> 00:30:55,360
writing and you can write whatever you want.

409
00:30:56,400 --> 00:31:01,840
Some rules of thumb to try to keep in mind where to put a code comment.

410
00:31:01,840 --> 00:31:04,640
Not everything needs a code comment.

411
00:31:04,920 --> 00:31:07,000
Anything that you would consider clever,

412
00:31:07,000 --> 00:31:08,480
anything that you think is like,

413
00:31:08,480 --> 00:31:10,160
I'm proud of myself for that one,

414
00:31:10,160 --> 00:31:12,560
that should get a comment because what's clever to

415
00:31:12,560 --> 00:31:15,960
you is confusing to somebody else almost certainly,

416
00:31:15,960 --> 00:31:18,640
or even confusing to yourself next week.

417
00:31:18,640 --> 00:31:20,880
I found that's the case a lot of the time.

418
00:31:20,880 --> 00:31:23,960
So if you feel like you're being clever,

419
00:31:23,960 --> 00:31:27,960
great but document why you thought you were so clever,

420
00:31:27,960 --> 00:31:30,440
because it might bite you in the future.

421
00:31:30,440 --> 00:31:32,560
Things like nested data structures,

422
00:31:32,560 --> 00:31:36,680
especially in Python where we have a lot of types being figured

423
00:31:36,680 --> 00:31:39,760
out on the fly and not really obvious all the time.

424
00:31:39,760 --> 00:31:42,760
Those can be useful to have comments with them.

425
00:31:42,760 --> 00:31:44,240
Things that are poorly named,

426
00:31:44,240 --> 00:31:45,960
maybe you're using a package and you think,

427
00:31:45,960 --> 00:31:47,880
wow, this function has a terrible name.

428
00:31:47,880 --> 00:31:51,000
It's called make square,

429
00:31:51,000 --> 00:31:55,400
but I'm actually making a rectangle from it or something like that.

430
00:31:55,400 --> 00:31:59,080
Those things are great to have a comment to say that,

431
00:31:59,080 --> 00:32:01,120
okay, the function is called make square,

432
00:32:01,120 --> 00:32:04,440
but really we're making a rectangle here.

433
00:32:05,480 --> 00:32:08,360
Anything with a non-obvious type that goes

434
00:32:08,360 --> 00:32:11,520
to the same point as the nested data structures.

435
00:32:11,520 --> 00:32:15,320
Really the best thing to describe your reasoning,

436
00:32:15,320 --> 00:32:16,960
to describe choices you made.

437
00:32:16,960 --> 00:32:19,960
This is stuff that can't really be captured in your code.

438
00:32:19,960 --> 00:32:23,080
Why this and not something else?

439
00:32:23,080 --> 00:32:25,960
A lot of times when you work in a team of people,

440
00:32:25,960 --> 00:32:30,520
there might be some blocker to doing something some way

441
00:32:30,520 --> 00:32:33,480
that happens like three steps down the line.

442
00:32:33,480 --> 00:32:36,800
So you change things back upstream a little bit,

443
00:32:36,800 --> 00:32:41,600
and nobody else knows why it's in some really complicated form.

444
00:32:41,600 --> 00:32:45,020
They look at your code a month later and they say,

445
00:32:45,020 --> 00:32:46,840
why did Jacob do it like that?

446
00:32:46,840 --> 00:32:48,320
That is so confusing.

447
00:32:48,320 --> 00:32:51,160
We could just write it in this one line and it would be done.

448
00:32:51,160 --> 00:32:54,560
Well, turns out the one line solution has some problem

449
00:32:54,560 --> 00:32:59,040
three steps down the line and that's why I wrote it in the complicated way.

450
00:32:59,040 --> 00:33:03,400
So those choices and decisions are really great for code comments

451
00:33:03,400 --> 00:33:07,040
because they really communicate something really quickly.

452
00:33:07,040 --> 00:33:08,600
Nobody has to go digging,

453
00:33:08,600 --> 00:33:12,880
nobody has to send you a slack message at your company or find you or

454
00:33:12,880 --> 00:33:16,080
reach out on GitHub to figure out why something is like that.

455
00:33:16,080 --> 00:33:20,680
They just know because they can read it there in human readable prose form.

456
00:33:20,680 --> 00:33:23,440
Things that don't need comments.

457
00:33:23,440 --> 00:33:25,360
Things that are well named already,

458
00:33:25,360 --> 00:33:27,920
your variables that have a really nice name or

459
00:33:27,920 --> 00:33:31,240
your methods or functions that have a really nice name.

460
00:33:31,240 --> 00:33:33,520
You don't have to repeat that.

461
00:33:33,520 --> 00:33:37,640
If they have a nice verb and action,

462
00:33:37,640 --> 00:33:42,880
what they're doing, that's fine and they probably don't need to be documented that way.

463
00:33:42,880 --> 00:33:47,280
I've seen folks, especially folks who are newer to Python,

464
00:33:47,280 --> 00:33:54,520
try to add comments between functions and all over the place.

465
00:33:55,160 --> 00:33:59,400
You can stick that stuff in doc strings and we'll get to those later.

466
00:33:59,400 --> 00:34:03,640
So things like a function signature can be documented in a doc string,

467
00:34:03,640 --> 00:34:06,520
doesn't need to be in code comments.

468
00:34:07,840 --> 00:34:10,160
Here's a couple of examples.

469
00:34:10,160 --> 00:34:11,840
They're maybe not the greatest examples in the world,

470
00:34:11,840 --> 00:34:14,000
but I think they get the point across.

471
00:34:14,000 --> 00:34:16,760
At the top, we have something where we say,

472
00:34:16,760 --> 00:34:20,760
okay, we're going to convert to the correct color range for plotting.

473
00:34:20,760 --> 00:34:24,160
That gives us a little bit of the why.

474
00:34:24,160 --> 00:34:28,440
Why are we converting to the color ranges so that we can plot it nicely?

475
00:34:28,440 --> 00:34:31,920
That adds something. We're adding value maybe to

476
00:34:31,920 --> 00:34:35,480
the code there by saying why we're doing it.

477
00:34:35,480 --> 00:34:38,360
The one below, and I'm guilty of this as well.

478
00:34:38,360 --> 00:34:41,160
When I write code, I often will write a whole bunch of comments that

479
00:34:41,160 --> 00:34:43,800
outline what I want to do with the code

480
00:34:43,800 --> 00:34:47,160
and then just fill in the code in between the comments.

481
00:34:47,160 --> 00:34:49,080
Then sometimes I end up with something like this.

482
00:34:49,080 --> 00:34:53,080
It says, read JSON and the next line is open and read JSON.

483
00:34:53,080 --> 00:34:55,520
You don't need to comment that.

484
00:34:55,520 --> 00:34:59,440
Nobody should ever get mad at you for adding something like that,

485
00:34:59,440 --> 00:35:02,720
because it doesn't hurt, it can't hurt anybody.

486
00:35:02,720 --> 00:35:08,520
But yeah, that's a place where a code comment wasn't really necessary.

487
00:35:08,520 --> 00:35:12,120
But when in doubt, add the comment.

488
00:35:13,120 --> 00:35:21,080
So I want you to look at the module that you chose.

489
00:35:21,080 --> 00:35:24,360
I think each module only has one function, is that right?

490
00:35:24,360 --> 00:35:26,200
I think that's right.

491
00:35:26,200 --> 00:35:30,760
A previous iteration was more complicated, so I simplified it.

492
00:35:30,760 --> 00:35:33,240
Try to add some comments there.

493
00:35:33,240 --> 00:35:34,840
Figure out what needs a comment,

494
00:35:34,840 --> 00:35:36,280
what doesn't need a comment,

495
00:35:36,280 --> 00:35:38,600
what kind of information might be useful to

496
00:35:38,600 --> 00:35:42,040
convey to someone who's reading this later.

497
00:35:42,120 --> 00:35:45,920
Take a few minutes. Take your green stickies

498
00:35:45,920 --> 00:35:48,520
down and you can put them back up when you're done.

499
00:36:12,120 --> 00:36:15,120
So I'm going to go ahead and add a comment.

500
00:36:15,120 --> 00:36:17,120
I'm going to go ahead and add a comment.

501
00:36:17,120 --> 00:36:19,120
I'm going to go ahead and add a comment.

502
00:36:19,120 --> 00:36:21,120
I'm going to go ahead and add a comment.

503
00:36:21,120 --> 00:36:23,120
I'm going to go ahead and add a comment.

504
00:36:23,120 --> 00:36:25,120
I'm going to go ahead and add a comment.

505
00:36:25,120 --> 00:36:27,120
I'm going to go ahead and add a comment.

506
00:36:27,120 --> 00:36:29,120
I'm going to go ahead and add a comment.

507
00:36:29,120 --> 00:36:31,120
I'm going to go ahead and add a comment.

508
00:36:31,120 --> 00:36:33,120
I'm going to go ahead and add a comment.

509
00:36:33,120 --> 00:36:35,120
I'm going to go ahead and add a comment.

510
00:36:35,120 --> 00:36:37,120
I'm going to go ahead and add a comment.

511
00:36:37,120 --> 00:36:39,120
I'm going to go ahead and add a comment.

512
00:36:39,120 --> 00:36:41,120
I'm going to go ahead and add a comment.

513
00:36:41,120 --> 00:36:43,120
I'm going to go ahead and add a comment.

514
00:36:43,120 --> 00:36:45,120
I'm going to go ahead and add a comment.

515
00:36:45,120 --> 00:36:47,120
I'm going to go ahead and add a comment.

516
00:36:47,120 --> 00:36:49,120
I'm going to go ahead and add a comment.

517
00:36:49,120 --> 00:36:51,120
I'm going to go ahead and add a comment.

518
00:36:51,120 --> 00:36:53,120
I'm going to go ahead and add a comment.

519
00:36:53,120 --> 00:36:55,120
I'm going to go ahead and add a comment.

520
00:36:55,120 --> 00:36:57,120
I'm going to go ahead and add a comment.

521
00:36:57,120 --> 00:36:59,120
I'm going to go ahead and add a comment.

522
00:36:59,120 --> 00:37:01,120
I'm going to go ahead and add a comment.

523
00:37:01,120 --> 00:37:03,120
I'm going to go ahead and add a comment.

524
00:37:03,120 --> 00:37:05,120
I'm going to go ahead and add a comment.

525
00:37:05,120 --> 00:37:07,120
I'm going to go ahead and add a comment.

526
00:37:07,120 --> 00:37:09,120
I'm going to go ahead and add a comment.

527
00:37:09,120 --> 00:37:11,120
I'm going to go ahead and add a comment.

528
00:37:11,120 --> 00:37:13,120
I'm going to go ahead and add a comment.

529
00:37:13,120 --> 00:37:15,120
I'm going to go ahead and add a comment.

530
00:37:15,120 --> 00:37:17,120
I'm going to go ahead and add a comment.

531
00:37:17,120 --> 00:37:19,120
I'm going to go ahead and add a comment.

532
00:37:19,120 --> 00:37:21,120
I'm going to go ahead and add a comment.

533
00:37:21,120 --> 00:37:23,120
I'm going to go ahead and add a comment.

534
00:37:23,120 --> 00:37:25,120
I'm going to go ahead and add a comment.

535
00:37:25,120 --> 00:37:27,120
I'm going to go ahead and add a comment.

536
00:37:27,120 --> 00:37:29,120
I'm going to go ahead and add a comment.

537
00:37:29,120 --> 00:37:31,120
I'm going to go ahead and add a comment.

538
00:37:31,120 --> 00:37:33,120
I'm going to go ahead and add a comment.

539
00:37:33,120 --> 00:37:35,120
I'm going to go ahead and add a comment.

540
00:37:35,120 --> 00:37:37,120
I'm going to go ahead and add a comment.

541
00:37:37,120 --> 00:37:39,120
I'm going to go ahead and add a comment.

542
00:37:39,120 --> 00:37:41,120
I'm going to go ahead and add a comment.

543
00:37:41,120 --> 00:37:43,120
I'm going to go ahead and add a comment.

544
00:37:43,120 --> 00:37:45,120
I'm going to go ahead and add a comment.

545
00:37:45,120 --> 00:37:47,120
I'm going to go ahead and add a comment.

546
00:37:47,120 --> 00:37:49,120
I'm going to go ahead and add a comment.

547
00:37:49,120 --> 00:37:51,120
I'm going to go ahead and add a comment.

548
00:37:51,120 --> 00:37:53,120
I'm going to go ahead and add a comment.

549
00:37:53,120 --> 00:37:55,120
I'm going to go ahead and add a comment.

550
00:37:55,120 --> 00:37:57,120
I'm going to go ahead and add a comment.

551
00:37:57,120 --> 00:37:59,120
I'm going to go ahead and add a comment.

552
00:37:59,120 --> 00:38:01,120
I'm going to go ahead and add a comment.

553
00:38:01,120 --> 00:38:03,120
I'm going to go ahead and add a comment.

554
00:38:03,120 --> 00:38:05,120
I'm going to go ahead and add a comment.

555
00:38:05,120 --> 00:38:07,120
I'm going to go ahead and add a comment.

556
00:38:07,120 --> 00:38:09,120
I'm going to go ahead and add a comment.

557
00:38:09,120 --> 00:38:11,120
I'm going to go ahead and add a comment.

558
00:38:11,120 --> 00:38:13,120
I'm going to go ahead and add a comment.

559
00:38:13,120 --> 00:38:15,120
I'm going to go ahead and add a comment.

560
00:38:15,120 --> 00:38:17,120
I'm going to go ahead and add a comment.

561
00:38:17,120 --> 00:38:19,120
I'm going to go ahead and add a comment.

562
00:38:19,120 --> 00:38:21,120
I'm going to go ahead and add a comment.

563
00:38:21,120 --> 00:38:23,120
I'm going to go ahead and add a comment.

564
00:38:23,120 --> 00:38:25,120
I'm going to go ahead and add a comment.

565
00:38:25,120 --> 00:38:27,120
I'm going to go ahead and add a comment.

566
00:38:27,120 --> 00:38:29,120
I'm going to go ahead and add a comment.

567
00:38:29,120 --> 00:38:31,120
I'm going to go ahead and add a comment.

568
00:38:31,120 --> 00:38:33,120
I'm going to go ahead and add a comment.

569
00:38:33,120 --> 00:38:35,120
I'm going to go ahead and add a comment.

570
00:38:35,120 --> 00:38:37,120
I'm going to go ahead and add a comment.

571
00:38:37,120 --> 00:38:39,120
I'm going to go ahead and add a comment.

572
00:38:39,120 --> 00:38:41,120
I'm going to go ahead and add a comment.

573
00:38:41,120 --> 00:38:43,120
I'm going to go ahead and add a comment.

574
00:38:43,120 --> 00:38:45,120
I'm going to go ahead and add a comment.

575
00:38:45,120 --> 00:38:47,120
I'm going to go ahead and add a comment.

576
00:38:47,120 --> 00:38:49,120
I'm going to go ahead and add a comment.

577
00:38:49,120 --> 00:38:51,120
I'm going to go ahead and add a comment.

578
00:38:51,120 --> 00:38:53,120
I'm going to go ahead and add a comment.

579
00:38:53,120 --> 00:38:55,120
I'm going to go ahead and add a comment.

580
00:38:55,120 --> 00:38:57,120
I'm going to go ahead and add a comment.

581
00:38:57,120 --> 00:38:59,120
I'm going to go ahead and add a comment.

582
00:38:59,120 --> 00:39:01,120
I'm going to go ahead and add a comment.

583
00:39:01,120 --> 00:39:03,120
I'm going to go ahead and add a comment.

584
00:39:03,120 --> 00:39:05,120
I'm going to go ahead and add a comment.

585
00:39:05,120 --> 00:39:07,120
I'm going to go ahead and add a comment.

586
00:39:07,120 --> 00:39:09,120
I'm going to go ahead and add a comment.

587
00:39:09,120 --> 00:39:11,120
I'm going to go ahead and add a comment.

588
00:39:11,120 --> 00:39:13,120
I'm going to go ahead and add a comment.

589
00:39:13,120 --> 00:39:15,120
I'm going to go ahead and add a comment.

590
00:39:15,120 --> 00:39:17,120
I'm going to go ahead and add a comment.

591
00:39:17,120 --> 00:39:19,120
I'm going to go ahead and add a comment.

592
00:39:19,120 --> 00:39:21,120
I'm going to go ahead and add a comment.

593
00:39:21,120 --> 00:39:23,120
I'm going to go ahead and add a comment.

594
00:39:23,120 --> 00:39:25,120
I'm going to go ahead and add a comment.

595
00:39:25,120 --> 00:39:27,120
I'm going to go ahead and add a comment.

596
00:39:27,120 --> 00:39:29,120
I'm going to go ahead and add a comment.

597
00:39:29,120 --> 00:39:31,120
I'm going to go ahead and add a comment.

598
00:39:31,120 --> 00:39:33,120
I'm going to go ahead and add a comment.

599
00:39:33,120 --> 00:39:35,120
I'm going to go ahead and add a comment.

600
00:39:35,120 --> 00:39:37,120
I'm going to go ahead and add a comment.

601
00:39:37,120 --> 00:39:39,120
I'm going to go ahead and add a comment.

602
00:39:39,120 --> 00:39:41,120
I'm going to go ahead and add a comment.

603
00:39:41,120 --> 00:39:43,120
I'm going to go ahead and add a comment.

604
00:39:43,120 --> 00:39:45,120
I'm going to go ahead and add a comment.

605
00:39:45,120 --> 00:39:47,120
I'm going to go ahead and add a comment.

606
00:39:47,120 --> 00:39:49,120
I'm going to go ahead and add a comment.

607
00:39:49,120 --> 00:39:51,120
I'm going to go ahead and add a comment.

608
00:39:51,120 --> 00:39:53,120
I'm going to go ahead and add a comment.

609
00:39:53,120 --> 00:39:55,120
I'm going to go ahead and add a comment.

610
00:39:55,120 --> 00:39:57,120
I'm going to go ahead and add a comment.

611
00:39:57,120 --> 00:39:59,120
I'm going to go ahead and add a comment.

612
00:39:59,120 --> 00:40:01,120
I'm going to go ahead and add a comment.

613
00:40:01,120 --> 00:40:03,120
I'm going to go ahead and add a comment.

614
00:40:03,120 --> 00:40:05,120
I'm going to go ahead and add a comment.

615
00:40:05,120 --> 00:40:07,120
I'm going to go ahead and add a comment.

616
00:40:07,120 --> 00:40:09,120
I'm going to go ahead and add a comment.

617
00:40:09,120 --> 00:40:11,120
I'm going to go ahead and add a comment.

618
00:40:11,120 --> 00:40:13,120
I'm going to go ahead and add a comment.

619
00:40:13,120 --> 00:40:15,120
I'm going to go ahead and add a comment.

620
00:40:15,120 --> 00:40:17,120
I'm going to go ahead and add a comment.

621
00:40:17,120 --> 00:40:19,120
I'm going to go ahead and add a comment.

622
00:40:19,120 --> 00:40:21,120
I'm going to go ahead and add a comment.

623
00:40:21,120 --> 00:40:23,120
I'm going to go ahead and add a comment.

624
00:40:23,120 --> 00:40:25,120
I'm going to go ahead and add a comment.

625
00:40:25,120 --> 00:40:27,120
I'm going to go ahead and add a comment.

626
00:40:27,120 --> 00:40:29,120
I'm going to go ahead and add a comment.

627
00:40:29,120 --> 00:40:31,120
I'm going to go ahead and add a comment.

628
00:40:31,120 --> 00:40:33,120
I'm going to go ahead and add a comment.

629
00:40:33,120 --> 00:40:35,120
I'm going to go ahead and add a comment.

630
00:40:35,120 --> 00:40:37,120
I'm going to go ahead and add a comment.

631
00:40:37,120 --> 00:40:39,120
I'm going to go ahead and add a comment.

632
00:40:39,120 --> 00:40:41,120
I'm going to go ahead and add a comment.

633
00:40:41,120 --> 00:40:43,120
I'm going to go ahead and add a comment.

634
00:40:43,120 --> 00:40:45,120
I'm going to go ahead and add a comment.

635
00:40:45,120 --> 00:40:47,120
I'm going to go ahead and add a comment.

636
00:40:47,120 --> 00:40:49,120
I'm going to go ahead and add a comment.

637
00:40:49,120 --> 00:40:51,120
I'm going to go ahead and add a comment.

638
00:40:51,120 --> 00:40:53,120
I'm going to go ahead and add a comment.

639
00:40:53,120 --> 00:40:55,120
I'm going to go ahead and add a comment.

640
00:40:55,120 --> 00:40:57,120
I'm going to go ahead and add a comment.

641
00:40:57,120 --> 00:40:59,120
I'm going to go ahead and add a comment.

642
00:40:59,120 --> 00:41:01,120
I'm going to go ahead and add a comment.

643
00:41:01,120 --> 00:41:03,120
I'm going to go ahead and add a comment.

644
00:41:03,120 --> 00:41:05,120
I'm going to go ahead and add a comment.

645
00:41:05,120 --> 00:41:07,120
I'm going to go ahead and add a comment.

646
00:41:07,120 --> 00:41:09,120
I'm going to go ahead and add a comment.

647
00:41:09,120 --> 00:41:11,120
I'm going to go ahead and add a comment.

648
00:41:11,120 --> 00:41:13,120
I'm going to go ahead and add a comment.

649
00:41:13,120 --> 00:41:15,120
I'm going to go ahead and add a comment.

650
00:41:15,120 --> 00:41:17,120
I'm going to go ahead and add a comment.

651
00:41:17,120 --> 00:41:19,120
I'm going to go ahead and add a comment.

652
00:41:19,120 --> 00:41:21,120
I'm going to go ahead and add a comment.

653
00:41:21,120 --> 00:41:28,120
I wish I had that kind of time.

654
00:41:28,120 --> 00:41:31,120
All right.

655
00:41:31,120 --> 00:41:40,120
We're starting to get there.

656
00:41:40,120 --> 00:41:41,120
All right.

657
00:41:41,120 --> 00:41:43,720
We're starting to get there.

658
00:42:11,120 --> 00:42:17,840
I'm going to call it a quorum now.

659
00:42:17,840 --> 00:42:20,220
We're going to push forward.

660
00:42:20,220 --> 00:42:22,880
If you didn't get all of the code comments in that you wanted,

661
00:42:22,880 --> 00:42:26,360
that's fine. No worries.

662
00:42:26,400 --> 00:42:31,000
The next thing we're going to cover here is type annotations.

663
00:42:31,000 --> 00:42:35,480
I was really surprised in the pre-survey how many folks are using type annotations already.

664
00:42:35,480 --> 00:42:40,920
So maybe this is less of an introduction than I thought I might need to do.

665
00:42:40,920 --> 00:42:47,880
But in general, type annotations describe the types of your objects ahead of time.

666
00:42:49,160 --> 00:42:54,320
They're nice because we don't have to guess whether something is supposed to be a list,

667
00:42:54,320 --> 00:42:56,080
or a dictionary, or a tuple,

668
00:42:56,080 --> 00:42:59,840
or who knows what other type of object it might be.

669
00:42:59,840 --> 00:43:02,480
They take a lot of that guesswork out.

670
00:43:02,480 --> 00:43:05,600
So in the points module,

671
00:43:05,600 --> 00:43:07,120
you have a function like this,

672
00:43:07,120 --> 00:43:10,200
generatePlastNomPoints, and it takes two parameters,

673
00:43:10,200 --> 00:43:11,160
bounds and rate.

674
00:43:11,160 --> 00:43:14,560
But if I need to use that function,

675
00:43:14,560 --> 00:43:17,960
what am I supposed to put in those parameters?

676
00:43:17,960 --> 00:43:24,360
Type annotations are really quick way to tell people what is expected in that function.

677
00:43:24,360 --> 00:43:33,880
So we have bounds here is a tuple of length four with floats in each position.

678
00:43:33,880 --> 00:43:36,440
That's what it expects.

679
00:43:36,440 --> 00:43:40,360
Rate expects just a single float.

680
00:43:41,200 --> 00:43:43,880
The last line,

681
00:43:43,880 --> 00:43:46,600
maybe hard to see at the bottom for some folks in the back,

682
00:43:46,600 --> 00:43:51,680
but we have an arrow pointing to the return type of the function.

683
00:43:51,680 --> 00:43:57,000
In this case, it's going to return to us a NumPy nd array.

684
00:43:57,000 --> 00:44:07,080
So some nice things about type annotations.

685
00:44:07,080 --> 00:44:09,560
They make code bases more maintainable.

686
00:44:09,560 --> 00:44:12,240
That's what they were originally designed for,

687
00:44:12,240 --> 00:44:15,080
and the purpose behind them was to help make

688
00:44:15,080 --> 00:44:18,160
especially big code bases that a lot of people are working on.

689
00:44:18,160 --> 00:44:19,640
They might live a long time.

690
00:44:19,640 --> 00:44:21,920
They make them a little bit more maintainable,

691
00:44:21,920 --> 00:44:26,840
a little bit less cognitive overhead for anybody who's joining onto a project,

692
00:44:26,840 --> 00:44:31,720
and reading new code they haven't written themselves or haven't seen before.

693
00:44:32,080 --> 00:44:35,120
They can make building your docstrings easier,

694
00:44:35,120 --> 00:44:39,520
which we'll see, and they're not enforced at runtime.

695
00:44:39,520 --> 00:44:43,120
So if you get them wrong, that's okay.

696
00:44:43,120 --> 00:44:45,520
You don't want to get them wrong, of course,

697
00:44:45,520 --> 00:44:48,840
but sometimes things are just really hard to type.

698
00:44:48,840 --> 00:44:53,040
There's a question over here about a matplotlib figure.

699
00:44:53,160 --> 00:44:56,760
Those things are very complicated or tricky to type,

700
00:44:56,760 --> 00:45:00,080
and it might just be that it's not worth your time.

701
00:45:00,080 --> 00:45:02,360
That's a decision you get to make,

702
00:45:02,360 --> 00:45:05,400
whether it's worth your time or not to figure out

703
00:45:05,400 --> 00:45:10,440
exactly the right way to type a matplotlib figure in the return type.

704
00:45:14,040 --> 00:45:17,720
Cons, of course, are that the types need to be kept up to date.

705
00:45:17,720 --> 00:45:20,840
If you change something, you got to change the types as well.

706
00:45:20,840 --> 00:45:23,840
But there's tooling around this that can help.

707
00:45:23,840 --> 00:45:28,960
Sometimes you have to import objects just to use them as a type,

708
00:45:28,960 --> 00:45:32,320
and there are certain cases where that can be a little bit annoying,

709
00:45:32,320 --> 00:45:36,480
a little bit cumbersome, can lead to circular imports in some cases.

710
00:45:36,480 --> 00:45:38,400
Again, there's workarounds for that,

711
00:45:38,400 --> 00:45:42,560
but these are complexities that we're trying not to add if we can avoid it.

712
00:45:42,560 --> 00:45:44,720
Just some things are hard to type.

713
00:45:44,720 --> 00:45:46,520
That's the way it goes.

714
00:45:46,520 --> 00:45:52,240
The typing ecosystem is booming and growing really quickly.

715
00:45:52,240 --> 00:45:55,840
There's a lot of tooling out there around the typing ecosystem.

716
00:45:55,840 --> 00:46:00,360
There are tools to enforce the types at runtime or

717
00:46:00,360 --> 00:46:04,840
accept types, enforce them in different ways.

718
00:46:04,840 --> 00:46:08,840
But for now, we're just going to think of them as documentation,

719
00:46:08,840 --> 00:46:11,720
as something that happens statically in

720
00:46:11,720 --> 00:46:15,600
our .py files and doesn't do anything at runtime.

721
00:46:15,600 --> 00:46:23,040
Okay. So now we're going to add some to our practice module.

722
00:46:23,040 --> 00:46:27,040
We have a group of simple types, strings,

723
00:46:27,040 --> 00:46:30,200
ints, floats, and bools that are all built in.

724
00:46:30,200 --> 00:46:32,400
You get those for free.

725
00:46:32,400 --> 00:46:34,760
Other ones you might have to,

726
00:46:34,760 --> 00:46:37,680
like collections like tuple, list, dict.

727
00:46:37,680 --> 00:46:39,720
You might have to import those.

728
00:46:39,720 --> 00:46:42,000
So from typing, import something.

729
00:46:42,000 --> 00:46:45,760
I think it's Python 3.10.

730
00:46:45,760 --> 00:46:50,280
Some of those you can just use right away.

731
00:46:50,280 --> 00:46:52,000
I think you can use list.

732
00:46:52,000 --> 00:46:53,840
Does anybody know for sure?

733
00:46:53,840 --> 00:46:56,880
I think you can use list and dict and tuple,

734
00:46:56,880 --> 00:46:58,960
just in the lowercase native form.

735
00:46:58,960 --> 00:47:01,520
But for purposes of compatibility here,

736
00:47:01,520 --> 00:47:05,920
let's use the from typing import.

737
00:47:05,920 --> 00:47:11,680
There's some other special types that you might want to know about.

738
00:47:11,680 --> 00:47:18,000
Optional is something that could be none or it could be a value.

739
00:47:18,000 --> 00:47:19,760
So we call it optional.

740
00:47:19,760 --> 00:47:22,120
I'll show you an example of that in a second.

741
00:47:22,120 --> 00:47:29,520
Iterable is a more generic type for something like a list or a tuple,

742
00:47:29,520 --> 00:47:31,200
that can be iterated over.

743
00:47:31,200 --> 00:47:33,400
Maybe your code doesn't care what it is,

744
00:47:33,400 --> 00:47:35,520
whether it's a list or a tuple or something,

745
00:47:35,520 --> 00:47:40,600
you just need to loop over something or iterate over something.

746
00:47:40,600 --> 00:47:44,000
Then you can call it an iterable,

747
00:47:44,000 --> 00:47:48,360
and then you can pass in whichever iterable you want.

748
00:47:48,560 --> 00:47:54,640
Union as well. Union is a way of saying or this type or this type.

749
00:47:54,640 --> 00:48:01,080
It could be a string or a float, something like that.

750
00:48:01,080 --> 00:48:05,880
So let's do some examples together on that.

751
00:48:06,560 --> 00:48:13,280
I think if I look at my password,

752
00:48:13,280 --> 00:48:20,680
I have a function where there's a default parameter of none.

753
00:48:20,680 --> 00:48:24,120
So this is something that's going to require optional.

754
00:48:24,120 --> 00:48:26,880
The way that we specify optional,

755
00:48:26,880 --> 00:48:30,040
it's not optional in the sense that it's an optional parameter,

756
00:48:30,040 --> 00:48:34,360
it means it's optionally none or optionally something.

757
00:48:35,880 --> 00:48:39,040
So we're going to from typing,

758
00:48:39,040 --> 00:48:43,760
import optional, capital O.

759
00:48:44,080 --> 00:48:50,920
Over here where we add the type next to invalid cares or cars,

760
00:48:50,920 --> 00:48:53,880
we're going to say optional.

761
00:48:53,880 --> 00:48:56,960
We're going to use square brackets,

762
00:48:56,960 --> 00:49:01,320
and then I think in this case,

763
00:49:01,320 --> 00:49:03,440
we want an int.

764
00:49:06,440 --> 00:49:09,520
No. What do I want?

765
00:49:09,520 --> 00:49:12,600
Somebody who's looking at that function remind me.

766
00:49:12,600 --> 00:49:15,280
List of something. Yeah.

767
00:49:17,400 --> 00:49:24,080
Oh, sure. I'm always the guy who's asking people to Zoom, so thank you.

768
00:49:29,600 --> 00:49:32,560
Is that tolerable?

769
00:49:33,560 --> 00:49:35,840
Yes.

770
00:49:35,840 --> 00:49:40,080
So for hard code bases that aren't very well,

771
00:49:40,080 --> 00:49:44,880
do you experience like multi-type or

772
00:49:44,880 --> 00:49:50,880
a lot of type libraries or a lot of different stuff in that way?

773
00:49:50,880 --> 00:49:53,160
I haven't. I've never used those.

774
00:49:53,160 --> 00:49:55,960
Yeah. If your code exists already in

775
00:49:55,960 --> 00:49:59,400
a large state and then you try to add types,

776
00:49:59,400 --> 00:50:01,440
that's a painful experience.

777
00:50:01,440 --> 00:50:08,480
Yeah. That's the situation at Dropbox for which

778
00:50:08,480 --> 00:50:12,960
the typing was pushed into Python where they had

779
00:50:12,960 --> 00:50:18,400
a large Python code base that was just so big and hard to maintain,

780
00:50:18,400 --> 00:50:20,680
and types made it a lot easier to maintain.

781
00:50:20,680 --> 00:50:23,680
So I don't know about any of that tooling that does

782
00:50:23,680 --> 00:50:27,000
it automatically how well it works or anything like that.

783
00:50:27,480 --> 00:50:31,040
Yeah. It's a real problem.

784
00:50:31,040 --> 00:50:34,440
If you're going to use type annotations, use them from the start.

785
00:50:34,440 --> 00:50:36,440
I mean, obviously you don't always have that choice,

786
00:50:36,440 --> 00:50:38,480
but if you can use them from the start,

787
00:50:38,480 --> 00:50:41,600
you're going to be in a lot better shape.

788
00:50:41,600 --> 00:50:45,600
So here we're going to have an optional,

789
00:50:45,600 --> 00:50:49,600
and I think this might even be able to accept an iterable here.

790
00:50:49,600 --> 00:50:55,880
It could be a tuple. We're just looping through for invalid car, chair, whatever.

791
00:50:56,280 --> 00:51:01,320
So I think it could be anything that we can iterate over.

792
00:51:01,320 --> 00:51:05,040
Again, it doesn't really matter if we're wrong.

793
00:51:06,920 --> 00:51:10,640
So here we get them nested.

794
00:51:11,560 --> 00:51:16,600
We end up with optional iterable string,

795
00:51:17,120 --> 00:51:20,000
or you can't see it all.

796
00:51:20,000 --> 00:51:29,880
Okay. That's one of the more complicated cases.

797
00:51:30,160 --> 00:51:34,640
Some of the other ones are a little bit easier.

798
00:51:34,640 --> 00:51:38,120
But give it a shot with your demo module.

799
00:51:38,120 --> 00:51:40,720
Try to add some types there.

800
00:51:50,000 --> 00:52:09,520
Yeah. When you have your types annotated,

801
00:52:09,520 --> 00:52:11,720
throw up your sticky note.

802
00:52:11,720 --> 00:52:19,720
Don't forget to try to add a return type with the arrow.

803
00:52:20,280 --> 00:52:23,880
This may be a little confusing because it's broken up over a couple of lines,

804
00:52:23,880 --> 00:52:27,960
but the arrow to your return type

805
00:52:27,960 --> 00:52:32,680
before the colon at the end of the function signature.

806
00:52:32,680 --> 00:52:55,200
Yeah. So this is the question they asked earlier. It's tricky.

807
00:52:58,360 --> 00:53:02,600
I'm trying to decide how deep we want to go into this.

808
00:53:02,600 --> 00:53:06,040
Because in the case of documentation, types for documentation,

809
00:53:06,040 --> 00:53:08,640
you do whatever works or whatever you need to.

810
00:53:08,640 --> 00:53:11,320
If something is returning fig,

811
00:53:11,320 --> 00:53:13,800
then in a lot of cases,

812
00:53:13,800 --> 00:53:17,200
it's pretty self-evident what the type is going to be.

813
00:53:18,120 --> 00:53:23,360
Maybe it's not worth the pain of figuring out those complexities.

814
00:53:23,360 --> 00:53:32,440
But in general, you can import the parent class that it is.

815
00:53:32,440 --> 00:53:35,600
Matplotlib figures are a little bit weird in that way.

816
00:53:35,600 --> 00:53:39,960
So I put this example in there to generate this conversation,

817
00:53:39,960 --> 00:53:43,320
to know that there are edge cases when it comes to typing,

818
00:53:43,320 --> 00:53:45,800
and there are things that don't work so well.

819
00:53:45,800 --> 00:53:49,280
So for a lot of tooling around typing,

820
00:53:49,280 --> 00:53:51,040
we need type stubs,

821
00:53:51,040 --> 00:53:57,000
which are defined whole other topic for another day.

822
00:53:57,000 --> 00:54:01,280
But some libraries don't have type stubs or are still working on it.

823
00:54:01,280 --> 00:54:06,040
I think if you want to add types to the request library,

824
00:54:06,040 --> 00:54:10,800
you need to import stash requests like a whole separate library.

825
00:54:10,800 --> 00:54:13,240
I think that's right. Somebody can correct me.

826
00:54:13,240 --> 00:54:15,640
I don't use request very much.

827
00:54:16,320 --> 00:54:20,320
So in the case of Matplotlib figure,

828
00:54:20,320 --> 00:54:23,160
in that specific case,

829
00:54:23,160 --> 00:54:28,920
I will. So we can cheat a little bit,

830
00:54:28,920 --> 00:54:33,240
because what you didn't know maybe is that built into the repo is

831
00:54:33,240 --> 00:54:37,920
all of these levels as different branches of the repo.

832
00:54:37,920 --> 00:54:40,200
So if you really screw something up,

833
00:54:40,200 --> 00:54:44,520
you can always fast-forward a little bit by going to a different branch.

834
00:54:44,520 --> 00:54:49,040
So I'm going to move to level one.

835
00:54:59,840 --> 00:55:03,720
So I imported from

836
00:55:03,720 --> 00:55:09,720
Matplotlib.figure import figure and then I used that as my return type.

837
00:55:16,880 --> 00:55:22,000
These days, especially with popular libraries like Matplotlib,

838
00:55:22,000 --> 00:55:25,120
there's probably some resource out there that tells you how to

839
00:55:25,120 --> 00:55:27,440
type something funky,

840
00:55:27,440 --> 00:55:30,680
anything that's not immediately obvious how you should be typing it.

841
00:55:30,680 --> 00:55:33,600
Somebody's had that same problem before.

842
00:55:51,200 --> 00:55:53,960
That's a good question.

843
00:55:53,960 --> 00:55:57,960
There's always a little bit of a book.

844
00:55:57,960 --> 00:56:03,040
If you're not using any typing related tools on top of this,

845
00:56:03,040 --> 00:56:06,480
you can put whatever you want and Python is not going to care.

846
00:56:06,480 --> 00:56:08,960
I think that's right.

847
00:56:08,960 --> 00:56:12,000
Is that right? Anyway, you play around with that.

848
00:56:12,000 --> 00:56:17,880
But there's a get out of jail free card if you put it in quotation marks.

849
00:56:18,640 --> 00:56:22,440
So if I put that in quotation marks,

850
00:56:22,720 --> 00:56:27,960
it's not really going to be evaluated in the same way.

851
00:56:28,040 --> 00:56:30,560
It says, this is the type,

852
00:56:30,560 --> 00:56:34,200
but typing tools don't go looking for something because you're not going to

853
00:56:34,200 --> 00:56:38,600
have the right information to figure it out.

854
00:56:40,720 --> 00:56:46,840
I don't want to go too deep down the rabbit hole of typing because I'm not an expert in docs,

855
00:56:46,840 --> 00:56:49,400
but I'm certainly not an expert in typing.

856
00:56:49,400 --> 00:56:53,080
I don't want to give you bad info if I don't have to.

857
00:56:53,080 --> 00:57:00,240
Cool. Has everyone got type annotations?

858
00:57:10,120 --> 00:57:12,600
Sure.

859
00:57:20,120 --> 00:57:28,280
So here, I didn't even tell it what had to be in the iterable.

860
00:57:28,280 --> 00:57:35,320
But square bracket.

861
00:57:38,440 --> 00:57:42,120
Yeah. So you can add this as well.

862
00:57:45,400 --> 00:57:47,640
Go ahead.

863
00:57:49,400 --> 00:58:09,240
I'm not sure exactly what you mean.

864
00:58:19,400 --> 00:58:23,760
Maybe. So what you could do is you could say,

865
00:58:39,600 --> 00:58:42,480
you can define a type like that.

866
00:58:42,480 --> 00:58:44,400
Everything in Python is an object.

867
00:58:44,400 --> 00:58:47,160
You can assign it to an object,

868
00:58:47,160 --> 00:58:53,360
and then you can call that invalid type.

869
00:58:53,360 --> 00:58:54,800
Is that what you're thinking?

870
00:58:54,800 --> 00:59:13,920
So you mean enforce the type at runtime?

871
00:59:13,920 --> 00:59:26,320
Usually, what you would do is just do a check of the first line of your code,

872
00:59:26,320 --> 00:59:29,440
I think is the natural thing to do there.

873
00:59:29,440 --> 00:59:33,400
There are tools like Pydantic that will try to coerce types.

874
00:59:33,400 --> 00:59:37,600
So if they put something in and it's not the right type,

875
00:59:37,600 --> 00:59:42,880
it'll error out right away or try to convert it to the correct type.

876
00:59:43,920 --> 00:59:47,280
Again, I'm not a typing expert.

877
00:59:47,280 --> 00:59:50,800
That's a good question, but I don't have a good answer.

878
00:59:50,800 --> 00:59:56,960
Okay. Let's move to docstrings.

879
00:59:56,960 --> 00:59:58,960
I was very pleased in the pre-survey.

880
00:59:58,960 --> 01:00:01,160
Lots of people have written docstrings.

881
01:00:01,160 --> 01:00:02,600
I know not everybody has,

882
01:00:02,600 --> 01:00:06,040
but lots of people have and that's really good because docstrings

883
01:00:06,040 --> 01:00:08,440
are the foundation for all the next bit

884
01:00:08,440 --> 01:00:11,400
of cool stuff that we can do in documentation.

885
01:00:11,400 --> 01:00:14,960
So PEP 257 defined a lot of

886
01:00:14,960 --> 01:00:19,320
the conventions that we need to use for docstrings and best practices.

887
01:00:19,320 --> 01:00:26,120
But it's a string that you have at the start of a module function class method,

888
01:00:26,120 --> 01:00:28,960
and you can access it later using

889
01:00:28,960 --> 01:00:34,000
the Dunder doc method or a special attribute rather.

890
01:00:34,000 --> 01:00:37,760
In PEP 257, they define some good practices

891
01:00:38,280 --> 01:00:41,680
always include at least a one-line docstring

892
01:00:41,680 --> 01:00:45,920
for every class function method.

893
01:00:45,920 --> 01:00:47,320
Usually you want to put more,

894
01:00:47,320 --> 01:00:51,400
but at least a one-liner is,

895
01:00:51,400 --> 01:00:56,880
let's see, softly required if you want to follow these conventions.

896
01:00:56,880 --> 01:01:01,360
You want to use triple double quotes.

897
01:01:01,360 --> 01:01:03,240
I guess it's not exactly triple quotes.

898
01:01:03,240 --> 01:01:06,360
Triple double quotes and not single quotes.

899
01:01:06,360 --> 01:01:07,920
This is not enforced by Python,

900
01:01:07,920 --> 01:01:12,160
but it's just another good practice and standardization of practice there.

901
01:01:12,160 --> 01:01:17,960
So the triple double quotes like you see up here at the top docstring.

902
01:01:18,080 --> 01:01:20,160
When you're writing your docstring,

903
01:01:20,160 --> 01:01:24,320
you try not to repeat the name of the function or the method.

904
01:01:24,320 --> 01:01:26,760
It doesn't add any value to you.

905
01:01:26,760 --> 01:01:29,440
So sometimes it's a really good exercise to try to think of

906
01:01:29,440 --> 01:01:32,080
a different way to describe your function

907
01:01:32,080 --> 01:01:35,520
that's not just saying the name of the function.

908
01:01:36,640 --> 01:01:40,360
I know this is going to be hard to see.

909
01:01:40,360 --> 01:01:44,960
I thought I was going to have a bigger screen.

910
01:01:44,960 --> 01:01:50,080
But there's three main styles in use.

911
01:01:50,080 --> 01:01:54,920
Python will actually let you use all kinds of different styles.

912
01:01:55,160 --> 01:01:57,920
Really anything you want, I think.

913
01:01:57,920 --> 01:02:01,160
PEP 257 outlines some basics,

914
01:02:01,160 --> 01:02:03,240
and these are three styles that follow

915
01:02:03,240 --> 01:02:06,960
those basics and then add some other extra stuff to them.

916
01:02:06,960 --> 01:02:09,720
The NumPy style is the style that I like.

917
01:02:09,720 --> 01:02:13,400
It's a little bit more verbose than,

918
01:02:13,400 --> 01:02:15,920
for instance, the Google style.

919
01:02:15,920 --> 01:02:18,320
But I don't know, I like it.

920
01:02:18,320 --> 01:02:22,680
I got started doing scientific computing stuff and got used to that style.

921
01:02:22,960 --> 01:02:26,720
NumPy and Google are probably the two most common styles that people

922
01:02:26,720 --> 01:02:30,080
use these days and tooling recognizes that.

923
01:02:30,080 --> 01:02:32,360
The restructured text style,

924
01:02:32,360 --> 01:02:38,160
the native style for using Sphinx is the one in the top right,

925
01:02:38,160 --> 01:02:40,120
and it looks a little bit less familiar,

926
01:02:40,120 --> 01:02:44,280
I think, to a lot of folks if you look in raw code.

927
01:02:44,280 --> 01:02:48,720
But you might see older code bases that they still use that style.

928
01:02:48,720 --> 01:02:51,480
It just tends to be a lot more,

929
01:02:51,480 --> 01:02:53,840
I don't know, I think a little bit harder to read,

930
01:02:53,840 --> 01:02:57,240
a little less human readable than the other formats.

931
01:02:57,520 --> 01:03:00,720
But my company uses Google style,

932
01:03:00,720 --> 01:03:04,120
so that's the kind that I've started to learn. Yes, question.

933
01:03:04,120 --> 01:03:07,680
So I was going to ask about that PyCharm.

934
01:03:07,680 --> 01:03:13,000
I do the triple-soc,

935
01:03:13,000 --> 01:03:16,840
and after that we use the program.

936
01:03:16,840 --> 01:03:17,720
Yes.

937
01:03:17,720 --> 01:03:20,360
So there's another way to do restructured type code.

938
01:03:20,360 --> 01:03:23,200
Is there another way to update Google style?

939
01:03:23,200 --> 01:03:25,280
I don't use PyCharm,

940
01:03:25,280 --> 01:03:30,520
but I was looking this up before the tutorial because I'm sure there is.

941
01:03:30,520 --> 01:03:33,840
Does anybody else use PyCharm and know that you can change that setting?

942
01:03:33,840 --> 01:03:48,000
Yeah. I bet you'll be able to find that.

943
01:03:48,000 --> 01:03:55,120
In VS Code, there's an extension called AutoDockString,

944
01:03:55,120 --> 01:03:58,600
I think, that does the same thing. It's really nice.

945
01:03:58,600 --> 01:04:02,080
So that's the way to level up your DockString stuff.

946
01:04:02,080 --> 01:04:05,680
I intentionally saved those editor tricks for the end of the talk,

947
01:04:05,680 --> 01:04:07,800
because I want you to try to craft them by hand,

948
01:04:07,800 --> 01:04:09,720
but your editor might do it for you. Yes.

949
01:04:09,720 --> 01:04:36,400
Yeah. It's a really tricky problem to solve.

950
01:04:36,400 --> 01:04:38,680
Sometimes it's a bit of a cultural problem,

951
01:04:38,680 --> 01:04:41,760
and about setting expectations about what has to

952
01:04:41,760 --> 01:04:45,760
happen whenever you open a PR or something.

953
01:04:45,760 --> 01:04:49,720
There are some tools that we'll look at later on if we have

954
01:04:49,720 --> 01:04:54,400
time that are linters for DockStrings,

955
01:04:54,400 --> 01:04:59,320
and those can go a little bit of way to make sure things are formatted correctly.

956
01:04:59,320 --> 01:05:03,120
There's something called xDockTest or DockTest,

957
01:05:03,120 --> 01:05:06,920
which is a tool that integrates with PyTest,

958
01:05:06,920 --> 01:05:08,760
or you can run it on its own,

959
01:05:08,760 --> 01:05:12,640
but you can run your examples.

960
01:05:12,640 --> 01:05:14,920
So if you have examples at the bottom of your DockString,

961
01:05:14,920 --> 01:05:16,160
I don't have any here,

962
01:05:16,160 --> 01:05:18,800
but if you include examples,

963
01:05:18,800 --> 01:05:20,040
it will run those.

964
01:05:20,040 --> 01:05:23,040
So that's one way and it'll fail, a test will fail.

965
01:05:23,040 --> 01:05:28,120
So that's one way if you get into the habit of adding an example to every DockString.

966
01:05:28,120 --> 01:05:29,960
It's not going to enforce that your DockString is

967
01:05:29,960 --> 01:05:32,200
perfect or that it's up to date,

968
01:05:32,200 --> 01:05:34,640
but it's one extra check to say,

969
01:05:34,680 --> 01:05:36,800
well, the example doesn't run anymore,

970
01:05:36,800 --> 01:05:40,360
so this function must have changed in some meaningful way.

971
01:05:40,360 --> 01:05:45,560
That is a good question and problem to keeping things up to date. Yeah.

972
01:05:45,560 --> 01:05:50,000
Do you have a whole process so you don't know where that DockString is and everything?

973
01:05:50,000 --> 01:05:54,480
You might have functions that are self-striving that are simple enough where you're just

974
01:05:54,480 --> 01:05:58,120
going to make, I mean, I guess maybe a pump case,

975
01:05:58,120 --> 01:06:03,320
but you have a heuristic unit or stuff like you're just giving a type of complexity,

976
01:06:03,320 --> 01:06:06,960
like a function that allows you to have full functions.

977
01:06:06,960 --> 01:06:12,360
How many of those do you have?

978
01:06:12,560 --> 01:06:17,040
I mean, my heuristic is every function should have some kind of DockString.

979
01:06:17,040 --> 01:06:20,720
Yeah. That's where it's either the one-liner.

980
01:06:20,720 --> 01:06:23,720
If you're very good at

981
01:06:23,720 --> 01:06:28,080
dry code and breaking things up into nice little tiny functions,

982
01:06:28,080 --> 01:06:31,440
then it might only need maybe your function takes one parameter and

983
01:06:31,440 --> 01:06:35,480
it's really well-named and does something very small.

984
01:06:35,480 --> 01:06:40,440
In that case, you might not need the full parameters returns setup.

985
01:06:40,440 --> 01:06:44,120
But having a line that says what it does is,

986
01:06:44,120 --> 01:06:46,880
I mean, how much time does it cost?

987
01:06:46,880 --> 01:06:51,040
Not very much. How much time might it save in the future?

988
01:06:51,040 --> 01:06:55,760
More than that. At least potentially. You have a question?

989
01:06:55,760 --> 01:07:03,480
Yeah. So how you've done it and what you've done in the other kind of code base

990
01:07:03,480 --> 01:07:10,160
is that you have type of things and then it's a DockString that you specify,

991
01:07:10,160 --> 01:07:15,680
you have to input any kind of output to it or what are your

992
01:07:15,680 --> 01:07:22,520
automatic ways of like yield parking that and other kind of things?

993
01:07:22,520 --> 01:07:27,120
Yes. Wait, you mean in terms of like then linting it with that stuff or?

994
01:07:27,120 --> 01:07:27,840
Yeah.

995
01:07:27,840 --> 01:07:30,160
That's a good question.

996
01:07:30,320 --> 01:07:33,760
I don't know of that tool but that would be a cool one to build.

997
01:07:33,760 --> 01:07:35,400
I think that's possible.

998
01:07:35,400 --> 01:07:37,640
So you're saying you have your,

999
01:07:37,640 --> 01:07:39,680
assuming your type hints are always right,

1000
01:07:39,680 --> 01:07:41,480
you then just compare your type hints to

1001
01:07:41,480 --> 01:07:46,200
the type annotation in the DockString.

1002
01:07:46,200 --> 01:07:49,320
Or auto-generate.

1003
01:07:49,320 --> 01:07:51,240
Auto-generate, yes.

1004
01:07:51,240 --> 01:07:54,080
I think that's what he was referring to.

1005
01:07:54,080 --> 01:07:56,000
I was going to save this for later,

1006
01:07:56,000 --> 01:07:58,440
a little bit of magic but we'll do it now.

1007
01:07:58,440 --> 01:08:06,640
So I am going to install an extension for my VS code called auto-DockString.

1008
01:08:08,400 --> 01:08:12,360
You were saying the same functionality I think is native to PyCharm,

1009
01:08:12,360 --> 01:08:14,280
you don't need any extension even.

1010
01:08:14,280 --> 01:08:22,520
I install it and now if I get rid of this,

1011
01:08:22,520 --> 01:08:30,320
well, I'm going to go to this other function.

1012
01:08:30,320 --> 01:08:34,120
If I get rid of this DockString,

1013
01:08:36,760 --> 01:08:40,720
I get a pre-populated generate DockString.

1014
01:08:40,720 --> 01:08:44,440
It's defaulting to Google style here.

1015
01:08:44,440 --> 01:08:49,600
But it'll add in your type annotations,

1016
01:08:49,600 --> 01:08:52,480
it will find those and add those already.

1017
01:08:52,480 --> 01:09:00,200
All you need to add are the descriptions for each of the arguments or the returns.

1018
01:09:03,200 --> 01:09:06,560
So that's the shortcut, make your life a little bit easier.

1019
01:09:06,560 --> 01:09:08,800
You don't have to type out all the colons and

1020
01:09:08,800 --> 01:09:13,200
all the little bits that are repetitive,

1021
01:09:13,200 --> 01:09:15,880
those get built for you.

1022
01:09:15,880 --> 01:09:17,720
Is that what you were thinking about?

1023
01:09:17,720 --> 01:09:22,880
Good. I should start with the magic next time.

1024
01:09:22,880 --> 01:09:27,760
All right. So have people been writing DockStrings as we've been talking?

1025
01:09:27,760 --> 01:09:31,080
If you have a DockString for your function,

1026
01:09:31,080 --> 01:09:33,240
give me a green sticky.

1027
01:09:38,800 --> 01:09:46,840
Awesome. So that's the end of stage one.

1028
01:09:46,840 --> 01:09:54,800
You might want to commit your code just to save it.

1029
01:09:55,320 --> 01:09:58,160
Then we're going to take a break.

1030
01:09:58,160 --> 01:10:00,200
We're past the hour already.

1031
01:10:00,200 --> 01:10:05,480
So if tired, break.

1032
01:10:08,800 --> 01:10:19,240
I have it at, time is 2.40.

1033
01:10:19,240 --> 01:10:25,280
So we'll get back here 2.55. We'll kick off.

1034
01:10:26,600 --> 01:10:30,800
I can be here to answer questions, talk about stuff.

1035
01:10:31,920 --> 01:10:34,800
All right, folks.

1036
01:10:35,800 --> 01:10:38,720
Ready to get back to it?

1037
01:10:39,440 --> 01:10:41,880
All right. In the meantime,

1038
01:10:41,880 --> 01:10:44,240
we learned the question that I totally didn't

1039
01:10:44,240 --> 01:10:47,360
understand because I don't know about TypeScript.

1040
01:10:47,360 --> 01:10:49,880
There is a way for something.

1041
01:10:49,880 --> 01:10:54,120
Was it on this function that you were trying to use the literal?

1042
01:10:54,120 --> 01:10:57,200
Right here with language here?

1043
01:10:57,560 --> 01:11:00,560
Is this where you were using the literal?

1044
01:11:00,560 --> 01:11:07,240
Yeah. So there's a type called literal.

1045
01:11:07,400 --> 01:11:09,840
If we're only going to accept,

1046
01:11:09,840 --> 01:11:11,640
in this case, if you look at the function,

1047
01:11:11,640 --> 01:11:12,720
if you haven't looked at it,

1048
01:11:12,720 --> 01:11:20,840
we're only going to accept English or Deutsch as valid inputs.

1049
01:11:21,000 --> 01:11:28,920
We can say literal.

1050
01:11:28,920 --> 01:11:31,480
Is it comma or?

1051
01:11:31,480 --> 01:11:36,960
Yeah. Comma. That's a way to type annotated so that

1052
01:11:36,960 --> 01:11:41,800
we specify exactly which values we might accept.

1053
01:11:41,800 --> 01:11:43,920
It's pretty cool. I like that.

1054
01:11:43,920 --> 01:11:46,520
I learned something. Maybe we all learned something.

1055
01:11:46,520 --> 01:11:49,920
So thank you. Thanks for asking that question.

1056
01:11:49,920 --> 01:11:57,640
All right. I'm going to undo that just because I don't know

1057
01:11:57,640 --> 01:12:00,880
what kind of havoc that's going to cause later on down the line.

1058
01:12:03,480 --> 01:12:06,160
Let's move on to level 2.

1059
01:12:06,160 --> 01:12:09,760
Let's make something that's a little more interesting.

1060
01:12:09,760 --> 01:12:12,800
We're going to talk about Jupiter book,

1061
01:12:12,800 --> 01:12:15,160
and then we are going to dive into Sphinx a little bit,

1062
01:12:15,160 --> 01:12:19,880
and take some pieces from Sphinx that are going to be very useful.

1063
01:12:20,840 --> 01:12:25,120
So far, everything we've done is inside our code base.

1064
01:12:25,120 --> 01:12:27,480
It's inside that.py file.

1065
01:12:27,480 --> 01:12:30,280
We have added the type annotations,

1066
01:12:30,280 --> 01:12:31,960
we have added our doc string,

1067
01:12:31,960 --> 01:12:36,320
we have added those code comments in the body of the functions.

1068
01:12:36,320 --> 01:12:40,360
But if somebody wants to look at that documentation,

1069
01:12:40,360 --> 01:12:43,120
they have to open your raw code file.

1070
01:12:43,360 --> 01:12:48,440
That's not a great expectation for when you want to share it out externally.

1071
01:12:48,440 --> 01:12:50,360
Might be fine for your team,

1072
01:12:50,360 --> 01:12:53,560
but it's not really fine for other users.

1073
01:12:53,560 --> 01:12:55,880
So we want pretty docs on the web.

1074
01:12:55,880 --> 01:12:57,200
That's what we want to aim for.

1075
01:12:57,200 --> 01:12:59,720
That's the standard is pretty docs on the web.

1076
01:12:59,720 --> 01:13:01,880
You can have images, you can have call-outs,

1077
01:13:01,880 --> 01:13:04,160
you can have links,

1078
01:13:04,160 --> 01:13:05,800
all kinds of fun stuff,

1079
01:13:05,800 --> 01:13:08,520
and that's what we're going to try to build towards.

1080
01:13:08,600 --> 01:13:14,080
So one way of getting there is Jupiter book.

1081
01:13:14,080 --> 01:13:17,040
It's a project for, as they call it,

1082
01:13:17,040 --> 01:13:21,240
for building beautiful publication quality books and documents.

1083
01:13:21,240 --> 01:13:27,040
It's not necessarily built as a documentation engine necessarily,

1084
01:13:27,040 --> 01:13:32,440
but it has a lot of advantages that make it nice for that.

1085
01:13:32,440 --> 01:13:36,240
First of all, we can use lots of formats side-by-side.

1086
01:13:36,240 --> 01:13:37,680
We can write in Markdown,

1087
01:13:37,680 --> 01:13:40,720
we can write content in Jupiter notebooks with Markdown,

1088
01:13:40,720 --> 01:13:44,640
and LaTeX, and other things.

1089
01:13:44,640 --> 01:13:46,960
We can write in restructured text if you have

1090
01:13:46,960 --> 01:13:49,800
existing docs that you want to keep around,

1091
01:13:49,800 --> 01:13:52,560
or somebody who's engineered

1092
01:13:52,560 --> 01:13:56,040
some beautiful restructured text thing that you want to not lose.

1093
01:13:56,040 --> 01:14:00,400
Also, MIST, has anyone heard of MIST?

1094
01:14:00,400 --> 01:14:02,440
Raise your hand if you've heard of MIST.

1095
01:14:02,440 --> 01:14:06,120
Markedly Structured Text is what it stands for.

1096
01:14:06,120 --> 01:14:10,880
It's really the glue of all of this approach,

1097
01:14:10,880 --> 01:14:14,720
where we're gluing together Markdown and restructured text,

1098
01:14:14,720 --> 01:14:18,120
and translating MIST speaks both,

1099
01:14:18,120 --> 01:14:22,160
and MIST is mystical to me.

1100
01:14:22,160 --> 01:14:25,800
It's awesome. It's a cool project that's not very old,

1101
01:14:25,800 --> 01:14:28,120
and it's really developing,

1102
01:14:28,120 --> 01:14:30,800
and I think it's going to be really productive for us.

1103
01:14:30,800 --> 01:14:33,520
The config and build system,

1104
01:14:33,520 --> 01:14:34,800
like any build system,

1105
01:14:34,800 --> 01:14:37,680
there's a certain level of complexity that we have to tolerate,

1106
01:14:37,680 --> 01:14:40,760
but I think it's fairly beginner-friendly.

1107
01:14:40,760 --> 01:14:42,720
Everything happens in YAML files.

1108
01:14:42,720 --> 01:14:44,840
We don't have make files,

1109
01:14:44,840 --> 01:14:49,000
which I think is a plus for folks who are doing it for the first time.

1110
01:14:49,000 --> 01:14:50,880
It looks great by default.

1111
01:14:50,880 --> 01:14:54,320
It has a lot of nice modern feel to it,

1112
01:14:54,320 --> 01:14:58,640
and we don't have to do a lot of tweaking just to make it look presentable.

1113
01:14:58,640 --> 01:15:03,240
It requires a little extra work to connect it with Read the Docs,

1114
01:15:03,240 --> 01:15:07,200
but it's definitely possible because it's Sphinx under the hood.

1115
01:15:08,160 --> 01:15:13,400
We can turn it into something that can be put on Read the Docs.

1116
01:15:13,400 --> 01:15:15,160
I'm not going to do all of that today because again,

1117
01:15:15,160 --> 01:15:16,600
that's more complexity,

1118
01:15:16,600 --> 01:15:19,320
but that's definitely something that you can do,

1119
01:15:19,320 --> 01:15:22,800
and is documented on the Jupyter Book documentation.

1120
01:15:22,800 --> 01:15:26,480
We can't always use the full range maybe of Sphinx functionality.

1121
01:15:26,480 --> 01:15:30,680
If there's some really specialized Sphinx extension or tool,

1122
01:15:30,680 --> 01:15:34,240
it may not be compatible with Jupyter Book for some reason.

1123
01:15:34,240 --> 01:15:37,560
So that's something to keep in mind, a potential downside.

1124
01:15:37,560 --> 01:15:40,880
Customizing the look is a little bit trickier.

1125
01:15:40,880 --> 01:15:46,520
There hasn't been a whole bunch of themes developed for Jupyter Book yet,

1126
01:15:46,520 --> 01:15:51,400
so it's a little bit trickier to configure for something fancy.

1127
01:15:51,400 --> 01:15:53,240
There's a really cool example.

1128
01:15:53,240 --> 01:15:54,880
If you go to the Jupyter Book documentation,

1129
01:15:54,880 --> 01:15:55,880
I should have put this in the links,

1130
01:15:55,880 --> 01:15:59,520
but there's a whole gallery of Jupyter Books,

1131
01:15:59,520 --> 01:16:01,560
of example ones that are out there in the universe.

1132
01:16:01,560 --> 01:16:03,840
There's one called the Data Sitters Club,

1133
01:16:03,840 --> 01:16:06,800
the Babysitter's Club book series if you're familiar with that,

1134
01:16:06,800 --> 01:16:10,320
like the young kid book series,

1135
01:16:10,320 --> 01:16:14,680
but it's done in the style of the Babysitter's Club,

1136
01:16:14,680 --> 01:16:17,640
like color palette and fonts and everything like that.

1137
01:16:17,640 --> 01:16:19,320
It's really awesome.

1138
01:16:19,320 --> 01:16:22,080
So there are possibilities for configuring it,

1139
01:16:22,080 --> 01:16:25,240
but it's probably going to require CSS.

1140
01:16:25,240 --> 01:16:28,440
I think I said earlier, I haven't touched it.

1141
01:16:28,440 --> 01:16:30,620
So let's get moving.

1142
01:16:30,620 --> 01:16:32,040
Let's create the basics.

1143
01:16:32,040 --> 01:16:33,800
So inside of our repo,

1144
01:16:33,800 --> 01:16:36,680
that the same level as the randomly folder,

1145
01:16:36,680 --> 01:16:39,040
we're going to create a docs folder.

1146
01:16:50,840 --> 01:16:54,920
Got nothing in it so far. Let's go back here.

1147
01:16:54,920 --> 01:17:00,080
Here's where we're going to use our links that we opened before, hopefully, maybe.

1148
01:17:00,200 --> 01:17:08,360
We are going to create a underscore config.yml file.

1149
01:17:08,360 --> 01:17:13,000
So let's just create the file first inside that docs folder,

1150
01:17:13,000 --> 01:17:17,800
underscore config.yml.

1151
01:17:17,800 --> 01:17:31,320
Now, I'm going to go to this link.

1152
01:17:31,320 --> 01:17:33,280
I already have it open.

1153
01:17:33,280 --> 01:17:35,360
It's in the list of links.

1154
01:17:35,360 --> 01:17:38,880
It's in here. This line here,

1155
01:17:38,880 --> 01:17:41,560
Jupyter Book config.

1156
01:17:47,600 --> 01:17:54,640
But what you'll see here is a nice copyable with a little copy button there,

1157
01:17:55,040 --> 01:18:00,160
with all the default configuration that Jupyter Book comes with out of the box.

1158
01:18:00,160 --> 01:18:02,880
I really like that as a starting point for,

1159
01:18:02,880 --> 01:18:06,080
I'll just customize that for what I need.

1160
01:18:06,080 --> 01:18:09,920
But most of the things in that config are things I don't need to touch.

1161
01:18:09,920 --> 01:18:12,120
So we'll start with that.

1162
01:18:12,120 --> 01:18:23,120
So I copied that and I'm going to paste it into my config.yml folder.

1163
01:18:27,160 --> 01:18:30,760
So let's customize it a little bit.

1164
01:18:30,760 --> 01:18:34,160
We're going to give it a different title,

1165
01:18:34,840 --> 01:18:44,040
call it whatever you want, author name.

1166
01:18:44,400 --> 01:18:50,040
YAML is a pretty readable format for doing these kinds of configuration files.

1167
01:18:50,040 --> 01:18:52,480
That's why it's become pretty popular.

1168
01:18:52,480 --> 01:18:55,920
There are a few weird edge cases,

1169
01:18:55,920 --> 01:19:00,760
but in general, I find it pretty user-friendly.

1170
01:19:00,760 --> 01:19:03,800
So I'm going to say Jacob Dippen.

1171
01:19:03,800 --> 01:19:06,520
Here, we're going to give it a copyright year.

1172
01:19:06,520 --> 01:19:11,040
So just so that YAML doesn't think that it's an integer,

1173
01:19:11,040 --> 01:19:12,840
we're going to put it as a string.

1174
01:19:12,840 --> 01:19:14,760
I'm going to change that.

1175
01:19:14,760 --> 01:19:18,200
I just opened a PR on the Jupyter Book repo

1176
01:19:18,200 --> 01:19:21,200
the other day when I noticed that this was still in 2021.

1177
01:19:21,200 --> 01:19:25,720
Get that changed soon. If you have a logo for your site,

1178
01:19:25,720 --> 01:19:28,520
you can put a path to it there.

1179
01:19:29,040 --> 01:19:31,680
We don't have one right now.

1180
01:19:31,680 --> 01:19:35,160
If there are certain files that are going to be in

1181
01:19:35,160 --> 01:19:41,840
your docs directory that you want it to skip by default,

1182
01:19:41,840 --> 01:19:44,160
things like DSStore, if you're on a Mac,

1183
01:19:44,160 --> 01:19:47,880
you might have that funny little guy laying around.

1184
01:19:47,880 --> 01:19:50,480
Notebook checkpoints.

1185
01:19:50,480 --> 01:19:53,120
This is the bane of my existence,

1186
01:19:53,120 --> 01:19:58,000
the notebook checkpoints always showing up when I try to automate things.

1187
01:19:58,000 --> 01:20:01,800
But we'll ignore them here.

1188
01:20:01,800 --> 01:20:06,480
Otherwise, I'm going to leave defaults on all of those.

1189
01:20:06,480 --> 01:20:12,400
We can give it some configuration of how we want it to execute and build the book.

1190
01:20:12,400 --> 01:20:15,080
I'm going to keep all the defaults there as well.

1191
01:20:15,080 --> 01:20:17,440
We don't need to change anything.

1192
01:20:19,800 --> 01:20:26,480
There are some built-in extensions that we can choose to enable or disable here.

1193
01:20:26,480 --> 01:20:29,080
Again, we'll leave those.

1194
01:20:36,200 --> 01:20:41,120
There's some other parameters about getting some nice little tabs at the top,

1195
01:20:41,120 --> 01:20:43,400
like an edit button,

1196
01:20:43,400 --> 01:20:44,760
an edit page button.

1197
01:20:44,760 --> 01:20:47,680
I'm going to change that to true.

1198
01:20:47,880 --> 01:20:51,560
Same with the other two buttons there.

1199
01:20:51,560 --> 01:20:53,560
Change to true.

1200
01:20:55,720 --> 01:20:59,160
These are nice because what they're going to do is add

1201
01:20:59,160 --> 01:21:04,200
a little box at the top of your docs on every page that will allow

1202
01:21:04,200 --> 01:21:10,080
somebody to open a PR directly against your docs to help.

1203
01:21:10,080 --> 01:21:13,120
If somebody finds something out of date in

1204
01:21:13,120 --> 01:21:16,880
your documentation or a spelling error or some mistake,

1205
01:21:16,880 --> 01:21:19,600
it can be really nice that they don't have to go find

1206
01:21:19,640 --> 01:21:25,640
your repo and find the part in the code where this thing is happening and which file it is.

1207
01:21:25,640 --> 01:21:28,320
They can go directly from the interface in

1208
01:21:28,320 --> 01:21:31,120
your docs to the place where they want to change something.

1209
01:21:31,120 --> 01:21:34,080
That's a pretty nifty little feature to use.

1210
01:21:36,080 --> 01:21:39,120
The rest I'm going to leave.

1211
01:21:41,120 --> 01:21:44,240
You can build LaTeX.

1212
01:21:44,240 --> 01:21:52,600
I'll leave that and we're going to come back to these launch buttons.

1213
01:21:54,040 --> 01:21:58,240
The repository, we'll come back to all of that.

1214
01:21:59,680 --> 01:22:03,400
I think we'll come back to the Sphinx extensions.

1215
01:22:03,400 --> 01:22:05,680
So like I said, Jupyter Book is built on Sphinx,

1216
01:22:05,680 --> 01:22:08,880
and everything eventually gets passed down to Sphinx.

1217
01:22:08,880 --> 01:22:12,840
So we can leverage a lot of Sphinx extensions and we'll do that in a little bit.

1218
01:22:12,840 --> 01:22:16,560
But for now, I'm just going to save this file.

1219
01:22:20,880 --> 01:22:24,600
That's a pretty good start for our configuration.

1220
01:22:24,800 --> 01:22:28,200
I'm going to now create another file,

1221
01:22:28,200 --> 01:22:35,560
underscore TOC stands for TableOfContents.yml.

1222
01:22:35,560 --> 01:22:44,600
Jupyter Book has some flexibility about how you build

1223
01:22:44,600 --> 01:22:49,360
your TableOfContents and how that left nav bar is going to show up,

1224
01:22:49,360 --> 01:22:53,360
and how the hierarchy works and some of that.

1225
01:22:53,640 --> 01:22:57,440
We're going to, well,

1226
01:22:57,440 --> 01:23:01,160
I've already made the choice about the structure that we're going to use.

1227
01:23:06,560 --> 01:23:12,160
We're going to use parts to organize chapters.

1228
01:23:13,640 --> 01:23:22,400
So again, I can copy this or click my little copy button.

1229
01:23:27,480 --> 01:23:31,560
I go back to my code and paste that in.

1230
01:23:35,560 --> 01:23:38,560
So right now, these are all placeholder pages.

1231
01:23:38,560 --> 01:23:41,560
We don't have these pages, but that's fine.

1232
01:23:41,560 --> 01:23:43,640
Let's save this and we'll come back and edit

1233
01:23:43,640 --> 01:23:46,720
them when we have some real content to start adding.

1234
01:23:48,920 --> 01:23:54,680
All right. The last thing I want to add right now is an index page.

1235
01:23:55,680 --> 01:23:59,080
So within this docs folder,

1236
01:23:59,080 --> 01:24:01,760
we can add index.

1237
01:24:02,320 --> 01:24:06,400
Here, you can choose your format.

1238
01:24:07,280 --> 01:24:11,200
I think most folks are going to want to choose Markdown.

1239
01:24:11,200 --> 01:24:15,960
That's what I like. But if you wanted it to be

1240
01:24:15,960 --> 01:24:18,480
a Jupyter Notebook to be your main page,

1241
01:24:18,480 --> 01:24:21,840
you could do that, index.ipynb.

1242
01:24:21,840 --> 01:24:24,520
It could be restructured text,

1243
01:24:24,520 --> 01:24:28,680
it could be all different formats that are supported here.

1244
01:24:28,680 --> 01:24:30,840
But since it's Markdown,

1245
01:24:30,840 --> 01:24:34,400
I'm going to use Markdown syntax to give it a title.

1246
01:24:34,400 --> 01:24:38,320
So that's single hash there.

1247
01:24:38,320 --> 01:24:43,440
I'm going to just call it home page,

1248
01:24:43,440 --> 01:24:47,040
really original high-quality content.

1249
01:24:48,160 --> 01:24:50,920
I'm not even going to add any text,

1250
01:24:50,920 --> 01:24:55,280
but what I am going to do is add a special feature here.

1251
01:24:56,200 --> 01:24:59,600
I have triple back ticks.

1252
01:25:01,240 --> 01:25:05,640
If you're familiar with code blocks in a lot of Markdown editors,

1253
01:25:05,640 --> 01:25:07,440
you'll see the triple back ticks,

1254
01:25:07,440 --> 01:25:09,440
you'll be familiar with that.

1255
01:25:09,440 --> 01:25:14,720
I'm going to open my curly braces there.

1256
01:25:14,720 --> 01:25:21,880
There's a special syntax we can use to add a table of contents.

1257
01:25:21,880 --> 01:25:24,720
All one word.

1258
01:25:27,120 --> 01:25:30,200
Close the curly braces.

1259
01:25:30,200 --> 01:25:33,480
Then close our triple back ticks.

1260
01:25:34,200 --> 01:25:40,040
So this is a feature that's going to tell Jupyter Book to go

1261
01:25:40,040 --> 01:25:42,320
into the table of contents from this page,

1262
01:25:42,320 --> 01:25:43,280
and this is our home page,

1263
01:25:43,280 --> 01:25:44,560
so it's the top level,

1264
01:25:44,560 --> 01:25:49,320
and go grab all the pages below it from the table of contents file,

1265
01:25:49,320 --> 01:25:52,320
and put them into this table of contents on this page.

1266
01:25:52,320 --> 01:25:54,120
So by using this,

1267
01:25:54,120 --> 01:25:57,200
our table of contents is always updated on the main page.

1268
01:25:57,200 --> 01:25:58,440
It always stays updated.

1269
01:25:58,440 --> 01:26:01,520
We don't have to manually add and subtract pages from there.

1270
01:26:01,520 --> 01:26:03,400
It's some automation.

1271
01:26:03,400 --> 01:26:07,320
So it doesn't look like very much here on the screen,

1272
01:26:07,320 --> 01:26:08,760
just a couple of lines of code.

1273
01:26:08,760 --> 01:26:10,720
But as we add more pages,

1274
01:26:10,720 --> 01:26:14,560
we're going to see the full table of contents can be realized.

1275
01:26:17,760 --> 01:26:21,640
Give me a green sticky if you're with me.

1276
01:26:22,320 --> 01:26:27,760
Pink sticky if you have a question or need a minute.

1277
01:26:28,440 --> 01:26:34,520
Any question or can I help with something?

1278
01:28:34,520 --> 01:29:02,960
All right.

1279
01:29:02,960 --> 01:29:04,920
What else can I help with?

1280
01:29:06,920 --> 01:29:10,800
A lot of green stickies out there. Cool.

1281
01:29:16,160 --> 01:29:18,840
Now we're going to add some real content.

1282
01:29:18,840 --> 01:29:21,720
We're going to add some narrative content.

1283
01:29:21,720 --> 01:29:26,600
There's all kinds of different documentation content that we can add.

1284
01:29:26,600 --> 01:29:32,120
But having something that's beyond just the technical doc string,

1285
01:29:32,120 --> 01:29:35,000
signature documentation can be super useful.

1286
01:29:35,000 --> 01:29:37,880
Something that is really human readable,

1287
01:29:37,880 --> 01:29:40,240
something that really explains things.

1288
01:29:40,240 --> 01:29:44,480
So that's what we're going to build now, a couple of guides.

1289
01:29:44,480 --> 01:29:47,360
So inside of our docs folder,

1290
01:29:47,360 --> 01:29:52,680
we're going to create a guides folder. Sorry.

1291
01:29:52,680 --> 01:30:07,280
The first file I'm going to create inside guides is another Markdown file,

1292
01:30:07,280 --> 01:30:13,080
install.Markdown or install.MD.

1293
01:30:16,200 --> 01:30:19,240
Let's take a couple of seconds.

1294
01:30:19,240 --> 01:30:21,560
You can write whatever you want.

1295
01:30:22,680 --> 01:30:26,840
That tells somebody how to install the randomly package.

1296
01:30:27,440 --> 01:30:32,040
The title that we give it is going to be the title that shows up in

1297
01:30:32,040 --> 01:30:35,040
the left nav bar of the Jupiter book.

1298
01:30:35,040 --> 01:30:37,840
So you generally want to keep it a little bit shorter.

1299
01:30:37,840 --> 01:30:42,400
It'll just read it directly from this Markdown and populate it from there.

1300
01:30:52,680 --> 01:30:58,120
You can have as much fun with your Markdown as you'd like.

1301
01:31:52,680 --> 01:32:04,080
I'm also going to add just for fun, a little tip.

1302
01:32:04,080 --> 01:32:06,440
So these are those call-out boxes.

1303
01:32:06,440 --> 01:32:09,680
They're called admonitions in the parlance,

1304
01:32:09,680 --> 01:32:13,880
where you see caution or warning or note.

1305
01:32:13,880 --> 01:32:15,720
Tip is one that you can add.

1306
01:32:15,720 --> 01:32:18,640
You can have your own custom type.

1307
01:32:18,640 --> 01:32:25,960
But I'm going to add a tip here that'll show up in the call-out box.

1308
01:33:18,640 --> 01:33:41,920
It's not the most useful or complicated docs,

1309
01:33:41,920 --> 01:33:44,600
but the actual writing part,

1310
01:33:44,600 --> 01:33:47,200
thinking about what is going to be a good thing to write in

1311
01:33:47,200 --> 01:33:51,400
your documentation takes a lot of thought and I don't have

1312
01:33:51,400 --> 01:33:53,640
the capacity to put in that thought right now.

1313
01:33:53,640 --> 01:33:57,760
It takes time to make really, really good docs.

1314
01:34:06,400 --> 01:34:11,160
This tip is not pure Markdown exactly.

1315
01:34:11,160 --> 01:34:19,080
Yeah. There's actually a couple of different ways to specify these admonitions.

1316
01:34:19,080 --> 01:34:24,480
But these are a feature of some of the underlying missed

1317
01:34:24,480 --> 01:34:28,640
in the executable books project and there's

1318
01:34:28,640 --> 01:34:32,400
a few layers here that add these extra features on top.

1319
01:34:32,400 --> 01:34:35,000
There's some other features.

1320
01:34:36,280 --> 01:34:38,160
Maybe on the next break,

1321
01:34:38,160 --> 01:34:41,760
I recommend going to the Jupyter Book documentation,

1322
01:34:41,760 --> 01:34:44,240
or I'll pull it up on the next break and you can look at some of

1323
01:34:44,240 --> 01:34:49,240
the extra special kinds of customization you can do to make it look really nice.

1324
01:34:49,240 --> 01:34:54,880
We're only going to super just scratch the surface here.

1325
01:34:58,400 --> 01:35:04,280
Green stickies? Any pink stickies out there? Wave them.

1326
01:35:04,280 --> 01:35:09,920
Thank you. I saw one person wave them.

1327
01:35:09,920 --> 01:35:12,960
I appreciate it. All right.

1328
01:35:12,960 --> 01:35:17,720
Let's move on and build a Jupyter Notebook.

1329
01:35:22,120 --> 01:35:24,880
So I have an install guide.

1330
01:35:24,880 --> 01:35:28,800
Now we're going to create a guide to

1331
01:35:28,800 --> 01:35:32,800
the module that you were working with before.

1332
01:35:32,800 --> 01:35:35,920
Just a how-to. What's it for?

1333
01:35:35,920 --> 01:35:38,520
What's it going to do? Something like that.

1334
01:35:38,520 --> 01:35:43,360
So I'm going to use the points module.

1335
01:35:43,360 --> 01:35:48,200
I call this points.ipynb.

1336
01:35:49,120 --> 01:35:53,720
My editor has a Jupyter Notebook thing built in, VS Code does.

1337
01:35:53,720 --> 01:35:55,360
I think PyCharm does as well.

1338
01:35:55,360 --> 01:35:58,360
Somebody verify that for me?

1339
01:35:58,360 --> 01:36:02,160
Okay. Some editors may not.

1340
01:36:03,120 --> 01:36:06,320
If you need some help launching that,

1341
01:36:06,320 --> 01:36:08,480
if you've installed Jupyter should have been

1342
01:36:08,480 --> 01:36:10,520
installed with the requirements that we installed.

1343
01:36:10,520 --> 01:36:12,880
So you should be able to launch Jupyter Notebook,

1344
01:36:12,880 --> 01:36:13,960
but if you haven't done that before,

1345
01:36:13,960 --> 01:36:16,480
I can help you make that happen.

1346
01:36:16,480 --> 01:36:18,480
So when I create this file,

1347
01:36:18,480 --> 01:36:23,440
it's going to create a Jupyter Notebook interface for me.

1348
01:36:24,600 --> 01:36:28,480
For those who haven't used Jupyter Notebooks,

1349
01:36:28,480 --> 01:36:32,560
you can have a code cell.

1350
01:36:32,560 --> 01:36:35,080
This one's a Python code cell.

1351
01:36:35,080 --> 01:36:38,440
You can have Markdown code cells.

1352
01:36:38,440 --> 01:36:41,360
There's other types of code cells or other types of cell,

1353
01:36:41,360 --> 01:36:43,640
Markdown code. Markdown cells.

1354
01:36:43,640 --> 01:36:46,520
There's other types of cells that you can have,

1355
01:36:46,520 --> 01:36:49,400
but we don't have to get into all of that here.

1356
01:36:49,400 --> 01:36:53,200
For our purposes, we're just going to mix Markdown and Python.

1357
01:36:53,200 --> 01:36:57,160
Now, you could do all of this in a Markdown file by

1358
01:36:57,160 --> 01:36:59,640
using those three backticks and saying Python,

1359
01:36:59,640 --> 01:37:02,640
and then specifying your Python there.

1360
01:37:02,680 --> 01:37:05,200
The really cool thing is that

1361
01:37:05,200 --> 01:37:08,840
Jupyter Book knows how to run a Notebook.

1362
01:37:08,840 --> 01:37:11,160
So when you build your book,

1363
01:37:11,160 --> 01:37:14,280
it will actually run the Notebook,

1364
01:37:14,280 --> 01:37:16,240
or you can tell it not to do that if you don't want to,

1365
01:37:16,240 --> 01:37:22,160
but we're going to run the Notebook so that it will update the content.

1366
01:37:22,160 --> 01:37:25,760
It'll maybe you have outputs or graphs or something like that in

1367
01:37:25,760 --> 01:37:29,280
your documentation.

1368
01:37:29,280 --> 01:37:33,760
Let's say you have some function that makes a plot,

1369
01:37:33,760 --> 01:37:37,080
and you document that in your Notebook.

1370
01:37:37,080 --> 01:37:39,240
Then later on, you change

1371
01:37:39,240 --> 01:37:42,440
that function so that the plot looks a little bit different.

1372
01:37:42,440 --> 01:37:45,400
But you just need to rebuild

1373
01:37:45,400 --> 01:37:49,200
your docs and you'll get the new version of the plot in your documentation.

1374
01:37:49,200 --> 01:37:54,040
So that's where this Notebook format can be really handy,

1375
01:37:54,320 --> 01:37:56,680
and a little bit more familiar for a lot of

1376
01:37:56,680 --> 01:37:58,760
folks that are used to seeing those outputs.

1377
01:37:58,760 --> 01:38:01,660
You can get a lot of the dynamic outputs that you might get from

1378
01:38:01,660 --> 01:38:03,360
a Jupyter Notebook like

1379
01:38:03,360 --> 01:38:08,400
a IPy leaflet map or things like that.

1380
01:38:08,400 --> 01:38:10,360
So if you know what those are.

1381
01:38:10,360 --> 01:38:13,720
For our purposes, we're going to keep it pretty simple.

1382
01:38:15,240 --> 01:38:20,160
We do need to give it a,

1383
01:38:20,880 --> 01:38:26,320
we're going to start with a markdown cell,

1384
01:38:26,320 --> 01:38:29,920
and give it a title because it needs a title.

1385
01:38:29,920 --> 01:38:36,080
Guide to points.py module.

1386
01:38:40,200 --> 01:38:42,000
Yes.

1387
01:38:42,000 --> 01:38:46,720
Are you using VS code?

1388
01:38:46,720 --> 01:38:49,120
You could drag it.

1389
01:38:49,120 --> 01:38:50,680
You might have to drag it down.

1390
01:38:50,680 --> 01:38:53,160
You might have to drag the Python one down.

1391
01:38:56,680 --> 01:39:03,560
You can also do if you click outside of a cell, like right here.

1392
01:39:03,560 --> 01:39:08,480
You can hit A, keyboard shortcut to create one above,

1393
01:39:08,480 --> 01:39:10,920
B to create one below.

1394
01:39:10,920 --> 01:39:14,440
It's a game changer if you use Notebooks a lot.

1395
01:39:14,440 --> 01:39:19,360
But here, I'm going to actually import my module.

1396
01:39:19,360 --> 01:39:30,600
So from randomly.points import generate.points.

1397
01:39:31,360 --> 01:39:35,160
I can run it. It works.

1398
01:39:39,960 --> 01:39:44,400
Check that out. Because we've written our doc string and everything,

1399
01:39:44,400 --> 01:39:46,120
we've added the type annotations.

1400
01:39:46,120 --> 01:39:50,040
Our editor is now aware of all of that and knows,

1401
01:39:50,040 --> 01:39:55,240
can parse it and give it to us in our visualization here.

1402
01:39:55,240 --> 01:39:58,440
Another value of writing that stuff.

1403
01:39:59,360 --> 01:40:14,360
So I'm going to give it some dummy bounds.

1404
01:40:14,680 --> 01:40:21,080
Come on. It's not used to zooming in so much.

1405
01:40:21,080 --> 01:40:24,240
I think that should be reasonable.

1406
01:40:24,240 --> 01:40:28,520
Let's assign this to a variable, points.

1407
01:40:32,040 --> 01:40:35,640
I can do points.shape.

1408
01:40:35,640 --> 01:40:39,000
So now, I have a little bit of code.

1409
01:40:39,000 --> 01:40:42,440
This is an example of how the function can run.

1410
01:40:42,440 --> 01:40:46,480
What I might want to do now is go in between and say,

1411
01:40:46,480 --> 01:40:53,880
give a more human readable prose version of what I just did.

1412
01:40:55,800 --> 01:41:05,760
I might say something like the function accepts arguments for the bounds

1413
01:41:05,760 --> 01:41:11,920
of a triangular bounding box.

1414
01:41:12,440 --> 01:41:25,320
A rate to use in generating plus on distribution.

1415
01:41:27,760 --> 01:41:30,800
What I write doesn't really matter right now.

1416
01:41:30,800 --> 01:41:35,680
So I want you to try to do that for whichever module you picked out.

1417
01:41:35,680 --> 01:41:38,160
One that you were working with before.

1418
01:41:38,160 --> 01:41:41,680
Try to write a little Jupyter notebook guide.

1419
01:41:42,440 --> 01:41:47,120
Does anybody need help opening Jupyter?

1420
01:52:12,440 --> 01:52:27,440
All right, folks.

1421
01:52:27,440 --> 01:52:30,760
More questions?

1422
01:52:30,760 --> 01:52:33,600
I'm going to keep moving along.

1423
01:52:34,480 --> 01:52:40,960
We can fast forward through our Git branches if you're still struggling with this.

1424
01:52:40,960 --> 01:52:45,120
We're going to keep moving on this and then we'll fast forward when you get through this section

1425
01:52:45,120 --> 01:52:46,680
and you'll have everything there for you.

1426
01:52:46,680 --> 01:52:58,800
Just briefly to connect the dots between, I guess, what's pulling from what.

1427
01:52:58,800 --> 01:53:00,440
Okay.

1428
01:53:00,440 --> 01:53:06,800
So in terms of environments and packages.

1429
01:53:06,800 --> 01:53:11,440
In terms of how we've created like key built notebook,

1430
01:53:11,440 --> 01:53:12,840
but when you open the notebook,

1431
01:53:12,840 --> 01:53:20,320
it shows basically open up a directory of the file under the guide.

1432
01:53:20,320 --> 01:53:24,440
So we know we missed something and I'm not sure where,

1433
01:53:24,440 --> 01:53:26,520
but that's what makes me wonder.

1434
01:53:26,520 --> 01:53:34,120
Okay. So I'm editing this notebook file inside of VS Code.

1435
01:53:34,120 --> 01:53:37,360
VS Code has its own engine for doing Jupyter notebooks.

1436
01:53:37,360 --> 01:53:39,200
It's a convenience thing.

1437
01:53:39,200 --> 01:53:43,840
You can run and edit Jupyter notebooks from the original Jupyter,

1438
01:53:43,840 --> 01:53:51,920
Jupyter Lab client and as long as they get saved back to the same directory in that guides folder,

1439
01:53:51,920 --> 01:53:58,120
you should be able to in Jupyter Lab open up that directory and create a new notebook there.

1440
01:53:58,120 --> 01:54:00,480
That's fine as well.

1441
01:54:00,480 --> 01:54:06,200
What's going to happen is that when it comes to building our book,

1442
01:54:06,200 --> 01:54:09,480
we need to have an environment with Jupyter in it.

1443
01:54:09,480 --> 01:54:12,440
Okay. It's a dependency of Jupyter Book.

1444
01:54:12,440 --> 01:54:15,880
So if you install Jupyter Book appropriately, you'll have Jupyter.

1445
01:54:18,000 --> 01:54:23,800
So that's the key bit is that in the environment where you build the book,

1446
01:54:23,800 --> 01:54:25,760
you have that engine,

1447
01:54:25,760 --> 01:54:31,040
the Jupyter engine behind the scenes that can run that notebook.

1448
01:54:31,800 --> 01:54:34,560
If you didn't get the notebook written,

1449
01:54:34,560 --> 01:54:37,160
that's fine. We'll fast forward through that part in a little bit.

1450
01:54:37,160 --> 01:54:41,080
What was the more important thing about the book?

1451
01:54:41,080 --> 01:54:47,760
Whereabouts? Oh, that is just my VS Code.

1452
01:54:47,760 --> 01:54:52,960
Do you have a cell in there that returns the dot-term?

1453
01:54:52,960 --> 01:54:58,760
I don't have a cell in there. This is just a pop-up.

1454
01:55:04,280 --> 01:55:11,560
Oh, so in Jupyter Notebooks,

1455
01:55:11,560 --> 01:55:13,280
you can have a markdown cell,

1456
01:55:13,280 --> 01:55:14,400
you can have a code cell.

1457
01:55:14,400 --> 01:55:16,440
So this is a markdown cell.

1458
01:55:19,640 --> 01:55:22,040
So we have those.

1459
01:55:22,040 --> 01:55:26,320
Now we're going to add them to our table of contents.

1460
01:55:29,800 --> 01:55:35,320
I go back to my table of contents.

1461
01:55:35,320 --> 01:55:37,800
You remember we didn't edit this before,

1462
01:55:37,800 --> 01:55:43,480
it's just the one that comes default with Jupyter Book.

1463
01:55:43,480 --> 01:55:46,520
So I'm going to change my caption here.

1464
01:55:46,520 --> 01:55:48,960
I'm going to call this section the guides,

1465
01:55:48,960 --> 01:55:52,880
and chapters are the different pages that go in there.

1466
01:55:52,880 --> 01:55:59,320
So the path to my first file is going to be guides slash install,

1467
01:55:59,320 --> 01:56:02,320
and I don't put the markdown there.

1468
01:56:02,320 --> 01:56:05,960
Again, Jupyter Book is quite smart at figuring out

1469
01:56:05,960 --> 01:56:09,720
what formats it's looking at and can handle many of them.

1470
01:56:09,720 --> 01:56:14,360
So you actually don't even need to specify the file format for that page.

1471
01:56:14,360 --> 01:56:17,600
So I'm going to guides install,

1472
01:56:18,600 --> 01:56:21,840
and here I'm going to say guides,

1473
01:56:21,840 --> 01:56:24,280
I think I called mine points.

1474
01:56:24,280 --> 01:56:29,120
Points is in a .ipynb file,

1475
01:56:29,120 --> 01:56:32,200
but again, we don't need to specify that, it doesn't care.

1476
01:56:32,200 --> 01:56:35,400
We can nest them a little further if we wanted to,

1477
01:56:35,400 --> 01:56:38,800
if you have more stuff, but I'm not going to do that.

1478
01:56:39,160 --> 01:56:43,240
So I'm going to get rid of that other boilerplate at the bottom.

1479
01:56:47,600 --> 01:56:51,560
Your table of contents should look something like this.

1480
01:56:57,640 --> 01:57:00,280
Now is the moment of truth.

1481
01:57:00,280 --> 01:57:05,440
We are going to go to our terminal,

1482
01:57:05,600 --> 01:57:09,760
and from our repo directory,

1483
01:57:09,760 --> 01:57:12,400
we're going to run this command.

1484
01:57:12,400 --> 01:57:26,160
So I'm in my documenting your code folder,

1485
01:57:27,800 --> 01:57:33,840
Jupyter-book, build.

1486
01:57:33,840 --> 01:57:37,520
I'm going to tell it where to look for the configuration file.

1487
01:57:37,520 --> 01:57:39,120
That's what it's going to look at first,

1488
01:57:39,120 --> 01:57:41,960
the configuration in the table of contents files.

1489
01:57:41,960 --> 01:57:45,080
That's in the docs folder.

1490
01:57:50,640 --> 01:57:57,120
Cross your fingers. Boom, something happened.

1491
01:57:57,160 --> 01:58:01,520
That went really fast because we don't have a lot of content in there.

1492
01:58:03,600 --> 01:58:10,920
All right. So we can look at this real fast.

1493
01:58:11,960 --> 01:58:14,920
Tells us where it's finding the config,

1494
01:58:14,920 --> 01:58:18,200
tells us where it's putting the built files,

1495
01:58:18,200 --> 01:58:22,200
that we're running Sphinx under the hood.

1496
01:58:24,680 --> 01:58:28,160
It's kind of walking on the left side of the screen.

1497
01:58:28,360 --> 01:58:32,840
It's using Mist to parse this.

1498
01:58:35,640 --> 01:58:41,480
It's building things into HTML, reads our sources,

1499
01:58:41,480 --> 01:58:43,880
it finds a couple of errors,

1500
01:58:50,080 --> 01:58:56,320
and then it finds something that my points file doesn't have a title.

1501
01:58:57,960 --> 01:59:02,000
But it did still build something.

1502
01:59:02,000 --> 01:59:04,400
At the end of our build,

1503
01:59:04,400 --> 01:59:06,800
we have a file path.

1504
01:59:06,800 --> 01:59:13,200
That's the local place where the built HTML is stored.

1505
01:59:14,120 --> 01:59:17,160
So let's stop there everybody.

1506
01:59:17,160 --> 01:59:22,680
If you try that Jupyter Book Build Docs,

1507
01:59:22,680 --> 01:59:27,000
put a green sticky up once you've done that.

1508
01:59:28,320 --> 01:59:35,520
We'll consider it successful if you get to this part with the output.

1509
01:59:36,800 --> 01:59:39,680
So your build can succeed

1510
01:59:39,680 --> 01:59:43,200
even if everything inside of it didn't work out perfectly.

1511
02:03:06,800 --> 02:03:19,920
The thing is if you make changes to one of the pages in your documentation,

1512
02:03:19,920 --> 02:03:20,880
you have to rebuild it.

1513
02:03:20,880 --> 02:03:22,560
You do have to rebuild it,

1514
02:03:22,560 --> 02:03:25,880
but depending on how you configure that,

1515
02:03:25,880 --> 02:03:30,360
it will cache, Jupyter Book will cache like a run Notebook and some of

1516
02:03:30,360 --> 02:03:35,200
the built files and only run through the things that are newly changed.

1517
02:03:35,200 --> 02:03:38,280
So you get some speed up there if you have a lot of documents.

1518
02:05:05,200 --> 02:05:29,160
You're using Jupyter Notebooks.

1519
02:05:29,160 --> 02:05:33,840
The default action for Jupyter Book is to actually run your Notebook,

1520
02:05:33,840 --> 02:05:37,600
like it's executing it from top to bottom when you build the docs.

1521
02:05:37,600 --> 02:05:40,320
If you don't want it,

1522
02:05:40,320 --> 02:05:42,400
there are ways to specify,

1523
02:05:42,400 --> 02:05:47,000
don't run this particular cell or sometimes what I do is,

1524
02:05:47,000 --> 02:05:49,280
I want to run my Notebook myself,

1525
02:05:49,280 --> 02:05:53,200
get the outputs that I want to be there and then freeze it.

1526
02:05:53,200 --> 02:05:57,280
You can tell it not to run the actual,

1527
02:05:57,280 --> 02:05:58,680
not to execute the Notebook.

1528
02:05:58,680 --> 02:06:00,200
That's in the config file.

1529
02:06:00,200 --> 02:06:02,720
There's something about execute and you can turn

1530
02:06:02,720 --> 02:06:07,240
off auto execution and there's a couple of different options there.

1531
02:06:07,240 --> 02:06:08,880
But if you turn that off,

1532
02:06:08,880 --> 02:06:15,400
then it will only just build what's there without actually executing it with Python.

1533
02:06:21,040 --> 02:06:23,680
If you make changes to what?

1534
02:06:23,680 --> 02:06:36,600
No, it will cache by default.

1535
02:06:36,600 --> 02:06:42,080
It will cache things that haven't changed.

1536
02:06:42,080 --> 02:06:46,560
It will only rebuild the new files.

1537
02:06:46,560 --> 02:06:49,080
You can mess with that behavior,

1538
02:06:49,080 --> 02:06:51,120
the caching behavior as well.

1539
02:07:23,680 --> 02:07:43,160
When it's executing your Notebook,

1540
02:07:43,160 --> 02:07:46,600
it's running the version of Jupiter that you have in your environment.

1541
02:07:46,600 --> 02:07:51,480
So hopefully, you're using a virtual environment or

1542
02:07:51,480 --> 02:07:52,920
a condom environment or something,

1543
02:07:52,920 --> 02:07:56,000
then it's going to use that Jupiter, whatever is live.

1544
02:07:56,000 --> 02:08:01,160
That's a good question.

1545
02:08:01,160 --> 02:08:04,120
In my case, I had to run a Docker container,

1546
02:08:04,120 --> 02:08:09,400
but it's a Jupiter server because I'm having WSL issues.

1547
02:08:09,400 --> 02:08:14,120
But I would like to point it to that Docker container right now.

1548
02:08:14,880 --> 02:08:18,760
That's a good question. You could,

1549
02:08:18,760 --> 02:08:23,440
I mean you could mount the files into your container,

1550
02:08:24,640 --> 02:08:30,120
and run it from interactively in the container.

1551
02:08:34,120 --> 02:08:37,280
If the volume is mounted,

1552
02:08:37,280 --> 02:08:40,160
then you'll get the files back out outside the container.

1553
02:08:48,760 --> 02:08:52,800
Where am I putting what? Great question.

1554
02:08:52,800 --> 02:08:58,000
So we're going to get there in a few minutes.

1555
02:08:58,000 --> 02:09:00,320
So I'm going to come back to your question. That's a good question.

1556
02:09:00,320 --> 02:09:04,800
The question was, if you're not running an open source project,

1557
02:09:04,800 --> 02:09:09,200
where do you host your built Jupiter book stuff?

1558
02:09:09,200 --> 02:09:13,000
That can be somewhat of a complicated system,

1559
02:09:13,000 --> 02:09:14,920
but we'll talk about that.

1560
02:09:14,920 --> 02:09:19,520
I want to get through one more thing before we go to break.

1561
02:09:26,600 --> 02:09:28,840
So again, after this section,

1562
02:09:28,840 --> 02:09:31,840
we can fast forward if you've had trouble building,

1563
02:09:31,840 --> 02:09:33,800
we can fast forward to your repo.

1564
02:09:33,800 --> 02:09:38,560
We're going to dip our toes into the Sphinx extension universe.

1565
02:09:39,120 --> 02:09:41,280
The three that we're going to use,

1566
02:09:41,280 --> 02:09:42,520
they're very common ones.

1567
02:09:42,520 --> 02:09:45,640
You'll see the AutoDoc extension,

1568
02:09:45,640 --> 02:09:48,560
the Napoleon extension,

1569
02:09:48,560 --> 02:09:51,000
and the view code extension.

1570
02:09:51,000 --> 02:09:53,560
So AutoDoc is going to take those docstrings we

1571
02:09:53,560 --> 02:09:58,320
wrote and turn them into that nicely formatted parameters,

1572
02:09:58,320 --> 02:10:01,800
and all that nice API reference documentation

1573
02:10:01,800 --> 02:10:03,880
that you're probably used to seeing.

1574
02:10:03,880 --> 02:10:06,960
Napoleon is going to read NumPy,

1575
02:10:06,960 --> 02:10:12,040
or actually it'll read NumPy or Google style docstrings.

1576
02:10:12,800 --> 02:10:15,720
I think Napoleon is now built into Sphinx.

1577
02:10:15,720 --> 02:10:17,200
It used to be that you had to install it separately,

1578
02:10:17,200 --> 02:10:18,680
but I think it's built in now

1579
02:10:18,680 --> 02:10:21,040
because so many folks are using it.

1580
02:10:21,040 --> 02:10:24,400
Before that, you had to either install Napoleon or

1581
02:10:24,400 --> 02:10:27,160
use that restructured textile we saw before.

1582
02:10:27,160 --> 02:10:31,080
View code was that feature I showed at the beginning where when we

1583
02:10:31,080 --> 02:10:34,840
see the API reference for a function,

1584
02:10:34,840 --> 02:10:39,040
function signature, you can click source and view the raw code.

1585
02:10:39,040 --> 02:10:41,360
I like that feature.

1586
02:10:41,360 --> 02:10:43,920
Some people may not want that in there,

1587
02:10:43,920 --> 02:10:47,720
but you don't want people to see how messy your code is under the hood.

1588
02:10:47,720 --> 02:10:49,480
But I think it's useful.

1589
02:10:49,480 --> 02:10:51,920
So we're going to use those three.

1590
02:10:51,920 --> 02:10:56,680
First, we need to add an AutoDoc template.

1591
02:10:57,640 --> 02:11:04,280
I'm going to create an API folder under docs.

1592
02:11:04,280 --> 02:11:12,040
So docs API.

1593
02:11:18,040 --> 02:11:21,840
I'm going to close some other things.

1594
02:11:21,840 --> 02:11:35,000
Now, you're going to pick your demo module,

1595
02:11:35,000 --> 02:11:36,440
whichever one you were using,

1596
02:11:36,440 --> 02:11:40,040
facts or palette or points or password.

1597
02:11:40,040 --> 02:11:45,320
We're going to create a that module name.rst file.

1598
02:11:45,400 --> 02:11:49,640
So I'm going to create under API.

1599
02:11:49,640 --> 02:11:53,520
So I'm going to create points.rst.

1600
02:11:53,520 --> 02:11:55,840
So we are going to use restructured text after

1601
02:11:55,840 --> 02:12:00,280
all after I said how tricky it can be to work with.

1602
02:12:04,080 --> 02:12:08,320
So now I have a restructured text file,

1603
02:12:09,080 --> 02:12:14,920
and I want you to copy this syntax here that's on the bottom right.

1604
02:12:14,920 --> 02:12:19,360
I'm going to read it out in case that might help people seeing it in the back.

1605
02:12:20,240 --> 02:12:24,080
This is restructured text, pure restructured text.

1606
02:12:24,080 --> 02:12:32,680
So a top-level title is specified with your title and then equal signs below it.

1607
02:12:32,680 --> 02:12:36,560
So in this case, our title is going to be the name of our module,

1608
02:12:36,560 --> 02:12:41,680
randomly.facts or randomly.points.

1609
02:12:49,360 --> 02:12:53,480
No file extension there.

1610
02:12:53,480 --> 02:12:58,280
Yeah. It's actually just going to be a string.

1611
02:12:58,280 --> 02:13:00,280
You could name it a whole bunch of things.

1612
02:13:00,280 --> 02:13:02,280
This is arbitrary. You can name it whatever you want.

1613
02:13:02,280 --> 02:13:07,880
This is. Let's see.

1614
02:13:10,520 --> 02:13:14,240
Then below it, any number of equal signs.

1615
02:13:14,240 --> 02:13:18,400
I think maybe you need three or something like that.

1616
02:13:18,400 --> 02:13:26,840
I'm going to skip a line and here's some classic restructured text.

1617
02:13:26,840 --> 02:13:29,840
We're going to do dot, dot, space,

1618
02:13:32,120 --> 02:13:46,360
auto module, colon, colon, space,

1619
02:13:46,720 --> 02:13:51,840
the name of your module, randomly.whatever.

1620
02:13:54,160 --> 02:13:56,160
This is not arbitrary.

1621
02:13:56,160 --> 02:14:00,360
You need to give it the real name of the module in your package.

1622
02:14:05,600 --> 02:14:10,040
Now at the same level of indent as auto module,

1623
02:14:10,040 --> 02:14:12,600
we're going to do this members,

1624
02:14:12,600 --> 02:14:16,280
undock members and show inheritance.

1625
02:14:33,520 --> 02:14:36,520
I think I got that right.

1626
02:14:37,880 --> 02:14:40,880
It should look something like that.

1627
02:14:40,880 --> 02:14:44,880
Now if you wanted to document all four modules,

1628
02:14:44,880 --> 02:14:50,400
you could create this exact same file just swapping out that last points thing,

1629
02:14:50,400 --> 02:14:53,760
and you'll get the same results.

1630
02:14:53,760 --> 02:14:58,480
You'll be able to get the same thing for every module.

1631
02:15:02,960 --> 02:15:06,040
Any pink stickies?

1632
02:15:11,880 --> 02:15:18,880
All right. So we've added this.

1633
02:15:18,880 --> 02:15:23,120
It's really boilerplate because you can change out some of these things.

1634
02:15:23,120 --> 02:15:24,600
You can look in the documentation for

1635
02:15:24,600 --> 02:15:28,120
AutoDoc to see what each of those is actually doing.

1636
02:15:28,120 --> 02:15:30,840
In our case, we don't need to worry about that,

1637
02:15:30,840 --> 02:15:36,640
but there are options to include private functions or exclude private functions.

1638
02:15:36,640 --> 02:15:38,560
Sphinx is so powerful.

1639
02:15:38,560 --> 02:15:39,920
You can do so much with it.

1640
02:15:39,920 --> 02:15:43,160
But we're not going to touch that complexity.

1641
02:15:44,400 --> 02:15:46,880
Now we need to add something to

1642
02:15:46,880 --> 02:15:50,880
our configuration to tell it to use those extensions.

1643
02:15:55,040 --> 02:15:59,080
I'm going to go back to my configuration file.

1644
02:15:59,800 --> 02:16:07,480
Under Sphinx, extra extensions.

1645
02:16:09,920 --> 02:16:13,920
I'm going to open a new line here.

1646
02:16:18,280 --> 02:16:34,280
Sphinx.ext.AutoDoc and Sphinx.ext.Napoleon,

1647
02:16:34,840 --> 02:16:41,600
and Sphinx.ext.ViewCode.

1648
02:16:41,600 --> 02:16:43,920
Those are the three that we wanted.

1649
02:16:43,920 --> 02:16:50,160
Make sure you save that .rst file too.

1650
02:16:55,400 --> 02:17:02,520
So now I have a list here in my YAML file of each of these extensions.

1651
02:17:04,280 --> 02:17:18,720
Green stickies, any pink stickies?

1652
02:17:34,280 --> 02:17:43,520
I'm going to leave that up.

1653
02:17:43,520 --> 02:17:48,280
I'm going to open my table of contents so we can keep moving.

1654
02:17:48,760 --> 02:17:53,360
This time I'm going to add a new section, a new caption.

1655
02:17:53,360 --> 02:17:57,280
I'm going to call it API reference.

1656
02:17:57,280 --> 02:18:04,640
My chapters.

1657
02:18:05,000 --> 02:18:07,800
This is a really killer feature.

1658
02:18:07,800 --> 02:18:11,280
I can glob for files here.

1659
02:18:11,520 --> 02:18:17,280
So I can glob for API star.

1660
02:18:17,640 --> 02:18:23,560
So now we will grab anything in that API folder that we have.

1661
02:18:23,560 --> 02:18:25,760
So I never have to change my table of

1662
02:18:25,760 --> 02:18:28,520
contents when I add a new module to my code.

1663
02:18:28,520 --> 02:18:30,920
I just need to add that RST file to

1664
02:18:30,920 --> 02:18:36,760
the API folder and Jupyter Book will snatch it up when it builds.

1665
02:18:36,760 --> 02:18:39,120
So glob, if you're not familiar,

1666
02:18:39,120 --> 02:18:43,000
is a Linux thing to search,

1667
02:18:43,000 --> 02:18:46,560
to find, I don't know how to describe it.

1668
02:18:46,560 --> 02:18:50,120
Find files with patterns.

1669
02:18:50,120 --> 02:18:51,760
Find things with patterns.

1670
02:18:51,760 --> 02:18:56,480
Yeah, in this case we're using a wild card.

1671
02:18:56,480 --> 02:19:00,720
But there's all kinds of complicated glob syntax you can use.

1672
02:19:08,360 --> 02:19:11,360
How are we doing? Does everybody have that?

1673
02:19:11,360 --> 02:19:16,080
Show me a pink sticky if you're still working on something.

1674
02:19:16,080 --> 02:19:26,120
All right. We did that.

1675
02:19:28,040 --> 02:19:30,720
Let's build it again.

1676
02:19:30,720 --> 02:19:33,280
So if you were able to build it before,

1677
02:19:33,280 --> 02:19:36,320
hopefully you will be able to build it again.

1678
02:19:37,520 --> 02:19:40,200
Make sure everything's saved.

1679
02:19:40,200 --> 02:19:43,040
We build our docs.

1680
02:19:43,400 --> 02:19:46,080
I fixed my errors,

1681
02:19:46,080 --> 02:19:49,120
so I don't get any errors anymore.

1682
02:20:03,640 --> 02:20:07,800
I'm going to highlight that code path.

1683
02:20:13,040 --> 02:20:21,160
Now we'll see a couple of things happen.

1684
02:20:24,440 --> 02:20:28,960
We have our table of contents is being auto-generated,

1685
02:20:28,960 --> 02:20:31,600
because we added that little thing on the homepage.

1686
02:20:31,600 --> 02:20:34,080
So it's being updated.

1687
02:20:37,400 --> 02:20:42,320
Over here, our API reference has this section points,

1688
02:20:42,320 --> 02:20:51,160
and we have our nicely built documentation from our doc string.

1689
02:21:00,280 --> 02:21:02,760
That's the end of level two.

1690
02:21:02,760 --> 02:21:06,720
So you're welcome to keep moving on that.

1691
02:21:06,720 --> 02:21:10,440
But otherwise, let's take a break, I think.

1692
02:21:10,680 --> 02:21:13,800
Let's take a 10-minute break.

1693
02:21:13,800 --> 02:21:17,240
We can be back here at 4.15.

1694
02:21:17,400 --> 02:21:19,560
I got 4.05 right now,

1695
02:21:19,560 --> 02:21:22,000
so let's be back here at 4.15.

1696
02:21:22,000 --> 02:21:25,840
I can help you finish up if you,

1697
02:21:25,840 --> 02:21:28,120
or if you want to fast forward,

1698
02:21:28,120 --> 02:21:30,400
I can help you with that as well.

1699
02:21:32,120 --> 02:21:36,800
All right, folks. It is time.

1700
02:21:36,800 --> 02:21:39,760
I want to keep moving so that we can try to get through

1701
02:21:39,760 --> 02:21:44,840
the big things and have something built by the end of the hour.

1702
02:21:44,840 --> 02:21:49,320
So now we're on to level three.

1703
02:21:49,320 --> 02:21:52,480
If you want to fast forward your code and everything,

1704
02:21:52,480 --> 02:21:59,200
you can check out to level two,

1705
02:21:59,200 --> 02:22:02,560
the level two branch.

1706
02:22:05,440 --> 02:22:08,640
Close all these.

1707
02:22:09,760 --> 02:22:12,920
I'm sure there's some conflicts or something like that.

1708
02:22:12,920 --> 02:22:15,560
I'm just going to ignore them.

1709
02:22:33,240 --> 02:22:36,680
Now I have fast forwarded to my level two,

1710
02:22:36,680 --> 02:22:42,640
and I have some API docs for all of the different modules here.

1711
02:22:42,640 --> 02:22:44,960
You can do that if you like.

1712
02:22:44,960 --> 02:22:50,200
But in any case, we're going to work with GitHub actions and GitHub pages.

1713
02:22:50,320 --> 02:22:57,400
These are not the only way to host your book.

1714
02:22:57,400 --> 02:22:59,040
Your book, when it builds,

1715
02:22:59,040 --> 02:23:01,640
it spits out HTML.

1716
02:23:01,640 --> 02:23:05,040
So anything that can render HTML and

1717
02:23:05,040 --> 02:23:08,680
host HTML is somewhere you can put your book.

1718
02:23:08,680 --> 02:23:14,800
You can configure an AWS S3 bucket to be a website,

1719
02:23:14,800 --> 02:23:19,080
and you can just send your built docs up there to

1720
02:23:19,080 --> 02:23:25,240
AWS S3 and you get a super long complicated URL.

1721
02:23:25,240 --> 02:23:30,160
But that's great, especially for internal projects.

1722
02:23:30,160 --> 02:23:31,480
If you want to put something in there,

1723
02:23:31,480 --> 02:23:35,400
you can manage security through your AWS stuff.

1724
02:23:35,960 --> 02:23:40,840
When it comes to private projects and GitHub pages,

1725
02:23:41,680 --> 02:23:45,320
there are now, I think a couple of years ago,

1726
02:23:45,320 --> 02:23:49,560
GitHub allowed pages to be available for private repos,

1727
02:23:49,560 --> 02:23:52,080
maybe only on enterprise GitHub.

1728
02:23:52,080 --> 02:23:56,160
So if you're, anybody work for GitHub?

1729
02:23:56,400 --> 02:23:58,280
That's something to confirm.

1730
02:23:58,280 --> 02:24:01,040
But if you are on an enterprise GitHub,

1731
02:24:01,080 --> 02:24:03,080
you can definitely, I've done this,

1732
02:24:03,080 --> 02:24:06,280
you can create a private page

1733
02:24:06,280 --> 02:24:08,880
that works just like the rest of GitHub pages.

1734
02:24:08,880 --> 02:24:11,360
So this workflow would work for that.

1735
02:24:11,360 --> 02:24:13,440
What we're going to do today is going to make it public to

1736
02:24:13,440 --> 02:24:16,360
the world but there are ways to make it private.

1737
02:24:16,360 --> 02:24:20,720
You can ultimately send these built docs wherever you want.

1738
02:24:22,520 --> 02:24:29,240
So GitHub actions.

1739
02:24:29,240 --> 02:24:35,520
GitHub actions are a CI-CD tool to automate things.

1740
02:24:35,520 --> 02:24:38,600
You can do a lot with GitHub actions.

1741
02:24:38,600 --> 02:24:41,040
I saw in the pre-survey quite a few folks have worked

1742
02:24:41,040 --> 02:24:44,160
with GitHub actions at some level.

1743
02:24:44,160 --> 02:24:45,680
You might run your tests,

1744
02:24:45,680 --> 02:24:47,120
you might run linting,

1745
02:24:47,120 --> 02:24:49,040
you might do your builds,

1746
02:24:49,040 --> 02:24:53,480
your deployments of code all from GitHub actions.

1747
02:24:53,480 --> 02:24:55,920
If you use GitLab,

1748
02:24:55,920 --> 02:24:59,480
GitLab CI-CD is very similar process.

1749
02:24:59,480 --> 02:25:03,280
Jenkins, I think Travis,

1750
02:25:03,280 --> 02:25:05,400
there's a whole bunch of tools like that out there

1751
02:25:05,400 --> 02:25:08,240
that do similar kinds of things.

1752
02:25:08,240 --> 02:25:11,480
But GitHub actions is nice because if you use GitHub,

1753
02:25:11,480 --> 02:25:13,400
it's already there for you and it

1754
02:25:13,400 --> 02:25:17,160
lives right where your code lives and that makes a difference.

1755
02:25:17,160 --> 02:25:21,760
So we're going to specify things in YAML files,

1756
02:25:21,760 --> 02:25:24,280
just like we've been doing with our configuration before.

1757
02:25:24,280 --> 02:25:26,880
We're going to write YAML files.

1758
02:25:26,880 --> 02:25:33,880
These days, actions have been around for four years, maybe,

1759
02:25:33,880 --> 02:25:38,440
five years and everything that you want to do is probably been done before.

1760
02:25:38,440 --> 02:25:41,840
You're not the first person to try to do it and that's really awesome.

1761
02:25:41,840 --> 02:25:45,120
So there's a lot of pre-built actions out there that you

1762
02:25:45,120 --> 02:25:49,960
can just use off the shelf without having to write the details yourself.

1763
02:25:50,360 --> 02:25:53,840
There's a whole world of GitHub actions that we're not going to get into.

1764
02:25:53,840 --> 02:26:00,640
We're going to do a pretty simple flow to build our docs and put it in GitHub pages.

1765
02:26:00,760 --> 02:26:03,520
You can do things like protect

1766
02:26:03,520 --> 02:26:07,120
your branches until certain things pass through your GitHub actions as well.

1767
02:26:07,120 --> 02:26:13,160
So what I like to do is you can't merge your branch until the docs have built,

1768
02:26:13,160 --> 02:26:18,160
or immediately upon merging your branch,

1769
02:26:18,160 --> 02:26:20,560
you build the docs and deploy them.

1770
02:26:20,840 --> 02:26:23,840
So let's add some actions.

1771
02:26:23,840 --> 02:26:29,400
We're just going to add one and it's this long thing on the right.

1772
02:26:29,400 --> 02:26:32,080
But there's a template for that.

1773
02:26:32,080 --> 02:26:35,640
We're going to create this directory structure first.

1774
02:26:35,640 --> 02:26:39,560
This is where GitHub is going to look for your actions.

1775
02:26:39,560 --> 02:26:47,280
So we're going to create it at the top level of our repository.

1776
02:26:47,280 --> 02:26:49,920
We're going to create a dot GitHub.

1777
02:26:49,920 --> 02:26:53,720
You need the dot GitHub.

1778
02:26:53,720 --> 02:26:58,680
Under that, I'm going to create a workflows folder.

1779
02:26:58,680 --> 02:27:01,360
Don't need a dot there.

1780
02:27:02,800 --> 02:27:05,840
Then inside the workflows,

1781
02:27:05,840 --> 02:27:07,160
you're going to create a YAML file.

1782
02:27:07,160 --> 02:27:08,240
You can name it whatever you want,

1783
02:27:08,240 --> 02:27:13,720
but I'm going to call it deploy.yaml.

1784
02:27:17,280 --> 02:27:26,960
Jupyter Book is well-documented and

1785
02:27:26,960 --> 02:27:31,720
has a template that we can use for deploying a book.

1786
02:27:31,720 --> 02:27:35,320
I'm going to go to that link.

1787
02:27:35,320 --> 02:27:39,160
It should be in the link list,

1788
02:27:40,160 --> 02:27:50,080
and copy the template and put it here in my YAML file.

1789
02:27:53,760 --> 02:27:56,880
Let's look through some things that it's doing.

1790
02:27:56,880 --> 02:27:59,800
We give it a name for this action,

1791
02:27:59,800 --> 02:28:02,000
then we have triggers.

1792
02:28:02,000 --> 02:28:08,000
So we want to trigger it when something happens on,

1793
02:28:08,000 --> 02:28:10,480
in this case, on push.

1794
02:28:10,480 --> 02:28:14,600
So when we push to the master or main branch,

1795
02:28:14,600 --> 02:28:16,320
you probably will have a main branch,

1796
02:28:16,320 --> 02:28:17,400
not a master branch.

1797
02:28:17,400 --> 02:28:19,960
So you might want to change this to main.

1798
02:28:21,240 --> 02:28:25,080
On push to main,

1799
02:28:25,080 --> 02:28:27,480
that's when this action is going to run.

1800
02:28:27,480 --> 02:28:29,040
So that's the trigger.

1801
02:28:29,040 --> 02:28:31,000
For other complicated or for

1802
02:28:31,000 --> 02:28:34,640
other GitHub actions that are not related to this docs,

1803
02:28:34,640 --> 02:28:36,520
you might want to trigger it on something else.

1804
02:28:36,520 --> 02:28:42,000
But push to main is where we're going to work.

1805
02:28:42,000 --> 02:28:44,960
Let's go down here.

1806
02:28:46,400 --> 02:28:50,480
We're going to do, this is a very generic pre-built action

1807
02:28:50,480 --> 02:28:52,640
for us that we're just going to make use of.

1808
02:28:52,640 --> 02:28:57,000
Let's check out an Ubuntu operating system.

1809
02:28:57,360 --> 02:29:01,800
We're going to install Python 3.8.

1810
02:29:02,600 --> 02:29:07,680
Again, this is a pre-canned action for us.

1811
02:29:07,680 --> 02:29:10,320
We don't have to write out all the steps to get that there.

1812
02:29:10,320 --> 02:29:14,920
We just say, use this action and then give it some configuration.

1813
02:29:17,520 --> 02:29:23,760
We're going to install our dependencies.

1814
02:29:26,920 --> 02:29:31,760
Then we're going to change our build directory.

1815
02:29:31,760 --> 02:29:33,360
We're not going to build from the top level.

1816
02:29:33,360 --> 02:29:35,600
We're going to use the command that we used before,

1817
02:29:35,600 --> 02:29:39,080
which was build docs.

1818
02:29:40,080 --> 02:29:43,840
That's important on line 35.

1819
02:29:44,200 --> 02:29:47,080
Change that.

1820
02:29:56,440 --> 02:30:01,080
The next thing is the real magic for taking

1821
02:30:01,080 --> 02:30:05,760
that built documentation and putting it onto GitHub Pages.

1822
02:30:05,760 --> 02:30:08,440
This is somebody who has already

1823
02:30:08,440 --> 02:30:10,080
built this action and written it out.

1824
02:30:10,080 --> 02:30:14,080
So what we do is,

1825
02:30:14,080 --> 02:30:18,400
it's going to look for a GitHub Pages branch.

1826
02:30:18,400 --> 02:30:23,640
Well, it's going to take the built documentation,

1827
02:30:23,640 --> 02:30:27,160
send it to the GitHub Pages branch.

1828
02:30:27,160 --> 02:30:29,680
That's a branch where GitHub Pages is going to

1829
02:30:29,680 --> 02:30:33,720
look to build itself, to build the site.

1830
02:30:33,720 --> 02:30:42,320
Here, we need to specify docs again in the last line, line 42.

1831
02:30:50,800 --> 02:30:58,160
There's one last step that we need to add to our workflow here.

1832
02:30:58,160 --> 02:31:02,480
We need to install randomly so that we can

1833
02:31:02,480 --> 02:31:05,400
run things in our Jupyter Notebooks,

1834
02:31:05,400 --> 02:31:08,320
so that the Jupyter Notebook can build properly.

1835
02:31:08,320 --> 02:31:10,200
It will need to know where randomly is.

1836
02:31:10,200 --> 02:31:13,600
Randomly is not in our requirements file,

1837
02:31:13,600 --> 02:31:17,840
so it hasn't been installed in this Ubuntu environment,

1838
02:31:17,840 --> 02:31:20,840
when it's running in GitHub Actions.

1839
02:31:20,840 --> 02:31:23,960
So to do that, we're going to

1840
02:31:23,960 --> 02:31:36,080
mimic the install dependencies command here.

1841
02:31:36,760 --> 02:31:40,480
We'll call it install randomly.

1842
02:31:41,560 --> 02:31:46,240
Then we're going to run colon.

1843
02:31:46,240 --> 02:31:49,640
The vertical bar is just a way of saying,

1844
02:31:49,640 --> 02:31:51,200
continue on the next line.

1845
02:31:51,240 --> 02:31:54,480
It's a little bit nicer formatting.

1846
02:31:55,200 --> 02:32:03,160
Then I'm going to pip install, period.

1847
02:32:03,160 --> 02:32:06,560
So we're going to install from the current directory at this point,

1848
02:32:06,560 --> 02:32:08,960
which is the top level of the repository.

1849
02:32:08,960 --> 02:32:12,160
You could do the dash E install if you wanted to,

1850
02:32:12,160 --> 02:32:15,040
but it's not really helpful because our module is not going to

1851
02:32:15,040 --> 02:32:16,680
change once it's going through this workflows,

1852
02:32:16,680 --> 02:32:19,560
so the editable mode doesn't help us.

1853
02:32:22,080 --> 02:32:27,720
All right. Show me green stickies if you're there.

1854
02:32:27,720 --> 02:32:30,240
Make sure to save your deploy file.

1855
02:32:30,240 --> 02:32:32,160
Show me pink stickies if it's

1856
02:32:32,160 --> 02:32:35,320
something you still need a little bit of help with.

1857
02:32:51,200 --> 02:33:09,640
Any other pink stickies out there?

1858
02:33:10,640 --> 02:33:16,400
All right. Let's see what we can do.

1859
02:33:21,200 --> 02:33:29,160
We're going to commit this and push it back to the GitHub repository.

1860
02:33:51,200 --> 02:34:20,960
Now, after you do that push,

1861
02:34:21,360 --> 02:34:26,560
you should go to your repository.

1862
02:34:41,120 --> 02:34:45,400
Yours should look something like this.

1863
02:34:46,200 --> 02:34:49,920
You should have your GitHub workflows here.

1864
02:34:50,960 --> 02:35:01,200
Your YAML file. Everybody there?

1865
02:35:01,200 --> 02:35:05,120
Show me any pink stickies.

1866
02:35:08,280 --> 02:35:12,720
All right. Now, we need to enable GitHub pages. Yeah.

1867
02:35:12,720 --> 02:35:20,920
In this case, you can merge it into main.

1868
02:35:20,920 --> 02:35:24,160
That's fine. You might have a different little bit

1869
02:35:24,160 --> 02:35:26,680
more cautious workflow on your own repositories,

1870
02:35:26,680 --> 02:35:30,040
but in this case, we're going to just merge it to main.

1871
02:35:32,680 --> 02:35:35,920
So once you're in your repository,

1872
02:35:35,920 --> 02:35:40,400
we can go to settings on top right,

1873
02:35:41,400 --> 02:35:45,640
and on the left side, pages.

1874
02:35:52,360 --> 02:36:00,800
We're going to tell it to build from the ghpages branch.

1875
02:36:00,800 --> 02:36:03,280
You didn't create that branch,

1876
02:36:03,280 --> 02:36:07,120
but the GitHub action will create it for you.

1877
02:36:08,120 --> 02:36:15,200
So that is a nice thing because then the built version of your docs,

1878
02:36:15,200 --> 02:36:18,200
all the HTML files and all of that,

1879
02:36:18,200 --> 02:36:21,800
doesn't end up in your main code branch,

1880
02:36:21,800 --> 02:36:24,440
polluting that branch a little bit,

1881
02:36:24,440 --> 02:36:29,600
it stays in its own isolated built branch.

1882
02:36:29,600 --> 02:36:41,320
We can specify the root of that branch as the GitHub pages.

1883
02:36:41,320 --> 02:36:45,360
If you say that again,

1884
02:36:46,680 --> 02:36:52,720
change it to docs. Interesting.

1885
02:36:56,280 --> 02:36:58,920
Let's see how others did.

1886
02:36:58,920 --> 02:37:01,840
So if you save that,

1887
02:37:03,200 --> 02:37:07,760
this should turn something.

1888
02:37:07,760 --> 02:37:11,240
This green box should change color or it'll

1889
02:37:11,240 --> 02:37:15,920
say your site is ready to be published or something like that maybe.

1890
02:37:21,000 --> 02:37:23,800
Thanks, Dicky.

1891
02:38:28,920 --> 02:38:50,440
I want everyone to go to the Actions tab,

1892
02:38:52,760 --> 02:38:57,040
and see what happened.

1893
02:38:57,160 --> 02:39:00,400
See if it failed.

1894
02:39:00,400 --> 02:39:03,640
Raise your hand if you got a successful build.

1895
02:39:04,640 --> 02:39:06,960
There were some successful builds out there.

1896
02:39:06,960 --> 02:39:09,360
If it's successful,

1897
02:39:09,360 --> 02:39:14,360
you should have a green box around the link,

1898
02:39:14,360 --> 02:39:21,320
and your link should open to your built documentation on the web.

1899
02:39:21,640 --> 02:39:25,840
Pretty nifty, right? But obviously, not everybody got there.

1900
02:39:25,840 --> 02:39:30,280
So let's see what we can do.

1901
02:39:55,840 --> 02:39:58,840
Let's see if we can get it to work.

1902
02:39:58,840 --> 02:40:00,840
Let's see if we can get it to work.

1903
02:40:00,840 --> 02:40:02,840
Let's see if we can get it to work.

1904
02:40:02,840 --> 02:40:04,840
Let's see if we can get it to work.

1905
02:40:04,840 --> 02:40:06,840
Let's see if we can get it to work.

1906
02:40:06,840 --> 02:40:08,840
Let's see if we can get it to work.

1907
02:40:08,840 --> 02:40:10,840
Let's see if we can get it to work.

1908
02:40:10,840 --> 02:40:12,840
Let's see if we can get it to work.

1909
02:40:12,840 --> 02:40:14,840
Let's see if we can get it to work.

1910
02:40:14,840 --> 02:40:16,840
Let's see if we can get it to work.

1911
02:40:16,840 --> 02:40:18,840
Let's see if we can get it to work.

1912
02:40:18,840 --> 02:40:20,840
Let's see if we can get it to work.

1913
02:40:20,840 --> 02:40:22,840
Let's see if we can get it to work.

1914
02:40:22,840 --> 02:40:24,840
Let's see if we can get it to work.

1915
02:40:25,300 --> 02:40:27,300
Let's see if we can get it to work.

1916
02:40:27,300 --> 02:40:29,300
Let's see if we can get it to work.

1917
02:40:33,300 --> 02:40:35,160
Thanks, Dickies.

1918
02:40:35,160 --> 02:40:37,160
Flag me down.

1919
02:42:24,840 --> 02:42:51,960
Interesting.

1920
02:42:51,960 --> 02:42:55,400
Yeah, it's writing to that new branch, to that GitHub Pages branch.

1921
02:48:21,960 --> 02:48:43,240
All right, folks, I want to, we have 15 minutes left, so I want to get, make sure we cover everything.

1922
02:48:43,240 --> 02:48:48,840
We have covered all the steps to building something on the web.

1923
02:48:48,840 --> 02:48:57,240
Oh yeah, I have a slide for that.

1924
02:48:57,240 --> 02:49:06,040
So the last thing I want to add on top of all the things we've built so far is extras.

1925
02:49:06,840 --> 02:49:13,400
So one thing, one feature that we get with Jupiter Book is when we have notebooks,

1926
02:49:13,400 --> 02:49:18,560
we can turn them into something that is runnable on the internet pretty easily.

1927
02:49:18,560 --> 02:49:23,440
How many people have used binder or MyBinder before with a notebook?

1928
02:49:23,440 --> 02:49:28,040
Okay. Binder is really cool.

1929
02:49:28,720 --> 02:49:31,040
I'm not going to go into the details of it,

1930
02:49:31,040 --> 02:49:37,800
but really you can configure it in your config.yaml file.

1931
02:49:38,240 --> 02:49:52,600
I'm going to use the version that I have already configured.

1932
02:49:54,600 --> 02:49:57,200
So in the points module,

1933
02:49:57,200 --> 02:49:59,600
if I come up to this rocket ship,

1934
02:49:59,600 --> 02:50:01,960
I've configured it to look in binder.

1935
02:50:01,960 --> 02:50:05,440
It was just a couple of those parameters in our config file.

1936
02:50:05,440 --> 02:50:09,280
I can show you which ones in particular if you're curious.

1937
02:50:09,280 --> 02:50:14,280
But what it's going to do is launch binder,

1938
02:50:14,280 --> 02:50:18,120
which is going to dockerize our repo.

1939
02:50:18,120 --> 02:50:20,640
There's a tool called repo2docker.

1940
02:50:20,640 --> 02:50:25,520
It's really cool that dockerizes our repo and then installs some,

1941
02:50:25,520 --> 02:50:30,800
if it finds requirements file and it finds a setup file,

1942
02:50:30,800 --> 02:50:37,520
it will install stuff and that's what it's doing right now.

1943
02:50:38,520 --> 02:50:46,760
Then ultimately, it's going to launch a live Jupiter Notebook version

1944
02:50:46,760 --> 02:50:50,920
of the static Jupiter Notebook that we had in our docs.

1945
02:50:50,920 --> 02:50:53,160
So this is a cool way if you want to have

1946
02:50:53,160 --> 02:50:56,680
a tutorial that people can also interact with,

1947
02:50:56,680 --> 02:50:59,840
can change some parameters on.

1948
02:50:59,840 --> 02:51:02,120
Sometimes you might have widgets in there

1949
02:51:02,120 --> 02:51:04,200
that you want them to mess around with.

1950
02:51:04,200 --> 02:51:08,120
There's a lot of cool things you can do with this.

1951
02:51:08,840 --> 02:51:14,800
Ultimately, it's Kubernetes and Docker and everything under the hood.

1952
02:51:15,320 --> 02:51:23,960
Wait for it. It's going to launch.

1953
02:51:30,880 --> 02:51:37,280
Almost there. If you did it again,

1954
02:51:37,280 --> 02:51:40,880
like subsequent times, it will do it much faster.

1955
02:51:41,880 --> 02:51:45,840
Because the Docker container will have already,

1956
02:51:45,840 --> 02:51:48,640
the Docker image will have already been built. Yeah.

1957
02:51:48,640 --> 02:51:54,360
I'm just thinking about the private repository.

1958
02:51:54,360 --> 02:52:00,560
You have to have rights to the repository or to the page.

1959
02:52:00,560 --> 02:52:03,920
So is the authentication on your GitHub all right?

1960
02:52:03,920 --> 02:52:06,920
Yeah. That's the magical thing that GitHub figured out,

1961
02:52:06,920 --> 02:52:11,720
is just running all the auth to get to the page through the GitHub auth.

1962
02:52:11,720 --> 02:52:13,600
I have no idea how any of that works,

1963
02:52:13,600 --> 02:52:18,600
but it does work because I've done it before from private repos,

1964
02:52:18,600 --> 02:52:21,760
where you can build a page.

1965
02:52:21,760 --> 02:52:24,640
But I think you do have to have enterprise GitHub or

1966
02:52:24,640 --> 02:52:29,640
some non-free tier GitHub to do that.

1967
02:52:41,000 --> 02:52:44,800
Any other questions while this launches?

1968
02:52:48,600 --> 02:53:03,560
All right. We'll come back to it when it's done doing this thing.

1969
02:53:03,560 --> 02:53:05,600
There's a library called,

1970
02:53:05,600 --> 02:53:07,280
I'm going to run through these tools.

1971
02:53:07,280 --> 02:53:09,360
These are not tools that I use a lot,

1972
02:53:09,360 --> 02:53:13,760
but they're tools that are pretty nifty if you want to level up

1973
02:53:13,760 --> 02:53:17,800
your documentation setup in your workflows,

1974
02:53:17,800 --> 02:53:19,600
especially with Teams.

1975
02:53:19,600 --> 02:53:25,000
How many people have used the coverage tool for testing their Python code?

1976
02:53:25,000 --> 02:53:29,040
What it does is it goes through your code and goes through your tests and says,

1977
02:53:29,040 --> 02:53:33,320
okay, well, this part of your code has been touched by a test.

1978
02:53:33,320 --> 02:53:38,880
So ultimately, you get a report on how much of your code is covered by tests.

1979
02:53:38,880 --> 02:53:40,440
Imperfect measure, of course,

1980
02:53:40,440 --> 02:53:43,120
but it's a nice thing to have.

1981
02:53:43,120 --> 02:53:46,120
This is doing the same thing for docstrings.

1982
02:53:46,120 --> 02:53:50,840
So what we're looking at here is a report that I ran on

1983
02:53:50,840 --> 02:53:57,680
the randomly module or randomly package that tells us how much coverage we got.

1984
02:53:57,680 --> 02:54:06,360
So you notice we missed one something in every single one of our modules.

1985
02:54:06,360 --> 02:54:09,800
That's because according to PEP 257,

1986
02:54:09,800 --> 02:54:14,560
you should have a docstring at the top of the module that describes the module.

1987
02:54:14,560 --> 02:54:21,320
We didn't do that. I don't know how common of a practice it is or not.

1988
02:54:21,320 --> 02:54:23,560
I tend not to use it.

1989
02:54:23,560 --> 02:54:28,200
But now that I know that it's a PEP 257 thing,

1990
02:54:28,200 --> 02:54:30,400
maybe I will start using it a little bit more.

1991
02:54:30,400 --> 02:54:33,360
But that's why we got misses here.

1992
02:54:34,680 --> 02:54:38,040
This one's called interrogate.

1993
02:54:39,840 --> 02:54:43,400
The next one is py docstyle,

1994
02:54:43,400 --> 02:54:49,800
which is similar. How many people have used the linter flake8 to run their code?

1995
02:54:49,800 --> 02:54:53,000
What this does is it will look through

1996
02:54:53,000 --> 02:54:59,360
your docstrings and it will check for some of those best practices things.

1997
02:55:00,440 --> 02:55:03,440
We'll see what it flagged here.

1998
02:55:03,440 --> 02:55:09,120
So it flagged missing docstring in a public module.

1999
02:55:09,120 --> 02:55:11,000
That means I didn't have that line at the top,

2000
02:55:11,000 --> 02:55:13,080
so that one's going to appear every time.

2001
02:55:13,080 --> 02:55:17,240
The first line of your docstring should end with a period.

2002
02:55:17,240 --> 02:55:21,320
That's part of PEP 257 recommendations.

2003
02:55:21,320 --> 02:55:26,600
I failed at that a couple of times. What else?

2004
02:55:26,600 --> 02:55:30,600
I'm missing one here. Maybe that's it.

2005
02:55:30,600 --> 02:55:32,920
Oh, after your docstring,

2006
02:55:32,920 --> 02:55:34,880
you're not supposed to have blank lines.

2007
02:55:34,880 --> 02:55:37,280
I didn't know that that was an official recommendation.

2008
02:55:37,280 --> 02:55:41,420
But if you want to start enforcing that good patterns of documentation,

2009
02:55:41,420 --> 02:55:43,980
adding a tool like this to your testing or

2010
02:55:43,980 --> 02:55:47,260
linting things that you might be doing already in your code,

2011
02:55:47,260 --> 02:55:49,300
these could be part of GitHub actions.

2012
02:55:49,300 --> 02:55:51,820
Any of these could be incorporated there.

2013
02:55:51,820 --> 02:55:59,460
You could block merging a PR until all of these pass if you really want to.

2014
02:55:59,460 --> 02:56:02,700
It's up to you how strict you want to be with it.

2015
02:56:02,700 --> 02:56:04,500
But at least it gives you some insights.

2016
02:56:04,500 --> 02:56:06,540
Especially as your project grows,

2017
02:56:06,540 --> 02:56:09,820
you start getting contributions from multiple people.

2018
02:56:09,820 --> 02:56:13,380
These tools might give you some insight as to where you're lacking in docstrings,

2019
02:56:13,380 --> 02:56:19,580
or where docstring coverage is weak or needs to be improved.

2020
02:56:19,780 --> 02:56:23,580
I mentioned xDocTest before.

2021
02:56:24,900 --> 02:56:29,220
There's an older tool called doctest.

2022
02:56:30,260 --> 02:56:33,660
But I think xDoctest is really nice.

2023
02:56:33,660 --> 02:56:38,460
It integrates with PyTest. Here's how.

2024
02:56:38,460 --> 02:56:42,620
Let's say we have a Fibonacci function.

2025
02:56:42,620 --> 02:56:47,020
We create a Fibonacci series up to whatever number we give it.

2026
02:56:47,020 --> 02:56:49,100
As part of our docstring,

2027
02:56:49,100 --> 02:56:50,140
we can add an example.

2028
02:56:50,140 --> 02:56:52,620
We didn't do that in any of our docstrings,

2029
02:56:52,620 --> 02:56:54,180
but that's how you can do it.

2030
02:56:54,180 --> 02:56:59,220
You can add an example and you have the three arrows there,

2031
02:56:59,220 --> 02:57:02,260
chevrons, the three chevrons,

2032
02:57:02,260 --> 02:57:06,300
and then you have something that you would execute in Python.

2033
02:57:06,300 --> 02:57:10,060
In this case, we're calling the function and giving it a parameter.

2034
02:57:10,060 --> 02:57:11,900
Then on the next line after that,

2035
02:57:11,900 --> 02:57:14,380
we have the expected output.

2036
02:57:14,380 --> 02:57:17,140
You can think of this as a test,

2037
02:57:17,140 --> 02:57:20,500
a software test, a unit test where we say,

2038
02:57:20,500 --> 02:57:24,100
given this, I expect this.

2039
02:57:24,100 --> 02:57:29,780
What xDoctest can do is actually turn that into executable Python,

2040
02:57:29,780 --> 02:57:32,020
not just a string as part of the docstring,

2041
02:57:32,020 --> 02:57:36,900
it will turn that into executable Python and run it.

2042
02:57:36,900 --> 02:57:43,340
If it doesn't get this output, it'll fail.

2043
02:57:45,020 --> 02:57:49,020
That's pretty fun. I think it's pretty cool.

2044
02:57:49,020 --> 02:57:53,580
That's one way to do some regression testing on your docs.

2045
02:57:53,580 --> 02:57:57,020
If you try to keep your examples up to date,

2046
02:57:57,340 --> 02:58:00,460
that's an interesting feature.

2047
02:58:02,540 --> 02:58:06,820
We already talked about editor support for VS Code,

2048
02:58:06,820 --> 02:58:11,580
PyCharm, how you can use these tools to generate your docs for you,

2049
02:58:11,580 --> 02:58:15,660
or to at least generate the stubs of your documentation for you,

2050
02:58:15,660 --> 02:58:19,020
and make sure things are as easy and

2051
02:58:19,020 --> 02:58:22,940
smooth as possible when you're trying to write docstrings.

2052
02:58:24,340 --> 02:58:29,660
With that, I am done with everything that I have prepared.

2053
02:58:29,660 --> 02:58:32,980
I'm happy to take questions, thoughts.

2054
02:58:32,980 --> 02:58:36,900
You want some feedback on anything,

2055
02:58:36,900 --> 02:58:41,140
anything like that, I'm here. Thank you.

2056
02:58:42,660 --> 02:58:46,220
I should add, I would really love if you go out and build

2057
02:58:46,220 --> 02:58:52,820
some documentation to send me a message or share the GitHub repository with me.

2058
02:58:52,820 --> 02:58:55,040
I would love to see it. I'd love to see

2059
02:58:55,040 --> 02:58:58,500
what's happening and see all the cool things that you can build.

2060
02:58:58,500 --> 02:59:00,900
Thanks.

