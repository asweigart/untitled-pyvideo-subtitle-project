1
00:00:00,000 --> 00:00:12,440
Hi. Wow, I, you know what, I'm going to take a photo of all of you here if I could.

2
00:00:12,440 --> 00:00:17,560
Thank you. I'll see if I can take a selfie.

3
00:00:17,560 --> 00:00:34,480
Thank you. I got it. Okay. Oh, shit. That was totally unscripted. By the way, okay.

4
00:00:34,480 --> 00:00:41,400
Again, really thank you all for being here. We are now in the final,

5
00:00:41,400 --> 00:00:54,400
final sessions of the PyCon US. So the closing keynote this time is Carol Willing. And when

6
00:00:54,400 --> 00:01:01,640
Carol asked me why do I want to invite her and it's really like I want you all to know about her.

7
00:01:01,640 --> 00:01:09,320
And it's also because she is really one of the inspiration for me, a friend, one of the friend

8
00:01:09,400 --> 00:01:19,240
I have from my early journey in Python. And really it's like what Margaret said earlier in

9
00:01:19,240 --> 00:01:26,720
her keynote about, you know, things are hard for women in tech. And a lot of time I don't want to

10
00:01:26,720 --> 00:01:32,200
admit that. I don't want to say it's hard for me because I'm in a Python community. But I think

11
00:01:33,040 --> 00:01:41,800
acknowledge that. But having Carol who's always been there for me makes it easy, makes it bearable.

12
00:01:41,800 --> 00:01:49,440
So really I want you to know my friend Carol. Carol, come to the stage.

13
00:01:49,440 --> 00:02:03,520
Okay. Welcome, welcome, welcome everybody. I always wanted to say that like Stephen

14
00:02:03,520 --> 00:02:10,040
Colbert. But actually it's not Stephen Colbert. It's the other guy. But anyway, thank you,

15
00:02:10,040 --> 00:02:16,920
Mariata. I am incredibly honored to be here with all of you and many of you will be up on the stage

16
00:02:16,920 --> 00:02:23,840
with me today. But for those of you that think, oh, I could never get up on this big stage and

17
00:02:23,840 --> 00:02:30,840
speak, I should tell you a little bit about my first PyCon talk. My first PyCon talk was back

18
00:02:30,840 --> 00:02:39,560
in 2015. And I was not a core developer. And I was giving a talk on how to contribute to core Python.

19
00:02:39,560 --> 00:02:47,960
And I got up to the podium and I was terrified. And five of the core developers were up on stage

20
00:02:47,960 --> 00:02:55,880
with me for moral support. Still terrified. And at some point, four of them left the stage. Brett

21
00:02:55,880 --> 00:03:03,760
was wishing me luck. And I begged him, can you please stand up here with me? Because it might

22
00:03:03,760 --> 00:03:11,560
help me calm down. And it did and it didn't. He's like, how long do you want me to stand up here?

23
00:03:11,560 --> 00:03:20,120
And I said, he's like the whole talk. And I said, well, if you get to the image of a boy playing the

24
00:03:20,120 --> 00:03:29,520
tuba in his bathrobe, then if I give you the thumbs up, go. If not, please stay. And then as

25
00:03:29,760 --> 00:03:39,520
they were introducing me, I was on the verge of a panic attack. And I asked Brett, will you hold my hand?

26
00:03:41,120 --> 00:03:51,520
And he did. Up until we got to that slide. And that just shows you right there what amazing people

27
00:03:51,520 --> 00:03:57,600
we have in this community. And today I'm actually going to talk about distributed networks.

28
00:03:58,400 --> 00:04:06,640
And in particular, three fundamentals of distributed networks. Connection, communication,

29
00:04:08,080 --> 00:04:17,840
and scale. But first, I also want to share a story from Thursday. I had the pleasure of meeting

30
00:04:17,840 --> 00:04:25,920
our keynote speaker, Ned Buchelder's wife, Susan. And it was her first PyCon. And we started talking.

31
00:04:26,880 --> 00:04:36,000
And she is a prolific writer and educator. And she was asking, like, you know, how come I never knew

32
00:04:36,000 --> 00:04:43,120
that you could do Python and do meaningful work in five lines of code or less? And I said, I don't

33
00:04:43,120 --> 00:04:48,400
know. Maybe I'm a better teacher than Ned. No, I'm just kidding. Ned is a fabulous teacher. But

34
00:04:49,040 --> 00:04:54,880
she reminded me of something that really touched me that day. And what she reminded me

35
00:04:56,240 --> 00:05:03,920
was our journey, hers and mine, were very different than many of you, for which I am

36
00:05:03,920 --> 00:05:13,520
really grateful. When she and I were young, it was hard to be a woman or a girl that liked

37
00:05:14,160 --> 00:05:24,480
math and science. It was not encouraged. In fact, it was actively discouraged. And

38
00:05:25,280 --> 00:05:34,480
as I was thinking about this on Thursday night, I was really touched at the amazing group of people

39
00:05:34,480 --> 00:05:41,840
that I have run across in the last decade. And I want to thank everyone that has helped me get to

40
00:05:41,840 --> 00:05:50,480
this point, because it really matters. So for those of you that do not know me, I'm Carol Willing.

41
00:05:50,960 --> 00:05:58,560
I'm a core developer, worked on Jupyter, notable, my fantastic startup company with

42
00:05:59,360 --> 00:06:06,800
just wonderful folks. We're kind enough to also sponsor PyCon. So it really makes me happy that

43
00:06:06,800 --> 00:06:14,480
we've built the same community within our company that we feel within Python. And so thank you to

44
00:06:14,560 --> 00:06:24,400
everybody there. So I talked about connection, communication, scale in distributed networks.

45
00:06:25,440 --> 00:06:32,960
And some of you may know, some of you might not, Barbara Liskov was the second woman to get the

46
00:06:32,960 --> 00:06:39,360
Turing Award, which is sort of like the Nobel Prize of computing. And she was also the first

47
00:06:39,360 --> 00:06:46,400
woman in the U.S. to get a Ph.D. in computer science. Now, I've always been interested in

48
00:06:46,400 --> 00:06:53,840
networks and the power of networks. And she really did foundational research in data abstraction,

49
00:06:54,480 --> 00:07:01,360
fault tolerance, distributed computing, a few different languages she wrote. And a lot,

50
00:07:01,920 --> 00:07:07,120
I won't say a lot, but some of Python is actually based on foundational work that she did, things

51
00:07:07,120 --> 00:07:13,840
like iterators. And so I want you to know about her because a lot of what I've learned about

52
00:07:13,840 --> 00:07:22,480
distributed computing comes from reading her books from decades ago. The other thing that I love

53
00:07:22,480 --> 00:07:30,080
is learning and helping empower people to learn. And so I do a lot of reading about cognitive science,

54
00:07:30,720 --> 00:07:35,760
which really combines a whole bunch of different interests of mine. And I think it's really

55
00:07:35,760 --> 00:07:45,440
influenced my view on tech. Now, all of you know, it has been a challenging couple of years.

56
00:07:46,000 --> 00:07:52,400
We have lots of global issues in front of us that are very complicated and very complex.

57
00:07:53,520 --> 00:08:02,960
In addition, we have a lot of trends in computing in 2023. And those also have a lot of complexity

58
00:08:02,960 --> 00:08:09,840
to it and a lot of uncertainty. Which ones will be successful, which ones won't. And you,

59
00:08:10,480 --> 00:08:17,520
as a developer or someone who works in tech, are right smack in the middle between those two things.

60
00:08:18,160 --> 00:08:26,160
And uncertainty is something that is going to be a constant. It is a constant within a distributed

61
00:08:26,160 --> 00:08:34,800
network for the simple element that time can do very weird things to networks. And so remember,

62
00:08:35,440 --> 00:08:42,720
uncertainty will always be there. And my hope is that at the end of this talk, you will feel a

63
00:08:42,720 --> 00:08:50,480
little bit better about dealing with uncertainty. The other thing is people have opinions. Anybody

64
00:08:50,480 --> 00:08:56,560
who's read a mailing list or talked on Discord know that there are strong opinions on things.

65
00:08:56,560 --> 00:09:03,520
And that's good. All of you have different reasons for being here this week. And whether it's to

66
00:09:03,520 --> 00:09:10,080
learn, to share knowledge, to get a job, to grow the global community, whatever it is,

67
00:09:11,600 --> 00:09:19,600
remember what your journey is. So again, we're going to talk first about a node or an individual

68
00:09:20,160 --> 00:09:25,760
and talk about connection. Then we're going to talk about communication in a network or a group.

69
00:09:26,640 --> 00:09:31,840
And then we're going to talk about really what I think is the superpower of networks, which is

70
00:09:31,840 --> 00:09:41,520
scaling. And my mentor Margot many years ago coached me to go to grad school when I could not see

71
00:09:41,920 --> 00:09:50,160
the talent that I had. I was having panic attacks and I thought I was a broken, isolated, stupid

72
00:09:50,160 --> 00:09:56,400
failure, even though I was doing pretty well in my engineering program. And she coached me to go

73
00:09:56,400 --> 00:10:06,240
to MIT. And while I was there, she encouraged me to apply for a scholarship to pay for the other

74
00:10:07,200 --> 00:10:13,200
half of the tuition, which I didn't have money for. And I said, well, I'm not going to get it

75
00:10:14,160 --> 00:10:21,040
because I'm the youngest person in the program. And she looked at me in her Margot kind of way

76
00:10:21,040 --> 00:10:27,680
and said, well, you're not going to get it if you don't apply. And happily, I did get the scholarship.

77
00:10:27,680 --> 00:10:34,800
And one of the beautiful things is we are still in touch today and continue to mentor people,

78
00:10:34,800 --> 00:10:45,760
which is pretty cool. So let me go back to 2013. A decade ago, I did not know Python. I knew a few

79
00:10:45,760 --> 00:10:55,280
other programming languages. I was 46 years old after taking a long break from tech. And 46 years

80
00:10:55,280 --> 00:11:03,600
old in tech years would be like 92. So I was ancient. I was around before personal computers,

81
00:11:04,240 --> 00:11:12,080
before the internet, worldwide web, before cell phones, smartphones. And the number of people that

82
00:11:12,080 --> 00:11:21,280
told me it will be impossible to come back to tech at your age because you don't have skills

83
00:11:21,920 --> 00:11:29,760
and your skills have evaporated. And when I left tech, which was over a decade before that,

84
00:11:30,720 --> 00:11:38,480
I was managing 20 software developers. And I was like, okay, but this doesn't make sense. Like,

85
00:11:38,480 --> 00:11:44,320
I've taught and learned languages while I was taking a break. I don't know that that's right.

86
00:11:44,320 --> 00:11:50,400
So for anybody who has to take a long break and somebody for health reasons, child care, whatever,

87
00:11:52,000 --> 00:11:58,720
if they tell you you can't, know that you can. It takes work, but you definitely can.

88
00:11:59,760 --> 00:12:10,320
At the time, at this crossroads, I was like, okay, do I go back to tech or do I not go back to tech?

89
00:12:10,320 --> 00:12:20,240
And I really didn't know. I was also a part-time caregiver to my mom who was in the late stages

90
00:12:20,320 --> 00:12:30,240
of Alzheimer's and her neural network in her brain was not connected really anymore. At least

91
00:12:30,240 --> 00:12:39,040
the speech portion of it, the memory portion was gone. But she was still happy. But it was really

92
00:12:39,040 --> 00:12:46,560
hard to try and figure out, okay, how do I connect and communicate with her? Five years before that,

93
00:12:46,560 --> 00:12:52,960
she still didn't have the long-term memory and might have that distant look in her eyes at times,

94
00:12:52,960 --> 00:13:00,080
but she was at least able to communicate and get to know my kids, her grandchildren. And

95
00:13:01,760 --> 00:13:06,880
I spent a lot of time thinking about how to connect with her. And I finally found that the

96
00:13:06,880 --> 00:13:14,160
way to connect with her was not through speaking and language, but it was actually through touch

97
00:13:14,560 --> 00:13:21,760
and her ability to hear and listen. So my mom was an amazing knitter. I'm a horrible knitter,

98
00:13:22,320 --> 00:13:29,440
but what I would do is I would buy these big chunky balls of yarn and I would give it to her.

99
00:13:29,440 --> 00:13:37,600
She would hold it and I would knit. And that physical connection made me feel connected to her.

100
00:13:38,240 --> 00:13:42,480
The other thing I would do is I would play songs on the ukulele for her and

101
00:13:42,960 --> 00:13:50,080
she would smile and kind of, you know, move a little. So it was a really powerful way to connect

102
00:13:50,080 --> 00:13:58,480
with her. So back to the point of the, okay, I don't know what the future's going to hold for me.

103
00:13:58,480 --> 00:14:04,080
I don't know whether to go back to tech or not. There's lots of life and uncertainty around me.

104
00:14:04,080 --> 00:14:11,120
And as I thought about returning, I wrote this blog post about whether or not I was going to

105
00:14:11,120 --> 00:14:18,800
return. And at the end of it, I made the decision to return to tech. But I realized that this time

106
00:14:18,800 --> 00:14:25,440
I was going to do it on my terms. I was going to follow my passion and my interests, which was

107
00:14:25,440 --> 00:14:34,000
writing software and building things, and also to really be able to connect with my kids. And so

108
00:14:34,000 --> 00:14:43,600
to really help the next generation of developers and problem solvers to be successful. And

109
00:14:44,400 --> 00:14:49,760
teaching and learning about teaching was something that was very, very important to me.

110
00:14:51,040 --> 00:15:01,120
So many of us came for the language and all of us at some point had to get a connection to the

111
00:15:01,120 --> 00:15:10,240
language. And at first you might feel like that little dot on the far side, all alone, feel like

112
00:15:10,240 --> 00:15:17,120
you're the only one that has ever started to learn Python. And now I can stand here today and say,

113
00:15:17,120 --> 00:15:24,960
hey, I feel like the other side where there has been so much connection to people and concepts and

114
00:15:25,600 --> 00:15:35,360
that I really value. So how do you create a connection, whether it's as a person or as a

115
00:15:35,360 --> 00:15:44,160
computer? The first thing is you need to motivate someone or something to connect. And there are

116
00:15:44,160 --> 00:15:52,800
many possibilities due to Python's rich ecosystem of packages. And thank everyone who maintains PyPI.

117
00:15:53,360 --> 00:15:58,640
We could not have this great ecosystem without you.

118
00:16:05,760 --> 00:16:12,480
The other thing that I think is really unique about Python is we can motivate people by helping

119
00:16:12,480 --> 00:16:20,640
connect to their interests. And their interests could be anything from music to web to DevOps to

120
00:16:20,640 --> 00:16:27,920
open hardware. But when I started with Python or any other language for that matter, I usually

121
00:16:27,920 --> 00:16:34,320
would use something that was meaningful to me, which was music. And I found a Python library

122
00:16:34,320 --> 00:16:42,160
called Music 21. It's actually a music theory musicology library that Mike Cuthbert wrote.

123
00:16:42,160 --> 00:16:50,240
And what was great is their documentation talked about how you could do all these cool things in

124
00:16:50,240 --> 00:16:58,000
five lines of code or less. Because of the rich libraries that Python has, it was actually true.

125
00:16:58,000 --> 00:17:05,760
And so what I started doing was showing these at the time programs to other people in a community

126
00:17:05,760 --> 00:17:14,000
maker space that I was working at. And I realized it was starting to resonate with folks. So beyond

127
00:17:14,000 --> 00:17:22,960
motivation, people need an intention to connect. And Python's language from the ground up has been

128
00:17:22,960 --> 00:17:31,280
designed for people's success. Python is supposed to be intuitive so that anyone can contribute.

129
00:17:32,400 --> 00:17:39,760
That it would be understandable as understandable as plain English or whatever your native language

130
00:17:39,760 --> 00:17:49,120
might be. And that it should be useful for everyday tasks and allow people to have a short

131
00:17:49,120 --> 00:17:57,360
development time. And we often talk about the speed of languages and this, that, and the other.

132
00:17:57,360 --> 00:18:03,520
And that's great. There's a time and place where speed is really important. But I think often we

133
00:18:03,520 --> 00:18:11,040
overlook how fast people can get things done. And with Python, it really kicks.

134
00:18:12,960 --> 00:18:20,480
So the last part of intention is to make the language accessible. And I think the readability

135
00:18:20,480 --> 00:18:29,280
of Python was something that really drew me in. The ability not to have that cluttered view of

136
00:18:30,080 --> 00:18:39,600
all the types and things like that helped me. Now, the other cool thing about Python is there's a lot

137
00:18:39,600 --> 00:18:46,320
of places where people have choices as they develop their program. Things are flexible. If you like

138
00:18:46,320 --> 00:18:53,520
type annotations, have at it, use it in a production code. Probably a really good thing to have. But if

139
00:18:53,520 --> 00:18:58,800
you're just prototyping or you're just learning, don't worry about the typing yet. There will be

140
00:18:58,800 --> 00:19:05,840
time and place for that. And one of the things that the core development team did a couple years

141
00:19:05,840 --> 00:19:15,920
ago was to the Python enhancement proposals, the PEPs, we added a required section called how to

142
00:19:15,920 --> 00:19:22,160
teach this. And at the time, people were saying the language is too complex, this and that, we don't

143
00:19:22,160 --> 00:19:28,480
like the new features. And, you know, in the back of my head, I'm always like, you don't have to use

144
00:19:28,480 --> 00:19:36,480
every feature of the language, but whatever. But I thought it was great. And PEP 701 that just got

145
00:19:36,480 --> 00:19:47,200
approved about F strings had a section on how you teach it. And the difference between before was now

146
00:19:47,760 --> 00:19:54,080
inside you can have any valid Python expression, not just a variable or something like that,

147
00:19:54,080 --> 00:20:01,600
which I think is going to be really powerful. So these things help build confidence. And once

148
00:20:01,600 --> 00:20:08,160
someone has confidence, they are often ready to connect and take the leap into the unknown.

149
00:20:09,200 --> 00:20:17,600
And send a request. So we're in this network, we're trying to connect. And we can send a request

150
00:20:18,240 --> 00:20:27,040
to people, systems or tools. And I made a distinction between those because people are people,

151
00:20:27,920 --> 00:20:36,480
and things of boxes of hardware and parts are systems and tools. And there's been a lot in the

152
00:20:36,480 --> 00:20:46,160
media recently about chat GBT, LLMs, autonomous agents, everybody has their own viewpoint on this.

153
00:20:46,960 --> 00:20:54,880
But at the end of the day, they are still tools. They are not people. And I'm going to do a quick

154
00:20:54,880 --> 00:21:00,640
aside, because I think this is an important topic. And I think it's a topic that's going to be around

155
00:21:00,640 --> 00:21:08,400
for a long time. I've seen lots of paradigm shifts in tech, like the web or cell phone service.

156
00:21:09,120 --> 00:21:17,200
And these neural networks and large language models, they're here to stay. So I think it's

157
00:21:17,200 --> 00:21:24,800
really important that people learn how to use them, what they are, what their limitations are.

158
00:21:25,440 --> 00:21:31,600
So the company that I've been working at for the last three years, and we're trying to build the

159
00:21:31,600 --> 00:21:38,160
next generation of the third generation of interactive notebooks, we have a library out.

160
00:21:38,160 --> 00:21:44,240
We purposely open sourced it. And we purposely provided examples so that people could get up

161
00:21:44,240 --> 00:21:50,400
and running and decide for themselves whether or not this is something they have an interest in.

162
00:21:52,240 --> 00:22:01,040
One place that I think it will be useful is to help people learn. And whether you're a beginner

163
00:22:01,040 --> 00:22:11,440
or expert, these models can help provide information about what potential code should be written.

164
00:22:12,160 --> 00:22:18,160
Doesn't mean it's right. But it can at least guide you towards that. And then my last thing

165
00:22:18,160 --> 00:22:25,760
in the aside is I have found a few helpful voices in my own research of large language models.

166
00:22:25,760 --> 00:22:34,560
Simon Willison is a long time member of the Python community. He has a wonderful library out there

167
00:22:34,560 --> 00:22:42,400
called Dataset. If you haven't tried it, it is really accessible. It lets you basically create

168
00:22:42,400 --> 00:22:51,360
and take SQLite databases and serve it up so that you can then do manipulations on it. He's got a

169
00:22:52,320 --> 00:23:00,080
great new library called Shot Scraper which lets you do scraping even easier. So it's worth checking

170
00:23:00,080 --> 00:23:09,680
out. But he also has a really great blog about why people, about the research that

171
00:23:11,200 --> 00:23:17,920
large language models and his take on it. Also Jeremy Howard and Rachel Thomas have been really

172
00:23:17,920 --> 00:23:28,960
instrumental in the last decade or so of providing free knowledge about AI and ethics. And I think

173
00:23:28,960 --> 00:23:36,560
it's well worth checking it out. So you've made the request. You receive a response.

174
00:23:36,560 --> 00:23:42,800
You're going to process that response. And much like security, when you're getting a response

175
00:23:42,800 --> 00:23:49,920
from these large language models, it's good to trust maybe if you wish. But definitely verify

176
00:23:50,720 --> 00:23:59,840
whether or not the information that you're getting is valid. Once you've established connections

177
00:24:01,520 --> 00:24:06,400
in a real network, you would be monitoring those connections and making sure that things are going

178
00:24:06,400 --> 00:24:14,800
well as you expect. And sometimes computer systems need to disconnect and kind of go into this loop

179
00:24:14,800 --> 00:24:22,000
back phase where they're not really doing stuff in the network. And this is really important because

180
00:24:22,000 --> 00:24:31,280
as open source contributors, maintainers, burnout is real. And I encourage you when you feel burnt out,

181
00:24:32,240 --> 00:24:43,840
say no, and give yourself the compassion to take the time to re-energize so that when you're ready,

182
00:24:44,560 --> 00:24:50,640
you can come back with all the superpowers that you have and you can continue to monitor yourself

183
00:24:51,200 --> 00:24:59,680
and your energy. So we've talked about connection and I want to move now into communication.

184
00:24:59,840 --> 00:25:06,720
And communication is the key reason we have networks. We want to get messages from one place

185
00:25:06,720 --> 00:25:16,240
to another. And I think Guido put it really well in his quote from 2016 that we have programming

186
00:25:16,240 --> 00:25:23,120
languages to communicate ideas. And we're communicating those ideas to other people,

187
00:25:23,120 --> 00:25:29,840
not just computers. And I think that's a really valuable distinction.

188
00:25:31,040 --> 00:25:36,800
So one of the things you do on a network is you broadcast messages. And in our community,

189
00:25:36,800 --> 00:25:45,440
Michael Kennedy does a Talk Python to Me podcast that broadcasts a lot of really valuable information.

190
00:25:45,440 --> 00:25:51,760
And honestly, I have it on usually when I'm washing my dishes at home, but I highly encourage

191
00:25:51,760 --> 00:25:56,800
you to listen to it. There are some really great content episodes, new things that are coming up.

192
00:26:00,080 --> 00:26:06,240
Translators are really important in a network. When you have two different protocols in a network,

193
00:26:06,880 --> 00:26:12,800
sometimes you need to bridge those. And language could be a different protocol.

194
00:26:13,840 --> 00:26:18,800
I speak one language, somebody else speaks another language. Fast API, which is a very

195
00:26:18,800 --> 00:26:26,080
popular framework right now, has done a great job of providing that language to many different

196
00:26:26,080 --> 00:26:33,360
people and those translations, as well as providing illustrations and other ways for people to learn

197
00:26:34,240 --> 00:26:40,400
about the project and also just concurrency and distributed computing in general.

198
00:26:41,200 --> 00:26:48,000
The other translators that we have are with different programming languages. And I personally

199
00:26:48,000 --> 00:26:54,640
believe that the next decade of Python, you will see more integrations with Rust, you will see more

200
00:26:54,640 --> 00:27:02,800
integrations with JavaScript. We also have something unique in Python in comparison to many other

201
00:27:03,520 --> 00:27:12,480
languages. And that is we have the ability to have different domains, different industry domains,

202
00:27:12,480 --> 00:27:19,120
different academic domains working together. So remember those complex world issues that we had before?

203
00:27:22,480 --> 00:27:29,600
You can actually bring together people from different domains, perhaps in a notebook,

204
00:27:30,400 --> 00:27:36,880
where you can use prose and code and get people on the same page to understand a problem.

205
00:27:37,760 --> 00:27:45,760
Whether that person is coming from chemistry, public health, government, academia, and I think

206
00:27:45,760 --> 00:27:56,080
that's a really powerful trait of Python that doesn't often get said enough. So I'm going to

207
00:27:56,080 --> 00:28:10,400
take a quick break and grab some water. Okay. So when we look at networks, networks have shapes.

208
00:28:10,400 --> 00:28:18,000
They have different topologies. And within those topologies, they have clusters. And in the Python

209
00:28:18,000 --> 00:28:25,920
world, we have a lot of different clusters. The outreach cluster is perhaps one of the strongest

210
00:28:25,920 --> 00:28:33,760
clusters we have. I would not be standing in front of you today had a very special person,

211
00:28:33,760 --> 00:28:41,520
Shauna Gordon-McKeon, not reached out when I was kind of tentative and said, oh, I'll help you.

212
00:28:42,400 --> 00:28:49,360
And got me involved with Open Hatch, which was a nonprofit that helped people make their first

213
00:28:49,360 --> 00:28:58,880
contribution to open source. And it was a Django code base. So it was my avenue into learning Python.

214
00:29:00,000 --> 00:29:06,320
I also would not be speaking up here today had it not been for Jessica McEller, who hounded me

215
00:29:07,200 --> 00:29:16,800
to serve on the program committee for PyCon back in 2013 to submit posters and talk proposals.

216
00:29:17,520 --> 00:29:24,640
And I'm really glad she did. One of the great things about Open Hatch is we were able to mentor

217
00:29:24,640 --> 00:29:33,440
a lot of people, help them build their skills. And then those people went out and helped other

218
00:29:33,440 --> 00:29:40,240
people learn. We also have local clusters, user groups, San Diego Python, San Diego PyLadies,

219
00:29:40,240 --> 00:29:46,320
near and dear to my heart. The study groups we've had for many years have really empowered lots of

220
00:29:46,320 --> 00:29:54,800
folks. And there was a really good lightning talk. I think it was this person's first lightning talk.

221
00:29:54,800 --> 00:30:01,760
And it was about how to organize virtual meetups. And I think the virtual clusters are really

222
00:30:01,760 --> 00:30:07,760
important. The pandemic showed us that we need different modalities with which to communicate.

223
00:30:07,760 --> 00:30:17,200
Okay. Django Girls has been a huge cluster. And it is something that Melanie Arbor,

224
00:30:17,920 --> 00:30:24,560
who is a friend of mine from San Diego, she came to San Diego PyLadies and San Diego Python,

225
00:30:25,120 --> 00:30:34,720
not knowing any Python. She helped organize the study group. She helped organize Django Girls.

226
00:30:34,720 --> 00:30:40,880
She started programming in Django, making her own website that would send positive

227
00:30:40,880 --> 00:30:52,080
affirmations to people. And she's been a speaker and also a tutorial teacher here at PyCon.

228
00:30:52,720 --> 00:31:01,360
And I really want to recognize her because it was the community and her effort that really,

229
00:31:01,360 --> 00:31:07,120
really connected with a lot of people and brought more people into the Python community.

230
00:31:08,160 --> 00:31:16,160
Open hardware, my love. I love blinky things. So PyLadies, I have a lot of feelings about PyLadies.

231
00:31:16,160 --> 00:31:22,880
But I'm going to share those in a few minutes when we talk about scale. Core development cluster,

232
00:31:22,880 --> 00:31:28,400
super, super important. It's what creates the language that we're working on. And it's not

233
00:31:28,400 --> 00:31:34,320
just the core developers. We have an amazing triage team and many different contributors. And

234
00:31:35,600 --> 00:31:41,600
it's great to see the community being vibrant and more people getting interested in doing core

235
00:31:41,600 --> 00:31:48,400
development. Conferences clusters, we're here. We're sharing knowledge. The fact that we have

236
00:31:49,040 --> 00:31:56,720
two days is amazing. And the education summit and it will continue to be amazing.

237
00:31:59,680 --> 00:32:05,520
So in network analysis, when you look at the topology and you look at the clusters,

238
00:32:06,080 --> 00:32:13,760
you often will also look and see is there a cluster that's isolated from the rest of the network?

239
00:32:13,760 --> 00:32:19,760
So you ask who's missing? And then the next question to ask is why are they missing?

240
00:32:20,480 --> 00:32:27,520
And I'm really pleased to say that in the last decade, we have come a long way. We still have a

241
00:32:27,520 --> 00:32:35,680
long way to go. But in terms of expanding Python's global reach and getting more people involved with

242
00:32:35,680 --> 00:32:42,000
Python. Network expansion, always a good thing. And I think Eric Hulscher put it well when, hey,

243
00:32:42,000 --> 00:32:46,400
if you're standing in a group of people, leave a space for someone else to join the network.

244
00:32:46,960 --> 00:32:54,400
Just like you have extra capacity on some of your networks, same deal. So Python's network,

245
00:32:55,200 --> 00:33:03,680
to be successful depends on communication. And I want to take the lead here. So I'm going to

246
00:33:04,640 --> 00:33:09,200
I want to take the final few moments that I have to actually talk about scale,

247
00:33:09,920 --> 00:33:17,280
which is what I think Python's network's superpower. Gitovich said that sharing

248
00:33:17,280 --> 00:33:23,920
information was something that was a really important lesson to him. And I often will tell

249
00:33:23,920 --> 00:33:32,800
people start small and scale. We did that with IPython and Jupyter Notebooks. Back in 2014,

250
00:33:33,360 --> 00:33:41,200
Lorena Barba was a keynote speaker at SciPy. And she said interactive computing is a tool of

251
00:33:41,200 --> 00:33:49,680
connection. And at the time, I was working with folks in the San Diego area and exposing them to

252
00:33:49,680 --> 00:33:57,360
the notebooks. And what I was seeing was the impact that it had. People felt more comfortable

253
00:33:58,080 --> 00:34:03,440
and able to approach the material because they had something they could take away before.

254
00:34:04,240 --> 00:34:10,400
Big programs could then be chunked into smaller chunks that actually had pros to explain it.

255
00:34:11,120 --> 00:34:15,600
And for high school students that perhaps didn't see themselves as programmers,

256
00:34:15,600 --> 00:34:21,760
you could actually start the notebook with a compelling visual example, an interactive

257
00:34:21,760 --> 00:34:31,200
example that really, really started to hook them. So in 2014, there were 65,000-plus notebooks on

258
00:34:31,200 --> 00:34:36,640
GitHub, which at the time we felt was like a big number. Well, fast forward to today,

259
00:34:37,520 --> 00:34:46,880
there are 11 million-plus notebooks on GitHub. So how did we grow to over 11 million notebooks

260
00:34:47,600 --> 00:34:54,880
in a decade with a very small core team, a sizable number of contributors as well?

261
00:34:55,760 --> 00:35:04,640
And as I reflect back on it, it started with communication, problem solving, passion, and

262
00:35:05,200 --> 00:35:11,280
keeping in mind simplicity. When the notebooks first came out, they ran on your local machine.

263
00:35:11,520 --> 00:35:16,560
And back in 2014, Python was not as easy as it is today to install.

264
00:35:18,080 --> 00:35:25,920
It also wasn't as easy to install packages. And so Minregg and Kelly and I started working on

265
00:35:25,920 --> 00:35:31,680
a project called Jupiter Hub, which would give anybody who was part of the network

266
00:35:33,040 --> 00:35:40,080
a Jupiter notebook that they could use. And what that did is it unlocked universities to

267
00:35:40,080 --> 00:35:48,000
teach data science, like here at Berkeley. And that was great. Another unexpected benefit

268
00:35:48,000 --> 00:35:54,960
that we didn't realize at the time was it also provided greater accessibility to the students.

269
00:35:55,680 --> 00:36:03,040
It didn't matter if you were the poorest or the wealthiest student, if you had a Chromebook

270
00:36:03,040 --> 00:36:09,040
or a high-end MacBook, you all had the same experience because it was being delivered

271
00:36:09,040 --> 00:36:16,640
through the browser. You had the same compute as everybody else had on the server. And after

272
00:36:16,640 --> 00:36:23,040
the success of Jupiter Hub, we also wanted to share scientific research papers and things online

273
00:36:24,080 --> 00:36:30,960
with the greater world. And so then we developed Binder, which lets you take a look at the data

274
00:36:30,960 --> 00:36:43,440
data and launch it out into the world. Start small and scale. PyLadies is a great story.

275
00:36:46,320 --> 00:36:52,240
It has done for me more than I could ever possibly express. And

276
00:36:52,720 --> 00:37:02,720
I foolishly thought I could get all the logos on one slide. That was a big mistake. It took several

277
00:37:02,720 --> 00:37:09,600
slides and I don't have them all. And the thing about PyLadies, Brazil is a particular force in

278
00:37:09,600 --> 00:37:19,360
PyLadies. But PyLadies as a whole has helped over 120,000 people get involved in using Python and

279
00:37:19,360 --> 00:37:30,080
landing jobs and diversifying our community. Thank you to all of you PyLadies out there.

280
00:37:32,320 --> 00:37:37,760
Oftentimes I will feel like a unicorn because there's still a lot of meetings I go to where

281
00:37:37,760 --> 00:37:45,680
I'm the only woman. Go to conferences, I might be the only woman in a room or a session. And

282
00:37:45,760 --> 00:37:50,800
that can sometimes feel really isolating going back to that network, like who's not connected

283
00:37:50,800 --> 00:38:01,680
to the network. And so Abigail did a great job saying, hey, we need to show and make

284
00:38:02,000 --> 00:38:11,040
more role models and mentors accessible. And one of the things she did was she set metrics and

285
00:38:12,000 --> 00:38:19,600
goals for what she wanted to achieve in Ghana for PyLadies and has been incredibly successful.

286
00:38:19,600 --> 00:38:27,200
And it has really transformed the Python community in Africa as well as PyLadies in general.

287
00:38:28,800 --> 00:38:37,280
So on a personal level, there's times where you think, okay, is this worth it? And then I look

288
00:38:37,280 --> 00:38:44,800
around at the world of PyLadies around me and I say, yeah, tech might not be worth it, but all of

289
00:38:44,800 --> 00:38:53,760
these people are definitely worth it. To see what they can do and how they grow has been one of the

290
00:38:53,760 --> 00:39:01,280
biggest joys of my life. So start small and scale. Python Software Foundation, you've heard a lot

291
00:39:01,360 --> 00:39:10,960
about it this week. Scaling the Python network is the mission of the PSF. It is to scale and keep

292
00:39:10,960 --> 00:39:18,320
the language vibrant and also grow the entire international community of Python programmers.

293
00:39:20,240 --> 00:39:30,160
I also want to call out that great leaders inspire other leaders. And after PyCon Montreal,

294
00:39:31,120 --> 00:39:40,000
three women approached me and asked me to run for the PSF board. I really did not want to run.

295
00:39:42,400 --> 00:39:47,520
They were very persuasive. And I'm not going to tell you what their argument was because

296
00:39:49,280 --> 00:39:55,920
that wouldn't be fair to them. But I just want to recognize them. They are wonderful people who have

297
00:39:55,920 --> 00:40:06,000
really helped a lot of women and men and others over the years. As I look at the next decade of

298
00:40:06,000 --> 00:40:12,880
Python and where we are going to scale and have an impact, mobile computing is one of them.

299
00:40:13,520 --> 00:40:21,200
Russell Keith McGee for years has been working on Beware and creating a project where everyone

300
00:40:21,280 --> 00:40:29,760
is welcome. The Sprint Challenge coins were very sought after for many sprints. And I'm really

301
00:40:29,760 --> 00:40:34,960
pleased to say, I don't know if it's public yet, but I'm going to say it anyway because I want it

302
00:40:34,960 --> 00:40:41,920
to come to fruition more than anything else, is it will be a tier three project within core Python.

303
00:40:42,560 --> 00:40:48,000
And we will in this decade have a good mobile story for Python.

304
00:40:57,200 --> 00:41:02,800
But wait, that's not all. We also are going to have a really darn good story

305
00:41:03,760 --> 00:41:11,680
for the web and the browser. And at this PyCon, we had our first WebAssembly Summit.

306
00:41:13,040 --> 00:41:20,960
It was very well attended. There's a repo in the PSF. So if you didn't attend, you can keep up to

307
00:41:20,960 --> 00:41:28,320
date as to what was going on. And in the future, you're going to see even more work within core

308
00:41:28,400 --> 00:41:35,040
Python about Waze and WebAssembly and then there are some other projects in the ecosystem that are

309
00:41:35,040 --> 00:41:45,200
also getting more and more popular every day. So as we scale the PSF and the impact that it has,

310
00:41:46,960 --> 00:41:54,960
I am humbled to have been a part of this community and to have been a small part of its long-term

311
00:41:54,960 --> 00:42:02,400
success. I have learned a lot from my own personal failures and I've also had the joy of

312
00:42:02,400 --> 00:42:11,200
innovating and doing things that really had an impact. So remember, scale has a global impact

313
00:42:11,200 --> 00:42:18,080
in a network. What it does is it increases the probability of success. When you have multiple

314
00:42:18,080 --> 00:42:24,400
different routes through a network, if one path goes down, there's another path you can take.

315
00:42:25,920 --> 00:42:32,720
And in an uncertain world, that's really powerful because it builds up resilience.

316
00:42:33,360 --> 00:42:38,720
And a resilient network is better than one that's sort of brittle and falls apart

317
00:42:38,720 --> 00:42:49,440
anytime it gets a load on it. So my call to action as we wrap up to you is to remember these three

318
00:42:49,520 --> 00:42:58,880
aspects of healthy, vibrant networks. Connection, communication, and scale.

319
00:43:00,480 --> 00:43:07,840
And to maintain Python's global networks, there's a few things you can do. And perhaps the most

320
00:43:07,840 --> 00:43:13,520
important one to me is the last one because that was the lesson I learned from my own mentor.

321
00:43:14,480 --> 00:43:18,240
Take five minutes to encourage others to imagine the possible.

322
00:43:21,440 --> 00:43:29,040
As Guido said, a community that creates a language causes happiness in the users and has an impact

323
00:43:29,040 --> 00:43:38,800
around the world. And to finally wrap up, I want every Udipan to embrace that Python really truly

324
00:43:38,800 --> 00:43:46,720
is the people's programming language. It will help us succeed in an uncertain decade with our

325
00:43:46,720 --> 00:43:56,400
resilient global networks. And I'm super happy that back in 2013, I took the plunge and decided

326
00:43:56,400 --> 00:44:05,920
to come back to tech. And in particular, the Python community, it has rewarded me in so many

327
00:44:05,920 --> 00:44:12,480
incredible ways. And I think what brings me the most joy is to see other people succeed

328
00:44:12,480 --> 00:44:19,760
on their journeys. So I want to just say in closing, you know, I came for the language.

329
00:44:20,400 --> 00:44:29,840
I stayed for the community. And together, we changed the world. Thank you for listening.

330
00:44:30,560 --> 00:44:38,400
It has been my pleasure. And thank you, Mariata, for giving me the chance to speak to everyone here

331
00:44:38,400 --> 00:44:45,440
today. This talk was from the heart. And until our paths cross again, safe travels, safe journeys

332
00:44:45,440 --> 00:44:55,360
with Python. Don't forget to ask questions when you need to. And thank you so much.

