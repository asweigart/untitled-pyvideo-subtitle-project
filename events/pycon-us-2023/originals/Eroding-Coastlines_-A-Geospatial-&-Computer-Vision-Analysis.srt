1
00:00:00,000 --> 00:00:07,020
All right. Hi, everybody. Thank you all so much for coming. Really nice to see you all.

2
00:00:07,020 --> 00:00:12,180
My name is Mansi and this is Kevin and we're really looking forward to presenting this

3
00:00:12,180 --> 00:00:21,900
tutorial for you all on analyzing coastal erosion using Python and satellite imagery.

4
00:00:21,900 --> 00:00:28,060
A little bit about each of us. As I said, my name is Mansi. My background is kind of

5
00:00:28,060 --> 00:00:34,420
varied. I have a background in environmental science and also data science and we are both

6
00:00:34,420 --> 00:00:38,260
currently at Planet. So at Planet I work as a software engineer on the developer relations

7
00:00:38,260 --> 00:00:44,500
team and in my spare time when I'm not working I'm also a musician. So I love playing music

8
00:00:44,500 --> 00:00:54,420
and connecting with people that way. Hey. Does this work? Nice. I'm Kevin. I'm also

9
00:00:54,420 --> 00:00:59,580
a software engineer on the developer relations team at Planet. Also the strange background

10
00:00:59,580 --> 00:01:06,060
not in earth imaging at all. In fact, in astrophysics. So basically the same thing but pointing the

11
00:01:06,060 --> 00:01:12,700
camera the other way. And on the spare time I do a lot of mountain biking and just exploring

12
00:01:12,700 --> 00:01:20,500
nature and hopefully if the weather holds up I can try and ride some mountains out here.

13
00:01:20,500 --> 00:01:27,500
So we wanted to mention this because neither of us had I guess maybe Kevin a little bit

14
00:01:27,500 --> 00:01:31,880
more than me but specifically, specific experience working with satellite imagery before we came

15
00:01:31,880 --> 00:01:35,660
to Planet. So we just want to stress that we're really excited that you all are here

16
00:01:35,660 --> 00:01:39,780
even if you've never worked with geospatial imagery before or don't know the first thing

17
00:01:39,780 --> 00:01:43,180
about it or maybe you've never even heard the word geospatial before today that's totally

18
00:01:44,180 --> 00:01:52,540
fine. We sort of came to it at Planet and we're really excited to share it with you.

19
00:01:52,540 --> 00:01:59,600
So in today's workshop we will first talk about some core geospatial and computer vision

20
00:01:59,600 --> 00:02:05,900
concepts that are used in remote sensing. And then we will use this understanding in

21
00:02:05,900 --> 00:02:12,680
the context of Python to use Python tools to do some of this raster and imagery processing

22
00:02:12,680 --> 00:02:18,800
and analysis. And this sort of example section we're going to be using flood data for this

23
00:02:18,800 --> 00:02:22,840
part of it and then we're going to take everything that we've learned and then Kevin is going

24
00:02:22,840 --> 00:02:29,840
to take us through a real world example of analyzing coastal erosion using all of this.

25
00:02:32,520 --> 00:02:38,000
So before I get into this further, I'm just curious, can I have a show of hands who is

26
00:02:38,040 --> 00:02:45,040
totally new to Python in general? Okay, cool. And anyone new to geospatial imagery? Awesome,

27
00:02:48,360 --> 00:02:55,240
yeah, great. All right, so before we get into this, I think it's important to talk about

28
00:02:55,240 --> 00:03:01,520
why we're talking about coastal erosion in the first place. So coastal erosion is defined

29
00:03:01,520 --> 00:03:08,520
as the loss or displacement of land on coastlines due to waves, currents, tide, wind, waterborne

30
00:03:09,040 --> 00:03:14,880
ice, storm impact and other natural and unnatural forces. So the natural weathering of coastlines

31
00:03:14,880 --> 00:03:21,760
is normal but human-led activities has unfortunately made this worse. And bad news, it's going

32
00:03:21,760 --> 00:03:27,600
to get a lot worse. According to the Intergovernmental Panel on Climate Change, risk related to

33
00:03:27,840 --> 00:03:32,760
sea level rise including erosion along all low-lying coasts is expected to significantly

34
00:03:32,760 --> 00:03:39,400
increase by the end of the century without major adaptation efforts. So it's not looking

35
00:03:39,400 --> 00:03:44,680
good unless we do something about it. And this also has long-term environmental and

36
00:03:44,680 --> 00:03:50,000
financial impacts. The long-term impacts of coastal erosion include things like loss of

37
00:03:50,000 --> 00:03:56,160
habitat quality, degradation of coral reefs, increased turbidity of water, reduced tolerance

38
00:03:56,200 --> 00:04:01,720
for communities in the face of these natural disasters and reduced sand volume. So these

39
00:04:01,720 --> 00:04:05,800
environmental impacts are in addition to the millions of dollars that are going to be lost

40
00:04:05,800 --> 00:04:11,920
or spent annually on coastal property loss, tourism collapse and erosion control measures

41
00:04:11,920 --> 00:04:18,920
and that's in the US alone. So overall, a bit of a downer of a slide. But I think it's

42
00:04:19,320 --> 00:04:24,960
important to talk about why these issues matter and why it's really important that we are

43
00:04:24,960 --> 00:04:31,960
looking at this data. All right, let's take a second to talk about Planet's imagery.

44
00:04:34,640 --> 00:04:41,640
Thanks, Melzi. Yeah, I couldn't really see earlier. Has anyone worked with satellite

45
00:04:45,080 --> 00:04:52,080
imagery before? Yeah, has anyone worked with CubeSats? Yeah, cool. A few of you. Cool.

46
00:04:53,080 --> 00:04:58,880
So here at Planet, well not here, well at Planet, we have two different types of satellites.

47
00:04:58,880 --> 00:05:05,360
We have small little CubeSats which we have little builds of here. They're like the size

48
00:05:05,360 --> 00:05:12,360
of a shoebox. They're not very big. They're like 5 kilograms, 10 pounds each. And they're

49
00:05:12,760 --> 00:05:19,760
pretty powerful cameras. They have eight bands, everything between blue and near red, which

50
00:05:19,760 --> 00:05:26,760
we'll talk about later. And they allow you to image stuff like roads, cars, crops, that's

51
00:05:27,880 --> 00:05:34,880
sort of stuff. Then we have larger satellites. SkySats. Actually, I'll mention the doves,

52
00:05:34,880 --> 00:05:40,440
the little ones. We don't tell them to do anything. They just take images all the time.

53
00:05:40,440 --> 00:05:44,520
Whereas the SkySats, these guys are larger. They're the size of like a mini fridge, pretty

54
00:05:44,520 --> 00:05:51,520
heavy, like 100 kilograms, 200 pounds. And we can tell them what to do. So we'll say,

55
00:05:51,520 --> 00:05:57,640
hey, image this part of New York over the next month with these sort of parameters.

56
00:05:57,640 --> 00:06:04,640
And it'll do that. And these things are pretty high resolution. We can image stuff like helipads,

57
00:06:06,080 --> 00:06:13,080
pools, smaller objects. It's used a lot for disaster relief, for instance. And they're

58
00:06:14,600 --> 00:06:19,480
they have the SkySats have different types of bands. They have specifically a really

59
00:06:19,480 --> 00:06:23,960
high resolution band called a pan band. But we're not really going to get into that today

60
00:06:23,960 --> 00:06:29,360
because we're going to look at doves, satellite imagery. Also, if you have any questions about

61
00:06:29,360 --> 00:06:36,360
any of this stuff, please just shout out your question or raise your hand because this can

62
00:06:38,360 --> 00:06:43,080
get kind of technical. And here's a little video of how our satellites work. So here's

63
00:06:43,080 --> 00:06:50,080
the Earth rotating around. And then this is a gif of like how our satellites go around

64
00:06:50,080 --> 00:06:56,120
the Earth. So the cameras are always on taking multiple pictures every second. And as the

65
00:06:56,120 --> 00:07:03,120
Earth goes around, the satellites cover more and more of the Earth. And the same goes with

66
00:07:03,840 --> 00:07:09,120
the SkySats. They're in a similar type of orbit. And then we have the SkySats go into

67
00:07:09,120 --> 00:07:12,400
another orbit. Again, we're not really talking about SkySats today, but it's just kind of

68
00:07:12,720 --> 00:07:17,920
these are meant just to cover more parts of the Earth. Or like let's say you want to take

69
00:07:17,920 --> 00:07:24,920
pictures of the Earth multiple times in one day. It's kind of fun. These purple lines

70
00:07:24,920 --> 00:07:30,440
that you see here, if you can kind of resolve that with your eye, are just imaginary strips

71
00:07:30,440 --> 00:07:35,480
of images that just are composited into one picture of the Earth. You can kind of picture

72
00:07:35,520 --> 00:07:42,520
as like a Google Maps image once a day, which is pretty sweet and pretty powerful tool.

73
00:07:43,840 --> 00:07:50,840
It can be used to monitor forestry, like deforestation or crop yields or different things that you

74
00:07:51,800 --> 00:07:58,800
might want to monitor every day or flooding, for instance, that we'll talk about later

75
00:07:58,800 --> 00:08:03,800
today. Do you guys have any questions about that? No? Cool. I'll hand it over to Manzi.

76
00:08:05,480 --> 00:08:12,480
Thanks, Kevin. All right. So we're going to start by talking about some core geospatial

77
00:08:14,000 --> 00:08:21,000
concepts that will come in handy when we get a little bit further along. So the first

78
00:08:21,680 --> 00:08:26,960
thing to note about geospatial data is that it's special and behaves differently than

79
00:08:26,960 --> 00:08:32,400
maybe a regular image would. Geospatial raster imagery, first thing to note is that it can

80
00:08:32,400 --> 00:08:37,760
be multispectral, meaning that one image can be made up of different bands, and we'll

81
00:08:37,760 --> 00:08:43,940
get to this in a second. Geospatial raster imagery is also spatially referenced, which

82
00:08:43,940 --> 00:08:48,800
means when you see an image of the Earth that's a geospatial raster, that image is tied to

83
00:08:48,800 --> 00:08:54,600
a very specific place on the Earth's surface, and that information is also included in that

84
00:08:54,600 --> 00:09:01,600
image's metadata. So it's an important part about how we work with that image. So the

85
00:09:02,400 --> 00:09:09,400
next slide. All right. So multispectral imagery. Here we're looking at an image of San Francisco

86
00:09:11,320 --> 00:09:17,200
on the right. That image, you're looking at it, it's a color image, it's how you might

87
00:09:17,200 --> 00:09:24,200
see it with your own eyes. That image is actually made up of bands. In this case we have the

88
00:09:24,200 --> 00:09:29,840
red band, the green band, and the blue band. These bands represent different areas on the

89
00:09:29,840 --> 00:09:36,520
wavelength spectrum. So the red band is representative of the red wavelengths, green for green and

90
00:09:36,520 --> 00:09:41,400
blue for blue. A note here is that we can also have bands that we can't see with our

91
00:09:41,400 --> 00:09:46,080
eyes. An example of this is near-infrared. We can't see that, but we can have that as

92
00:09:46,080 --> 00:09:53,080
information with our data. Another thing to note about working with this imagery is that

93
00:09:53,080 --> 00:09:58,480
because these bands are part of the image, you might need to work with it slightly differently

94
00:09:58,480 --> 00:10:03,080
than you would a regular image. So for those of you who have worked with geospatial imagery

95
00:10:03,080 --> 00:10:07,640
before, if you've ever had the experience of downloading an image, then you use your

96
00:10:07,640 --> 00:10:14,480
preview app or whatever the equivalent of that is on Windows. And you try to look at

97
00:10:14,480 --> 00:10:18,480
your image and it's all black or all gray and you can't see anything. And I've definitely

98
00:10:18,480 --> 00:10:22,480
been there where I have a mini freak out and I think that, oh my gosh, my computer's broken,

99
00:10:22,480 --> 00:10:28,320
what's happening? Your computer's not broken. It's just because the image has these bands

100
00:10:28,320 --> 00:10:33,080
that not all programs can process. So you would need to put this image into like a

101
00:10:33,080 --> 00:10:44,160
QGIS for example or similar program for you to be able to see it properly. Another thing

102
00:10:44,160 --> 00:10:50,120
to note is that the pixels in raster imagery can be represented as arrays. So take this

103
00:10:50,120 --> 00:10:55,120
image here on the right. Say it's a beach scene. So we have forest, we have sand, and

104
00:10:55,120 --> 00:11:02,520
we have water. You can imagine that all of the water pixels are represented with similar

105
00:11:02,520 --> 00:11:08,760
values. All of the sand pixels have similar values to each other and then all of the forest

106
00:11:08,760 --> 00:11:16,680
pixels also have similar values. This is especially important to consider because to manipulate

107
00:11:16,680 --> 00:11:22,360
a raster image, we can manipulate it by manipulating the arrays that make up that image. And so

108
00:11:22,680 --> 00:11:27,760
we'll see this in action in a little bit when we use NumPy and Rasterio to kind of work

109
00:11:27,760 --> 00:11:38,400
with these images. All right. Let's talk about resolution. You might have heard this word,

110
00:11:38,400 --> 00:11:42,920
idea of resolution. It's a term that's used a lot and kind of thrown around when we're

111
00:11:42,920 --> 00:11:46,800
talking about satellite imagery, but there are actually several different types of resolution.

112
00:11:46,800 --> 00:11:51,320
So just want to break that down for you all. Let's take this image on the previous slide.

113
00:11:51,320 --> 00:11:57,080
So let's pretend we're looking at this. If we have spatial resolution, say that we're

114
00:11:57,080 --> 00:12:03,160
on this beach that we just saw in the last slide. If we're curious about what area on

115
00:12:03,160 --> 00:12:08,640
the ground is taken up by one pixel on that image, that would be spatial resolution. Spatial

116
00:12:08,640 --> 00:12:14,440
resolution is talking about the ground area per pixel. So say in that image, one pixel

117
00:12:14,440 --> 00:12:19,480
is a three meter by three meter square. The spatial resolution of that image is going

118
00:12:19,480 --> 00:12:25,000
to be a three meter spatial resolution. Then we have temporal resolution. This is talking

119
00:12:25,000 --> 00:12:32,160
about the frequency between image captures. So say we go to this beach, say we went to

120
00:12:32,160 --> 00:12:40,040
this beach in COVID 2020 and then we went to the beach last year, 2022, and then say

121
00:12:40,040 --> 00:12:45,400
we're planning a trip to that same beach next year, 2024. The temporal resolution, and we

122
00:12:45,400 --> 00:12:51,840
take images at each visit to the beach. The temporal resolution of these images is going

123
00:12:51,840 --> 00:12:57,240
to be two years, a two year temporal resolution because we take images every two years.

124
00:12:57,240 --> 00:13:01,760
When we have spectral resolution, this is talking about the number of spectral bands

125
00:13:01,760 --> 00:13:07,040
that are being measured. So say in that image, let's just pretend that we have a red band,

126
00:13:07,040 --> 00:13:11,600
a blue band, and a green band, just a simple visual image. Our spectral resolution would

127
00:13:11,600 --> 00:13:17,960
be three because we have three bands. And then finally, radiometric resolution. This is talking

128
00:13:17,960 --> 00:13:23,880
about bit depth of pixel values. Another way to say this is how much information, how much data

129
00:13:23,880 --> 00:13:29,640
is captured by each pixel. And this can be a little bit confusing to understand, but I think

130
00:13:29,640 --> 00:13:35,880
something that helps us thinking about this as color resolution. So the more data that a pixel

131
00:13:36,640 --> 00:13:45,360
holds, the higher the color, the better color you'll see. And I like this example. I can pull it up

132
00:13:45,360 --> 00:13:57,840
for you guys. If I can find my mouse. All right. So this is just on Wikipedia. So you can see,

133
00:13:57,880 --> 00:14:06,440
you'll see this. Yes. This image down here, this it's the same image of the leaf. This one at the

134
00:14:06,440 --> 00:14:14,240
bottom has a one bit resolution. It looks kind of gray. You almost can't tell it's a leaf because

135
00:14:14,240 --> 00:14:19,960
none of the reds or greens or purples are showing properly. But if you look at this higher resolution

136
00:14:19,960 --> 00:14:24,000
here, you can see all the colors. You can tell it's a leaf that has water drops on it, all this

137
00:14:24,000 --> 00:14:40,160
stuff. So that is kind of bit depth in action. Any questions on any of that before we move on?

138
00:14:40,160 --> 00:14:51,920
Great. Okay. So let's talk about some of the geospatial tools and libraries we are going to

139
00:14:51,920 --> 00:14:58,360
be using as we look more at this data. So we have some foundational software. We're really big,

140
00:14:58,360 --> 00:15:04,240
especially at Planet, about using open source tooling. So we have things like GDAL and Proj

141
00:15:04,240 --> 00:15:11,480
that are kind of the base level foundational software. And then today we're specifically

142
00:15:11,480 --> 00:15:17,960
going to be using a few libraries. Rasterio and NumPy which are used to read and write raster

143
00:15:17,960 --> 00:15:24,400
data and arrays. And then mapplotlib for plotting and then OpenCV as a computer vision library for

144
00:15:24,400 --> 00:15:32,120
some image processing. All right. So this, we promised that y'all this would be an interactive

145
00:15:32,120 --> 00:15:37,920
workshop. So here's where we get to the interactive piece of it. If you all could please go to this

146
00:15:37,920 --> 00:15:57,080
link. It's go.planet.com slash coastal erosion. I'm going to try to make this as fun as possible.

147
00:15:57,080 --> 00:16:06,160
I know it's the last day of tutorials. Post lunch food coma setting in probably. All right. So here's

148
00:16:06,160 --> 00:16:19,120
that link again. So when you get to this page, you should see something, oh, not like that. Avert your

149
00:16:19,120 --> 00:16:35,520
eyes. You should see something like this. Is everyone generally here? I can put that link back

150
00:16:35,520 --> 00:16:46,920
up if y'all need it. Good. Okay. Great. So we are going to run through some examples of working with

151
00:16:46,920 --> 00:16:55,720
imagery and some of the analysis steps that we will use and sort of put together for the full coastal

152
00:16:55,720 --> 00:17:00,720
erosion analysis that Kevin will lead us through later. So what you're looking at right now is a,

153
00:17:00,720 --> 00:17:07,200
it's our notebooks repo at planet. It has a bunch of code examples and things. We'll talk about this more

154
00:17:07,200 --> 00:17:15,520
generally later. But this is our coastal erosion folder. So for this tutorial, we're going to be going

155
00:17:15,520 --> 00:17:21,240
through this using Jupyter notebooks and specifically Google Colab. Who has never used Jupyter notebooks

156
00:17:21,240 --> 00:17:46,120
before? Awesome. We're all very familiar. Yes. Okay. Oh, yeah. Sure. Here's the link again. Yep.

157
00:17:46,120 --> 00:17:49,920
Okay. So since you're all familiar with Jupyter notebooks, we're going to be doing this in Google

158
00:17:49,920 --> 00:17:53,840
Colab. So this will make it so that you don't have to download any data. You don't have to worry about

159
00:17:53,840 --> 00:17:59,640
any of that. It's all just going to be there. So if y'all wouldn't mind going to this first notebook,

160
00:17:59,640 --> 00:18:05,880
one underscore rasterio underscore first look. And if you could open this in a separate tab because we

161
00:18:05,880 --> 00:18:16,560
will be coming back to this page later. And when you get there, it should look something like this.

162
00:18:16,560 --> 00:18:23,000
And then when you're here, you want to click on this blue button that says open in Colab. And that will

163
00:18:23,000 --> 00:18:35,920
open this notebook for you in a Colab instance. So you should be looking at something like this. Is everyone

164
00:18:35,920 --> 00:18:47,800
generally here? Feel free to flag me down at any point if you want a link again or anything like that.

165
00:18:47,800 --> 00:18:57,280
Okay. So in this first notebook, we are going to be looking at reading multispectral data with

166
00:18:57,280 --> 00:19:05,200
rasterio. Things just like grabbing the bands and sort of initially starting to work with it. So in

167
00:19:05,200 --> 00:19:10,480
working with Google Colab, just a quick note, if you would like to change any of this code here,

168
00:19:10,480 --> 00:19:15,320
maybe experiment with stuff on your own or you want to save the output that you get, nothing will

169
00:19:15,320 --> 00:19:21,880
automatically save. But if you want to save it, you can go to this file and then save a copy right

170
00:19:21,880 --> 00:19:29,360
there. So that's one way to save it. Another thing to note about working on this in Colab,

171
00:19:29,360 --> 00:19:33,920
every notebook we work with, we're going to have to grab the data. So to do that, you're going to

172
00:19:33,920 --> 00:19:39,760
have to run this first cell where it says option one, run Google Colab. So to run a cell, you'll

173
00:19:39,760 --> 00:19:44,880
notice if you hover over the cell, there's that play button looking thing. Just click on that.

174
00:19:44,880 --> 00:19:52,560
It will give you a warning saying notebook was not authorized by Google or authored by Google. You

175
00:19:52,560 --> 00:19:58,960
can run it anyway if you trust me. I know you all just met me, but it's fine. I'm not trying to put

176
00:19:58,960 --> 00:20:28,400
any malware on your computers or anything. Yeah. Oh, yeah, sure. Let's see. Is that better?

177
00:20:29,760 --> 00:20:36,000
Okay. And then the way to tell that a cell is finished running in Google Colab, I know it's

178
00:20:36,000 --> 00:20:40,560
kind of difficult to see, there's this green check mark right next to the play button. And if you see

179
00:20:40,560 --> 00:20:49,840
that, that means that cell has run. So we're all good. Okay. So first thing we're going to do is

180
00:20:49,840 --> 00:20:55,600
we're going to load our data set. So we're going to import our Rasterio package. And then we're

181
00:20:55,600 --> 00:21:04,320
going to point this image file variable to our image file. And then we're going to establish our

182
00:21:04,320 --> 00:21:10,560
open data object using Rasterio.open. And we're going to call that open image satellite data.

183
00:21:13,440 --> 00:21:19,680
So you can see here that that's the name of our open satellite data object. And then we can look

184
00:21:19,680 --> 00:21:27,280
at some basic information about this object. So we have the name of the data set. This looks like

185
00:21:27,280 --> 00:21:35,200
a random string of numbers. This is actually the date, the beginning part of this 2017-831

186
00:21:36,000 --> 00:21:41,360
is the date that this image we're working with was taken on. For context, we're going to be

187
00:21:41,360 --> 00:21:48,000
working with imagery from Hurricane Harvey in 2017 in Texas, in Houston. So this is real imagery

188
00:21:48,000 --> 00:21:54,160
that was used to aid recovery efforts and sort of help people on the ground at the time. And we're

189
00:21:54,160 --> 00:21:58,080
going to be using that imagery for this series of examples to kind of help guide us through.

190
00:22:00,480 --> 00:22:04,880
And then you can also see the number of bands in this data set. So here, set.count, we see we have

191
00:22:04,880 --> 00:22:12,160
three bands. And then we can look at the indexes of the bands. One thing to note here, if you're

192
00:22:12,160 --> 00:22:18,240
used to doing stuff in Python, Python indexes by zero. So if you have a list of objects, the first

193
00:22:19,920 --> 00:22:25,760
item in that list is going to be in the zeroth place. For bands, they are one indexing. So the

194
00:22:25,760 --> 00:22:30,320
first band is one, second band is two, and third band is three. Just something quirky to know about

195
00:22:30,320 --> 00:22:36,640
working with bands. And because we know the kind of imagery we're working with, in this case,

196
00:22:36,640 --> 00:22:41,760
a planet scope three band image, we know our band order. So we can kind of establish that,

197
00:22:41,760 --> 00:22:47,520
and then call our bands by name. So here, we're just assigning blue, green, and red to our bands.

198
00:22:51,120 --> 00:22:55,520
Then we can print the data type of our bands just to check they're stored as numpy arrays.

199
00:22:57,520 --> 00:23:02,160
And then using the blue band as an example, we can just look at the width and height of our

200
00:23:02,160 --> 00:23:09,040
image in pixels. So this particular image that we're working with is around 8.3

201
00:23:09,440 --> 00:23:14,160
thousand pixels wide and then almost 4,000 pixels high.

202
00:23:17,360 --> 00:23:21,120
Any questions about this first notebook? Just kind of bringing up the data in Rasterio?

203
00:23:24,480 --> 00:23:32,480
Great. All right. Moving right along. So now we're going to work with Rasterio

204
00:23:32,480 --> 00:23:37,280
in our image to extract bands and compose a scene. So we're going to take our different bands and

205
00:23:37,280 --> 00:23:43,760
then bring them together to kind of see in action how the bands come together to form an image.

206
00:23:46,080 --> 00:23:53,760
So now you'll want to go back to this page. If you didn't open it up in a different tab,

207
00:23:53,760 --> 00:23:56,720
I'll pull up the link again. Here's that link.

208
00:24:01,920 --> 00:24:05,680
So we're going to go back there. And now we're going to do the second notebook. So open up this

209
00:24:05,680 --> 00:24:13,360
to underscore Rasterio notebook in a separate tab and then click on that blue open in Colab

210
00:24:14,400 --> 00:24:16,240
button and you should be looking at this.

211
00:24:25,760 --> 00:24:32,480
All right. Everyone generally here? Okay. Great. So again, we're going to need to do this every

212
00:24:32,480 --> 00:24:38,880
time. So if you're running this in Colab, go ahead and run this first cell. That just grabs our data

213
00:24:38,880 --> 00:24:41,760
for us.

214
00:24:41,760 --> 00:24:45,040
Okay.

215
00:24:57,600 --> 00:24:59,040
Taking a while.

216
00:25:11,760 --> 00:25:24,240
All right. Great. So we've got our data. Now we can install our packages again. So we have

217
00:25:24,240 --> 00:25:30,480
our stereo again, but we're also going to be using NumPy this time and matplotlib.pyplot.

218
00:25:32,720 --> 00:25:35,760
So again, we want to grab our image. We're going to open it.

219
00:25:35,920 --> 00:25:42,160
And we have our open data set object. Now we're going to look at the image metadata. So we can do

220
00:25:42,160 --> 00:25:53,280
this by doing sat.crs. So we see here that it says this is to get the images coordinate reference

221
00:25:53,280 --> 00:26:01,760
system and we see the output is EPSG32615. This is not something that I know. This might be looking

222
00:26:01,760 --> 00:26:09,920
to you like some gibberish something. This corresponds to WGS84 world geodetic system

223
00:26:09,920 --> 00:26:18,560
84 UTM15 north. This I wouldn't know unless I had just looked it up before this. So it's not

224
00:26:18,560 --> 00:26:25,120
something that I have memorized. It's just this EPSG code corresponds to this projection.

225
00:26:25,120 --> 00:26:30,080
And because we know this projection, we know that the units, the projected units of this are in

226
00:26:30,080 --> 00:26:37,600
meters. So then because we know that, we can look at this minimum bounding box and these units are

227
00:26:37,600 --> 00:26:50,960
in meters. So this is the bounding box of our image in meters. We can also get the

228
00:26:50,960 --> 00:26:56,960
dimensions of the image also in projected units. So the dimensions of this image in meters are some

229
00:26:56,960 --> 00:27:07,920
25,000 ish meters by 11,700. We can also look at the dimensions of this image in pixels like we did

230
00:27:07,920 --> 00:27:13,520
in the previous notebook. So we see those numbers right here. And then because we know the dimensions

231
00:27:13,520 --> 00:27:20,720
of this image in meters and we also know the dimensions of this image in meters, we can also

232
00:27:20,720 --> 00:27:27,840
look at the dimensions in pixels. We can use this to figure out our spatial resolution. So if we divide our

233
00:27:29,280 --> 00:27:37,440
meter units by our pixel units for height and width, we see that we have a three meter resolution,

234
00:27:37,440 --> 00:27:43,680
three meter by three meter. Just a quick check, are the pixels square? Yes, they are. I don't know

235
00:27:43,680 --> 00:27:50,560
a case in which the pixels won't be square, but I guess good to see. So yes, they are indeed square.

236
00:27:50,720 --> 00:27:59,520
In this case. And then we can convert our pixel coordinates on our image to geographic coordinates

237
00:27:59,520 --> 00:28:06,480
on the globe. So we take the upper left pixel, the lower right pixel, this minus one is here because

238
00:28:06,480 --> 00:28:13,120
the rows and columns are zero indexing. And then we can transform them. And then here we have our

239
00:28:13,120 --> 00:28:23,680
UTM coordinates in meters. And then all of this information, or at least a lot of it, is captured

240
00:28:23,680 --> 00:28:33,520
here in this SATA.profile. So we can see the width and the height in pixels. We can see the band count.

241
00:28:33,520 --> 00:28:39,040
We can see the coordinate reference system, the transformation, all these things are right in here.

242
00:28:39,040 --> 00:28:46,400
All right. So let's figure out how we can compose a scene now that we know how to get to our bands.

243
00:28:47,520 --> 00:28:52,080
So again, we're just going to do a quick look. Yes, we have three bands, one, two, three.

244
00:28:52,800 --> 00:28:57,040
And again, because we know that we are looking at a three-band planet scope image, we know our band

245
00:28:57,040 --> 00:29:02,480
order. So that's what this is, just assigning the names here. And then to construct our visual image,

246
00:29:02,480 --> 00:29:07,920
all we do is we do numpy.dstack and we put all those images together, or all those bands together.

247
00:29:09,680 --> 00:29:14,960
So that is our visual image. And then we can view it.

248
00:29:24,080 --> 00:29:28,880
All right. Here is our image. Was everyone able to get here?

249
00:29:30,720 --> 00:29:34,400
If you didn't stack them like that, or if you stacked a couple, could you look at the individual

250
00:29:34,400 --> 00:29:35,840
bands? Would that be a strategy?

251
00:29:41,200 --> 00:29:44,320
If you switch the order, the colors would also come out differently.

252
00:29:44,960 --> 00:29:54,400
Yes, you could play around with it. One thing to note here, so this is the flood area. This

253
00:29:54,400 --> 00:30:00,880
brown stuff here, that's actually water. That's the sort of flooded area of Houston. Is anyone

254
00:30:00,880 --> 00:30:11,440
from Houston? No, okay. Just wondering. So it's important to note that this brown, muddy water

255
00:30:11,440 --> 00:30:18,720
is what we're going to be looking to identify. And then also note that we have these clouds here.

256
00:30:18,720 --> 00:30:25,040
These white specks are clouds. Clouds are basically the bane of people who work with imagery like us,

257
00:30:25,040 --> 00:30:33,040
like our existence. We hate clouds. Especially on top of snow. Yes. What's cloud? What is snow?

258
00:30:33,040 --> 00:30:39,280
What's water? We have no idea. So this is part of the reason that I bring this up, is because

259
00:30:40,320 --> 00:30:47,200
these clouds might be identified as water when we get into our NDWI calculations. So just something

260
00:30:47,200 --> 00:30:53,040
to keep in mind. Ideally, if you can get imagery without clouds, that would be perfect. I know

261
00:30:53,040 --> 00:30:58,960
that's not always possible. There are sometimes techniques you can use to remove clouds. I know

262
00:30:58,960 --> 00:31:04,240
Planet has a data product that's a usable data mask where it'll just mask over the areas that

263
00:31:04,240 --> 00:31:09,520
are clouds or not usable. So if you have that kind of thing available, that's also good to use.

264
00:31:12,480 --> 00:31:17,760
All right. Moving right along. Let's go back here and we're going to open up number three.

265
00:31:18,480 --> 00:31:22,320
Notebook number three, compute NDWI.

266
00:31:26,320 --> 00:31:40,320
And again, go ahead and run this first cell to get the data.

267
00:31:47,760 --> 00:31:59,200
So here we're going to talk about what NDWI is. We're going to calculate it for our image.

268
00:32:00,160 --> 00:32:06,880
And then we're going to visualize this data and then create a mask, a land mask and a water mask

269
00:32:06,880 --> 00:32:22,000
from this NDWI. Okay. So import packages, get our data. So here we're going to calculate NDWI.

270
00:32:23,440 --> 00:32:32,160
NDWI stands for Normalized Difference Water Index. And this index is related to plant water content

271
00:32:32,160 --> 00:32:38,320
and it helps identify areas of water on the ground. So to calculate the NDWI, you can take

272
00:32:38,320 --> 00:32:45,040
the green band, subtract the near infrared band and then divide that by the green band plus the

273
00:32:45,040 --> 00:32:54,720
near infrared band. So the first thing we're going to do here is we're going to allow division by zero.

274
00:32:54,720 --> 00:33:01,840
This is because our image might have sections of the image that are clipped or masked already or

275
00:33:02,080 --> 00:33:08,560
have values of zero. And when we do this division, the denominator can also be zero. And if that

276
00:33:08,560 --> 00:33:13,360
happens, we don't want our code to just completely stop working. So here we're just allowing division

277
00:33:13,360 --> 00:33:21,040
by zero. Then we can extract the bands we're going to need for the NDWI. So in this case,

278
00:33:21,040 --> 00:33:25,200
you'll notice we're using a four-band image instead of a three-band image.

279
00:33:25,200 --> 00:33:28,960
So we have our blue, green, red and the near infrared band.

280
00:33:32,080 --> 00:33:35,920
And then once we have these bands, we can go ahead and calculate our NDWI

281
00:33:35,920 --> 00:33:43,360
with that same calculation, green minus NIR plus over green plus NIR. So now this NDWI object

282
00:33:44,160 --> 00:33:50,480
will show us NDWI values that we can use for further analysis. So we can look at what this looks like.

283
00:33:50,480 --> 00:34:07,200
So here's our NDWI. We see that the darker blue areas are the areas that are identified as water

284
00:34:07,200 --> 00:34:15,440
and have the higher NDWI values. And the lower values, the lighter blue lower NDWI values are

285
00:34:15,440 --> 00:34:21,920
the areas that are maybe not classified as water. So generally, NDWI values range from negative one

286
00:34:21,920 --> 00:34:28,080
to positive one, anything around. There's different literature on this, of course, but generally 0.3

287
00:34:28,080 --> 00:34:38,640
and up will be NDWI values associated with being water. And then NDWI values lower than 0.3 are

288
00:34:38,640 --> 00:34:49,440
less likely to be associated with being water. So with this threshold, we could use 0.3, as I

289
00:34:49,440 --> 00:34:54,720
just mentioned, but because we know that we're working with murky water, it's flood water, so

290
00:34:54,720 --> 00:35:00,480
the boundary between water and land is not as clear as maybe like a coastline or a lake or something

291
00:35:00,480 --> 00:35:05,040
where it's more clearly defined. We're gonna relax our threshold a bit. So we're gonna say

292
00:35:05,040 --> 00:35:12,320
that actually I think I'm jumping ahead of myself. I think this is in the next notebook.

293
00:35:19,200 --> 00:35:24,400
All right, so here we're creating masks, but we will visualize these very soon.

294
00:35:26,400 --> 00:35:33,360
So let's go back here. And we're gonna go to number four, masks and filters.

295
00:35:35,040 --> 00:35:51,360
All right, so same thing here. Do all the usual things.

296
00:36:05,040 --> 00:36:09,360
Okay.

297
00:36:21,680 --> 00:36:25,360
All right, so the first part of this notebook is just a kind of repeat of what we just did. So

298
00:36:25,360 --> 00:36:30,880
we're gonna do the NDWI calc again, import our packages, get our imagery, allow division by zero,

299
00:36:31,680 --> 00:36:39,200
get our bands, NDWI calc, and generate a mask.

300
00:36:53,760 --> 00:37:00,240
So we can take a look at this here. This is showing according to our NDWI that we just calculated.

301
00:37:00,960 --> 00:37:07,680
Our water masks, so areas of water, those are the purple areas. And then down here, if you run this

302
00:37:07,680 --> 00:37:16,960
next code cell, you can see areas identified as land according to our threshold. So you'll notice

303
00:37:16,960 --> 00:37:23,040
it's pretty fragmented. We know according to our eyes when we saw the previous image, this area in

304
00:37:23,040 --> 00:37:29,200
the top right of the image, a lot more of that was probably water. For some reason, it's not identifying

305
00:37:29,200 --> 00:37:35,120
it that way, but we know that it is water. And then same with this land. There's a lot of gaps

306
00:37:35,120 --> 00:37:41,760
here, and we can probably tell that some of these gaps are land, but they're not being classified

307
00:37:41,760 --> 00:37:49,520
as being land currently. So to kind of help this, we are going to apply filters to our mask.

308
00:37:50,720 --> 00:37:57,040
So this is where that OpenCV library comes in. So we're going to be using morphological filters,

309
00:37:57,040 --> 00:38:06,480
using OpenCV to kind of help us improve this land versus water segmentation. So the first thing we're

310
00:38:06,480 --> 00:38:12,880
going to do, we're going to be doing two different types of operations, closing and an opening filter.

311
00:38:13,920 --> 00:38:20,480
These are both, these honestly, I am frequently confused by these because they just seem confusing,

312
00:38:20,480 --> 00:38:27,440
and you'll see why in a second. So the opening operation is basically removing false positives.

313
00:38:27,440 --> 00:38:34,320
So you're taking empty pixels outside of a mask, outside of the mask. And then the closing operation

314
00:38:34,320 --> 00:38:41,760
is removing false negatives. So that's for filled pixels inside of the mask. I find it a lot easier

315
00:38:41,760 --> 00:38:50,080
to look at this. So this is the OpenCV documentation. So this opening filter, so you're taking these white

316
00:38:50,080 --> 00:38:55,520
specks outside of the main image, you're getting rid of those. And then the closing, you're taking

317
00:38:55,520 --> 00:39:01,120
the sort of dark filled specks inside the image and getting rid of them. The reason this is so

318
00:39:01,120 --> 00:39:05,760
personally confusing for me is because I feel like the names should be switched. So if you are also

319
00:39:05,760 --> 00:39:11,360
confused, just think of them switched. That's what I do. If that's confusing you more, ignore what I just said.

320
00:39:11,360 --> 00:39:24,000
All right, so what this is doing is this is taking a kernel, like a box, with the size that we have defined.

321
00:39:24,000 --> 00:39:31,600
So these sizes, by the way, the 40 and the 15, those are kind of arbitrary. Ideally, if you're doing

322
00:39:31,600 --> 00:39:36,720
this for a project where you want to be a little more nuanced about how you approach this, you could

323
00:39:36,720 --> 00:39:42,480
do something like a grid search maybe where you try out all different values of opening and closing

324
00:39:44,000 --> 00:39:49,040
kernel sizes and then you can see what, say if you have a ground truth image that you're comparing

325
00:39:49,040 --> 00:39:55,760
against, what combination of sizes gives you the best sort of final outcome. This is just

326
00:39:56,720 --> 00:40:04,560
a bit arbitrary right now, so these numbers don't sort of hang on to them too tightly. They can change.

327
00:40:05,200 --> 00:40:10,960
But that kernel will go over the image and then depending on what we decided, it'll open and close

328
00:40:10,960 --> 00:40:16,800
those holes accordingly. So in this cell, we're applying the closing filter and then to that resulting image,

329
00:40:16,800 --> 00:40:23,120
we're applying the opening filter and that will give us our final filtered image.

330
00:40:25,280 --> 00:40:27,200
And then we can see this image.

331
00:40:27,200 --> 00:40:34,560
And here we go. So the dark purple areas are areas of water. You'll notice this looks a lot more filled in than the previous

332
00:40:34,560 --> 00:40:41,600
image that we saw before we applied these. Of course, you can definitely continue to refine these as you wish.

333
00:40:41,600 --> 00:40:48,560
You'll also notice here on the left side of the image, these specs are probably that those are the clouds.

334
00:40:48,560 --> 00:40:55,040
That's why we hate clouds. Clouds are good. So we're going to go ahead and do some refining.

335
00:40:55,040 --> 00:40:58,400
We hate clouds. Clouds are great, but not today.

336
00:41:00,240 --> 00:41:05,280
Yeah, so just know that these are probably showing up here because of those clouds, but the

337
00:41:05,920 --> 00:41:08,960
area identified on the right is going to be water.

338
00:41:11,360 --> 00:41:18,800
All right, almost there. Last notebook, number five, plotting a histogram.

339
00:41:18,960 --> 00:41:24,720
And this, we are just kind of doing this. This will make a lot more sense when Kevin leads us through the full

340
00:41:24,720 --> 00:41:30,560
coastal erosion example in a bit, but we're looking at the sort of distribution of the pixel values

341
00:41:31,520 --> 00:41:34,560
for each of the bands to kind of see where they fall.

342
00:41:48,800 --> 00:42:16,560
All right.

343
00:42:16,960 --> 00:42:22,720
All right, so here we're just going to see how we can plot our bands and their values

344
00:42:24,080 --> 00:42:29,280
in a histogram. So we're going to grab our image like we did before and get our three bands.

345
00:42:30,240 --> 00:42:35,200
We're using a four-band planet scope image here, so we're using blue, green, red, and IR,

346
00:42:35,200 --> 00:42:41,360
but for the purposes of this, we're just going to look at the BRG, blue, green, red for the histogram.

347
00:42:41,360 --> 00:42:46,800
And here we are plotting our histogram, so we're establishing title, labels,

348
00:42:48,720 --> 00:42:53,600
colors, bins, all these things.

349
00:42:58,320 --> 00:43:04,880
All right, so here we go. On the x-axis, we see the pixel values in our image for each of the three bands,

350
00:43:05,520 --> 00:43:11,120
and then on the y-axis, we see the number of pixels at those values.

351
00:43:12,240 --> 00:43:18,880
So you might notice here if we're looking at the blue band that the blue band pixel values,

352
00:43:20,080 --> 00:43:25,440
there are the most number of pixels in the blue band, which might make sense because we have a lot

353
00:43:25,440 --> 00:43:31,280
of water. This image is flooded and we have clouds, so that might make sense. And you'll see the values

354
00:43:31,280 --> 00:43:44,240
are around 8,000. Oh, sorry, wrong axis right here, 7,000. The pixel values where it peaks

355
00:43:44,240 --> 00:43:53,280
right here is around 7,000. So this, you might be wondering why this is or maybe curious about it.

356
00:43:54,560 --> 00:43:57,920
I went into, let's see if I can pull this up on this.

357
00:44:01,280 --> 00:44:19,440
There we go. So I went into QGIS because I was curious about this, and I noticed that this is just

358
00:44:19,440 --> 00:44:25,360
filtering for the blue band, so you can see the blue band. But clicking around at different values,

359
00:44:25,920 --> 00:44:34,160
this, the areas where it's blue here, the blue band tends to be around that 7,000 mark.

360
00:44:34,160 --> 00:44:40,880
So that might be one of the reasons why we see this peak happening at the 7,000 mark is because

361
00:44:40,880 --> 00:44:46,480
so much of this image is flooded and that flood water is around those pixel values. So this will

362
00:44:46,480 --> 00:44:50,960
make a lot more sense in context when Kevin talks about this in the context of the coastal erosion

363
00:44:50,960 --> 00:44:56,240
example. But I just wanted to introduce this concept of pixel values in histograms.

364
00:44:58,160 --> 00:45:00,400
Any questions? I know this was a lot.

365
00:45:03,840 --> 00:45:05,600
We'll have time for questions at the end too. Yes?

366
00:45:05,600 --> 00:45:11,440
I'm not totally sure what pixel values you're referring to.

367
00:45:20,560 --> 00:45:23,200
Yeah, that's like, so let's see if I go back here.

368
00:45:25,920 --> 00:45:32,400
This slide, so if you think about like each of the colors or each of the different things

369
00:45:32,400 --> 00:45:36,000
represented in imagery having different values just because of how they're represented

370
00:45:36,960 --> 00:45:38,720
in the array, that's what that's talking about.

371
00:45:47,200 --> 00:45:52,240
Oh yeah.

372
00:46:02,960 --> 00:46:04,640
Okay, something like that.

373
00:46:12,640 --> 00:46:20,880
Cool. So all of this, hope that you all have a better understanding of how to work with

374
00:46:20,880 --> 00:46:27,760
geospatial imagery using NumPy, REST stereo, all these things. So I think we'll take a few minute

375
00:46:27,760 --> 00:46:33,840
break, maybe like a 15 minute break now just so you all can stretch and all the things. Please

376
00:46:33,840 --> 00:46:38,400
feel free to get more of the swag if you haven't already. And then when we come back, Kevin will

377
00:46:38,400 --> 00:46:43,280
take us through an example looking at coastal erosion, kind of bringing all this stuff together

378
00:46:43,280 --> 00:46:53,840
in a full real world example. Oh, 220, so 235, 15 minutes.

379
00:46:54,240 --> 00:47:02,560
All right, everyone. Is everyone good to go? Cool. All right, thumbs up.

380
00:47:04,560 --> 00:47:08,560
All right, so we're going to move on to the next section, well, the last section,

381
00:47:09,200 --> 00:47:12,160
which is the hands-on example, well, everything's really been hands-on, but

382
00:47:12,960 --> 00:47:18,560
the next hands-on example, which is where we analyze coastal erosion in a specific area.

383
00:47:18,560 --> 00:47:26,640
Let me move this mouse out of the way. There we go. Cool. So Monza did a really great job of

384
00:47:26,640 --> 00:47:31,360
explaining everything earlier of how do you get your data in, how you analyze geospatial data,

385
00:47:32,480 --> 00:47:38,080
how you create image processing pipelines and how you create masks and all these things. Now we're

386
00:47:38,080 --> 00:47:42,400
going to put that to the test for real world. I mean, the other stuff was also real world, but

387
00:47:42,480 --> 00:47:48,960
more real world data. So this was inspired by a recent paper where they were looking at a severe

388
00:47:49,840 --> 00:47:57,680
example of coastal erosion in Bangladesh. And before I go any further, because the wi-fi is slow,

389
00:47:59,120 --> 00:48:03,280
I'm just going to have you download the data. So let's go back to the notebooks repo

390
00:48:03,440 --> 00:48:07,440
and then go to the coastal analysis Jupyter notebook at the very bottom.

391
00:48:13,680 --> 00:48:19,760
And then I'll go back and talk about a little bit. Then open up in Colab

392
00:48:24,240 --> 00:48:29,040
and then just run the first cell to install REST Serial and then also download the data.

393
00:48:29,920 --> 00:48:33,840
And then just run the first cell to install REST Serial and then also get the data.

394
00:48:36,640 --> 00:48:38,880
Because instead of this being like one image, this is

395
00:48:41,920 --> 00:48:47,120
great. Oh yeah, right. Okay. So some of you might see this screen. This is basically just saying

396
00:48:47,120 --> 00:48:52,960
you have a lot of stuff open. So just go ahead and close them. I'll just go to many other sessions.

397
00:48:52,960 --> 00:48:59,360
Yeah, cool. I think go ahead and download that data. So instead of this being one image,

398
00:49:00,480 --> 00:49:09,120
this is 12 or so images. So it's a lot of data. I'll go back to my slide quickly.

399
00:49:10,880 --> 00:49:15,920
So in this example, we're going to look at a coastal erosion example from this area in Bangladesh.

400
00:49:15,920 --> 00:49:21,200
This was inspired by this paper I put on the bottom. I'll just show you a quick little snippet

401
00:49:21,200 --> 00:49:28,240
from the paper. Here's the real world, wow, this is kind of small, the real world

402
00:49:29,520 --> 00:49:35,120
version of where we're going to look on the ground. They've been trying to put sea walls up to try and

403
00:49:35,120 --> 00:49:44,240
reduce coastal erosion, but for many reasons it hasn't worked. And the area of interest or the AOI

404
00:49:44,240 --> 00:49:49,200
I'll be referring to it, is just a small, small section of the actual area that they've been

405
00:49:49,200 --> 00:49:57,840
analyzing. This is the small section here, by the way. So our end goal is to get this filled out

406
00:49:57,840 --> 00:50:03,200
area. This is like the little chunk of land that's just been receded away into the ocean.

407
00:50:06,160 --> 00:50:12,080
Let's go check on our data. Okay, worked for me. Does everyone else have the data?

408
00:50:12,080 --> 00:50:14,080
Does everyone else have the data?

409
00:50:24,240 --> 00:50:29,440
Is anyone from here? Why is it so dry?

410
00:50:33,840 --> 00:50:41,360
Okay, okay. I don't know if anyone else feels this, but like my face is just shrinking.

411
00:50:41,360 --> 00:50:49,600
Yeah, I'm from like Vancouver, like Pacific Northwest, where it's just like tropical,

412
00:50:49,600 --> 00:50:58,560
but cold, cold tropics. Yeah, the opposite. Yeah, pardon me. Oh, that's great. Thank you.

413
00:51:01,200 --> 00:51:09,600
All right, cool. Well, let's get these packages in. Well, maybe I'll talk a bit about this stuff.

414
00:51:10,160 --> 00:51:14,320
Well, I sort of already did. I'll talk about it anyway. So we're going to do the same thing

415
00:51:14,320 --> 00:51:19,680
that Manzi did earlier in the five notebooks, but in one notebook. So we're going to get the

416
00:51:19,680 --> 00:51:23,360
data that we're going to look at. So we're going to look at both visual data, which is like the

417
00:51:23,360 --> 00:51:27,600
red, green, blue data that you can combine to one pretty picture, and the analytic data,

418
00:51:27,600 --> 00:51:33,920
which is like the data that you can analyze the bands and make like the normalized difference

419
00:51:33,920 --> 00:51:41,760
water index image out of. And then we're going to create that index image, so the NDWI image.

420
00:51:41,760 --> 00:51:46,400
And then from that, we're going to look at the pixels and how we can identify water and land,

421
00:51:46,400 --> 00:52:00,000
and then try and measure the recession over time. Okay, cool. And just from like a geographical

422
00:52:00,000 --> 00:52:06,960
perspective, this is like a Google Maps capture of where this area of interest or AOI is. So that's

423
00:52:06,960 --> 00:52:13,040
Bangladesh. That's the southern part of Bangladesh, and it's just a small little polygon. In reality,

424
00:52:13,040 --> 00:52:15,840
it's much, much larger where the recession is happening, as I mentioned earlier, but

425
00:52:16,480 --> 00:52:21,840
it would be so much data to do. And I don't know if our instances can handle it, to be honest.

426
00:52:25,120 --> 00:52:29,760
So we imported data. Didn't miss anything. Very good. Okay. So the first thing we're going to do

427
00:52:29,760 --> 00:52:34,320
is we're going to just like get pointers to where this data is, and then we're going to sort it by

428
00:52:34,320 --> 00:52:44,480
date. So we have data from 2017 up until 2023, so six years of data. As Monti mentioned earlier,

429
00:52:44,480 --> 00:52:48,720
you can do this all on your local computer. You can grab this data, do it on your local computer.

430
00:52:50,240 --> 00:52:59,040
The only thing that won't work is this part here, where I import the files. I have like a backslash

431
00:52:59,040 --> 00:53:03,120
or a forward slash. This works for Ubuntu and Linux and whatever,

432
00:53:04,320 --> 00:53:10,640
Macs, but it doesn't work for Windows. You'll have to reverse that slash and maybe more things. Yeah.

433
00:53:18,880 --> 00:53:20,640
Date. Yeah.

434
00:53:29,200 --> 00:53:37,760
That's a really good question. I named them 2017 underscore or year underscore visual or analytic.

435
00:53:38,560 --> 00:53:45,680
So we would sort them 2017 through 2023. Yeah. There's better ways of doing it using metadata

436
00:53:46,240 --> 00:53:55,360
to be more robust, but in this case, I just did the easy way. But that's a good question. I could

437
00:53:55,360 --> 00:54:02,720
really be wrong if I wasn't careful. Okay. So now we have two different lists of data.

438
00:54:03,440 --> 00:54:07,280
The analytic images are again, are the images that aren't the pretty images. They're the ones that

439
00:54:07,280 --> 00:54:11,200
we're going to be using for our science purposes. And then the visual images are just going to be

440
00:54:11,200 --> 00:54:18,720
the pretty images. So we're going to create a function. I'm assuming, has everyone here

441
00:54:18,720 --> 00:54:25,760
created functions in Python before? Yeah. Cool. So it's nothing new. So creating a function here,

442
00:54:25,760 --> 00:54:32,480
a pretty simple function. It's what we've done earlier for extracting the bands using Rasterio,

443
00:54:32,480 --> 00:54:35,280
but we're going to call it multiple times. So I'm just going to throw it into a function.

444
00:54:35,920 --> 00:54:42,560
And we're specifically going to be using green and near infrared as Manzi mentioned earlier.

445
00:54:42,560 --> 00:54:50,160
That's all we really care about for the NDWI. So I'm just going to run that to save that.

446
00:54:58,720 --> 00:55:06,160
Cool. Cool. Okay. So I'm going to run through the whole example using just the 2023 image.

447
00:55:06,160 --> 00:55:10,080
And then at the end, we'll kind of combine it all with the whole thing. So

448
00:55:13,280 --> 00:55:19,760
the only thing that doesn't index by one is, or sorry, everything indexes from zero to negative

449
00:55:19,760 --> 00:55:25,840
one for your last one. So negative one in this case is going to refer to the last image in our

450
00:55:26,400 --> 00:55:32,640
list of images, in this case, 2023. And we're going to extract the spectral bands for

451
00:55:33,520 --> 00:55:42,320
the 2023 image. So here we have green and NIR for near infrared. And then, well, let's just visualize

452
00:55:42,400 --> 00:55:48,240
it, right? So here's the green image, right? Not really much to see. A lot of green.

453
00:55:50,080 --> 00:55:54,320
This little part here is a sandy section, which comes up as really green. Kind of interesting.

454
00:55:54,320 --> 00:56:01,600
I'm not really sure why. Some of you might just say, no, why? Sand looks really good. No,

455
00:56:01,600 --> 00:56:08,160
I don't really know. Okay, cool. And then the next section is the, look at that, typo. I plot

456
00:56:08,160 --> 00:56:15,360
the red image. Nope. Near infrared. So we're going to plot the near infrared. And so does anyone here

457
00:56:15,360 --> 00:56:25,120
know why the near infrared looks really bright in land and not bright for water? So near infrared is

458
00:56:25,120 --> 00:56:30,480
a proxy for temperature in a lot of cases. So the water temperature is going to be much cooler than

459
00:56:30,480 --> 00:56:36,640
the land temperature. So the land looks really bright compared to the water. That's what's

460
00:56:36,640 --> 00:56:43,600
happening here. And then here we're going to create another function to compose a scene. So

461
00:56:44,720 --> 00:56:50,320
as we've done earlier with the visual imagery, we can just stack the blue, the green, and the red

462
00:56:50,320 --> 00:57:00,320
to create a visual or an array for a visual imagery or a visual image. Then let's go ahead

463
00:57:00,320 --> 00:57:10,640
and run that for the 2023 image. And boom. Here we go. This is what the visual image looks like for

464
00:57:10,640 --> 00:57:17,600
2023. This was taken in like April. This is April. This was taken recently.

465
00:57:22,640 --> 00:57:29,440
Cool. Yeah. I'll mention this here. There's a little thing here. I'm still not really sure what it is,

466
00:57:29,440 --> 00:57:37,200
but it appears like every year in the spring. And you'll see in the masks later, it kind of pops up

467
00:57:37,200 --> 00:57:44,560
as land. So I'm going to guess this is either like a really shallow part of water or murky or maybe

468
00:57:45,280 --> 00:57:52,720
a little island. I don't know. Doesn't matter. We're going to mask it out. So the next part we're

469
00:57:52,720 --> 00:58:01,040
going to compute our NDWI. So green minus red over the sum of them. And we're going to, like

470
00:58:01,040 --> 00:58:08,240
Monty said earlier, ignore zero. Kind of scary if you're in the math world, but let's just pretend

471
00:58:08,800 --> 00:58:14,960
it's okay. The main reason, actually, I'll just show you visually why we're doing that.

472
00:58:14,960 --> 00:58:22,000
These black parts here are zero. So when you divide by zero, this would explode and so would that.

473
00:58:22,000 --> 00:58:36,000
So we're just letting it still be zero. Okay. Let's compute the NDWI for 2023. Let's take a look at it.

474
00:58:37,520 --> 00:58:43,600
Cool. Okay. So you see that little island thing I was talking about? Yeah. We're going to do that

475
00:58:44,240 --> 00:58:49,360
Yeah. We're just going to pretend that's water. So we're going to mask that out later. But in general,

476
00:58:49,360 --> 00:58:55,360
we have ocean, land. This is not really important, but a little river in here that

477
00:58:56,160 --> 00:59:02,320
kind of messes with our stuff later. So sorry about that. And as we mentioned earlier, the zero

478
00:59:02,320 --> 00:59:10,240
point is what we're going to be taking for what is and isn't water. Or maybe I do 0.3. Oh, I do

479
00:59:10,880 --> 00:59:17,760
zero. It'll be zero. So basically anything less than zero, we're going to say is land. Anything more, water.

480
00:59:21,680 --> 00:59:29,120
Okay. So another function, let's define how to find water and land. So it's going to take in the NDWI

481
00:59:29,120 --> 00:59:36,800
image or array. And then it's going to throw out two different masks, the water mask and the land

482
00:59:36,800 --> 00:59:44,640
mask. Just as I mentioned earlier, if the NDWI pixel is more than zero, water. If it's less,

483
00:59:47,200 --> 00:59:51,040
land. And do I say equal to? Yeah. So if it's more than or equal to, we'll just say it's water.

484
00:59:51,040 --> 01:00:17,520
Okay. So what we're doing here is we're creating images that will say if the value is one, it's equal to,

485
01:00:17,520 --> 01:00:22,720
let's just say the water mask. If the value is one, the pixel is associated with water. If it's zero,

486
01:00:23,360 --> 01:00:29,360
it's associated with not water. And the same goes for the land mask. So if it's one, it's land, not one,

487
01:00:30,080 --> 01:00:39,280
it's not land. The word mask is kind of a funny word, but it really just means like

488
01:00:40,320 --> 01:00:44,000
ones are the things that you're associating with and zero or things are not.

489
01:00:47,520 --> 01:00:52,800
Here we're just going to compute them. Here's what the NumPy array looks like for, in this case,

490
01:00:52,800 --> 01:01:02,880
a land mask. I'll just scroll up quickly to the NDWI image. You can see there's water and then

491
01:01:02,880 --> 01:01:12,000
there's land. So you expect there to be ones down here and not ones here. And that's what we got.

492
01:01:12,000 --> 01:01:18,400
And I will correct myself. Earlier I said zeros and ones. In this case, it'll be ones and then Nams.

493
01:01:21,040 --> 01:01:26,400
I did do zeros in a previous iteration of this notebook, but it kind of messed with some

494
01:01:26,400 --> 01:01:34,560
other things later. So I said it was Nan. And then let's just visualize what these water and land

495
01:01:34,560 --> 01:01:44,560
masks look like. So water mask with that pesky island in the way. And land mask,

496
01:01:45,680 --> 01:01:51,760
it all kind of adds up, right? You have that little river in here. Does this make sense, everyone?

497
01:01:51,760 --> 01:01:55,760
Yeah?

498
01:01:55,920 --> 01:01:57,920
Shouldn't the water and land mask be exact negatives?

499
01:01:57,920 --> 01:02:03,920
I don't think they would be based on the mask because they give up.

500
01:02:03,920 --> 01:02:09,920
Uh-huh. Yeah. Do they not look like exact negatives?

501
01:02:09,920 --> 01:02:11,920
Well, like, so one has an island and one doesn't.

502
01:02:11,920 --> 01:02:13,920
Oh, oh.

503
01:02:13,920 --> 01:02:15,920
They're exact opposite.

504
01:02:15,920 --> 01:02:21,920
Gotcha. Well, let me take a look. Why don't they look like that?

505
01:02:25,920 --> 01:02:27,920
This is the beauty of live programming.

506
01:02:43,920 --> 01:02:47,920
Ha-ha. Yes. Thank you. That's why.

507
01:02:47,920 --> 01:02:49,920
So wouldn't that still fully encompass all the values?

508
01:02:49,920 --> 01:02:51,920
Oh.

509
01:02:52,080 --> 01:02:58,080
You're right. And then you might expect there to be a river over here.

510
01:02:58,080 --> 01:03:00,080
And I'm just confused now.

511
01:03:00,080 --> 01:03:04,080
Um, yeah. Should we change it?

512
01:03:04,080 --> 01:03:06,080
You guys up for it?

513
01:03:06,080 --> 01:03:12,080
Let's just say equal. I don't know. We'll see.

514
01:03:12,080 --> 01:03:16,080
Yeah. Of course.

515
01:03:16,080 --> 01:03:18,080
This is my second time put coding.

516
01:03:18,080 --> 01:03:20,080
Okay. Let's see.

517
01:03:20,240 --> 01:03:24,240
Um, here.

518
01:03:24,240 --> 01:03:28,240
No.

519
01:03:28,240 --> 01:03:36,240
Well, let's just pretend like you didn't bring up that really good point.

520
01:03:36,240 --> 01:03:38,240
And I'll.

521
01:03:38,240 --> 01:03:46,240
Yeah. Uh-huh.

522
01:03:46,240 --> 01:03:48,240
Yeah.

523
01:03:48,400 --> 01:03:50,400
Yeah. It's a good point.

524
01:03:50,400 --> 01:03:52,400
But, um.

525
01:03:52,400 --> 01:03:54,400
But.

526
01:03:54,400 --> 01:03:56,400
Like, um.

527
01:03:56,400 --> 01:03:58,400
I fear your name.

528
01:03:58,400 --> 01:04:00,400
Oliver mentioned.

529
01:04:00,400 --> 01:04:02,400
They should be the exact opposite because.

530
01:04:02,400 --> 01:04:06,400
One's just exactly greater than or equal to the threshold.

531
01:04:06,400 --> 01:04:08,400
And then the other one is exactly less than.

532
01:04:08,400 --> 01:04:10,400
So they should be just negatives.

533
01:04:10,400 --> 01:04:12,400
And now I don't know why.

534
01:04:12,560 --> 01:04:14,560
Well.

535
01:04:14,560 --> 01:04:18,560
I mean, this, this looks like pretty distinct from this.

536
01:04:18,560 --> 01:04:20,560
So I don't know.

537
01:04:20,560 --> 01:04:22,560
Should we just change it for fun?

538
01:04:22,560 --> 01:04:24,560
Let's just say 0.3.

539
01:04:32,560 --> 01:04:34,560
Yeah. I mean.

540
01:04:34,560 --> 01:04:36,560
The thing is.

541
01:04:36,560 --> 01:04:38,560
Again, they're not exactly the same.

542
01:04:38,560 --> 01:04:40,560
They're not exactly the same.

543
01:04:40,720 --> 01:04:42,720
The thing is.

544
01:04:42,720 --> 01:04:44,720
Again, they're not exact opposites.

545
01:04:44,720 --> 01:04:46,720
So.

546
01:04:46,720 --> 01:04:48,720
Let's just ignore that.

547
01:04:48,720 --> 01:04:50,720
No, it's a really good question.

548
01:04:50,720 --> 01:04:52,720
I don't know.

549
01:04:52,720 --> 01:04:54,720
Hey, do you know what you can do?

550
01:04:54,720 --> 01:04:56,720
Do you want to file a little GitHub issue?

551
01:04:56,720 --> 01:04:58,720
And then we can figure that out together.

552
01:04:58,720 --> 01:05:00,720
Yeah.

553
01:05:00,720 --> 01:05:02,720
Yeah.

554
01:05:02,720 --> 01:05:04,720
Good question.

555
01:05:04,720 --> 01:05:06,720
I don't know.

556
01:05:06,720 --> 01:05:08,720
Does anyone else know?

557
01:05:08,880 --> 01:05:10,880
Pretend like it's OK.

558
01:05:10,880 --> 01:05:12,880
Yeah.

559
01:05:12,880 --> 01:05:14,880
Yeah.

560
01:05:14,880 --> 01:05:18,880
It's probably a map upload issue.

561
01:05:18,880 --> 01:05:20,880
In fact, you should just file your ticket there.

562
01:05:24,880 --> 01:05:26,880
OK. Yeah. I don't know.

563
01:05:26,880 --> 01:05:28,880
But it doesn't really matter because we'll just mask it away.

564
01:05:28,880 --> 01:05:30,880
But it's a really good question.

565
01:05:30,880 --> 01:05:32,880
Now I'm really bugged by it.

566
01:05:32,880 --> 01:05:34,880
OK. So we have our land and water masks.

567
01:05:34,880 --> 01:05:36,880
Kind of.

568
01:05:37,040 --> 01:05:39,040
And like you mentioned, there's this little island.

569
01:05:39,040 --> 01:05:41,040
There's a little river.

570
01:05:41,040 --> 01:05:45,040
And we want to measure the recession over time.

571
01:05:45,040 --> 01:05:47,040
And we don't want little artifacts like that getting in our way.

572
01:05:47,040 --> 01:05:49,040
So we're just going to mask away these things.

573
01:05:49,040 --> 01:05:51,040
We're going to mask away this little island.

574
01:05:51,040 --> 01:05:53,040
We're going to mask away this little river.

575
01:05:53,040 --> 01:05:55,040
And throughout the years, there's different things that pop up too.

576
01:05:55,040 --> 01:05:57,040
There's only one year's worth of data.

577
01:05:57,040 --> 01:05:59,040
And so you can might imagine we're going to do some opening and closing filters.

578
01:05:59,040 --> 01:06:01,040
Like we've got this little river.

579
01:06:01,040 --> 01:06:03,040
And we're going to do this little river.

580
01:06:03,040 --> 01:06:05,040
And we're going to do this little river.

581
01:06:05,200 --> 01:06:07,200
And we're going to do some opening and closing filters like we did earlier.

582
01:06:07,200 --> 01:06:09,200
If you take a look at this open CV thing, right?

583
01:06:09,200 --> 01:06:11,200
So you can imagine this is like, we'll see.

584
01:06:11,200 --> 01:06:13,200
Does Monty have the zoom thing?

585
01:06:13,200 --> 01:06:15,200
So this could be like the little island.

586
01:06:15,200 --> 01:06:17,200
And we're going to open it.

587
01:06:17,200 --> 01:06:19,200
And this is like the little river.

588
01:06:19,200 --> 01:06:21,200
And we're going to close it.

589
01:06:21,200 --> 01:06:23,200
Oops.

590
01:06:23,200 --> 01:06:25,200
There we go.

591
01:06:25,200 --> 01:06:27,200
So we're going to do this little river.

592
01:06:27,200 --> 01:06:29,200
And we're going to close it.

593
01:06:29,200 --> 01:06:31,200
Oops.

594
01:06:31,200 --> 01:06:33,200
There we go.

595
01:06:33,360 --> 01:06:35,360
There we go.

596
01:06:35,360 --> 01:06:37,360
So our function looks pretty much like the one earlier.

597
01:06:37,360 --> 01:06:39,360
So we have a closing element.

598
01:06:39,360 --> 01:06:41,360
A closing kernel.

599
01:06:41,360 --> 01:06:43,360
And then a mask.

600
01:06:43,360 --> 01:06:45,360
This is kind of a lot to just like take in.

601
01:06:45,360 --> 01:06:47,360
But it's exactly what we did in the fourth notebook.

602
01:06:47,360 --> 01:06:49,360
Just like parameterized instead of with numbers in it.

603
01:06:49,360 --> 01:06:51,360
So we have a closing mask.

604
01:06:51,360 --> 01:06:53,360
An opening mask.

605
01:06:53,360 --> 01:06:55,360
We combine them.

606
01:06:55,360 --> 01:06:57,360
And we have mask closed and opened.

607
01:06:57,360 --> 01:06:59,360
And then we have a closing mask.

608
01:06:59,360 --> 01:07:01,360
And then we have a closing mask.

609
01:07:01,520 --> 01:07:03,520
And then mask closed and opened.

610
01:07:09,520 --> 01:07:11,520
And then let's do this with some real numbers.

611
01:07:11,520 --> 01:07:17,520
So earlier we were talking about how like these numbers are kind of pulled out of thin air.

612
01:07:17,520 --> 01:07:21,520
And they kind of are because I just want them to work for this example.

613
01:07:21,520 --> 01:07:27,520
But you can also think about it as like each pixel is about 3 meters.

614
01:07:27,520 --> 01:07:29,520
In this case they're actually 3.7 meters per pixel.

615
01:07:29,680 --> 01:07:31,680
It all depends on the data processing pipeline.

616
01:07:31,680 --> 01:07:33,680
And you can find this out in the metadata.

617
01:07:33,680 --> 01:07:35,680
But let's just say it's 3.7 meters per pixel.

618
01:07:37,680 --> 01:07:41,680
So in this case our closing element will have like 29 pixels.

619
01:07:41,680 --> 01:07:45,680
Which is, let's see, what's 29 times 3.7.

620
01:07:49,680 --> 01:07:51,680
So like about 690 meters.

621
01:07:51,680 --> 01:07:53,680
So you can like picture it that way.

622
01:07:53,680 --> 01:07:57,680
So you can say like this item is about 3.7 meters per pixel.

623
01:07:57,840 --> 01:08:01,840
So you can say like this island is about this big by this big in meters.

624
01:08:01,840 --> 01:08:03,840
That's like how much you're going to want to close.

625
01:08:07,840 --> 01:08:09,840
So you can run that there.

626
01:08:11,840 --> 01:08:13,840
And then let's run it for the year.

627
01:08:13,840 --> 01:08:15,840
Let's see what it looks like.

628
01:08:15,840 --> 01:08:17,840
So it got rid of that island.

629
01:08:19,840 --> 01:08:21,840
And it got rid of the river.

630
01:08:21,840 --> 01:08:23,840
Look at that.

631
01:08:23,840 --> 01:08:25,840
So now we have distinct masks.

632
01:08:26,000 --> 01:08:28,000
This one's land.

633
01:08:28,000 --> 01:08:30,000
This is where water is.

634
01:08:30,000 --> 01:08:32,000
We know where the two lie.

635
01:08:32,000 --> 01:08:34,000
And we can measure now how they're going to change over time.

636
01:08:36,000 --> 01:08:38,000
So let's just do this for each year.

637
01:08:38,000 --> 01:08:40,000
So 2023 through 2021.

638
01:08:42,000 --> 01:08:44,000
You'll see this plus one because we want to include the year 2021.

639
01:08:46,000 --> 01:08:48,000
So basically what we're doing here is we're going to extract the spectral bands.

640
01:08:48,000 --> 01:08:50,000
We're going to get a visual image.

641
01:08:50,000 --> 01:08:52,000
We're not actually using this visual image.

642
01:08:52,000 --> 01:08:54,000
But this is here in case you want to visualize what's happening over time.

643
01:08:56,000 --> 01:08:58,000
You can just do a quick plot of that image for each year.

644
01:09:00,000 --> 01:09:02,000
Creating water and land masks.

645
01:09:02,000 --> 01:09:04,000
We're going to filter them.

646
01:09:04,000 --> 01:09:06,000
And then we're going to add them to a list.

647
01:09:08,000 --> 01:09:10,000
That's all running for me.

648
01:09:10,000 --> 01:09:12,000
Did that run for everyone?

649
01:09:12,000 --> 01:09:14,000
It's going to take us up to water.

650
01:09:22,000 --> 01:09:24,000
Okay.

651
01:09:24,160 --> 01:09:26,160
So now let's see what this looks like over time.

652
01:09:28,160 --> 01:09:34,160
So we're going to measure how the land has changed over the time period, over the time frame.

653
01:09:38,160 --> 01:09:40,160
And in this case, we can actually report out in physical units.

654
01:09:42,160 --> 01:09:44,160
So we know, like I mentioned earlier, the resolution is 3.7 meters per pixel.

655
01:09:48,160 --> 01:09:50,160
Hard code to this. Again, you can take this out of the metadata like Manci showed earlier.

656
01:09:50,320 --> 01:09:52,320
But kind of lazy.

657
01:09:56,320 --> 01:09:58,320
So the total land lost over this time is 13 square kilometers.

658
01:10:00,320 --> 01:10:02,320
That's massive.

659
01:10:02,320 --> 01:10:04,320
Over the past seven years.

660
01:10:06,320 --> 01:10:08,320
Well, it's kind of hard to visualize.

661
01:10:08,320 --> 01:10:10,320
So let's just go ahead and do that ourselves.

662
01:10:12,320 --> 01:10:14,320
So this is a plot of the land lost over seven years.

663
01:10:14,480 --> 01:10:16,480
So this is land lost over seven years.

664
01:10:18,480 --> 01:10:20,480
As it kind of says, yeah, cumulative land loss.

665
01:10:22,480 --> 01:10:24,480
So let's just go back up here to take a look.

666
01:10:26,480 --> 01:10:28,480
So here's our...

667
01:10:28,480 --> 01:10:30,480
I'll just go all the way back up to the real image.

668
01:10:30,480 --> 01:10:32,480
I'll just do this one.

669
01:10:32,480 --> 01:10:34,480
So this is the NDWI.

670
01:10:34,480 --> 01:10:36,480
So this is where the water was, the land was.

671
01:10:38,480 --> 01:10:40,480
And scroll all the way down here.

672
01:10:40,640 --> 01:10:42,640
And then this yellow stuff here is the total land mass that was lost in those seven years.

673
01:10:52,640 --> 01:10:54,640
Okay, cool. So let's continue.

674
01:10:56,640 --> 01:10:58,640
So I'm going to throw time into an array from 2017 to 2023.

675
01:11:00,640 --> 01:11:02,640
I'm going to throw in the land masks.

676
01:11:06,640 --> 01:11:08,640
And the land mass loss.

677
01:11:08,800 --> 01:11:10,800
And then we can plot that over time.

678
01:11:10,800 --> 01:11:12,800
We can see just how much land was lost over time.

679
01:11:12,800 --> 01:11:14,800
Just in a plot like this is kind of helpful.

680
01:11:16,800 --> 01:11:18,800
So you can see in the first little bit, it was like accelerating.

681
01:11:18,800 --> 01:11:20,800
Like it's incredibly fast land loss.

682
01:11:22,800 --> 01:11:24,800
And over the last little bit, maybe it's slowing down.

683
01:11:24,800 --> 01:11:26,800
Let's take a look.

684
01:11:26,800 --> 01:11:28,800
So we can measure that through just simple like first year physics kind of stuff.

685
01:11:28,800 --> 01:11:30,800
Math.

686
01:11:30,800 --> 01:11:32,800
Velocity.

687
01:11:32,800 --> 01:11:34,800
We can do math.

688
01:11:34,800 --> 01:11:36,800
So let's just go ahead and do that.

689
01:11:36,960 --> 01:11:38,960
Velocity.

690
01:11:38,960 --> 01:11:40,960
We can do math.

691
01:11:40,960 --> 01:11:42,960
Anyway.

692
01:11:42,960 --> 01:11:44,960
So, someone's tired.

693
01:11:44,960 --> 01:11:46,960
Yeah, cool.

694
01:11:46,960 --> 01:11:48,960
This is my first session.

695
01:11:48,960 --> 01:11:50,960
Like I shouldn't be tired.

696
01:11:50,960 --> 01:11:52,960
Okay.

697
01:11:52,960 --> 01:11:54,960
So let's measure the velocity.

698
01:11:54,960 --> 01:11:56,960
So that's just, yeah.

699
01:11:56,960 --> 01:11:58,960
Total land mass loss over time.

700
01:11:58,960 --> 01:12:00,960
So this is like the speed of how fast.

701
01:12:00,960 --> 01:12:02,960
Speed of how fast.

702
01:12:02,960 --> 01:12:04,960
This is how fast the land has been receding over time.

703
01:12:06,960 --> 01:12:10,960
So you can see, like we mentioned earlier, like it's speeding up, speeding up, speeding up.

704
01:12:10,960 --> 01:12:14,960
Then over the last year, it's kind of slowed down.

705
01:12:14,960 --> 01:12:16,960
Which is a good thing.

706
01:12:18,960 --> 01:12:20,960
But not such a good thing for the first six years.

707
01:12:20,960 --> 01:12:22,960
And then we can do the same thing for acceleration.

708
01:12:22,960 --> 01:12:24,960
So it's just the derivative of velocity.

709
01:12:24,960 --> 01:12:28,960
And then you can see over the first six years, it was accelerating.

710
01:12:28,960 --> 01:12:30,960
Like it's getting really bad.

711
01:12:30,960 --> 01:12:32,960
And then the past year, it's getting better.

712
01:12:32,960 --> 01:12:34,960
It's like decelerating.

713
01:12:35,120 --> 01:12:37,120
Or accelerating negatively.

714
01:12:37,120 --> 01:12:39,120
Which is good.

715
01:12:39,120 --> 01:12:41,120
But let's just like visualize this a little bit easier.

716
01:12:41,120 --> 01:12:43,120
Easier.

717
01:12:43,120 --> 01:12:45,120
Easier.

718
01:12:45,120 --> 01:12:47,120
A little bit easier.

719
01:12:47,120 --> 01:12:49,120
Hi.

720
01:12:49,120 --> 01:12:51,120
Help me.

721
01:12:51,120 --> 01:12:53,120
I have a question about the change in the last year.

722
01:12:53,120 --> 01:12:57,120
Does that mean that it's getting much bad?

723
01:12:57,120 --> 01:12:59,120
Is it still getting bad?

724
01:12:59,120 --> 01:13:01,120
The flow of the water?

725
01:13:01,280 --> 01:13:03,280
Is it still getting bad?

726
01:13:03,280 --> 01:13:05,280
Is it still getting bad?

727
01:13:05,280 --> 01:13:07,280
The flow is lower?

728
01:13:07,280 --> 01:13:09,280
Exactly.

729
01:13:09,280 --> 01:13:11,280
It's not getting good.

730
01:13:11,280 --> 01:13:13,280
But it's getting less bad.

731
01:13:13,280 --> 01:13:21,280
So like if the velocity was zero, then there would be no landmass loss between 2022 and 2023.

732
01:13:21,280 --> 01:13:25,280
But the velocity is still above zero.

733
01:13:25,280 --> 01:13:29,280
So that means there's still landmass loss between the two years.

734
01:13:29,440 --> 01:13:31,440
But it's slowing down compared to the first year.

735
01:13:31,440 --> 01:13:33,440
Which is a good thing.

736
01:13:33,440 --> 01:13:39,440
The reason why I asked is because for a moment I thought it had to be better.

737
01:13:39,440 --> 01:13:41,440
Oh, that would be really good.

738
01:13:41,440 --> 01:13:45,440
The place where I threw up, it will spread down.

739
01:13:45,440 --> 01:13:47,440
The bees are watered.

740
01:13:47,440 --> 01:13:49,440
And it jumps the sand on the bees.

741
01:13:49,440 --> 01:13:51,440
It will spread the bees to the floor.

742
01:13:51,440 --> 01:13:53,440
Cool.

743
01:13:53,440 --> 01:13:55,440
Is it cool?

744
01:13:55,440 --> 01:13:57,440
Is that good?

745
01:13:57,600 --> 01:13:59,600
I don't know.

746
01:13:59,600 --> 01:14:01,600
I mean it saves the floor.

747
01:14:01,600 --> 01:14:03,600
That's what you're looking for.

748
01:14:03,600 --> 01:14:05,600
I guess that's one way of doing it.

749
01:14:05,600 --> 01:14:11,600
I know in this region specifically they were creating sea walls.

750
01:14:11,600 --> 01:14:13,600
I don't know if you guys are familiar with sea walls.

751
01:14:13,600 --> 01:14:15,600
But basically they're like walls put in the sea.

752
01:14:15,600 --> 01:14:17,600
That's exactly what it sounds like.

753
01:14:17,600 --> 01:14:19,600
It's a good name.

754
01:14:19,600 --> 01:14:21,600
And it helps slow down coastal erosion.

755
01:14:21,600 --> 01:14:25,600
But not so much in this case.

756
01:14:25,760 --> 01:14:29,760
What's the difference for the bees and the water bees as a result of the

757
01:14:29,760 --> 01:14:35,760
local mining sector wanting to handle the coastal erosion?

758
01:14:35,760 --> 01:14:39,760
Either the bees are not interested in the break or what?

759
01:14:39,760 --> 01:14:43,760
Yeah, well I'm not sure if it's taking a break.

760
01:14:43,760 --> 01:14:45,760
But it's a really good question.

761
01:14:45,760 --> 01:14:47,760
I'm not really sure why it's slowing down.

762
01:14:47,760 --> 01:14:49,760
I haven't taken too much, I haven't looked into it.

763
01:14:49,760 --> 01:14:51,760
This paper was actually from 2020.

764
01:14:51,920 --> 01:14:57,920
So all the analysis after is just kind of like we know that it's happening.

765
01:14:57,920 --> 01:14:59,920
We're just not really sure why.

766
01:14:59,920 --> 01:15:03,920
In fact this area of interest like I mentioned earlier is a really small

767
01:15:03,920 --> 01:15:07,920
section of the land that is being lost.

768
01:15:07,920 --> 01:15:09,920
Let me take a pose back up.

769
01:15:09,920 --> 01:15:17,920
So like this little polygon here is fairly small compared to this entire

770
01:15:17,920 --> 01:15:19,920
coastline here.

771
01:15:20,080 --> 01:15:26,080
This section here is just one tiny chunk of it.

772
01:15:26,080 --> 01:15:30,080
And in fact it might be accelerating.

773
01:15:30,080 --> 01:15:32,080
It might be actually getting a lot worse over the entire coastline.

774
01:15:32,080 --> 01:15:34,080
I don't really know.

775
01:15:34,080 --> 01:15:36,080
It's just a small chunk of land.

776
01:15:36,080 --> 01:15:42,080
You mentioned some amount of coastal erosion is expected.

777
01:15:42,080 --> 01:15:46,080
Is there a way to compare this philosophy to what that kind of expected

778
01:15:46,080 --> 01:15:48,080
philosophy or measure the given impact?

779
01:15:48,240 --> 01:15:50,240
That's a really good question.

780
01:15:50,240 --> 01:15:54,240
I don't know what is expected in this case.

781
01:15:54,240 --> 01:16:00,240
But if you do compare to other beachy regions, I was trying to find an

782
01:16:00,240 --> 01:16:04,240
example in the U.S. for instance because this kind of hits home for people.

783
01:16:04,240 --> 01:16:10,240
And sections of coasts that I can find that had data for like 10 years were

784
01:16:10,240 --> 01:16:12,240
nowhere near this bad.

785
01:16:12,400 --> 01:16:18,400
And those sections were like non-human contribute.

786
01:16:18,400 --> 01:16:22,400
Those are by Earth, Mother Nature.

787
01:16:22,400 --> 01:16:24,400
And it's just so much more dramatic.

788
01:16:24,400 --> 01:16:28,400
But I don't know what the actual answer is for what we would expect over time.

789
01:16:28,400 --> 01:16:30,400
That's a good question.

790
01:16:30,400 --> 01:16:32,400
Yeah.

791
01:16:32,400 --> 01:16:34,560
Yeah.

792
01:17:02,560 --> 01:17:04,560
How can we do these pairs?

793
01:17:04,560 --> 01:17:08,560
How can we do the FTOs?

794
01:17:08,560 --> 01:17:10,560
Right.

795
01:17:10,560 --> 01:17:12,560
Okay.

796
01:17:12,560 --> 01:17:14,560
That's a really complicated question.

797
01:17:14,560 --> 01:17:18,560
And I tried to do this by...

798
01:17:18,560 --> 01:17:20,560
Okay.

799
01:17:20,560 --> 01:17:22,560
So for those who didn't hear.

800
01:17:22,560 --> 01:17:24,560
Maybe also let me know if this isn't what you're saying.

801
01:17:24,560 --> 01:17:30,560
Are you asking if we're not accounting for the elevation of the water?

802
01:17:30,720 --> 01:17:32,720
Right.

803
01:17:32,720 --> 01:17:34,720
So sorry, of the land?

804
01:17:34,720 --> 01:17:36,720
Of the land.

805
01:17:36,720 --> 01:17:38,720
Oh.

806
01:17:38,720 --> 01:17:40,720
Oh, I see.

807
01:17:40,720 --> 01:17:42,720
I didn't account for that.

808
01:17:42,720 --> 01:17:44,720
But this section is a very...

809
01:17:44,720 --> 01:17:46,720
Well, again, I'm cherry picking.

810
01:17:46,720 --> 01:17:48,720
But this section is a very flat section.

811
01:17:48,720 --> 01:17:50,720
The way you can measure height is not through our satellites.

812
01:17:50,720 --> 01:17:54,720
You need something like LIDAR which can tell you the height of the land.

813
01:17:54,720 --> 01:17:56,720
We don't have that.

814
01:17:56,720 --> 01:17:58,720
I don't even have access to that data.

815
01:17:58,880 --> 01:18:02,880
I just know from the paper that this is a really flat section of land.

816
01:18:02,880 --> 01:18:04,880
But yeah, you're right.

817
01:18:04,880 --> 01:18:08,880
It could appear as though like coastal erosion is slowing down because,

818
01:18:08,880 --> 01:18:12,880
like you mentioned, the land is becoming higher.

819
01:18:14,880 --> 01:18:16,880
Yeah.

820
01:18:16,880 --> 01:18:18,880
That's a good question.

821
01:18:18,880 --> 01:18:20,880
But I did try to reduce some variables.

822
01:18:20,880 --> 01:18:24,880
Like this section, this part of Bangladesh gets monsoon seasons.

823
01:18:24,880 --> 01:18:26,880
And so you can get really high water levels.

824
01:18:27,040 --> 01:18:31,040
Which if you look at different times, it can look like there's a false sense of

825
01:18:31,040 --> 01:18:33,040
coastal erosion, but it's just the water level is really high.

826
01:18:33,040 --> 01:18:39,040
So I chose the same month each year, so April of each year,

827
01:18:39,040 --> 01:18:43,040
during their dry season to try and reduce those extra variables.

828
01:18:43,040 --> 01:18:47,040
I know that's not what you're asking, but just another point.

829
01:18:47,040 --> 01:18:49,040
Yeah.

830
01:18:49,040 --> 01:18:51,040
That's a good point.

831
01:18:51,040 --> 01:18:53,040
I don't know about the elevation of this land.

832
01:18:53,040 --> 01:18:55,040
I just know it's pretty flat.

833
01:18:55,200 --> 01:19:01,200
Any more questions before I get on to our stuff?

834
01:19:01,200 --> 01:19:03,200
Okay.

835
01:19:03,200 --> 01:19:05,200
So the next section.

836
01:19:05,200 --> 01:19:07,200
Let me see where we left off.

837
01:19:07,200 --> 01:19:09,200
Right.

838
01:19:09,200 --> 01:19:11,200
We were looking at acceleration.

839
01:19:11,200 --> 01:19:13,200
Okay.

840
01:19:13,200 --> 01:19:15,200
Now we're going to look at land recession.

841
01:19:15,200 --> 01:19:17,200
Now we're going to measure actually how fast the land is moving inward.

842
01:19:17,200 --> 01:19:19,200
Or the water is moving inward in this case.

843
01:19:19,200 --> 01:19:23,200
So to do that, we are going to try and find that water land that's

844
01:19:23,360 --> 01:19:25,360
going to be moving.

845
01:19:25,360 --> 01:19:27,360
So we're going to try and find that water land border.

846
01:19:27,360 --> 01:19:29,360
Lots of ways of doing this.

847
01:19:29,360 --> 01:19:33,360
What I'm doing is I'm going to use an edge detection algorithm from

848
01:19:33,360 --> 01:19:35,360
OpenCV.

849
01:19:35,360 --> 01:19:37,360
It's called the CanE edge detection.

850
01:19:37,360 --> 01:19:41,360
I won't go into how it works really, but in general, what it does,

851
01:19:41,360 --> 01:19:47,360
it looks for a spike or a slope in like intensity of pixels.

852
01:19:47,360 --> 01:19:51,360
So it will look for where there's edges.

853
01:19:51,520 --> 01:19:53,520
Edges, I guess.

854
01:19:53,520 --> 01:19:55,520
I don't really know how else to say it.

855
01:19:55,520 --> 01:19:57,520
And in this case, there's a pretty sharp edge, right?

856
01:19:57,520 --> 01:19:59,520
Where the water meets the land.

857
01:19:59,520 --> 01:20:03,520
So I'm going to use, in this case, the land difference mask.

858
01:20:03,520 --> 01:20:07,520
So this, where there's an obvious edge, right?

859
01:20:07,520 --> 01:20:09,520
So I'm going to try and detect this edge here.

860
01:20:09,520 --> 01:20:11,520
And this edge here.

861
01:20:11,520 --> 01:20:15,520
So this edge is where the land started.

862
01:20:15,520 --> 01:20:19,520
Or yeah, where the land started in 2017.

863
01:20:19,680 --> 01:20:23,680
And now this edge here is where the land starts in 2023.

864
01:20:23,680 --> 01:20:27,680
And if you can measure the distance between the two,

865
01:20:27,680 --> 01:20:31,680
you can measure how much land was lost or how much coastline was receded.

866
01:20:31,680 --> 01:20:35,680
And you can measure how fast they receded.

867
01:20:35,680 --> 01:20:39,680
So let me scroll down.

868
01:20:39,680 --> 01:20:43,680
So we're going to take that land difference mask,

869
01:20:43,680 --> 01:20:47,680
throw it into, it was a float earlier,

870
01:20:47,840 --> 01:20:49,840
so I'm going to turn it into some integers,

871
01:20:49,840 --> 01:20:51,840
and then we'll detect all the edges.

872
01:20:51,840 --> 01:20:55,840
Zero being one threshold, one being the other,

873
01:20:55,840 --> 01:20:57,840
because it's a mask.

874
01:20:57,840 --> 01:20:59,840
And then let's just take a look at what that looks like.

875
01:20:59,840 --> 01:21:03,840
So the Kani edge detection did a good job of detecting edges.

876
01:21:03,840 --> 01:21:05,840
Like I mentioned earlier,

877
01:21:05,840 --> 01:21:09,840
2017 land or coastline on the left,

878
01:21:09,840 --> 01:21:13,840
2023 coastline on the right.

879
01:21:14,000 --> 01:21:18,000
And then, well, we'll do a histogram.

880
01:21:18,000 --> 01:21:22,000
So what we're going to do here is we're going to try and

881
01:21:22,000 --> 01:21:26,000
automatically detect, like not just by pointing and clicking,

882
01:21:26,000 --> 01:21:30,000
but just like getting the computer to just detect where the

883
01:21:30,000 --> 01:21:34,000
coastline was in 2023 and in 2017.

884
01:21:36,000 --> 01:21:40,000
So I'm just going to bin up all the pixels vertically.

885
01:21:40,000 --> 01:21:43,000
And where I'm just going to try and say,

886
01:21:43,160 --> 01:21:46,160
where all the pixels binned up on the left and all the pixels

887
01:21:46,160 --> 01:21:48,160
binned up on the right are on average,

888
01:21:48,160 --> 01:21:50,160
are going to be the two coasts.

889
01:21:50,160 --> 01:21:52,160
There's lots of ways of doing this.

890
01:21:52,160 --> 01:21:55,160
You can already imagine this won't work for an image where

891
01:21:55,160 --> 01:21:57,160
the coast is horizontal.

892
01:21:57,160 --> 01:22:01,160
And in this case, the coast on the 2023 side is already kind

893
01:22:01,160 --> 01:22:03,160
of sloped just from how it's been receding.

894
01:22:03,160 --> 01:22:05,160
So it's going to be kind of like not so good,

895
01:22:05,160 --> 01:22:07,160
but it'll be okay.

896
01:22:10,160 --> 01:22:12,160
So let's bin them up.

897
01:22:12,320 --> 01:22:16,320
And then I'm going to use a SciPy algorithm called

898
01:22:16,320 --> 01:22:20,320
Find Peaks to find the peaks.

899
01:22:20,320 --> 01:22:22,320
I'll show you in a second what this means.

900
01:22:22,320 --> 01:22:24,320
Here's my histogram.

901
01:22:24,320 --> 01:22:28,320
So here are where all of the pixels are binned up vertically

902
01:22:28,320 --> 01:22:31,320
on the left side of the image and on the right side of the

903
01:22:31,320 --> 01:22:32,320
image.

904
01:22:32,320 --> 01:22:34,320
And I'm going to find the, I found the peaks of the two

905
01:22:34,320 --> 01:22:35,320
histograms.

906
01:22:35,320 --> 01:22:39,320
And these are supposed to be where the coastlines are.

907
01:22:39,480 --> 01:22:43,480
Let me just plot that on top of the landmass difference.

908
01:22:43,480 --> 01:22:45,480
Okay.

909
01:22:45,480 --> 01:22:47,480
So you can see, well, it's kind of hard with this light here,

910
01:22:47,480 --> 01:22:51,480
but this is where all of the pixels were binned up.

911
01:22:51,480 --> 01:22:55,480
And it does a pretty good job of like saying roughly on

912
01:22:55,480 --> 01:22:57,480
average this is where the coastline was in 2017.

913
01:22:57,480 --> 01:23:06,480
And, you know, we started this tutorial in 2022 for a SciPy

914
01:23:06,480 --> 01:23:07,480
presentation.

915
01:23:07,640 --> 01:23:11,640
And back then this coastline wasn't so eroded,

916
01:23:11,640 --> 01:23:15,640
wasn't as eroded, and did a pretty good job of capturing

917
01:23:15,640 --> 01:23:16,640
this section here.

918
01:23:16,640 --> 01:23:19,640
But it's gotten, as I said, it's gotten worse.

919
01:23:19,640 --> 01:23:22,640
And so with this new data, it's kind of capturing over here

920
01:23:22,640 --> 01:23:24,640
because the river's getting wider,

921
01:23:24,640 --> 01:23:27,640
which is a whole separate issue.

922
01:23:27,640 --> 01:23:31,640
But in general, kind of, this is where the 2023 coastline resides

923
01:23:31,640 --> 01:23:33,640
for the bottom part.

924
01:23:33,640 --> 01:23:35,640
You can picture that as the bottom part of the image.

925
01:23:37,640 --> 01:23:39,640
And then let's measure it.

926
01:23:39,640 --> 01:23:45,640
So the land has receded basically 2.5 kilometers over

927
01:23:45,640 --> 01:23:49,640
the past seven years, which averages out to like 356 meters

928
01:23:49,640 --> 01:23:53,640
per year, which is pretty dramatic.

929
01:23:53,640 --> 01:23:57,640
I don't know miles, so you can just kind of divide by 1.6

930
01:23:57,640 --> 01:23:59,640
and put it into miles.

931
01:23:59,640 --> 01:24:03,640
Yeah, and that's our coastline analysis.

932
01:24:03,800 --> 01:24:05,800
Do I have any other questions?

933
01:24:14,800 --> 01:24:17,800
If not, I'll just throw it back to this.

934
01:24:17,800 --> 01:24:19,800
Uh-huh, yeah.

935
01:24:19,800 --> 01:24:25,800
Well, we can just have fun in Python.

936
01:24:25,960 --> 01:24:31,960
But I mean, something we could do is we could relay this

937
01:24:31,960 --> 01:24:33,960
information to the government.

938
01:24:33,960 --> 01:24:37,960
So something like that a lot of government agencies do is they

939
01:24:37,960 --> 01:24:41,960
task satellite data or they get plant data like this,

940
01:24:41,960 --> 01:24:44,960
and then they do this analysis themselves to just try and see

941
01:24:44,960 --> 01:24:48,960
where, in this case, where coastline is receding most.

942
01:24:48,960 --> 01:24:51,960
And then they can begin to be like, oh, shoot, like,

943
01:24:52,120 --> 01:24:54,120
up here, we don't need to do anything about it.

944
01:24:54,120 --> 01:24:56,120
Like, nothing to worry about up here.

945
01:24:56,120 --> 01:24:58,120
No seawalls need to be put in.

946
01:24:58,120 --> 01:25:00,120
Down here, though, it's getting pretty bad.

947
01:25:00,120 --> 01:25:04,120
We have to start to implement something, right?

948
01:25:04,120 --> 01:25:06,120
And maybe they have, but maybe that's why it's getting

949
01:25:06,120 --> 01:25:08,120
a little bit better.

950
01:25:08,120 --> 01:25:12,120
And so that's just, or another thing they can do is let's say

951
01:25:12,120 --> 01:25:14,120
they have people who live here.

952
01:25:14,120 --> 01:25:16,120
I mean, this is such a zoomed out picture you can't really see,

953
01:25:16,120 --> 01:25:18,120
but maybe there are people who live here who live here.

954
01:25:18,120 --> 01:25:20,120
So they can do that.

955
01:25:20,280 --> 01:25:22,280
They can zoom that picture you can't really see,

956
01:25:22,280 --> 01:25:24,280
but maybe there are people who live here or there's farms

957
01:25:24,280 --> 01:25:26,280
or other important infrastructure.

958
01:25:26,280 --> 01:25:29,280
They can begin to warn them, be like, look, it's moving at a rate

959
01:25:29,280 --> 01:25:31,280
of 300-ish meters per year.

960
01:25:31,280 --> 01:25:33,280
You're next.

961
01:25:33,280 --> 01:25:35,280
You know, you need to move.

962
01:25:35,280 --> 01:25:37,280
And that's actually something that's happened in the UK.

963
01:25:37,280 --> 01:25:39,280
There was another example I was going to use maybe,

964
01:25:39,280 --> 01:25:41,280
but I didn't use this one.

965
01:25:41,280 --> 01:25:45,280
It was more dramatic, where they had to move an entire city,

966
01:25:45,280 --> 01:25:49,280
you know, a few kilometers inland because the coast was just

967
01:25:49,440 --> 01:25:51,440
so dramatically receding.

968
01:25:51,440 --> 01:25:53,440
Yeah.

969
01:25:53,440 --> 01:25:56,440
Just further on that, we're talking about pollution,

970
01:25:56,440 --> 01:25:58,440
what H.U.R.A. is, right?

971
01:25:58,440 --> 01:26:00,440
Yeah.

972
01:26:00,440 --> 01:26:02,440
It's huge.

973
01:26:02,440 --> 01:26:06,440
Would that be the result of this incremental erosion

974
01:26:06,440 --> 01:26:12,440
or would you be monitoring this?

975
01:26:12,600 --> 01:26:14,600
Yeah.

976
01:26:14,600 --> 01:26:16,600
There's so many ways of doing this.

977
01:26:16,600 --> 01:26:18,600
Yeah.

978
01:26:18,600 --> 01:26:20,600
Of course, the year mark is like the most dramatic way

979
01:26:20,600 --> 01:26:22,600
of doing it.

980
01:26:22,600 --> 01:26:24,600
It's like the most smooth data.

981
01:26:24,600 --> 01:26:26,600
You can definitely do a temporal resolution of every day.

982
01:26:26,600 --> 01:26:28,600
The problem with, there's a few problems with that,

983
01:26:28,600 --> 01:26:30,600
but an issue with that is like seasonal changes.

984
01:26:30,600 --> 01:26:32,600
So like this region has monsoon season.

985
01:26:32,600 --> 01:26:34,600
So it's like the most dramatic way of doing it.

986
01:26:34,600 --> 01:26:36,600
So you can see the difference between the two.

987
01:26:36,600 --> 01:26:38,600
So you can see the difference between the two.

988
01:26:38,600 --> 01:26:40,600
So you can see the difference between the two.

989
01:26:40,760 --> 01:26:42,760
So the region has monsoon season.

990
01:26:42,760 --> 01:26:44,760
So like there's a, I can't say this for certain,

991
01:26:44,760 --> 01:26:46,760
but there's a good chance that a lot of the erosion happens

992
01:26:46,760 --> 01:26:48,760
during that monsoon season

993
01:26:48,760 --> 01:26:50,760
where there's a lot of wind and a lot of waves

994
01:26:50,760 --> 01:26:52,760
and probably deteriorates a lot of that soft land.

995
01:26:52,760 --> 01:26:54,760
But yeah, I mean, pulling this down to like quarterly

996
01:26:54,760 --> 01:26:56,760
or monthly, bi-weekly or even daily could be interesting.

997
01:26:56,760 --> 01:26:58,760
You probably see a lot of noise,

998
01:26:58,760 --> 01:27:00,760
but you probably see, you pull a pretty decent powder

999
01:27:00,760 --> 01:27:02,760
out of it over a week.

1000
01:27:02,760 --> 01:27:04,760
So it's like the most dramatic way of doing it.

1001
01:27:04,760 --> 01:27:06,760
So yeah, I mean, there's a lot of wind and a lot of waves

1002
01:27:06,760 --> 01:27:08,760
and probably deteriorates a lot of that soft land.

1003
01:27:08,940 --> 01:27:10,180
But the question

1004
01:27:10,180 --> 01:27:12,040
is how can you go about reducing it from,

1005
01:27:12,040 --> 01:27:35,280
and last year the

1006
01:27:35,280 --> 01:27:39,080
potentially look at that as well I think.

1007
01:27:41,080 --> 01:27:50,240
It's almost like your question was planted. Yeah so I do think it's

1008
01:27:50,240 --> 01:27:56,720
valuable to talk about what we can do. I think the first is just to build

1009
01:27:56,720 --> 01:28:01,480
awareness here in Salt Lake City where landlocked we don't have a body of water

1010
01:28:01,480 --> 01:28:05,720
unless you count the Great Salt Lake which is also drying up. So I guess maybe

1011
01:28:05,720 --> 01:28:10,160
that doesn't count either. But just like learning about coastal erosion and how

1012
01:28:10,160 --> 01:28:15,080
it could impact your community if you live in an area that's by the water that

1013
01:28:15,080 --> 01:28:18,760
in itself helps a lot connecting with your communities in a lot of places

1014
01:28:18,760 --> 01:28:22,680
there's like local government organizations, community organizations,

1015
01:28:22,680 --> 01:28:26,880
nonprofits, things like that who are already working to understand the local

1016
01:28:26,880 --> 01:28:32,220
impacts and effects of coastal erosion. And then finally because this is PyCon I

1017
01:28:32,220 --> 01:28:38,360
think this is important, data plays a huge role in this especially I think now

1018
01:28:38,360 --> 01:28:44,080
we have greater availability of satellite imagery and just environmental

1019
01:28:44,080 --> 01:28:48,920
data in general. So I think that also helps just being more informed and then

1020
01:28:48,920 --> 01:28:53,160
using these skills that you now have to kind of dig into things a little further

1021
01:28:53,160 --> 01:29:03,040
wherever you can find data. And Planet luckily makes this easier to do so I

1022
01:29:03,040 --> 01:29:06,440
wanted to share with you all some resources that we have at Planet that

1023
01:29:06,440 --> 01:29:10,720
might be of interest to you if you're interested in poking around at this use

1024
01:29:10,720 --> 01:29:19,840
case or other use cases. The first is this Planet gallery. So here you can see

1025
01:29:19,840 --> 01:29:26,080
I know the internet is really slow. So this isn't all of our imagery but they

1026
01:29:26,080 --> 01:29:31,600
are highlights of images that Planet takes and you can filter these images

1027
01:29:31,600 --> 01:29:38,120
based on whatever agriculture, civil government, there's all different kinds

1028
01:29:38,120 --> 01:29:42,920
of categories and so these are just sort of they're really cool images like

1029
01:29:42,920 --> 01:29:45,480
little case studies of different areas if you're interested in playing around

1030
01:29:45,480 --> 01:29:50,920
this is free and available to use on the Planet website. It's the Planet gallery.

1031
01:29:50,920 --> 01:29:59,960
We also have this disaster data sets sort of area on our website that is made

1032
01:29:59,960 --> 01:30:06,280
available. So this I don't know when is the last one they sent out actually but

1033
01:30:06,280 --> 01:30:12,720
for big natural disasters natural and man-made we collect imagery and then

1034
01:30:12,760 --> 01:30:18,080
make it available to people so that you can look at it. I know one of the things

1035
01:30:18,080 --> 01:30:22,160
we have under this umbrella is Ukraine data. We have a lot of Ukraine data that

1036
01:30:22,160 --> 01:30:27,120
people have used to kind of help efforts there as part of this disaster data

1037
01:30:27,120 --> 01:30:32,640
thing. So you can sign up for email alerts and things when new data sets are

1038
01:30:32,640 --> 01:30:41,560
available here. We also have the NICFE program. So I'm actually blanking on what

1039
01:30:41,600 --> 01:30:46,440
NICFE stands for. Oh right here. Norway's International Climate and Forests

1040
01:30:46,440 --> 01:30:50,520
Initiative Satellite Data Program. So what this is this makes planet data

1041
01:30:50,520 --> 01:30:55,440
available as an open good to anyone working to reduce or reverse the loss

1042
01:30:55,440 --> 01:31:00,760
of tropical forests. So there's tons of tropical forest data here. I think there's

1043
01:31:00,760 --> 01:31:05,320
a map here somewhere. Yeah right here. So in all of these regions across the globe

1044
01:31:05,320 --> 01:31:10,680
this data is free and available to use if you're looking into forestry

1045
01:31:10,680 --> 01:31:19,440
issues. There's also the Planet DevTrial program. This is something that is on

1046
01:31:19,440 --> 01:31:23,480
our team. We're on the developer relations team. This comes through to us

1047
01:31:23,480 --> 01:31:28,280
where if you're someone interested in using planet data maybe you want to just

1048
01:31:28,280 --> 01:31:32,360
test it out as a developer and see what you can do with it. Our DevTrial program

1049
01:31:32,360 --> 01:31:36,000
is a way you can do that. I'll come back to this hopefully when it's oh there it

1050
01:31:36,000 --> 01:31:44,880
is. Yep so DevTrial program and then you can sign up there. We also have our ENR

1051
01:31:44,880 --> 01:31:49,840
program which stands for education and research. This through this program

1052
01:31:49,840 --> 01:31:57,400
let's see through this program all researchers funded by any US federal

1053
01:31:57,400 --> 01:32:02,600
agency and or the National Science Foundation you have access to planets

1054
01:32:02,600 --> 01:32:09,120
archive of satellite imagery. So if you have an EDU email address or something

1055
01:32:09,120 --> 01:32:14,160
like that associated with one of these agencies you can get data through this

1056
01:32:14,160 --> 01:32:24,880
program for free. And last one this is a link to planet publications. So this is

1057
01:32:24,880 --> 01:32:29,060
one use case that we showed that we kind of turned into a analysis using planet

1058
01:32:29,060 --> 01:32:33,540
data but if you're interested in how have other people use planet data what

1059
01:32:33,540 --> 01:32:38,780
kind of applications and analyses have been done we have this whole thing a

1060
01:32:38,780 --> 01:32:42,180
whole collection of different publications where people have used

1061
01:32:42,180 --> 01:32:48,060
planet data and done like written papers or analyses or released code or things

1062
01:32:48,060 --> 01:32:53,620
like that. So all of that is available here. Feel free to take a picture of this

1063
01:32:53,620 --> 01:33:05,140
slide or anything if you would like to. Also oh that's a good point so if you if

1064
01:33:05,140 --> 01:33:09,940
you all could email one of us either me or Kevin we can send you the presentation.

1065
01:33:09,940 --> 01:33:19,420
And yeah finally we just wanted to give you our contact information. This

1066
01:33:19,420 --> 01:33:26,020
is developers at planet.com and then also the developer center developers dot

1067
01:33:26,020 --> 01:33:30,260
planet.com. This is where if you're interested in planet imagery using it or

1068
01:33:30,260 --> 01:33:33,860
learning more about it you can find everything you need to know there. Also I

1069
01:33:33,860 --> 01:33:37,100
highly encourage you all to take one of these flyers up here the dev rel

1070
01:33:37,100 --> 01:33:43,420
because the notebooks and everything all the materials we used for the

1071
01:33:43,420 --> 01:33:48,620
presentation today it's part of this larger effort that our team maintains

1072
01:33:49,100 --> 01:33:55,700
we have tons of Jupiter notebooks with different examples and analyses and not

1073
01:33:55,700 --> 01:33:58,940
just with planet data but how to do things with geospatial data in general.

1074
01:33:58,940 --> 01:34:03,340
So if you're interested in any of that we would love your feedback you can file

1075
01:34:03,340 --> 01:34:09,860
issues or do anything any of that stuff here. So yeah with that thank you all so

1076
01:34:09,860 --> 01:34:13,900
much for coming really enjoyed it.

