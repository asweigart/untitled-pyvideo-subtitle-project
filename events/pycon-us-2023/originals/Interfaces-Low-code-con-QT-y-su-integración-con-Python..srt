1
00:00:00,000 --> 00:00:05,640
Bueno, continuamos entonces con la siguiente presentación desde Puerto Montt, Chile.

2
00:00:05,640 --> 00:00:13,640
Nos acompaña Daniel con su charla Interfaces Low Code de Qt con integración a Python.

3
00:00:13,640 --> 00:00:15,640
Un aplauso para él.

4
00:00:15,640 --> 00:00:24,640
Hola, buenas tardes. Bueno, como me presento aquí, mi nombre es Daniel Hernández.

5
00:00:24,640 --> 00:00:35,640
Soy de Puerto Montt, soy del sur de Chile. Ha sido beneficioso para mí esto, ya que el clima es muy similar al que está acá, o por lo menos de estos días.

6
00:00:35,640 --> 00:00:43,640
Bien, bien, bien al sur del mundo, para los que no ubican bien de geografía.

7
00:00:43,640 --> 00:00:48,640
¿Quién más le puedo contar de mí? Bueno, soy parte de la coordinación de Python Chile.

8
00:00:48,640 --> 00:00:56,640
Acá hay una foto con parte del staff que realizamos el año pasado, la primera Python presencial.

9
00:00:56,640 --> 00:01:07,640
Y laboralmente me desempeño en la empresa Capaz, una constructora que desarrolla software para otras empresas o procesos tecnológicos en general.

10
00:01:07,640 --> 00:01:16,640
Y actualmente me encuentro en un proyecto súper grande que es para el banco que es bastante conocido a nivel mundial que es Scouchabank.

11
00:01:16,640 --> 00:01:22,640
Y uno de mis hobbies dentro de la programación básicamente son los datos.

12
00:01:22,640 --> 00:01:28,640
Todo lo que tenga que ver con datos siempre me ha gustado trabajar porque siento que entregan demasiada información.

13
00:01:28,640 --> 00:01:35,640
Y lo hemos visto al pasar de todas las charlas que hemos tenido durante la jornada de ayer y hoy.

14
00:01:35,640 --> 00:01:40,640
Que entregan mucha información y da mucho valor a los procesos en general.

15
00:01:40,640 --> 00:01:45,640
Y dentro de los datos lo que más me gusta es toda la parte de Inteligencia Artificial y Machine Learning.

16
00:01:45,640 --> 00:01:49,640
Bueno, ¿cuál es la motivación para crear esta charla?

17
00:01:49,640 --> 00:01:57,640
Bueno, desde un principio tuve un problema en general que yo creo que a muchos o a algunos le ha pasado.

18
00:01:57,640 --> 00:02:00,640
Que programamos mucho código.

19
00:02:00,640 --> 00:02:06,640
De hecho lo hemos visto acá que siempre vemos código, cómo programan, cómo están hechas las soluciones.

20
00:02:06,640 --> 00:02:10,640
Pero qué pasa cuando queremos entregar a un usuario final estas soluciones.

21
00:02:10,640 --> 00:02:14,640
Las personas no manejan código por lo general, aunque deberían.

22
00:02:14,640 --> 00:02:22,640
Y tenemos que presentar estas soluciones de una forma gráfica con botoncitos o cosas bonitas por ahí que podríamos integrar.

23
00:02:22,640 --> 00:02:29,640
Y dar una solución que sea más básica o más visual para las personas.

24
00:02:29,640 --> 00:02:34,640
Porque las personas por lo general trabajan en un ambiente más visual.

25
00:02:34,640 --> 00:02:39,640
¿Me entienden? Más fácil con algo, con textos, botones, etc.

26
00:02:39,640 --> 00:02:45,640
Entonces me encontré con la disyuntiva que yo creo que a muchos le ha pasado.

27
00:02:45,640 --> 00:02:55,640
Que no tenemos como en la cabeza, como la estructura de cómo codiar bien una interfaz.

28
00:02:55,640 --> 00:02:59,640
A mí me pasó mucho que en la universidad nos pasaron Tecinter.

29
00:02:59,640 --> 00:03:02,640
Una herramienta que hace más o menos lo mismo que Qt.

30
00:03:02,640 --> 00:03:07,640
Pero es más que nada código.

31
00:03:07,640 --> 00:03:09,640
Entonces era prueba y error.

32
00:03:09,640 --> 00:03:12,640
Si estaban bien los pixeles insertados.

33
00:03:12,640 --> 00:03:16,640
Si el botón estaba exactamente donde nosotros queríamos.

34
00:03:16,640 --> 00:03:24,640
O teníamos que ir a una web y probar cosas para encontrar justo el pixel donde queríamos insertar los botones.

35
00:03:24,640 --> 00:03:31,640
O el label o cualquier otro widget que nos ofreciera el framework.

36
00:03:31,640 --> 00:03:35,640
Y perdíamos mucho tiempo. Por lo menos a mí me ha pasado que perdía mucho tiempo.

37
00:03:35,640 --> 00:03:40,640
Entonces se me ocurrió seguir investigando.

38
00:03:40,640 --> 00:03:43,640
Hasta que llegué con la solución que les vengo a presentar hoy día.

39
00:03:43,640 --> 00:03:45,640
Para los que no conocen.

40
00:03:45,640 --> 00:03:47,640
Que es el framework de Qt.

41
00:03:47,640 --> 00:03:50,640
Si bien también es código.

42
00:03:50,640 --> 00:03:54,640
Bueno, primero que todo una aplicación multiplataforma.

43
00:03:54,640 --> 00:03:58,640
Es un marco de interfaz gráfica para usuario.

44
00:03:58,640 --> 00:04:01,640
O sea para creación de interfaces.

45
00:04:01,640 --> 00:04:05,640
Tiene una serie de herramientas de desarrollo.

46
00:04:05,640 --> 00:04:08,640
Que en este caso está a cargo de Qt Project.

47
00:04:08,640 --> 00:04:13,640
Tiene bastantes más facilidades que Tecinter.

48
00:04:13,640 --> 00:04:16,640
Por las herramientas que nos ofrecen extra.

49
00:04:16,640 --> 00:04:19,640
Para poder desarrollar nuestras soluciones.

50
00:04:19,640 --> 00:04:22,640
Está programada en C++.

51
00:04:22,640 --> 00:04:29,640
Y bueno, es un kit de herramientas de widgets.

52
00:04:29,640 --> 00:04:32,640
Nos entrega una serie de widgets que nosotros podemos programar.

53
00:04:32,640 --> 00:04:37,640
Y vamos a verlo a través de una ventana.

54
00:04:37,640 --> 00:04:40,640
Como dice aquí.

55
00:04:40,640 --> 00:04:43,640
Está programada en C++.

56
00:04:43,640 --> 00:04:46,640
Pero está la solución de PySide.

57
00:04:46,640 --> 00:04:48,640
Ustedes preguntarán ¿qué es PySide?

58
00:04:48,640 --> 00:04:51,640
Bueno, es una biblioteca adaptativa.

59
00:04:51,640 --> 00:04:54,640
De Qt Project desarrollado por ellos.

60
00:04:54,640 --> 00:04:56,640
Una vez que...

61
00:04:56,640 --> 00:04:58,640
Por la gran mayoría cuando les hablo de Qt.

62
00:04:58,640 --> 00:05:00,640
Me dicen ah PyQt.

63
00:05:00,640 --> 00:05:03,640
Bueno, PyQt es un proyecto abandonado actualmente.

64
00:05:03,640 --> 00:05:06,640
Y los chicos de acá de Qt Project.

65
00:05:06,640 --> 00:05:09,640
Desarrollaron esta herramienta para poder hacer el nexo.

66
00:05:09,640 --> 00:05:12,640
De esta herramienta que está escrita en C++.

67
00:05:12,640 --> 00:05:14,640
Y su integración con Python.

68
00:05:14,640 --> 00:05:16,640
Y tenemos las bondades.

69
00:05:16,640 --> 00:05:18,640
Software libre, obviamente.

70
00:05:18,640 --> 00:05:21,640
Y podemos trabajar con una serie de herramientas.

71
00:05:21,640 --> 00:05:23,640
Que nos entregan los mismos desarrolladores.

72
00:05:23,640 --> 00:05:26,640
Para que podamos trabajar de una manera más ágil.

73
00:05:26,640 --> 00:05:28,640
O si preferimos con código.

74
00:05:28,640 --> 00:05:29,640
Podemos trabajar con código.

75
00:05:29,640 --> 00:05:31,640
No hay ningún problema.

76
00:05:31,640 --> 00:05:32,640
¿Ya?

77
00:05:32,640 --> 00:05:33,640
¿Cómo lo hacemos?

78
00:05:33,640 --> 00:05:35,640
Bueno, dentro de todas las herramientas.

79
00:05:35,640 --> 00:05:38,640
Que entrega el framework.

80
00:05:38,640 --> 00:05:43,640
Trae una serie de herramientas.

81
00:05:43,640 --> 00:05:45,640
La más conocida antiguamente.

82
00:05:45,640 --> 00:05:48,640
Los que programan desde mucho tiempo con Qt.

83
00:05:48,640 --> 00:05:51,640
Conocen Qt Designer.

84
00:05:51,640 --> 00:05:55,640
Actualmente entrega una herramienta de Qt Designer.

85
00:05:55,640 --> 00:05:58,640
Pero está mucho más modernizada.

86
00:05:58,640 --> 00:05:59,640
Los invito a probarla.

87
00:05:59,640 --> 00:06:01,640
Tiene muchas otras funcionalidades.

88
00:06:01,640 --> 00:06:05,640
Pero además tiene esta herramienta que para mí es fantástica.

89
00:06:05,640 --> 00:06:07,640
Se llama Qt Creator.

90
00:06:07,640 --> 00:06:11,640
Que básicamente viene integrado en lo antiguo como Qt Designer dentro.

91
00:06:11,640 --> 00:06:14,640
Pero además agrega otra gran desventaja.

92
00:06:14,640 --> 00:06:20,640
Bueno, aparte de la sección de abajo.

93
00:06:20,640 --> 00:06:23,640
Bueno, están todos tus proyectos.

94
00:06:23,640 --> 00:06:26,640
Viene una serie de ejemplos que tú puedes revisar.

95
00:06:26,640 --> 00:06:29,640
Y además vienen unos tutoriales.

96
00:06:29,640 --> 00:06:32,640
Y el Mark Place es para agregar nuevos elementos.

97
00:06:32,640 --> 00:06:34,640
O publicarlos los tuyos.

98
00:06:34,640 --> 00:06:36,640
¿Ya?

99
00:06:36,640 --> 00:06:37,640
Esto es en base a Widget.

100
00:06:37,640 --> 00:06:39,640
Me refiero a Mark Place.

101
00:06:40,640 --> 00:06:42,640
¿Cómo se configura un proyecto?

102
00:06:42,640 --> 00:06:44,640
Bueno, creamos un proyecto nuevo.

103
00:06:44,640 --> 00:06:45,640
Se nos abre una ventana.

104
00:06:45,640 --> 00:06:47,640
Como muchos.

105
00:06:47,640 --> 00:06:51,640
Está una serie de elementos que podemos seleccionar.

106
00:06:51,640 --> 00:06:53,640
Como estamos en la PyCon.

107
00:06:53,640 --> 00:06:57,640
Vamos a seguirnos a la Qt for Python.

108
00:06:57,640 --> 00:07:00,640
Podemos elegir cualquiera de estas opciones.

109
00:07:00,640 --> 00:07:04,640
Siempre recomiendo empezar con una aplicación vacía.

110
00:07:04,640 --> 00:07:07,640
Y luego, bueno, los detalles de todos los programas.

111
00:07:07,640 --> 00:07:09,640
Cuando uno lo tiene que configurar.

112
00:07:09,640 --> 00:07:11,640
La locación donde vamos a trabajar.

113
00:07:11,640 --> 00:07:14,640
Algunos detalles configurables que tiene la herramienta.

114
00:07:14,640 --> 00:07:16,640
Y además un control.

115
00:07:16,640 --> 00:07:20,640
Puedes utilizar control de versiones como Git, Bitbucket, etc.

116
00:07:20,640 --> 00:07:24,640
Bueno, y abajo sale en qué directorio lo vamos a guardar.

117
00:07:24,640 --> 00:07:26,640
El proyecto.

118
00:07:26,640 --> 00:07:30,640
Y lo que se va a crear durante la creación de este mismo.

119
00:07:30,640 --> 00:07:32,640
Una vez creado el proyecto.

120
00:07:32,640 --> 00:07:34,640
Bueno, depende de la opción que hayan elegido.

121
00:07:34,640 --> 00:07:36,640
Podemos trabajar con un IDE.

122
00:07:36,640 --> 00:07:40,640
Directamente incrustado dentro de Qt Creator.

123
00:07:40,640 --> 00:07:44,640
Donde podemos escribir código y ir programando con código.

124
00:07:44,640 --> 00:07:48,640
O para la opción que me acomoda más a mí.

125
00:07:48,640 --> 00:07:50,640
Trabajar con la ventana del lado izquierdo.

126
00:07:50,640 --> 00:07:52,640
Para mí, derecho, para ustedes.

127
00:07:52,640 --> 00:07:56,640
Que es de un programa de la que tenemos que trabajar.

128
00:07:56,640 --> 00:08:02,640
Y el proyecto que vamos a crear es de una herramienta de arrastrar y soltar.

129
00:08:02,640 --> 00:08:04,640
Vamos arrastrando distintos widgets.

130
00:08:04,640 --> 00:08:06,640
Vamos programando.

131
00:08:06,640 --> 00:08:08,640
Vamos viendo visualmente lo que estamos creando.

132
00:08:08,640 --> 00:08:14,640
Y luego guardamos y ejecutamos con Python y PySite.

133
00:08:14,640 --> 00:08:16,640
Que es mi recomendación.

134
00:08:16,640 --> 00:08:18,640
Que en este caso va en la versión 6, si no me equivoco.

135
00:08:18,640 --> 00:08:20,640
No estoy desactualizado.

136
00:08:20,640 --> 00:08:22,640
Está en la versión 6.

137
00:08:22,640 --> 00:08:26,640
Bueno, acá hay un pequeño ejemplo.

138
00:08:26,640 --> 00:08:30,640
Con solo esa serie de widgets, que no son muchos.

139
00:08:30,640 --> 00:08:32,640
Podemos crear algo así.

140
00:08:32,640 --> 00:08:34,640
Si alguien se ha interiorizado un poquito en el framework.

141
00:08:34,640 --> 00:08:38,640
Se dará en cuenta que este es un ejemplo que es muy fácil de encontrar en internet.

142
00:08:38,640 --> 00:08:44,640
Fue algo que creé a partir de ver y de seguir pasos.

143
00:08:44,640 --> 00:08:48,640
Y es bastante atractivo lo que es resultante.

144
00:08:48,640 --> 00:08:50,640
Y con muy pocas gascositas.

145
00:08:50,640 --> 00:08:54,640
Luego vamos a ver este ejemplo en ejecución.

146
00:08:54,640 --> 00:08:58,640
Si es que lo puedo arrastrar y mostrarlo.

147
00:08:58,640 --> 00:09:00,640
Y una vez guardado el proyecto, ¿qué pasa?

148
00:09:00,640 --> 00:09:04,640
Se crea un archivo .ui.

149
00:09:04,640 --> 00:09:08,640
Que es la extensión que nos genera Qt Creator.

150
00:09:08,640 --> 00:09:10,640
Y tenemos dos opciones.

151
00:09:10,640 --> 00:09:12,640
Podemos trabajar directamente PySite.

152
00:09:12,640 --> 00:09:18,640
Te entregas las herramientas necesarias para que puedas utilizar el archivo sin necesidad de modificaciones.

153
00:09:18,640 --> 00:09:20,640
O directamente lo podemos convertir en código Python.

154
00:09:20,640 --> 00:09:24,640
Solamente con esta instrucción en la computadora.

155
00:09:24,640 --> 00:09:26,640
En la terminal.

156
00:09:26,640 --> 00:09:28,640
Que es pySite6-uiC.

157
00:09:28,640 --> 00:09:30,640
El nombre del archivo que generamos.

158
00:09:30,640 --> 00:09:34,640
Y al nombre que lo vamos a crear.

159
00:09:34,640 --> 00:09:36,640
Con la extensión .py. Obviamente.

160
00:09:36,640 --> 00:09:38,640
Vamos a ver este ejemplo.

161
00:09:38,640 --> 00:09:40,640
A ver si lo puedo presentar.

162
00:09:40,640 --> 00:09:42,640
Rapidito.

163
00:09:42,640 --> 00:09:46,640
Se está viendo, ¿sí?

164
00:09:46,640 --> 00:09:48,640
Bueno.

165
00:09:48,640 --> 00:09:52,640
Acá tengo varios archivos.

166
00:09:52,640 --> 00:09:56,640
Vamos a abrir el splash screen.

167
00:09:56,640 --> 00:09:58,640
Que fue el que mostré el ejemplo.

168
00:10:04,640 --> 00:10:06,640
Ahí está.

169
00:10:06,640 --> 00:10:10,640
Está todo programado en una extensión .ui.

170
00:10:10,640 --> 00:10:14,640
Entonces solamente tenemos que abrir una terminal en la ventana.

171
00:10:16,640 --> 00:10:18,640
Vamos a arrastrar.

172
00:10:18,640 --> 00:10:22,640
Bueno acá yo tengo la trampita.

173
00:10:22,640 --> 00:10:24,640
Que ya está escrito.

174
00:10:24,640 --> 00:10:26,640
El comando.

175
00:10:26,640 --> 00:10:28,640
Lo ejecutamos.

176
00:10:28,640 --> 00:10:30,640
Esperamos que nos de la respuesta.

177
00:10:30,640 --> 00:10:32,640
Actualizamos la página en Windows 11.

178
00:10:32,640 --> 00:10:34,640
Es un poquito tedioso.

179
00:10:34,640 --> 00:10:38,640
Y acá ya tenemos nuestro código de Python.

180
00:10:38,640 --> 00:10:40,640
En el ejemplo que voy a mostrar después.

181
00:10:40,640 --> 00:10:42,640
No se me ejecute la pantalla principal.

182
00:10:42,640 --> 00:10:44,640
Y se ejecute acá.

183
00:10:44,640 --> 00:10:46,640
Pero básicamente ya tenemos código Python.

184
00:10:46,640 --> 00:10:50,640
De una interfaz que programamos 100% visualmente.

185
00:10:50,640 --> 00:10:52,640
Podemos analizar.

186
00:10:52,640 --> 00:10:54,640
Podemos verificar todos los objetos que se crearon.

187
00:10:54,640 --> 00:10:56,640
La librería.

188
00:10:56,640 --> 00:10:58,640
Bueno acá una importante aclaración.

189
00:10:58,640 --> 00:11:00,640
Que está en UTF 8.

190
00:11:00,640 --> 00:11:04,640
Y está compilado con la versión 6.4.2.

191
00:11:04,640 --> 00:11:08,640
Más abajo están todas las descripciones.

192
00:11:08,640 --> 00:11:12,640
Y acá por ejemplo si queremos modificar algo.

193
00:11:12,640 --> 00:11:14,640
Del texto lo podemos modificar.

194
00:11:14,640 --> 00:11:16,640
Eso sí.

195
00:11:16,640 --> 00:11:18,640
Más grande.

196
00:11:18,640 --> 00:11:20,640
Lo sé como va a grandar aquí.

197
00:11:24,640 --> 00:11:26,640
Ahí se ve.

198
00:11:26,640 --> 00:11:28,640
Gracias.

199
00:11:28,640 --> 00:11:32,640
Y por ejemplo esta última parte.

200
00:11:32,640 --> 00:11:34,640
Aquí se ve como los widgets que se utilizaron.

201
00:11:34,640 --> 00:11:36,640
O sea en realidad los títulos de los widgets.

202
00:11:36,640 --> 00:11:38,640
Y aquí podemos modificar cualquier cosa.

203
00:11:38,640 --> 00:11:40,640
De lo que estaba escrito en el widget.

204
00:11:40,640 --> 00:11:42,640
Esto es como lo más fácil.

205
00:11:42,640 --> 00:11:44,640
Para arriba.

206
00:11:44,640 --> 00:11:46,640
Tarea para la casa.

207
00:11:46,640 --> 00:11:48,640
Investigar la documentación.

208
00:11:48,640 --> 00:11:50,640
Y eso sí una aclaración.

209
00:11:50,640 --> 00:11:52,640
Una vez que modifiquemos aquí.

210
00:11:52,640 --> 00:11:54,640
No se va a ver modificado en el .wii.

211
00:11:54,640 --> 00:11:56,640
Porque este es un archivo completamente aparte.

212
00:11:56,640 --> 00:11:58,640
Se puede abrir directamente desde QT.

213
00:11:58,640 --> 00:12:00,640
Pero sería muy fácil.

214
00:12:00,640 --> 00:12:02,640
Pero sería ya otro proyecto.

215
00:12:02,640 --> 00:12:04,640
En este caso.

216
00:12:06,640 --> 00:12:08,640
Bueno y traía un proyecto ya completo.

217
00:12:08,640 --> 00:12:10,640
Pero no sé si se va a ver.

218
00:12:10,640 --> 00:12:12,640
En la pantalla duplicada.

219
00:12:12,640 --> 00:12:14,640
De cómo funciona esto.

220
00:12:18,640 --> 00:12:20,640
Vamos a ver.

221
00:12:20,640 --> 00:12:22,640
Esperemos que se vea bien.

222
00:12:22,640 --> 00:12:24,640
Bueno acá yo tengo un archivo mine.

223
00:12:24,640 --> 00:12:26,640
Bueno se está abriendo todo por acá.

224
00:12:26,640 --> 00:12:28,640
Y aquí tenemos la parte de la pantalla.

225
00:12:28,640 --> 00:12:30,640
Y todo por acá.

226
00:12:30,640 --> 00:12:32,640
Y bueno acá hice un par de configuraciones.

227
00:12:32,640 --> 00:12:34,640
Lo primero es importar las librerías necesarias.

228
00:12:34,640 --> 00:12:36,640
Como siempre.

229
00:12:36,640 --> 00:12:38,640
Después importamos las interfaces.

230
00:12:38,640 --> 00:12:40,640
En este caso está.

231
00:12:40,640 --> 00:12:42,640
UI mind windows.

232
00:12:42,640 --> 00:12:44,640
Que viene como por defecto.

233
00:12:44,640 --> 00:12:46,640
Como setup.

234
00:12:46,640 --> 00:12:48,640
Cuando uno crea un proyecto.

235
00:12:48,640 --> 00:12:50,640
El UI splash screen.

236
00:12:50,640 --> 00:12:52,640
Que es el.

237
00:12:52,640 --> 00:12:54,640
O sea la pantalla que he mostrado anteriormente.

238
00:12:54,640 --> 00:12:56,640
Y un widget.

239
00:12:56,640 --> 00:12:58,640
Que en este caso es un circular.

240
00:12:58,640 --> 00:13:00,640
Progress.

241
00:13:00,640 --> 00:13:02,640
Que es como una animación.

242
00:13:02,640 --> 00:13:04,640
Para hacer una animación.

243
00:13:04,640 --> 00:13:06,640
De carga.

244
00:13:06,640 --> 00:13:08,640
Bueno podemos pasar muy rápidamente por el código.

245
00:13:08,640 --> 00:13:10,640
Acá hay algunas.

246
00:13:12,640 --> 00:13:14,640
Cosas que se programaron.

247
00:13:14,640 --> 00:13:16,640
Bueno definir algunas.

248
00:13:20,640 --> 00:13:22,640
Se me olvida la palabra.

249
00:13:22,640 --> 00:13:24,640
Definir algunas cosas.

250
00:13:24,640 --> 00:13:26,640
Y remover las barras de título.

251
00:13:26,640 --> 00:13:28,640
Porque como son interfaces.

252
00:13:28,640 --> 00:13:30,640
Vienen con los títulos ya programados.

253
00:13:30,640 --> 00:13:32,640
Y como está hecho para pantallas cuadradas.

254
00:13:32,640 --> 00:13:34,640
Son aplicaciones de escritorio.

255
00:13:34,640 --> 00:13:36,640
Hay que borrar el title bar.

256
00:13:38,640 --> 00:13:40,640
Bueno ingresar el proceso.

257
00:13:40,640 --> 00:13:42,640
Para que se vea circular.

258
00:13:42,640 --> 00:13:44,640
Esta animación.

259
00:13:44,640 --> 00:13:46,640
Bueno acá una animación.

260
00:13:46,640 --> 00:13:48,640
Porque luego de la pantalla que ya vimos.

261
00:13:48,640 --> 00:13:50,640
Viene otra pantalla que muestra.

262
00:13:50,640 --> 00:13:52,640
Como el contenido.

263
00:13:52,640 --> 00:13:54,640
De lo que uno quiere mostrar.

264
00:13:54,640 --> 00:13:56,640
Acá es algo muy simple.

265
00:13:56,640 --> 00:13:58,640
Un timer.

266
00:13:58,640 --> 00:14:00,640
Que está programado para que termine la ejecución.

267
00:14:00,640 --> 00:14:02,640
Del proyecto.

268
00:14:02,640 --> 00:14:04,640
Y acá abajo.

269
00:14:04,640 --> 00:14:06,640
Está configurado.

270
00:14:06,640 --> 00:14:08,640
En cuanto se va a cerrar la aplicación.

271
00:14:08,640 --> 00:14:10,640
Como va a cambiar de una pantalla a la otra.

272
00:14:10,640 --> 00:14:12,640
Y alguna otra variable.

273
00:14:12,640 --> 00:14:14,640
Seteada.

274
00:14:14,640 --> 00:14:16,640
Más que nada.

275
00:14:16,640 --> 00:14:18,640
Y esta parte.

276
00:14:18,640 --> 00:14:20,640
Los que han trabajado con otro tipo de interfaz.

277
00:14:20,640 --> 00:14:22,640
Que es crear una clase.

278
00:14:22,640 --> 00:14:24,640
Y definir.

279
00:14:24,640 --> 00:14:26,640
Que esta utilidad no se cierre.

280
00:14:26,640 --> 00:14:28,640
Básicamente hasta que haya.

281
00:14:28,640 --> 00:14:30,640
Alguna.

282
00:14:30,640 --> 00:14:32,640
Alguna indicación que lo diga.

283
00:14:32,640 --> 00:14:34,640
Porque si no.

284
00:14:34,640 --> 00:14:36,640
Ejecutaríamos abrir y se cerraría.

285
00:14:36,640 --> 00:14:38,640
Más que nada. Es lo mismo que otras interfaces.

286
00:14:40,640 --> 00:14:42,640
Vamos a ejecutar el código.

287
00:14:42,640 --> 00:14:44,640
Bueno ahí está cargando.

288
00:14:44,640 --> 00:14:46,640
Esa es la animación que yo les comentaba.

289
00:14:46,640 --> 00:14:48,640
Y bueno.

290
00:14:48,640 --> 00:14:50,640
Mi presentación es un poquito cortita.

291
00:14:50,640 --> 00:14:52,640
Pero mi idea era ser

292
00:14:52,640 --> 00:14:54,640
bastante gráfico para que ustedes puedan

293
00:14:56,640 --> 00:14:58,640
probar esta aplicación.

294
00:14:58,640 --> 00:15:00,640
Y una persona como yo.

295
00:15:00,640 --> 00:15:02,640
Que no sabe mucho de front-end.

296
00:15:02,640 --> 00:15:04,640
O de aplicaciones de escritorio.

297
00:15:04,640 --> 00:15:06,640
Puede generar algo así.

298
00:15:06,640 --> 00:15:08,640
Tan llamativo.

299
00:15:08,640 --> 00:15:10,640
De una forma tan rápida.

300
00:15:10,640 --> 00:15:12,640
Y eso.

301
00:15:12,640 --> 00:15:14,640
Muchas gracias por su atención.

302
00:15:14,640 --> 00:15:16,640
Y esa sería como

303
00:15:16,640 --> 00:15:18,640
mi charla. Gracias.

304
00:15:18,640 --> 00:15:20,640
Muchas gracias Daniel.

305
00:15:20,640 --> 00:15:22,640
Alguna pregunta?

306
00:15:34,640 --> 00:15:36,640
Hola. Mi nombre es Sergio.

307
00:15:36,640 --> 00:15:38,640
Y tenía una pregunta.

308
00:15:38,640 --> 00:15:40,640
¿QT solo puede utilizarse para

309
00:15:40,640 --> 00:15:42,640
aplicaciones de escritorio?

310
00:15:42,640 --> 00:15:44,640
O hay algo que se puede usar

311
00:15:44,640 --> 00:15:46,640
para web o para mobile?

312
00:15:46,640 --> 00:15:48,640
Mira. Tiene

313
00:15:48,640 --> 00:15:50,640
hartas integraciones. En este caso

314
00:15:50,640 --> 00:15:52,640
tiene la integración para aplicaciones móviles.

315
00:15:52,640 --> 00:15:54,640
Y como trabaja con

316
00:15:54,640 --> 00:15:56,640
otro lenguaje de programación y Python

317
00:15:56,640 --> 00:15:58,640
se puede adaptar a muchas cosas.

318
00:15:58,640 --> 00:16:00,640
Y se podría lograr integrar en otras

319
00:16:00,640 --> 00:16:02,640
plataformas que no sean

320
00:16:02,640 --> 00:16:04,640
aplicaciones de escritorio. De hecho

321
00:16:04,640 --> 00:16:06,640
dentro de la presentación

322
00:16:06,640 --> 00:16:08,640
cuando mostré las

323
00:16:08,640 --> 00:16:10,640
diferentes formas de crear un

324
00:16:10,640 --> 00:16:12,640
proyecto. Estaba

325
00:16:12,640 --> 00:16:14,640
para aplicaciones móviles. Entonces

326
00:16:14,640 --> 00:16:16,640
tiene bastante como variabilidad.

327
00:16:16,640 --> 00:16:18,640
Nunca lo he hecho.

328
00:16:18,640 --> 00:16:20,640
No es mi área de especialidad.

329
00:16:20,640 --> 00:16:22,640
Pero si

330
00:16:22,640 --> 00:16:24,640
se puede utilizar para crear

331
00:16:24,640 --> 00:16:26,640
aplicaciones que no sean solo de escritorio

332
00:16:26,640 --> 00:16:28,640
y para Windows. También se puede usar para

333
00:16:28,640 --> 00:16:30,640
Linux y Mac.

334
00:16:30,640 --> 00:16:32,640
Gracias.

335
00:16:38,640 --> 00:16:40,640
Gracias por la charla Daniel.

336
00:16:40,640 --> 00:16:42,640
Al comienzo mencionaste cosas

337
00:16:42,640 --> 00:16:44,640
con TK

338
00:16:44,640 --> 00:16:46,640
y TKinter.

339
00:16:46,640 --> 00:16:48,640
En tu opinión

340
00:16:48,640 --> 00:16:50,640
¿cuáles fueron como los features

341
00:16:50,640 --> 00:16:52,640
que te gustaron, por ejemplo, para usar

342
00:16:52,640 --> 00:16:54,640
Qt en vez de TKinter?

343
00:16:54,640 --> 00:16:56,640
Quizá la animación es algo más difícil

344
00:16:56,640 --> 00:16:58,640
pero a veces hay personas que están

345
00:16:58,640 --> 00:17:00,640
comenzando y solamente quieren hacer un par de

346
00:17:00,640 --> 00:17:02,640
botoncitos. ¿Qué cosa podría

347
00:17:02,640 --> 00:17:04,640
resaltar sobre de por qué? Por ejemplo, elegir

348
00:17:04,640 --> 00:17:06,640
esto sobre TKinter.

349
00:17:06,640 --> 00:17:08,640
Bueno, TKinter para mí

350
00:17:08,640 --> 00:17:10,640
principalmente no fue una utilidad

351
00:17:10,640 --> 00:17:12,640
porque básicamente había como

352
00:17:12,640 --> 00:17:14,640
que programar todo.

353
00:17:14,640 --> 00:17:16,640
Y no me entregaba toda esta suite de herramientas

354
00:17:16,640 --> 00:17:18,640
que me entrega Qt Project

355
00:17:18,640 --> 00:17:20,640
para poder desarrollar mis proyectos propios.

356
00:17:20,640 --> 00:17:22,640
Además de las animaciones que es una gran

357
00:17:22,640 --> 00:17:24,640
ventaja y por lo que he estado

358
00:17:24,640 --> 00:17:26,640
apreciando no he trabajado con ello.

359
00:17:26,640 --> 00:17:28,640
También puedo trabajar con modelos 3D

360
00:17:28,640 --> 00:17:30,640
y da como muchas más herramientas

361
00:17:30,640 --> 00:17:32,640
más amplias para programar.

362
00:17:32,640 --> 00:17:34,640
Por lo menos para mí

363
00:17:34,640 --> 00:17:36,640
que no tengo como esa sensación de

364
00:17:36,640 --> 00:17:38,640
poder imaginarme en mi cabeza la interfaz

365
00:17:38,640 --> 00:17:40,640
y codiarla de inmediato.

366
00:17:40,640 --> 00:17:42,640
Entonces todas estas ventajas para mí

367
00:17:42,640 --> 00:17:44,640
han sido como súper súper útiles

368
00:17:44,640 --> 00:17:46,640
y las he tratado de difundir por todos lados

369
00:17:46,640 --> 00:17:48,640
porque de verdad para mí fue una solución.

370
00:17:48,640 --> 00:17:50,640
¿Y has podido utilizar

371
00:17:50,640 --> 00:17:52,640
solamente widgets?

372
00:17:52,640 --> 00:17:54,640
O también has mirado

373
00:17:54,640 --> 00:17:56,640
por ejemplo de QML

374
00:17:56,640 --> 00:17:58,640
que también está ahí

375
00:17:58,640 --> 00:18:00,640
en Qt Creator está la opción de crear cosas

376
00:18:00,640 --> 00:18:02,640
con Qt Quick?

377
00:18:02,640 --> 00:18:04,640
Por ejemplo, si viste esos

378
00:18:04,640 --> 00:18:06,640
ejemplos que también estaban en Qt.

379
00:18:06,640 --> 00:18:08,640
Sí, o sea he visto los ejemplos como tú mencionas

380
00:18:08,640 --> 00:18:10,640
pero no, yo no he tenido que trabajar

381
00:18:10,640 --> 00:18:12,640
porque para mí lo que

382
00:18:12,640 --> 00:18:14,640
necesito presentar es como bastante simple

383
00:18:14,640 --> 00:18:16,640
y con los widgets para mí

384
00:18:16,640 --> 00:18:18,640
es suficiente. Por ejemplo, como te

385
00:18:18,640 --> 00:18:20,640
mencionaba igual la parte del 3D

386
00:18:20,640 --> 00:18:22,640
que lo encuentro muy interesante, me gustaría

387
00:18:22,640 --> 00:18:24,640
hacer, o sea trabajar con ello

388
00:18:24,640 --> 00:18:26,640
pero no está

389
00:18:26,640 --> 00:18:28,640
a mi nivel por lo menos en este momento.

390
00:18:28,640 --> 00:18:30,640
Y de tu experiencia con este proyecto

391
00:18:30,640 --> 00:18:32,640
¿qué fue lo más complicado

392
00:18:32,640 --> 00:18:34,640
para ti, por ejemplo, desde que comenzaste

393
00:18:34,640 --> 00:18:36,640
a mirar cosas de Qt

394
00:18:36,640 --> 00:18:38,640
y empezar a hacer este nuevo primer ejemplo?

395
00:18:38,640 --> 00:18:40,640
Para mí obviamente de todo

396
00:18:40,640 --> 00:18:42,640
esto de lo que vi es programar el tema

397
00:18:42,640 --> 00:18:44,640
de las animaciones, pero dentro

398
00:18:44,640 --> 00:18:46,640
de la complejidad no fue

399
00:18:46,640 --> 00:18:48,640
nada, o sea, me demoré

400
00:18:48,640 --> 00:18:50,640
un poquito en procesarlo y saber cómo trabajar

401
00:18:50,640 --> 00:18:52,640
esto de explotar una

402
00:18:52,640 --> 00:18:54,640
interfaz y que me salga otra

403
00:18:54,640 --> 00:18:56,640
o que cargue una barra, pero

404
00:18:56,640 --> 00:18:58,640
está todo muy bien pensado

405
00:18:58,640 --> 00:19:00,640
y además la otra ventaja es que trabaja

406
00:19:00,640 --> 00:19:02,640
con CamelCase y a mí me educaron

407
00:19:02,640 --> 00:19:04,640
programando en CamelCase, entonces

408
00:19:04,640 --> 00:19:06,640
entendí

409
00:19:06,640 --> 00:19:08,640
más o menos bien la estructura

410
00:19:08,640 --> 00:19:10,640
y cómo funciona. Además que tenía la experiencia

411
00:19:10,640 --> 00:19:12,640
de Teckinter

412
00:19:12,640 --> 00:19:14,640
y como que

413
00:19:14,640 --> 00:19:16,640
traspasé esos conocimientos que ya sabía a esta

414
00:19:16,640 --> 00:19:18,640
parte, entonces igual como que entendí

415
00:19:18,640 --> 00:19:20,640
bastante fluidamente la transición a

416
00:19:20,640 --> 00:19:22,640
esta herramienta que me da muchas más

417
00:19:22,640 --> 00:19:24,640
cosas que

418
00:19:24,640 --> 00:19:26,640
Teckinter.

419
00:19:26,640 --> 00:19:28,640
Gracias. Gracias a ti.

420
00:19:28,640 --> 00:19:30,640
¿Alguna otra

421
00:19:30,640 --> 00:19:32,640
pregunta?

422
00:19:36,640 --> 00:19:38,640
Me hacen caminar.

423
00:19:40,640 --> 00:19:42,640
Es el punto de hecho.

424
00:19:42,640 --> 00:19:44,640
¿Qué tal? Muy buena

425
00:19:44,640 --> 00:19:46,640
la charla y bastante

426
00:19:46,640 --> 00:19:48,640
explicativa y fácil de entender.

427
00:19:48,640 --> 00:19:50,640
Mi pregunta va más en torno

428
00:19:52,640 --> 00:19:54,640
con respecto a la complejidad

429
00:19:54,640 --> 00:19:56,640
a la hora de instalar todas las dependencias

430
00:19:56,640 --> 00:19:58,640
de Qt Project

431
00:19:58,640 --> 00:20:00,640
si lo comparas con

432
00:20:00,640 --> 00:20:02,640
algunas de sus otras alternativas, porque a veces

433
00:20:02,640 --> 00:20:04,640
te pasa que en Windows sí

434
00:20:04,640 --> 00:20:06,640
probablemente sea mucho más fácil porque tienes

435
00:20:06,640 --> 00:20:08,640
X, Y, Z librería ya preinstalada

436
00:20:08,640 --> 00:20:10,640
y a veces en Mac puede que

437
00:20:10,640 --> 00:20:12,640
no la tengas o en Linux

438
00:20:12,640 --> 00:20:14,640
puede que sí exista, pero es una versión tal vez

439
00:20:14,640 --> 00:20:16,640
muy antigua o que está totalmente nueva.

440
00:20:16,640 --> 00:20:18,640
Entonces no sé cómo se compara Qt

441
00:20:18,640 --> 00:20:20,640
en términos de estabilidad

442
00:20:20,640 --> 00:20:22,640
en torno a sus dependencias

443
00:20:22,640 --> 00:20:24,640
con los competidores

444
00:20:24,640 --> 00:20:26,640
que podría tener en ese sentido.

445
00:20:26,640 --> 00:20:28,640
Mira, para instalar

446
00:20:28,640 --> 00:20:30,640
Qt en este caso

447
00:20:30,640 --> 00:20:32,640
no es tan complejo porque

448
00:20:32,640 --> 00:20:34,640
como puedes codiar solamente

449
00:20:34,640 --> 00:20:36,640
con el gestor de paquetes de PIP

450
00:20:36,640 --> 00:20:38,640
puedes instalar Qt

451
00:20:38,640 --> 00:20:40,640
con

452
00:20:40,640 --> 00:20:42,640
todo lo que

453
00:20:42,640 --> 00:20:44,640
es codeo.

454
00:20:44,640 --> 00:20:46,640
O sea, así la herramienta.

455
00:20:46,640 --> 00:20:48,640
Y de ahí está la parte de todas

456
00:20:48,640 --> 00:20:50,640
las herramientas que ofrecen.

457
00:20:50,640 --> 00:20:52,640
La información está bastante

458
00:20:52,640 --> 00:20:54,640
completa en la página

459
00:20:54,640 --> 00:20:56,640
de ellos que es Qt.io

460
00:20:56,640 --> 00:20:58,640
por si acaso para que entren

461
00:20:58,640 --> 00:21:00,640
a ver la documentación, la comunidad

462
00:21:00,640 --> 00:21:02,640
y está todo muy bien digerible,

463
00:21:02,640 --> 00:21:04,640
muy fácil de instalar todo, etc.

464
00:21:04,640 --> 00:21:06,640
Y da como harto ejemplo.

465
00:21:06,640 --> 00:21:08,640
Y si no está ahí, la comunidad es

466
00:21:08,640 --> 00:21:10,640
súper, súper activa de Qt.

467
00:21:10,640 --> 00:21:12,640
Entonces cualquier cosa

468
00:21:12,640 --> 00:21:14,640
puedes meter al mismo foro de la comunidad

469
00:21:14,640 --> 00:21:16,640
e investigar. Yo todo lo que

470
00:21:16,640 --> 00:21:18,640
no he sabido me he metido ahí a

471
00:21:18,640 --> 00:21:20,640
investigar. No solamente ahí, sino que

472
00:21:20,640 --> 00:21:22,640
por ejemplo, StarCoverflow y

473
00:21:22,640 --> 00:21:24,640
esta página que usan

474
00:21:24,640 --> 00:21:26,640
como la gran mayoría de la gente cuando necesitan

475
00:21:26,640 --> 00:21:28,640
soluciones. Pero es una comunidad

476
00:21:28,640 --> 00:21:30,640
muy, muy, muy, muy activa. De verdad.

477
00:21:32,640 --> 00:21:34,640
Otra pregunta

478
00:21:34,640 --> 00:21:36,640
o cerramos por acá.

479
00:21:36,640 --> 00:21:38,640
3,

480
00:21:38,640 --> 00:21:40,640
2, 1.

481
00:21:40,640 --> 00:21:42,640
Ok, entonces en este caso nos despedimos

482
00:21:42,640 --> 00:21:44,640
de Daniel. Un aplauso para él. Muchas gracias.

483
00:21:46,640 --> 00:21:48,640
Tenemos

484
00:21:48,640 --> 00:21:50,640
un break un poquito más largo, pero

485
00:21:50,640 --> 00:21:52,640
volvemos a las...

486
00:21:52,640 --> 00:21:54,640
Ya te digo.

