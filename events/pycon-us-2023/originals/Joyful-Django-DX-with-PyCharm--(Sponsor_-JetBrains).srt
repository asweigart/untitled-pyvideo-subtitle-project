1
00:00:00,000 --> 00:00:09,880
against the Bloomberg profiler talk, so I really appreciate beating my estimate of five

2
00:00:09,880 --> 00:00:13,520
people attending my talk, where three of them are colleagues.

3
00:00:13,520 --> 00:00:15,160
So we'll go ahead and begin.

4
00:00:15,160 --> 00:00:19,760
Hi, I'm Paul Everett, Developer Advocate at JetBrains, best damn job in the world for

5
00:00:19,760 --> 00:00:22,440
the best damn company in the world.

6
00:00:22,440 --> 00:00:24,480
We're here to talk about PyCharm and Django.

7
00:00:24,480 --> 00:00:25,720
Thank you for coming to my talk.

8
00:00:25,720 --> 00:00:27,200
I really appreciate that.

9
00:00:27,200 --> 00:00:31,840
You step out in the hall and you trash talk the other people and you get people to come

10
00:00:31,840 --> 00:00:33,440
in.

11
00:00:33,440 --> 00:00:38,360
We're going to talk about Django in PyCharm and how to be a badass, and if that was the

12
00:00:38,360 --> 00:00:40,720
talk you thought you were in, good.

13
00:00:40,720 --> 00:00:44,320
If you expected to be in another talk, I'm okay with you just getting up and leaving.

14
00:00:44,320 --> 00:00:45,320
I'll cry a little.

15
00:00:45,320 --> 00:00:46,960
I'll introduce my colleagues.

16
00:00:46,960 --> 00:00:48,400
Roberto, raise your hand.

17
00:00:48,400 --> 00:00:49,920
PyCharm PMM.

18
00:00:49,920 --> 00:00:55,920
If you have a deep, deep wish for PyCharm, he's one of the people to come talk to, and

19
00:00:55,960 --> 00:01:00,480
when you go look at our booth and you're like, wow, that booth glows.

20
00:01:00,480 --> 00:01:05,120
You can go talk to him about it and give him a pat on the back and he'll give a shout out

21
00:01:05,120 --> 00:01:06,560
to Julia.

22
00:01:06,560 --> 00:01:10,160
And my colleague Jody.

23
00:01:10,160 --> 00:01:14,400
Jody is giving a talk on Saturday on data science in Python.

24
00:01:14,400 --> 00:01:18,080
Jody is now more famous than me in Python and I'm not bitter about that.

25
00:01:18,080 --> 00:01:20,000
Not at all.

26
00:01:20,080 --> 00:01:26,880
And then my new colleague Galina, who is the big brain for the future of PyCharm Roadmap.

27
00:01:26,880 --> 00:01:31,600
And one of the things we're doing in this talk is talking about being a badass in PyCharm,

28
00:01:31,600 --> 00:01:35,920
Django, getting in the flow, all that stuff, the I in IDE.

29
00:01:35,920 --> 00:01:45,240
Part of the talk is going to cover material from Adam Johnson's Django Developer Experience

30
00:01:45,240 --> 00:01:47,240
Booster, whatever, et cetera.

31
00:01:47,280 --> 00:01:52,480
And we're going to give away copies of his book in our booth and Galina will talk to

32
00:01:52,480 --> 00:01:54,480
you about how we're doing that.

33
00:02:17,480 --> 00:02:21,480
So you can just come up to the booth, find me.

34
00:02:21,480 --> 00:02:25,240
That's my face, but I don't think you're going to see me without a mask because it's

35
00:02:25,240 --> 00:02:27,240
mandatory to wear one today.

36
00:02:27,240 --> 00:02:33,400
So you just come up and you find this badge, whoever it's on, and this person is going

37
00:02:33,400 --> 00:02:35,400
to have those cards.

38
00:02:35,400 --> 00:02:37,400
And you can just ask me for a card.

39
00:02:37,400 --> 00:02:41,400
I have three of them, three different books and courses available.

40
00:02:41,400 --> 00:02:43,400
First come, first served.

41
00:02:43,400 --> 00:02:46,400
Please welcome to our booth downstairs after the talk.

42
00:02:47,400 --> 00:02:48,400
All right.

43
00:02:48,400 --> 00:02:54,400
And if you ever ask yourself what it's like to run more than 200 kilometers in one single

44
00:02:54,400 --> 00:02:58,400
race, she can talk to you about that too because she's a badass.

45
00:02:58,400 --> 00:03:00,400
Yeah.

46
00:03:00,400 --> 00:03:02,400
Yes.

47
00:03:02,400 --> 00:03:04,400
Okay.

48
00:03:04,400 --> 00:03:06,400
Let's go ahead and get started.

49
00:03:06,400 --> 00:03:08,400
Raise your hand if you are currently at PyCon.

50
00:03:08,400 --> 00:03:10,400
Yeah, cheap shot.

51
00:03:10,400 --> 00:03:14,400
Raise your hand if you have been doing Python longer than me.

52
00:03:14,400 --> 00:03:16,400
Yeah, yeah, trick question.

53
00:03:16,560 --> 00:03:19,560
Raise your hand if you do a lot of Django.

54
00:03:19,560 --> 00:03:22,560
Raise your hand if you do a little bit of Django.

55
00:03:22,560 --> 00:03:25,560
Raise your hand if you use PyCharm.

56
00:03:25,560 --> 00:03:27,560
All right, cool.

57
00:03:27,560 --> 00:03:33,560
This talk is aimed at moving from decent Django development to great Django development.

58
00:03:33,560 --> 00:03:35,560
We aspire to greatness.

59
00:03:35,560 --> 00:03:37,560
We don't always get there.

60
00:03:37,560 --> 00:03:39,560
That's what talking to Roberto and Galina will be for.

61
00:03:39,560 --> 00:03:44,560
We're going to show how to get into the flow and accomplish a lot of your Django development

62
00:03:44,720 --> 00:03:49,720
tasks using the IDE, integrated development environment.

63
00:03:49,720 --> 00:03:52,720
I'm going to really push the I.

64
00:03:52,720 --> 00:03:54,720
You want to use Git?

65
00:03:54,720 --> 00:03:56,720
Sit inside the IDE.

66
00:03:56,720 --> 00:03:58,720
It's got the world's best Git GUI integration.

67
00:03:58,720 --> 00:04:02,720
Same thing for all the different kinds of things that you might be tempted to go to

68
00:04:02,720 --> 00:04:08,720
a terminal and run PyTest instead of using it the way God wants you to, which is the

69
00:04:08,720 --> 00:04:12,720
integrated awesome test UI in PyCharm.

70
00:04:12,880 --> 00:04:14,880
I'm a big fan of that one in particular.

71
00:04:14,880 --> 00:04:16,880
Brian Ocken also.

72
00:04:16,880 --> 00:04:20,880
As we go through this, I was joking before some of you got in here.

73
00:04:20,880 --> 00:04:24,880
My job is to entertain you and kill another 56 minutes.

74
00:04:24,880 --> 00:04:26,880
Your job is to entertain me.

75
00:04:26,880 --> 00:04:33,880
And so I was encouraging people to come up front because one of you is smarter at PyCharm

76
00:04:33,880 --> 00:04:35,880
in Django than me.

77
00:04:35,880 --> 00:04:37,880
Maybe two, maybe ten.

78
00:04:37,880 --> 00:04:41,880
And you're going to have something I should have shared with everybody else and didn't

79
00:04:42,040 --> 00:04:44,040
stick your hand up.

80
00:04:44,040 --> 00:04:46,040
Tell me what you got.

81
00:04:46,040 --> 00:04:50,040
If you see me do something and you have something that is an extension of that, stick your hand

82
00:04:50,040 --> 00:04:51,040
up.

83
00:04:51,040 --> 00:04:53,040
Tell me what you got.

84
00:04:53,040 --> 00:04:55,040
If you have a question, stick your hand up.

85
00:04:55,040 --> 00:04:57,040
Tell her yes.

86
00:04:57,040 --> 00:04:59,040
Thank you.

87
00:04:59,040 --> 00:05:01,040
All right.

88
00:05:01,040 --> 00:05:03,040
Let's go ahead and begin.

89
00:05:03,040 --> 00:05:05,040
I'm going to begin with a PyCharm project that already exists.

90
00:05:05,040 --> 00:05:07,040
Django tutorial extended.

91
00:05:07,040 --> 00:05:09,040
You can get it from this GitHub repo.

92
00:05:09,200 --> 00:05:15,200
It walks you through every step that I'm about to show.

93
00:05:15,200 --> 00:05:20,080
If I started from scratch, one of the nice things that PyCharm does for you compared

94
00:05:20,080 --> 00:05:24,960
to other approaches, you don't go to the terminal, make your own virtual environment, install

95
00:05:24,960 --> 00:05:31,080
some PIP stuff in there, upgrade your PIP, do 15 other things that hook up the settings.

96
00:05:31,080 --> 00:05:38,480
If you just go to file new project Django, we will make a Django project for you.

97
00:05:38,920 --> 00:05:42,920
It will make a virtual env based on the clickety clicks that you put in here.

98
00:05:42,920 --> 00:05:46,920
It will download, do the PIP install for Django.

99
00:05:46,920 --> 00:05:50,920
Then it will wire up some of the magical PyCharm settings.

100
00:05:50,920 --> 00:05:53,920
What are some of these magical PyCharm settings?

101
00:05:53,920 --> 00:05:59,520
If I type Django, that would be a pretty good idea for where I would get started.

102
00:05:59,520 --> 00:06:03,760
It will enable Django support with this information.

103
00:06:03,760 --> 00:06:08,640
I'm telling you this because if you didn't do it this way and just opened something and

104
00:06:08,640 --> 00:06:14,000
needed to wire it up manually, go to settings, type Django, clickety click.

105
00:06:14,000 --> 00:06:16,400
And then some other settings as well.

106
00:06:16,400 --> 00:06:21,840
Alternatively, you could go and clone this repo from VCS.

107
00:06:21,840 --> 00:06:27,560
This repo has a requirements TXT in it.

108
00:06:27,560 --> 00:06:32,040
And it will, as part of the cloning, say, hey, requirements.txt, I'll make a virtual

109
00:06:32,120 --> 00:06:34,720
one for you and I will install all the packages in there.

110
00:06:34,720 --> 00:06:35,720
Oh, it's Django.

111
00:06:35,720 --> 00:06:38,040
I'll wire up the Django support.

112
00:06:38,040 --> 00:06:41,840
So that's the first thing that I won't be showing you.

113
00:06:41,840 --> 00:06:46,520
I'll be showing you the results of doing one of these steps.

114
00:06:46,520 --> 00:06:48,960
All right.

115
00:06:48,960 --> 00:06:49,960
Pause for a moment.

116
00:06:49,960 --> 00:06:50,960
Any questions?

117
00:06:50,960 --> 00:06:53,360
Any points to add?

118
00:06:53,360 --> 00:06:55,120
That was not the interesting part.

119
00:06:55,120 --> 00:07:00,120
Let's go ahead and run the Django server.

120
00:07:00,120 --> 00:07:08,240
Indeed.

121
00:07:08,240 --> 00:07:12,560
That is one of the types of interpreters that I could add.

122
00:07:12,560 --> 00:07:18,680
I'll turn on, I'm very aggressive on turning off all the Chrome in my IDE.

123
00:07:18,680 --> 00:07:20,560
So I'll turn on the status bar.

124
00:07:20,560 --> 00:07:25,440
And down here it tells me what interpreter I have.

125
00:07:25,440 --> 00:07:27,520
And it made this one for me.

126
00:07:27,520 --> 00:07:29,760
Nope, it inherited that one.

127
00:07:29,800 --> 00:07:35,360
I could add a new interpreter, local interpreter, and it would be Anaconda.

128
00:07:35,360 --> 00:07:43,560
I think it's putting it on the other screen.

129
00:07:43,560 --> 00:07:48,920
One of the choices is virtualenv or pipenv or poetry or conda.

130
00:07:48,920 --> 00:07:50,320
All right.

131
00:07:50,320 --> 00:07:51,320
Onward.

132
00:07:51,320 --> 00:07:57,800
I'm going to go to this template and I'm going to speed search to get there and get that

133
00:07:57,840 --> 00:07:58,840
set up.

134
00:07:58,840 --> 00:08:00,440
I'm going to run the Django server.

135
00:08:00,440 --> 00:08:02,800
This is called a run configuration.

136
00:08:02,800 --> 00:08:11,320
This is the way that we help you start your Python interpreter for Django, for Flask,

137
00:08:11,320 --> 00:08:14,080
for Fast API, for your own thing.

138
00:08:14,080 --> 00:08:15,280
What would that actually look like?

139
00:08:15,280 --> 00:08:17,620
Let me edit that configuration just to show.

140
00:08:17,620 --> 00:08:23,680
This is what we would create for you if you did add new Django server and you filled in

141
00:08:23,680 --> 00:08:25,480
some questions.

142
00:08:25,480 --> 00:08:31,280
Instead, I will edit that and see.

143
00:08:31,280 --> 00:08:33,120
I really didn't fill in any of the details.

144
00:08:33,120 --> 00:08:34,120
I just accepted the defaults.

145
00:08:34,120 --> 00:08:38,640
But I've got some things like don't run Django with reload, et cetera.

146
00:08:38,640 --> 00:08:42,840
I'm going to run the Django server.

147
00:08:42,840 --> 00:08:44,280
It's going to fire up.

148
00:08:44,280 --> 00:08:46,560
You'll see that it ran it with the reloader in place.

149
00:08:46,560 --> 00:08:49,080
I'm going to click on the link.

150
00:08:49,080 --> 00:08:54,640
And I have, via my colleague, Mukul, a nice, pretty welcome to Python.

151
00:08:54,640 --> 00:09:01,120
I can go look at the custom front end that is created for part of this workshop that

152
00:09:01,120 --> 00:09:03,240
shows the questions.

153
00:09:03,240 --> 00:09:06,960
What we did was we used the official Django tutorial.

154
00:09:06,960 --> 00:09:11,400
If you've gone through it, you might notice that it's polls.

155
00:09:11,400 --> 00:09:17,480
We just did the official tutorial and then added some things onto it.

156
00:09:17,480 --> 00:09:22,720
With that running, I've clicked on the link and I've navigated to the polls.

157
00:09:22,800 --> 00:09:27,720
If I went to the image for...

158
00:09:27,720 --> 00:09:32,560
Oh, no.

159
00:09:32,560 --> 00:09:49,960
If I went here and deleted that, saved, then in the Django reload server automatically

160
00:09:49,960 --> 00:09:51,800
handles template changes.

161
00:09:51,800 --> 00:09:53,560
I just have to hit reload.

162
00:09:53,560 --> 00:09:54,560
This isn't a PyTorrent thing.

163
00:09:54,560 --> 00:09:56,080
This is a Django thing.

164
00:09:56,080 --> 00:10:02,760
It's just to let you know that we are really in Django land.

165
00:10:02,760 --> 00:10:06,200
One of the things that will be cool in the future is if the world of Python catches up

166
00:10:06,200 --> 00:10:09,960
to the world of modern front ends and we're really good at live reload.

167
00:10:09,960 --> 00:10:14,160
Right now we're not that great at it.

168
00:10:14,360 --> 00:10:22,880
Let's say that I want to change not the templating, but the actual Python code.

169
00:10:22,880 --> 00:10:30,800
So I'm going to jump to index view using navigation by symbol.

170
00:10:30,800 --> 00:10:33,080
Pause for a moment.

171
00:10:33,080 --> 00:10:37,160
This is something I'm a really big believer in for the I in IDE.

172
00:10:37,160 --> 00:10:39,960
I never ever think about files.

173
00:10:39,960 --> 00:10:41,640
I act like they don't exist.

174
00:10:41,640 --> 00:10:43,560
I think about symbols.

175
00:10:43,560 --> 00:10:48,320
I don't want to remember that this class was in this file, in this subdirector, subdirector,

176
00:10:48,320 --> 00:10:49,320
subdirector.

177
00:10:49,320 --> 00:10:54,360
I always try to navigate by symbols or one of the other ways to navigate.

178
00:10:54,360 --> 00:11:01,760
It is a great relief for my brain to not memorize my file system and I just turn off tabs and

179
00:11:01,760 --> 00:11:04,480
just quickly jump back and forth between things.

180
00:11:04,480 --> 00:11:06,480
So I'm now on the index view.

181
00:11:06,480 --> 00:11:08,040
I'll hide that.

182
00:11:08,040 --> 00:11:13,080
And in here, let's say I'm showing three questions right now.

183
00:11:13,080 --> 00:11:17,240
Let's say I just wanted to show one question.

184
00:11:17,240 --> 00:11:20,520
And now when I reload, I just get one question.

185
00:11:20,520 --> 00:11:23,080
Again, that's a Django thing.

186
00:11:23,080 --> 00:11:29,840
It's doing the automatic reloader, but it's part of this one tool that's down here that's

187
00:11:29,840 --> 00:11:32,480
a custom run configuration.

188
00:11:32,480 --> 00:11:36,400
And you see in the act of doing that, we're just navigating from one thing to another

189
00:11:36,400 --> 00:11:38,280
a lot easier.

190
00:11:38,280 --> 00:11:44,200
You'll see that the Django server told us it was doing a reload.

191
00:11:44,200 --> 00:11:46,280
It saw, hey, views.py changed.

192
00:11:46,280 --> 00:11:48,520
I'm reloading.

193
00:11:48,520 --> 00:11:52,360
All right.

194
00:11:52,360 --> 00:12:01,040
Also related to kind of server-oriented things, we have a tool window custom to manage.py.

195
00:12:01,040 --> 00:12:07,760
So I'm going to do an action so I don't have to memorize every damn key combination.

196
00:12:07,800 --> 00:12:10,720
I've memorized like two, and this is one of them.

197
00:12:10,720 --> 00:12:17,480
So I'll type manage.py, say enter, and you'll see that we have a console down here with

198
00:12:17,480 --> 00:12:19,940
things like this.

199
00:12:19,940 --> 00:12:22,320
So I can run, make migrations, give it some arguments.

200
00:12:22,320 --> 00:12:25,640
We'll prompt for it, et cetera.

201
00:12:25,640 --> 00:12:28,480
It added a, what's the file that it added?

202
00:12:28,480 --> 00:12:32,100
Something about 0002 or something like that.

203
00:12:32,100 --> 00:12:35,320
And I could choose to go ahead and add that to Git.

204
00:12:35,320 --> 00:12:36,320
Yes?

205
00:12:36,320 --> 00:12:37,320
Yes?

206
00:12:37,320 --> 00:12:41,320
You sort of spread the word, but why don't you sort of fill out some things and then

207
00:12:41,320 --> 00:12:42,320
what do you do with that?

208
00:12:42,320 --> 00:12:43,320
Sure.

209
00:12:43,320 --> 00:12:44,600
Good question.

210
00:12:44,600 --> 00:12:47,880
My colleagues would say just do shift, shift.

211
00:12:47,880 --> 00:12:53,080
Oh, Paul, Paul, Paul, Paul, Paul, Paul, Paul, Paul, Paul, Paul, Paul, Paul, Paul, Paul,

212
00:12:53,080 --> 00:12:57,440
broke the first rule of presenting.

213
00:12:57,440 --> 00:13:02,800
Turn on presentation mode so you can see at the bottom what I'm typing.

214
00:13:02,800 --> 00:13:05,520
Shift, shift is the one thing to rule them all.

215
00:13:05,520 --> 00:13:11,080
And then it has tabs for all these other things and you can memorize some of them

216
00:13:11,080 --> 00:13:12,520
or you can memorize all of them.

217
00:13:12,520 --> 00:13:17,320
I haven't memorized classes because classes are a symbol.

218
00:13:17,320 --> 00:13:20,240
I'm just trying to narrow the pile down a little bit.

219
00:13:20,240 --> 00:13:22,240
Did that answer the question?

220
00:13:22,240 --> 00:13:23,400
Oh, okay.

221
00:13:23,400 --> 00:13:26,660
So the question is what are actions for?

222
00:13:26,660 --> 00:13:32,620
Actions are things you do in the IDE like running some code, refactor, rename, anything

223
00:13:32,620 --> 00:13:37,140
that would have a keystroke that you don't want to memorize.

224
00:13:37,140 --> 00:13:41,300
In fact, when, so watch, I'm going to do an action called shift, shift, search everywhere.

225
00:13:41,300 --> 00:13:42,300
Look at the bottom.

226
00:13:42,300 --> 00:13:46,860
It will tell you the name of the action and then cover it up.

227
00:13:46,860 --> 00:13:49,380
And it will tell you the path to do it through the menu.

228
00:13:49,380 --> 00:13:50,380
Yep.

229
00:13:50,380 --> 00:13:52,020
Yes, yes.

230
00:13:52,020 --> 00:13:53,020
Yeah.

231
00:13:53,020 --> 00:13:56,260
Two rookie mistakes I've made so far.

232
00:13:57,260 --> 00:13:59,260
Going to have to have some coffee.

233
00:14:04,060 --> 00:14:05,060
Okay.

234
00:14:05,060 --> 00:14:12,180
Now, we're going to get into a little bit of Soapbox.

235
00:14:12,180 --> 00:14:14,740
I'm running the server, right?

236
00:14:14,740 --> 00:14:15,740
Cool.

237
00:14:15,740 --> 00:14:25,500
I'm running it under the regular run machinery, but what if I just run it under the debugger?

238
00:14:25,500 --> 00:14:31,300
PyCharm and all of our IDEs have several things that people love about us.

239
00:14:31,300 --> 00:14:37,100
One of the biggest ones is our debugger, our PyCharm debugger has been great for a decade,

240
00:14:37,100 --> 00:14:40,220
especially when combined with Django.

241
00:14:40,220 --> 00:14:47,020
And thanks to Apple, our CPUs are so fast now that you won't really notice the performance

242
00:14:47,020 --> 00:14:49,100
hit in development.

243
00:14:49,100 --> 00:14:51,540
So always be debugging.

244
00:14:51,540 --> 00:14:53,180
That's what I say.

245
00:14:53,180 --> 00:15:00,180
Because if I run into a problem and to investigate it, I need to stop the run, start the debug,

246
00:15:00,180 --> 00:15:01,340
and then stop it and go back.

247
00:15:01,340 --> 00:15:02,340
I'm not.

248
00:15:02,340 --> 00:15:04,300
I'm just going to do a print statement.

249
00:15:04,300 --> 00:15:08,620
Instead, if you're already in debug mode, you just put a breakpoint there.

250
00:15:08,620 --> 00:15:09,780
So let's see what this would look like.

251
00:15:09,780 --> 00:15:13,140
I'm going to put a breakpoint in here, right here.

252
00:15:13,140 --> 00:15:16,260
Get query set in index view.

253
00:15:16,260 --> 00:15:18,220
All right.

254
00:15:18,220 --> 00:15:24,940
I'm going to go back over, hit reload, and it stops right there.

255
00:15:24,940 --> 00:15:28,580
And maybe I have a bug and I'm trying to fix it.

256
00:15:28,580 --> 00:15:32,620
Maybe I don't know what I wrote last week and I just want to poke around.

257
00:15:32,620 --> 00:15:37,500
And I'm now sitting in something where I can type expressions.

258
00:15:37,500 --> 00:15:43,700
I could say something like index view dot template name.

259
00:15:43,700 --> 00:15:46,340
Oh, okay, that's what the template name is.

260
00:15:46,340 --> 00:15:55,260
I could copy some of this code, right click, and say evaluate expression, and then interactively

261
00:15:55,260 --> 00:15:56,260
poke around.

262
00:15:56,260 --> 00:16:00,740
I could change state.

263
00:16:00,740 --> 00:16:06,060
And now in this frame, in the stack frame, I've changed some state, I've added some state,

264
00:16:06,060 --> 00:16:10,380
whatever, and then I could just, I could step into this code and go down into the Django

265
00:16:10,380 --> 00:16:13,780
Orm and poke around and see what's going on.

266
00:16:13,780 --> 00:16:18,620
For me, this is a great, great way to work.

267
00:16:18,620 --> 00:16:22,260
Always try and stay inside the INIDE.

268
00:16:22,260 --> 00:16:24,300
Now there's more that I could do on this.

269
00:16:24,300 --> 00:16:27,180
I'm going to go to the template for this.

270
00:16:27,180 --> 00:16:30,060
I mentioned, I hate, did I say something about, I hate files?

271
00:16:30,060 --> 00:16:32,220
Did I say something about that?

272
00:16:32,220 --> 00:16:37,580
So I want to go to the template for this and we put a nice little gutter icon here to navigate

273
00:16:37,580 --> 00:16:38,980
to the template.

274
00:16:38,980 --> 00:16:41,700
And then in the template, nice little gutter icon to go to the view.

275
00:16:42,100 --> 00:16:43,460
So I'm going to go to the template.

276
00:16:43,460 --> 00:16:49,780
I'm going to click like here, here, here.

277
00:16:49,780 --> 00:16:50,780
This is a Django template.

278
00:16:50,780 --> 00:16:53,940
It's not Python, right?

279
00:16:53,940 --> 00:17:00,140
But our debugger works in Django templates.

280
00:17:00,140 --> 00:17:03,180
This to me is a big, can I say BFD?

281
00:17:03,180 --> 00:17:04,680
Can I say BFD?

282
00:17:04,680 --> 00:17:06,940
This is a BFD.

283
00:17:07,020 --> 00:17:13,340
Because what would you do if you couldn't do this?

284
00:17:13,340 --> 00:17:20,100
Sprinkle some HTML comments in there to sprinkle to the output and just wiggle the wires until

285
00:17:20,100 --> 00:17:23,420
you figure out what was going on.

286
00:17:23,420 --> 00:17:24,580
With this, I can stop here.

287
00:17:24,580 --> 00:17:30,540
I've got a stack over here that I can go back up through all the Django stuff until I get

288
00:17:30,540 --> 00:17:36,700
to the code that might have called me to see what, yep, Django might have done wrong.

289
00:17:36,740 --> 00:17:39,100
I get to see all my variables here.

290
00:17:39,100 --> 00:17:47,980
I get to step over things as if it was Python code.

291
00:17:47,980 --> 00:17:49,140
Much better way to work.

292
00:17:49,140 --> 00:17:51,400
And again, always be debugging.

293
00:17:51,400 --> 00:17:54,940
If you're already in the debugger and you're just in the middle of writing templates and

294
00:17:54,940 --> 00:18:02,300
you get confused, just click, hit reload somewhere, and it will stop and you can figure out what's

295
00:18:02,300 --> 00:18:03,940
going wrong.

296
00:18:03,940 --> 00:18:05,780
Any questions on that?

297
00:18:06,780 --> 00:18:11,180
Raise your hand if you have used the PyCharm debugger with Django.

298
00:18:11,180 --> 00:18:13,580
Please everybody raise your hand.

299
00:18:13,580 --> 00:18:14,780
All right.

300
00:18:16,380 --> 00:18:17,980
Question or hand raise?

301
00:18:17,980 --> 00:18:18,780
Yep.

302
00:18:18,780 --> 00:18:32,780
When debugging the template, do you have access to the context and what was the other question?

303
00:18:32,780 --> 00:18:33,780
Request.

304
00:18:33,780 --> 00:18:35,380
They are in scope.

305
00:18:35,380 --> 00:18:36,780
So yes.

306
00:18:36,780 --> 00:18:37,780
Yep.

307
00:18:37,780 --> 00:18:41,780
And you have access to them and in that little variable view thingy at the bottom, you can

308
00:18:41,780 --> 00:18:46,480
expand them, go down further, see what they were.

309
00:18:46,480 --> 00:18:51,680
That is one that is a little bit tricky because, you know, with class-based views versus functional

310
00:18:51,680 --> 00:18:57,380
views, we've got to know what is the magic thing on the class that says where the context

311
00:18:57,380 --> 00:19:02,980
comes from in addition to the dictionary that you return as part of the view, if you do.

312
00:19:02,980 --> 00:19:03,980
Yeah, yeah.

313
00:19:03,980 --> 00:19:04,980
Yep, yep, yep.

314
00:19:05,380 --> 00:19:11,980
In fact, exactly what you're saying, the reason the breakpoint stopped on that line is because

315
00:19:11,980 --> 00:19:14,980
it was generating this.

316
00:19:17,780 --> 00:19:19,980
Okay, any other points or questions?

317
00:19:19,980 --> 00:19:20,980
Yes.

318
00:19:20,980 --> 00:19:25,980
Being in the debugging world, you already mentioned there isn't a performance penalty.

319
00:19:25,980 --> 00:19:26,980
Uh-huh.

320
00:19:26,980 --> 00:19:27,980
Ish.

321
00:19:27,980 --> 00:19:28,980
Okay.

322
00:19:28,980 --> 00:19:29,980
When did this change?

323
00:19:29,980 --> 00:19:35,980
Like, was there an improvement recently that being in debugging is kind of like advertising

324
00:19:35,980 --> 00:19:39,980
the first class ways to do the development or like things like that?

325
00:19:39,980 --> 00:19:40,980
Sure.

326
00:19:40,980 --> 00:19:43,980
The question was, when did it become fast?

327
00:19:43,980 --> 00:19:46,980
What was the cause for me making that statement?

328
00:19:46,980 --> 00:19:53,980
So a number of years ago, actually, through this awesomely beneficial, munificent company

329
00:19:53,980 --> 00:20:02,980
called JetBrains, we helped fund a speed-up to PyDevD to rewrite parts of it in C, in

330
00:20:02,980 --> 00:20:03,980
Cython, actually.

331
00:20:03,980 --> 00:20:05,980
So, that was the first speed-up.

332
00:20:05,980 --> 00:20:11,980
And then JetBrains went to Apple and convinced them to ship these new CPUs that would just

333
00:20:11,980 --> 00:20:12,980
speed everything up.

334
00:20:12,980 --> 00:20:14,980
So, you can thank us for that, too.

335
00:20:14,980 --> 00:20:15,980
All right.

336
00:20:15,980 --> 00:20:20,980
Any other questions or points about debugger?

337
00:20:20,980 --> 00:20:23,980
I have no idea how I'm doing on time.

338
00:20:23,980 --> 00:20:24,980
Okay.

339
00:20:24,980 --> 00:20:28,980
Let's get into some IDE features when you're doing Django development.

340
00:20:28,980 --> 00:20:29,980
No.

341
00:20:29,980 --> 00:20:33,980
I'll leave you running because always be debugging.

342
00:20:33,980 --> 00:20:34,980
Yep.

343
00:20:34,980 --> 00:20:49,980
So, the question is, if I said terminate there, it would terminate the process.

344
00:20:49,980 --> 00:20:52,980
Yeah.

345
00:20:52,980 --> 00:20:54,980
Yeah.

346
00:20:54,980 --> 00:20:58,980
I'll choose to blame Watchdog for that.

347
00:20:58,980 --> 00:21:03,980
You might have installed, you know, there are different ways to do the watcher for Django.

348
00:21:03,980 --> 00:21:07,980
And those all sound like much better culprits than us.

349
00:21:07,980 --> 00:21:09,980
So, I'm more than willing.

350
00:21:09,980 --> 00:21:14,980
No, honestly, get in touch with us if it's a chronic thing.

351
00:21:14,980 --> 00:21:15,980
Okay.

352
00:21:15,980 --> 00:21:16,980
Okay.

353
00:21:16,980 --> 00:21:18,980
IDE features for Django.

354
00:21:18,980 --> 00:21:23,980
Speeding up your development, velocity, and feeling joy in this world.

355
00:21:23,980 --> 00:21:28,980
I want to show how we autocomplete magic strings in Django.

356
00:21:28,980 --> 00:21:32,980
We were talking about symbols and things, navigate by symbol.

357
00:21:32,980 --> 00:21:35,980
And includes strings, not just templates and classes.

358
00:21:35,980 --> 00:21:37,980
So, I want to get to settings.

359
00:21:37,980 --> 00:21:39,980
How can I get to settings?

360
00:21:39,980 --> 00:21:42,980
I could, nope, not that.

361
00:21:42,980 --> 00:21:48,980
Instead, I will shift, shift, INS, and I will jump directly to installed apps.

362
00:21:48,980 --> 00:21:51,980
Because that's what I'm thinking I want to go to.

363
00:21:51,980 --> 00:21:54,980
I don't want to go to my settings.py file.

364
00:21:54,980 --> 00:21:56,980
I want to go to installed apps.

365
00:21:56,980 --> 00:22:00,980
Watch this.

366
00:22:00,980 --> 00:22:02,980
Cool.

367
00:22:02,980 --> 00:22:09,980
We autocom, we know that in Django, this symbol, which is a list of strings,

368
00:22:09,980 --> 00:22:11,980
points at package names.

369
00:22:11,980 --> 00:22:13,980
Python package names.

370
00:22:13,980 --> 00:22:18,980
And since we've indexed the world for you, we know who's naughty and nice.

371
00:22:18,980 --> 00:22:21,980
And we can install, we can autocomplete on that.

372
00:22:21,980 --> 00:22:24,980
And we could even do something like that.

373
00:22:24,980 --> 00:22:26,980
Spot a typo.

374
00:22:26,980 --> 00:22:30,980
So, that's one case of autocomplete doing your work for you.

375
00:22:30,980 --> 00:22:35,980
So, if I'm typing this, I'm like, was it poll config or polls config?

376
00:22:35,980 --> 00:22:37,980
I'll just skip both and do that.

377
00:22:37,980 --> 00:22:43,980
Oh, yes, thank you, speed typing, for completing that for me.

378
00:22:43,980 --> 00:22:52,980
I'm going to go to, to open the index.html file in the templates.

379
00:22:52,980 --> 00:22:55,980
Apologies, I will open the file system back up.

380
00:22:55,980 --> 00:23:00,980
Some of the things I did to get some of the magic is I walked up to these

381
00:23:00,980 --> 00:23:08,980
directories and right-click, mark directory as template folder.

382
00:23:08,980 --> 00:23:14,980
And then others are like resource root and I can get autocomplete on PNG files

383
00:23:14,980 --> 00:23:15,980
and things like that.

384
00:23:15,980 --> 00:23:19,980
That's only in the case when it isn't in a well-known place.

385
00:23:19,980 --> 00:23:25,980
Okay, so I'm in the template index.html for the polls and I'm on latest

386
00:23:25,980 --> 00:23:26,980
question list.

387
00:23:26,980 --> 00:23:30,980
This was the question just a second ago about context.

388
00:23:30,980 --> 00:23:37,980
So, we know that these two are associated.

389
00:23:37,980 --> 00:23:49,980
So, I can say, and I could navigate to it.

390
00:23:49,980 --> 00:23:52,980
If I'm like, what was the definition of that?

391
00:23:52,980 --> 00:23:54,980
Oh, it's over there.

392
00:23:54,980 --> 00:24:00,980
So, same spot in index.html.

393
00:24:00,980 --> 00:24:06,980
I want to, let's see, no, I just showed latest question list.

394
00:24:06,980 --> 00:24:08,980
I'm going to go back to installed apps.

395
00:24:08,980 --> 00:24:12,980
I'm going to go to it by symbol this time instead of search everywhere.

396
00:24:12,980 --> 00:24:17,980
And in here, if I want to navigate, we just showed autocomplete.

397
00:24:17,980 --> 00:24:18,980
I get navigation there as well.

398
00:24:18,980 --> 00:24:22,980
So, sometimes in Django we've got support for these magic strings.

399
00:24:22,980 --> 00:24:26,980
Personally, not a fan of the magic strings method because of the word magic

400
00:24:26,980 --> 00:24:27,980
in front of strings.

401
00:24:27,980 --> 00:24:33,980
But we have taught and continue to try to teach PyCharm Django's magic.

402
00:24:33,980 --> 00:24:39,980
Yep, we showed that.

403
00:24:39,980 --> 00:24:46,980
And then from an auto import perspective, if I'm in, let's see, I want to do

404
00:24:46,980 --> 00:24:47,980
auto import.

405
00:24:47,980 --> 00:24:52,980
I'm going to go to URL patterns.

406
00:24:52,980 --> 00:24:58,980
So, control, auto URL patterns.

407
00:24:58,980 --> 00:25:01,980
This is, if you do Django, this is familiar to you.

408
00:25:01,980 --> 00:25:04,980
This is where you wire up your URLs.

409
00:25:04,980 --> 00:25:10,980
You see that we have imports from views.

410
00:25:10,980 --> 00:25:12,980
But what if I didn't want to have to type views?

411
00:25:12,980 --> 00:25:17,980
But then I've got to go and say, like, index view.

412
00:25:17,980 --> 00:25:20,980
Okay, so I've got to type from, what was it?

413
00:25:20,980 --> 00:25:21,980
Where was it?

414
00:25:21,980 --> 00:25:22,980
You don't have to do that.

415
00:25:22,980 --> 00:25:28,980
You can just say index view.

416
00:25:28,980 --> 00:25:31,980
And it will auto complete for you.

417
00:25:31,980 --> 00:25:37,980
And it will auto complete and put the import for you and format your imports

418
00:25:37,980 --> 00:25:40,980
according to your preferences for how you like imports done.

419
00:25:40,980 --> 00:25:46,980
By default, we put core stuff and then a new line and then your stuff.

420
00:25:46,980 --> 00:25:47,980
And sorting as well.

421
00:25:47,980 --> 00:25:51,980
And then if you've got rules about collapse, all the things from one

422
00:25:51,980 --> 00:25:54,980
package into a parenseparable.

423
00:25:54,980 --> 00:25:57,980
And so I'll go and put this back the way it was.

424
00:25:57,980 --> 00:26:00,980
It doesn't have the as view in it.

425
00:26:00,980 --> 00:26:04,980
The auto import, there are a couple of things that I really want to push for.

426
00:26:04,980 --> 00:26:05,980
I talked about some of them.

427
00:26:05,980 --> 00:26:06,980
Navigate by symbol.

428
00:26:06,980 --> 00:26:07,980
Please, please, please.

429
00:26:07,980 --> 00:26:09,980
Let the IDE do the work for you.

430
00:26:09,980 --> 00:26:11,980
Talked about always be debugging.

431
00:26:11,980 --> 00:26:15,980
This is a case of let the IDE do the navigation for you.

432
00:26:15,980 --> 00:26:20,980
Always let the IDE generate your import for you.

433
00:26:20,980 --> 00:26:27,980
You may be having a great day and you're like, I know where that package is.

434
00:26:27,980 --> 00:26:32,980
Bam, bam, bam, bam, crap, back, back, back, back, bam, crap, back, back, back.

435
00:26:32,980 --> 00:26:35,980
The IDE could have done all of that for you.

436
00:26:35,980 --> 00:26:37,980
And it will put it in the right place for you.

437
00:26:37,980 --> 00:26:42,980
Always try to let auto complete do the work for you.

438
00:26:42,980 --> 00:26:46,980
Let's say I am in the index view.

439
00:26:46,980 --> 00:26:48,980
So I'm in the index view.

440
00:26:48,980 --> 00:26:50,980
I can navigate to it.

441
00:26:50,980 --> 00:26:55,980
This one I'll leave the file picker up.

442
00:26:55,980 --> 00:26:56,980
Watch this.

443
00:26:56,980 --> 00:27:02,980
So I'm in typing a template, you know, and I want to say index.

444
00:27:02,980 --> 00:27:03,980
Oh, good.

445
00:27:03,980 --> 00:27:06,980
Thank you, IDE, for doing my work for me.

446
00:27:06,980 --> 00:27:07,980
Enter.

447
00:27:07,980 --> 00:27:11,980
Oh, thank you for letting me navigate to it, IDE.

448
00:27:11,980 --> 00:27:12,980
That was really nice.

449
00:27:12,980 --> 00:27:15,980
Thank you for letting me know that didn't exist.

450
00:27:15,980 --> 00:27:16,980
Thank you, IDE.

451
00:27:16,980 --> 00:27:17,980
That was really nice.

452
00:27:17,980 --> 00:27:20,980
IDE, I don't like the name index.

453
00:27:20,980 --> 00:27:24,980
I like DJ for Django index in front of things.

454
00:27:24,980 --> 00:27:29,980
I could type that and I could go over and rename that, et cetera.

455
00:27:29,980 --> 00:27:39,980
Or I could refactor rename and say, DJ, watch what happens over here.

456
00:27:39,980 --> 00:27:43,980
Did I not have them all selected?

457
00:27:43,980 --> 00:27:45,980
Oh.

458
00:27:50,980 --> 00:27:51,980
I think it did it.

459
00:27:51,980 --> 00:27:54,980
It just, yeah, can't find it.

460
00:27:54,980 --> 00:27:58,980
Where, do I have a different template name?

461
00:27:58,980 --> 00:27:59,980
Oh, it's down here.

462
00:27:59,980 --> 00:28:01,980
That's why.

463
00:28:01,980 --> 00:28:04,980
Oh.

464
00:28:04,980 --> 00:28:06,980
I meant to do that.

465
00:28:06,980 --> 00:28:09,980
Because you can undo all of that.

466
00:28:09,980 --> 00:28:11,980
Oh, but I've already done something.

467
00:28:11,980 --> 00:28:12,980
All right.

468
00:28:12,980 --> 00:28:13,980
Let me put it back the way it was.

469
00:28:13,980 --> 00:28:16,980
It's part of the script.

470
00:28:16,980 --> 00:28:17,980
Okay.

471
00:28:17,980 --> 00:28:22,980
So keep an eye down here while I rename this to that.

472
00:28:22,980 --> 00:28:23,980
It renames the file.

473
00:28:23,980 --> 00:28:27,980
I change my mind and it puts it back the way it was.

474
00:28:27,980 --> 00:28:34,980
There are a lot of cases where the action that we were talking about in action does

475
00:28:34,980 --> 00:28:36,980
this, that, and the other thing.

476
00:28:36,980 --> 00:28:41,980
And you can undo it back to this, that, and the other thing, including get registration.

477
00:28:41,980 --> 00:28:42,980
Okay.

478
00:28:42,980 --> 00:28:45,980
That is the end of that segment.

479
00:28:45,980 --> 00:28:48,980
Any questions or comments or suggestions?

480
00:28:48,980 --> 00:28:52,980
Any pro tips on that?

481
00:28:52,980 --> 00:28:54,980
All right.

482
00:28:54,980 --> 00:28:56,980
Let's get into some fun template support stuff.

483
00:28:56,980 --> 00:28:59,980
I'm going to go back to my template.

484
00:28:59,980 --> 00:29:00,980
Yep, sure.

485
00:29:00,980 --> 00:29:01,980
Sure.

486
00:29:01,980 --> 00:29:02,980
Sure.

487
00:29:02,980 --> 00:29:03,980
Sure.

488
00:29:03,980 --> 00:29:04,980
Sure.

489
00:29:04,980 --> 00:29:28,980
The solution to that, the question is, hey, I can set my import preferences for me.

490
00:29:28,980 --> 00:29:29,980
Yay.

491
00:29:29,980 --> 00:29:30,980
I'm on a team, though.

492
00:29:30,980 --> 00:29:32,980
My team does not agree with me.

493
00:29:32,980 --> 00:29:33,980
We have a policy.

494
00:29:33,980 --> 00:29:34,980
Where do I put that policy?

495
00:29:34,980 --> 00:29:39,980
One of the things that I have in here if we get time is to do editor config, which covers

496
00:29:39,980 --> 00:29:40,980
a lot of things.

497
00:29:40,980 --> 00:29:43,980
I'm not sure it covers all those things.

498
00:29:43,980 --> 00:29:52,980
But you can also put them in tooling like black, and I have in here to show the community

499
00:29:52,980 --> 00:29:57,980
plugin for black, which I use all the time.

500
00:29:57,980 --> 00:29:58,980
Okay.

501
00:29:58,980 --> 00:30:06,980
I'm in a template, and on line 12, I want to show recreating this from scratch and using

502
00:30:06,980 --> 00:30:07,980
the ID help me.

503
00:30:07,980 --> 00:30:13,980
First thing I'm going to do is this thing called Emmet, E-M-M-E-T, for markup generation,

504
00:30:13,980 --> 00:30:17,980
I-M-G tab, and it starts prompting me for things.

505
00:30:17,980 --> 00:30:23,980
Now, I'm going to, in the middle of here, start doing Django template support, and I

506
00:30:23,980 --> 00:30:26,980
get autocomplete.

507
00:30:26,980 --> 00:30:31,980
Then, I'm going to go into the string, and I get autocomplete.

508
00:30:34,980 --> 00:30:42,980
If you were to ask yourself, hey, I wonder if I could navigate to that PNG file and actually

509
00:30:42,980 --> 00:30:44,980
view it in the IDE.

510
00:30:44,980 --> 00:30:46,980
So, you can.

511
00:30:46,980 --> 00:30:53,980
It's a string inside a template, inside Python, and we have taught the IDE how to handle all

512
00:30:53,980 --> 00:30:55,980
those things.

513
00:30:56,980 --> 00:30:57,980
Yep.

514
00:31:04,980 --> 00:31:10,980
This word static right here, or do you mean the value in here?

515
00:31:10,980 --> 00:31:12,980
Sure.

516
00:31:12,980 --> 00:31:15,980
So, the question is, where is it getting this from?

517
00:31:15,980 --> 00:31:18,980
So, there are well-known places in Django, right?

518
00:31:18,980 --> 00:31:24,980
Then, you write apps that are supposed to conform to a convention, but maybe it doesn't.

519
00:31:24,980 --> 00:31:31,980
And if you start autocompleting, it will look in the places it knows to look and see if

520
00:31:31,980 --> 00:31:36,980
it's got a child with the letters that you're typing, and you can influence that by walking

521
00:31:36,980 --> 00:31:38,980
up to something.

522
00:31:38,980 --> 00:31:40,980
Like, this is a well-known place.

523
00:31:40,980 --> 00:31:46,980
But if it wasn't, if I named it something different, I could go and say, speed up, speed

524
00:31:46,980 --> 00:31:53,980
up, say, mark directory as resource root, and then the IDE will treat that as a choice.

525
00:31:53,980 --> 00:31:54,980
Does that answer the question?

526
00:31:54,980 --> 00:31:56,980
All right, cool.

527
00:31:56,980 --> 00:32:00,980
So, I did this, the squiggly, all of that.

528
00:32:00,980 --> 00:32:05,980
So, in that case, if I put in a typo, I get noticed about that as well.

529
00:32:05,980 --> 00:32:09,980
Or if it's not a typo and I go and rename it on the other side, it will know.

530
00:32:09,980 --> 00:32:13,980
And you can actually do a search across all of your project for any problems such as that.

531
00:32:13,980 --> 00:32:17,980
You don't have to just be staring at it and guess that it's there.

532
00:32:17,980 --> 00:32:19,980
Okay.

533
00:32:19,980 --> 00:32:25,980
Before I get into the part that entertains me, is there anything you wanted me to show

534
00:32:25,980 --> 00:32:27,980
that I'm not?

535
00:32:27,980 --> 00:32:33,980
I will leave room for the truly sexy stuff in just a few minutes.

536
00:32:36,980 --> 00:32:38,980
That's the truly sexy stuff I had in mind.

537
00:32:38,980 --> 00:32:46,980
So, since you said so, I have attached this SQLite file to the database tool.

538
00:32:46,980 --> 00:32:51,980
PyCharm professional ships with WebStorm, which I'm also a developer advocate for,

539
00:32:51,980 --> 00:32:55,980
and DataGrip, our IDE for SQL.

540
00:32:55,980 --> 00:33:02,980
And so, I can walk up to a table, I can browse it, I can edit data, I can do queries,

541
00:33:02,980 --> 00:33:07,980
I can refactor, rename columns, and it changes into code or vice versa.

542
00:33:07,980 --> 00:33:11,980
I can navigate because we treat SQL stuff as symbols.

543
00:33:16,980 --> 00:33:22,980
Very good.

544
00:33:22,980 --> 00:33:31,980
If I was over, no wait.

545
00:33:31,980 --> 00:33:42,980
I'm in the Django ORM, but if I had some, if I was custom writing some SQL,

546
00:33:42,980 --> 00:33:53,980
and I said query equals select star from, et cetera,

547
00:33:53,980 --> 00:34:03,980
and I could teach it that this is a SQL string.

548
00:34:03,980 --> 00:34:04,980
Yep.

549
00:34:04,980 --> 00:34:11,980
In fact, I could tell it it's a SQLite string, and then I can get autocomplete on my tables

550
00:34:11,980 --> 00:34:16,980
and my columns.

551
00:34:16,980 --> 00:34:17,980
That's badass.

552
00:34:17,980 --> 00:34:19,980
Let's just do that.

553
00:34:19,980 --> 00:34:22,980
Since we're here.

554
00:34:22,980 --> 00:34:26,980
Does anybody remember one of the columns I had?

555
00:34:26,980 --> 00:34:27,980
Question ID.

556
00:34:27,980 --> 00:34:28,980
Yay.

557
00:34:28,980 --> 00:34:29,980
Good.

558
00:34:29,980 --> 00:34:30,980
All right.

559
00:34:30,980 --> 00:34:32,980
Et cetera.

560
00:34:32,980 --> 00:34:36,980
Look, by the way, I just navigated to that.

561
00:34:36,980 --> 00:34:39,980
I'm sitting on question ID, and I navigated to the definition.

562
00:34:39,980 --> 00:34:40,980
Yep.

563
00:34:40,980 --> 00:34:48,980
It did.

564
00:34:48,980 --> 00:34:50,980
I didn't actually select.

565
00:34:50,980 --> 00:34:55,980
When I did inject language, it just knows capital select.

566
00:34:55,980 --> 00:35:00,980
We think that's a SQL string, especially since I've configured a data source.

567
00:35:00,980 --> 00:35:06,980
The question was, instead of me telling it that this string in Python is SQL,

568
00:35:06,980 --> 00:35:07,980
could it just know?

569
00:35:07,980 --> 00:35:14,980
And it does just know.

570
00:35:14,980 --> 00:35:15,980
Okay.

571
00:35:15,980 --> 00:35:16,980
Tell us more about how it just knows.

572
00:35:16,980 --> 00:35:18,980
Does it read in kind of SQL?

573
00:35:18,980 --> 00:35:20,980
How it is and which time?

574
00:35:20,980 --> 00:35:24,980
It can, the well-known keywords in the SQL grammar.

575
00:35:24,980 --> 00:35:27,980
All right.

576
00:35:27,980 --> 00:35:37,980
I don't know the answer to that.

577
00:35:37,980 --> 00:35:38,980
I wish I did.

578
00:35:38,980 --> 00:35:42,980
As soon as I started saying that, I thought somebody's going to ask me, and I'm going

579
00:35:42,980 --> 00:35:43,980
to be embarrassed.

580
00:35:43,980 --> 00:35:49,980
Then let's just say it does.

581
00:35:49,980 --> 00:35:51,980
Let's live in that world.

582
00:35:51,980 --> 00:35:58,980
The question was, I said that refactor rename would change your code and your database structure.

583
00:35:58,980 --> 00:36:03,980
Would it go and change your model definition somewhere, like in your migration files or

584
00:36:03,980 --> 00:36:04,980
something like that?

585
00:36:04,980 --> 00:36:05,980
I don't know.

586
00:36:05,980 --> 00:36:08,980
It sounds like a damn good feature request, doesn't it?

587
00:36:08,980 --> 00:36:13,980
If only the PyCharm PMM was sitting right there.

588
00:36:13,980 --> 00:36:14,980
Okay.

589
00:36:14,980 --> 00:36:17,980
Let's do some full stack stuff.

590
00:36:17,980 --> 00:36:22,980
Raise your hand if you do React front ends or anything like that.

591
00:36:22,980 --> 00:36:24,980
Not as many as I thought.

592
00:36:24,980 --> 00:36:25,980
Good.

593
00:36:25,980 --> 00:36:29,980
Because we should be doing HTML, not JavaScript.

594
00:36:29,980 --> 00:36:30,980
But some people are.

595
00:36:30,980 --> 00:36:34,980
So let me show a quick tour through that.

596
00:36:34,980 --> 00:36:39,980
First what I'll start with is this is a project that has the Django rest framework in it.

597
00:36:39,980 --> 00:36:41,980
Doing okay on time.

598
00:36:41,980 --> 00:36:47,980
That means we know how to say JSON back to people asking for JSON instead of HTML.

599
00:36:47,980 --> 00:36:54,980
When you're developing like that, you might be tempted to go and go in the browser, use

600
00:36:54,980 --> 00:36:59,980
Postman, other kinds of ways to issue API requests.

601
00:36:59,980 --> 00:37:08,980
Instead, we've got this not nearly well enough appreciated thing called HTTP files.

602
00:37:08,980 --> 00:37:14,980
It's a file you can put into version control, share with everybody in the repository, open

603
00:37:14,980 --> 00:37:21,980
the file, and issue HTTP requests.

604
00:37:21,980 --> 00:37:23,980
That's an HTML request.

605
00:37:23,980 --> 00:37:25,980
That is a JSON request.

606
00:37:25,980 --> 00:37:30,980
It's got all kinds of features where you can parameterize variables, get a cookie, and

607
00:37:30,980 --> 00:37:32,980
put it in the next request.

608
00:37:32,980 --> 00:37:36,980
I can connect it, for example, to...

609
00:37:36,980 --> 00:37:41,980
I'm running on...

610
00:37:41,980 --> 00:37:44,980
Wrong index view.

611
00:37:44,980 --> 00:37:46,980
Oh, I want this one.

612
00:37:46,980 --> 00:37:53,980
I can connect it to setting a breakpoint and then going back to the HTTP and issue a request

613
00:37:53,980 --> 00:37:54,980
and stop on that breakpoint.

614
00:37:54,980 --> 00:37:57,980
Didn't have to go to a browser to issue the request.

615
00:37:57,980 --> 00:38:06,980
I am currently running the server in the background.

616
00:38:06,980 --> 00:38:15,980
It's a requirement to use the feature because it assumes you want to issue an HTTP request.

617
00:38:15,980 --> 00:38:19,980
It's an HTTP file that's issuing an HTTP request.

618
00:38:19,980 --> 00:38:23,980
I spent a lot of time thinking about your question.

619
00:38:23,980 --> 00:38:26,980
The question was, do you have to be running a Django server?

620
00:38:26,980 --> 00:38:33,980
I'm going to show, if we get time, how to do testing without running a Django server

621
00:38:33,980 --> 00:38:34,980
using test client.

622
00:38:34,980 --> 00:38:41,980
The default is that...

623
00:38:41,980 --> 00:38:42,980
That's right.

624
00:38:42,980 --> 00:38:47,980
The default, maybe not the wise.

625
00:38:47,980 --> 00:38:52,980
I will make sure we get time to get to that because I advertised it in the talk description

626
00:38:52,980 --> 00:38:55,980
about test-first development.

627
00:38:55,980 --> 00:38:58,980
With that, I can do other front-end...

628
00:38:58,980 --> 00:38:59,980
Yes?

629
00:38:59,980 --> 00:39:07,980
Is that HTTP back just specific to different or is it going to be used in other editors?

630
00:39:07,980 --> 00:39:11,980
It can be used in any of the zero other editors that implement it.

631
00:39:11,980 --> 00:39:16,980
I do work at a company where I am fighting every day to get people to use Python, but

632
00:39:16,980 --> 00:39:19,980
I come back to use that.

633
00:39:19,980 --> 00:39:21,980
That's all right.

634
00:39:21,980 --> 00:39:23,980
I actually don't even know anybody else's...

635
00:39:23,980 --> 00:39:26,980
It's an attempt to replace Postman.

636
00:39:26,980 --> 00:39:34,980
The question was, is that HTTP file...

637
00:39:34,980 --> 00:39:36,980
Is that syntax used by any other tools?

638
00:39:36,980 --> 00:39:37,980
None that I know of.

639
00:39:37,980 --> 00:39:38,980
Yes?

640
00:39:38,980 --> 00:39:44,980
Hey, let's see.

641
00:39:44,980 --> 00:39:46,980
If only I could get...

642
00:39:46,980 --> 00:39:50,980
Oh, yeah, autocomplete.

643
00:39:50,980 --> 00:39:51,980
Yes?

644
00:39:51,980 --> 00:39:56,980
I love the example part because it saves me the trouble of setting up a lot of it.

645
00:39:56,980 --> 00:39:59,980
It will give you a lot of examples and...

646
00:39:59,980 --> 00:40:02,980
Ah, so we have someone who knows this feature.

647
00:40:02,980 --> 00:40:08,980
There are some plugins on VS Code that poorly copy this.

648
00:40:08,980 --> 00:40:09,980
All right.

649
00:40:09,980 --> 00:40:10,980
That answers...

650
00:40:10,980 --> 00:40:15,980
I was also going to apply it to everybody.

651
00:40:15,980 --> 00:40:16,980
This is VS Code.

652
00:40:16,980 --> 00:40:17,980
I'm the only one with JetBrains.

653
00:40:17,980 --> 00:40:18,980
I'm not changing to this thing at all.

654
00:40:18,980 --> 00:40:19,980
But I told them that they could use this, and I added the file, and I told them you can

655
00:40:19,980 --> 00:40:20,980
just download a plugin that will enable the same features that JetBrains should do.

656
00:40:20,980 --> 00:40:35,980
We'll leave this out of the recording, if that's all right.

657
00:40:35,980 --> 00:40:39,980
Was there another point of question?

658
00:40:39,980 --> 00:40:42,980
Another thing I want to add, this is kind of a coming soon.

659
00:40:42,980 --> 00:40:45,980
We support it for Fast API and SQL Alchemy.

660
00:40:45,980 --> 00:40:50,980
What if you could autocomplete this side?

661
00:40:50,980 --> 00:40:59,980
So, that is something we call our endpoints feature that provides like code intelligence

662
00:40:59,980 --> 00:41:02,980
over into HTTP front ends and things.

663
00:41:02,980 --> 00:41:08,980
Like, you could be sitting in the middle of a JavaScript fetch, get the promise back,

664
00:41:09,980 --> 00:41:16,980
result.data.pl, and you may think, hey, over on the other side, I've got this swagger API

665
00:41:16,980 --> 00:41:19,980
who says what is the structure of this response?

666
00:41:19,980 --> 00:41:20,980
If only I...

667
00:41:20,980 --> 00:41:21,980
Yeah, we could do that.

668
00:41:21,980 --> 00:41:26,980
So, for Fast API, we can do that.

669
00:41:26,980 --> 00:41:28,980
We just need to teach the Django learn to do it.

670
00:41:28,980 --> 00:41:32,980
Let's say I'm in my template, my main...

671
00:41:32,980 --> 00:41:37,980
Oh, no, I want to go to base.

672
00:41:37,980 --> 00:41:40,980
I'm in my base template.

673
00:41:40,980 --> 00:41:46,980
Anybody recognize any of this?

674
00:41:46,980 --> 00:41:48,980
It is this.

675
00:41:48,980 --> 00:41:49,980
Tailwind.

676
00:41:49,980 --> 00:41:51,980
And one of the things that...

677
00:41:51,980 --> 00:41:54,980
Because I've already done it, I can't really show doing it, I don't think.

678
00:41:54,980 --> 00:41:55,980
Yep.

679
00:41:55,980 --> 00:42:00,980
We'll prompt and we'll say, hey, we noticed you're using this library out on the web.

680
00:42:00,980 --> 00:42:02,980
Do you want us to download it and index it?

681
00:42:02,980 --> 00:42:08,980
So, I said yes, download it and index it so that I can get autocomplete.

682
00:42:08,980 --> 00:42:11,980
Oh, I didn't get autocomplete on that one.

683
00:42:11,980 --> 00:42:14,980
Which one?

684
00:42:14,980 --> 00:42:15,980
Yep.

685
00:42:15,980 --> 00:42:17,980
That flexes from something else.

686
00:42:17,980 --> 00:42:24,980
And then, in fact, I will accept that and I can navigate to it because I downloaded the minified version.

687
00:42:24,980 --> 00:42:26,980
It's not as useful.

688
00:42:26,980 --> 00:42:35,980
I will say go ahead and reformat that and I get a better version of it.

689
00:42:35,980 --> 00:42:38,980
The WebStorm integration is so freaking cool.

690
00:42:38,980 --> 00:42:46,980
It exhibits itself in numerous ways such as CSS to HTML, navigation, refactor, rename, et cetera.

691
00:42:46,980 --> 00:42:50,980
Yep.

692
00:42:50,980 --> 00:42:52,980
Right, you had your hand up?

693
00:42:52,980 --> 00:43:02,980
I was going to say that...

694
00:43:02,980 --> 00:43:06,980
Yes, we have something called scopes.

695
00:43:06,980 --> 00:43:08,980
It may not be what you're asking for.

696
00:43:08,980 --> 00:43:17,980
But you can say only autocomplete in my project or in library sources or anything under this file system

697
00:43:17,980 --> 00:43:21,980
or you can make custom scopes.

698
00:43:21,980 --> 00:43:24,980
The question was how to filter the autocomplete.

699
00:43:24,980 --> 00:43:29,440
So, you said on WebStorm data

700
00:43:29,440 --> 00:43:31,440
you see different products and...

701
00:43:31,440 --> 00:43:33,440
Yep.

702
00:43:33,440 --> 00:43:36,440
But I think I'm getting an understanding that for all five persons,

703
00:43:36,440 --> 00:43:40,440
which one I need to tell you to get it good?

704
00:43:40,440 --> 00:43:44,440
Yes, if you have IntelliJ Ultimate, you have everything.

705
00:43:44,440 --> 00:43:48,440
That is our answer for if you want everything.

706
00:43:48,440 --> 00:43:54,440
Yep.

707
00:43:54,440 --> 00:43:58,440
I actually use Bulma.

708
00:43:58,440 --> 00:44:02,440
And sometimes I have Bulma locally as an NPM install.

709
00:44:02,440 --> 00:44:06,440
Sometimes I point to it with a link tag and either way I can index it.

710
00:44:06,440 --> 00:44:10,440
Does that answer the question?

711
00:44:10,440 --> 00:44:14,440
Okay, so that's tailwind.

712
00:44:14,440 --> 00:44:16,440
All right.

713
00:44:16,440 --> 00:44:18,440
Let's go ahead and show the React front end.

714
00:44:18,440 --> 00:44:20,440
I'm going to go to my package.json.

715
00:44:20,440 --> 00:44:28,440
This is where I can see a little bit of cool stuff from WebStorm.

716
00:44:28,440 --> 00:44:33,440
In here I can autocomplete on package names and autocomplete on versions

717
00:44:33,440 --> 00:44:37,440
instead of having to memorize things or go to the command line and do

718
00:44:37,440 --> 00:44:43,440
NPM install dash D axios at 1.3.16.

719
00:44:43,440 --> 00:44:45,440
Whatever.

720
00:44:45,440 --> 00:44:49,440
And what I'm going to do is I'm going to run the front end process under VEAT,

721
00:44:49,440 --> 00:44:52,440
which is kind of a Node.js thingy.

722
00:44:52,440 --> 00:44:56,440
Now I have a very ugly front end that I wrote.

723
00:44:56,440 --> 00:44:59,440
This is not Mukul's fault. This is my fault.

724
00:44:59,440 --> 00:45:02,440
But we are able to do React stuff.

725
00:45:02,440 --> 00:45:08,440
For example, if I want to go to the app component, navigate by symbol.

726
00:45:08,440 --> 00:45:12,440
That's source.app.tsx.

727
00:45:12,440 --> 00:45:15,440
This will open the file, jump directly to the symbol.

728
00:45:15,440 --> 00:45:20,440
It's jumping to where I last was in that symbol.

729
00:45:20,440 --> 00:45:24,440
And so this is the React component for app.

730
00:45:24,440 --> 00:45:29,440
Let's say I hadn't added the nav bar yet.

731
00:45:29,440 --> 00:45:36,440
I can get autocomplete of all the components in my project and watch up here,

732
00:45:36,440 --> 00:45:38,440
watch up here.

733
00:45:38,440 --> 00:45:45,440
It will generate the import for me and then I can close it and navigate to that symbol.

734
00:45:45,440 --> 00:45:55,440
Lots of cool features like I could take that and extract that to its own component.

735
00:45:55,440 --> 00:45:58,440
And I'll call that blah.

736
00:45:58,440 --> 00:46:01,440
And I can say maybe a function-based component.

737
00:46:01,440 --> 00:46:09,440
And so it put blah here, made me a component here, and I could then move that to its own file.

738
00:46:09,440 --> 00:46:15,440
So a lot of code intelligence, developer productivity stay in the flow, the I and IDE.

739
00:46:15,440 --> 00:46:19,440
I'm going to get into some of the things that Adam Johnson covers in his books.

740
00:46:19,440 --> 00:46:22,440
I promised I would do it and I've got time.

741
00:46:22,440 --> 00:46:28,440
He talks about in full stack development letting you use tooling.

742
00:46:28,440 --> 00:46:34,440
So we use Flake8 and Pylint and Black and everything on our side.

743
00:46:34,440 --> 00:46:36,440
What do they use on their side?

744
00:46:36,440 --> 00:46:37,440
Lots of choices.

745
00:46:37,440 --> 00:46:38,440
The market has spoken.

746
00:46:38,440 --> 00:46:40,440
They like something called Prettier.

747
00:46:40,440 --> 00:46:45,440
I have Prettier installed in my package.json.

748
00:46:45,440 --> 00:46:48,440
So we know that Prettier is there.

749
00:46:48,440 --> 00:46:58,440
And I can tell the IDE when I say format, I want you to format with Prettier, not with your own built-in formatting.

750
00:46:58,440 --> 00:47:03,440
When you save, every time you save, run Prettier on it and then write the file.

751
00:47:03,440 --> 00:47:08,440
So, for example, one of the things in Prettier will be fixing that.

752
00:47:08,440 --> 00:47:14,440
So now I reformatted code and it reformatted using Prettier.

753
00:47:14,440 --> 00:47:24,440
Control-Alt-L is burned to a crisp on my keyboard because in the world of front ends, I reformat my code.

754
00:47:24,440 --> 00:47:26,440
I don't know if any of you do this.

755
00:47:26,440 --> 00:47:30,440
I'm like, oh, I don't want to do this project.

756
00:47:30,440 --> 00:47:32,440
Reformat, reformat, reformat, reformat.

757
00:47:32,440 --> 00:47:42,440
I just keep hitting reformat as if I'm programming until I get back in the flow of what code I was trying to write.

758
00:47:42,440 --> 00:47:47,440
Okay. That handles Prettier in ESLint.

759
00:47:47,440 --> 00:47:50,440
Let's talk about Black.

760
00:47:50,440 --> 00:47:59,440
That's another thing in Adam's book, which again, we have coupons for available over in our booth.

761
00:47:59,440 --> 00:48:11,440
We don't at the moment directly integrate Black support, but there is a community plug-in.

762
00:48:11,440 --> 00:48:16,440
So if I go to plug-ins and I look at installed, I started using this last summer.

763
00:48:16,440 --> 00:48:19,440
I can tell you it's good.

764
00:48:19,440 --> 00:48:23,440
This is a plug-in for IntelliJ called Black Connect.

765
00:48:23,440 --> 00:48:27,440
It exhibits itself in preferences.

766
00:48:27,440 --> 00:48:31,440
Hey, format yourself.

767
00:48:31,440 --> 00:48:34,440
What's wrong with you?

768
00:48:34,440 --> 00:48:43,440
So if I go to Black Connect, I'll see the options, and I'll say I currently have it not set because I was going to show you.

769
00:48:43,440 --> 00:48:46,440
Let me go ahead and show you.

770
00:48:46,440 --> 00:48:48,440
We have editor config support.

771
00:48:48,440 --> 00:48:55,440
So let's say what you really want is a world with 14 spaces for indentation.

772
00:48:55,440 --> 00:48:58,440
That sounds like a great world to be in.

773
00:48:58,440 --> 00:49:04,440
I'm going to go back to my index view, and I'm going to reformat my code not with Black.

774
00:49:04,440 --> 00:49:07,440
This is with just PyCharm out of the box.

775
00:49:07,440 --> 00:49:14,440
So reformat code looks really good.

776
00:49:14,440 --> 00:49:20,440
So if you get paid by the space character, then this editor config setup is for you.

777
00:49:20,440 --> 00:49:26,440
But I don't, so I'm going to go and put it back to something natural.

778
00:49:26,440 --> 00:49:38,440
But then I can turn on Black, and instead of using editor config and PyCharm, I'm going to use what my team uses, what CI uses, Black.

779
00:49:38,440 --> 00:49:47,440
And with this plug-in, I can say whenever I do a reformat in PyCharm, don't use PyCharm's reformatting, use Black.

780
00:49:47,440 --> 00:49:50,440
Same thing for whenever I save.

781
00:49:50,440 --> 00:49:56,440
So again, if I reformat that, I actually used Black for that.

782
00:49:56,440 --> 00:50:04,440
In any of the two settings that Black supports for configuration, it would use it.

783
00:50:04,440 --> 00:50:07,440
Did I see a hand starting to go up?

784
00:50:14,440 --> 00:50:16,440
Yes, actions.

785
00:50:16,440 --> 00:50:20,440
We talked about, the question was, can I reformat a folder?

786
00:50:20,440 --> 00:50:26,440
Actions can be taken on a, we talked about scopes, right?

787
00:50:26,440 --> 00:50:32,440
Actions can be taken on a scope or a hierarchy or the entire project.

788
00:50:35,440 --> 00:50:37,440
All right.

789
00:50:38,440 --> 00:50:42,440
On to some more things that Adam talks about in his book.

790
00:50:42,440 --> 00:50:54,440
He talks about inline documentation or having a website, a webpage open so you can quickly see documentation for all these Django things.

791
00:50:54,440 --> 00:50:58,440
You know what's better than leaving your IDE for documentation?

792
00:50:58,440 --> 00:51:00,440
You know what's better than that?

793
00:51:00,440 --> 00:51:02,440
Not leaving your IDE for documentation.

794
00:51:02,440 --> 00:51:08,440
So I can just mouse over that, get docstrings and get a link to go view it.

795
00:51:08,440 --> 00:51:21,440
And in fact, if I'm in my index.html, I'm getting my stuff from, look at the bottom on this, from MDN.

796
00:51:21,440 --> 00:51:25,440
We actually give them some money to financially support them.

797
00:51:25,440 --> 00:51:31,440
And I could click on that link and go get the same information in full narrative form.

798
00:51:33,440 --> 00:51:37,440
That feature alone, I'm a man of a certain age.

799
00:51:37,440 --> 00:51:42,440
The past self is opaque to me, is opaque to current Paul.

800
00:51:42,440 --> 00:51:44,440
I don't remember what I wrote.

801
00:51:44,440 --> 00:51:52,440
So I leave notes to myself in docstrings so I can just hover over something or I do type annotations and that kind of thing.

802
00:51:52,440 --> 00:51:55,440
Virtual environments we covered.

803
00:51:55,440 --> 00:52:00,440
PyCharm's really good at discovering virtual environments and making them for you.

804
00:52:00,440 --> 00:52:03,440
We talked about the React front end and prettier.

805
00:52:03,440 --> 00:52:06,440
I have IPython installed.

806
00:52:06,440 --> 00:52:11,440
You can see it because it's right there.

807
00:52:11,440 --> 00:52:14,440
I could install a different version.

808
00:52:14,440 --> 00:52:20,440
And then PyCharm will say, hey, I see there are changes.

809
00:52:20,440 --> 00:52:22,440
Would you like to install the changes?

810
00:52:22,440 --> 00:52:23,440
That's a convenient little thing.

811
00:52:23,440 --> 00:52:35,440
With IPython installed, now if I go to the Python console, I'll go through it this way.

812
00:52:35,440 --> 00:52:44,440
When we fire up the thing in PyCharm called the Python console, the interactive REPL, notice we also fire up the Django support.

813
00:52:44,440 --> 00:52:49,440
And notice because what PyCharm did was said, hey, do you have IPython installed?

814
00:52:49,440 --> 00:52:51,440
Oh, you do.

815
00:52:51,440 --> 00:52:54,440
That must be because you want to use IPython.

816
00:52:54,440 --> 00:53:01,440
So now the REPL looks like IPython instead of the normal bracket, bracket, bracket REPL.

817
00:53:01,440 --> 00:53:12,440
And all those things that you would expect from IPython like syntax colorizing and its autocomplete, you would get.

818
00:53:12,440 --> 00:53:16,440
That's the Python console with IPython.

819
00:53:16,440 --> 00:53:19,440
We talked about editor config and black.

820
00:53:19,440 --> 00:53:22,440
And let's see.

821
00:53:22,440 --> 00:53:30,440
Now, yes, I have this mystical ability to pull in at the exact time.

822
00:53:30,440 --> 00:53:33,440
So I've got seven minutes to show the thing I wanted to show.

823
00:53:33,440 --> 00:53:37,440
Testing.

824
00:53:37,440 --> 00:53:40,440
We all do it wrong.

825
00:53:40,440 --> 00:53:42,440
We write Django code.

826
00:53:42,440 --> 00:53:46,440
We go over to our browser and hit reload.

827
00:53:46,440 --> 00:53:50,440
We go sprinkle print statements to the console.

828
00:53:50,440 --> 00:53:54,440
We do console log in the HTML to look at the dev tools.

829
00:53:54,440 --> 00:53:57,440
We go to our terminal to run our tests.

830
00:53:57,440 --> 00:53:59,440
Boing, boing, boing, boing, boing, boing, boing, boing, boing.

831
00:53:59,440 --> 00:54:01,440
All of that friction.

832
00:54:01,440 --> 00:54:06,440
What if you could just stay in one place and get all of your workflows brought to you?

833
00:54:06,440 --> 00:54:10,440
What if you could develop an entire site and never go to a browser?

834
00:54:10,440 --> 00:54:13,440
That's the way I do my front end development.

835
00:54:13,440 --> 00:54:15,440
It's the way I do my Django development.

836
00:54:15,440 --> 00:54:19,440
So let's go to a test.

837
00:54:19,440 --> 00:54:23,440
And this is a test in Django.

838
00:54:23,440 --> 00:54:26,440
This is a test in Django using PyTest.

839
00:54:26,440 --> 00:54:29,440
Let's find out who's naughty and nice.

840
00:54:29,440 --> 00:54:33,440
Raise your hand if, let's go back to the beginning.

841
00:54:33,440 --> 00:54:35,440
Raise your hand if you do Django development.

842
00:54:35,440 --> 00:54:37,440
And keep it up.

843
00:54:37,440 --> 00:54:42,440
Raise your hand if you do Django development and write tests.

844
00:54:42,440 --> 00:54:48,440
So we have a few honest people and a few people who are pulling my leg.

845
00:54:48,440 --> 00:54:54,440
Raise your hand if you do PyTest instead of Django test runner.

846
00:54:54,440 --> 00:54:56,440
Okay.

847
00:54:56,440 --> 00:54:59,440
JetBrains does the Django developer survey.

848
00:54:59,440 --> 00:55:02,440
And we did the one in 2022, right?

849
00:55:02,440 --> 00:55:05,440
Roberto works with the Django Software Foundation.

850
00:55:05,440 --> 00:55:13,440
We actually generate 25% of their revenue through the Django giveaway thing that we do.

851
00:55:13,440 --> 00:55:16,440
That's about right, right?

852
00:55:16,440 --> 00:55:26,440
In last year's survey, way more, like 15% more people used PyTest as a Django test runner than the Django test runner.

853
00:55:26,440 --> 00:55:28,440
I was surprised about that.

854
00:55:28,440 --> 00:55:31,440
I thought more people would use the Django test runner.

855
00:55:31,440 --> 00:55:36,440
Raise your hand if you use the Django test runner and not PyTest.

856
00:55:36,440 --> 00:55:39,440
You raised your hand both times.

857
00:55:39,440 --> 00:55:40,440
No, you didn't. Okay.

858
00:55:40,440 --> 00:55:41,440
All right.

859
00:55:41,440 --> 00:55:43,440
So I'm using PyTest in this project.

860
00:55:43,440 --> 00:55:58,440
And I'm using PyTest Django to give me this cool database fixture that will do an in-memory database and throw it away on every request and have some little fix up functions and stuff like that.

861
00:55:58,440 --> 00:56:07,440
And I'm also doing a fixture to populate the database, which is thrown away on every test.

862
00:56:07,440 --> 00:56:12,440
But I'm also importing the Django test client.

863
00:56:12,440 --> 00:56:13,440
And I'm not importing it.

864
00:56:13,440 --> 00:56:15,440
It's a fixture that could be provided to me.

865
00:56:15,440 --> 00:56:20,440
And when you are asking your question about the server, watch this.

866
00:56:20,440 --> 00:56:31,440
Do you agree that I am not running a Django server?

867
00:56:31,440 --> 00:56:42,440
So I just issued a web request, got HTML back, put it through Beautiful Soup and asserted that it had the number of poll questions that I was looking for.

868
00:56:42,440 --> 00:56:49,440
Because the Django test client is a fake WSGI server.

869
00:56:49,440 --> 00:56:52,440
It's not an actual socket or anything.

870
00:56:52,440 --> 00:57:03,440
It just intercepts and everything downstream thinks an actual HTTP server was involved, which makes this a super cool way to develop.

871
00:57:03,440 --> 00:57:13,440
What I do is I split right and I put my code over here and I put my code here, test here, test output here.

872
00:57:13,440 --> 00:57:14,440
And that's my moment of zen.

873
00:57:14,440 --> 00:57:17,440
It programs my brain that I'm under control.

874
00:57:17,440 --> 00:57:19,440
When I see this, I'm in the flow.

875
00:57:19,440 --> 00:57:25,440
I can go slow and I can go to the correct index view.

876
00:57:25,440 --> 00:57:35,440
And I can put a break point and I can run my tests under the debugger.

877
00:57:35,440 --> 00:57:36,440
Yep.

878
00:57:36,440 --> 00:57:41,440
And I can move that and I can continue and I can run it again under the debugger.

879
00:57:41,440 --> 00:57:43,440
And it didn't stop that time.

880
00:57:43,440 --> 00:57:47,440
But then I can say, hey, is it really zero?

881
00:57:47,440 --> 00:57:48,440
Okay.

882
00:57:48,440 --> 00:57:50,440
I don't have to do anything different.

883
00:57:50,440 --> 00:57:51,440
Just rerun it.

884
00:57:51,440 --> 00:57:52,440
It's the debugger.

885
00:57:52,440 --> 00:57:55,440
So it's right there and I can look at the rows.

886
00:57:55,440 --> 00:57:57,440
Right there.

887
00:57:57,440 --> 00:57:59,440
Did I go to Chrome?

888
00:57:59,440 --> 00:58:00,440
Did you see Chrome?

889
00:58:00,440 --> 00:58:02,440
Did you see Firefox?

890
00:58:02,440 --> 00:58:04,440
Did you see Safari?

891
00:58:04,440 --> 00:58:11,440
I can stay right here under total control with the debugger and the testing.

892
00:58:11,440 --> 00:58:13,440
No server involved.

893
00:58:13,440 --> 00:58:15,440
And it's freaking fast.

894
00:58:15,440 --> 00:58:20,440
It is such a more joyful way for me to develop.

895
00:58:20,440 --> 00:58:25,440
And I'm leaving behind all of these little statements.

896
00:58:25,440 --> 00:58:30,440
You know, beautiful soup lets me do CSS queries to go select things.

897
00:58:30,440 --> 00:58:33,440
I'm not using Selenium.

898
00:58:33,440 --> 00:58:40,440
And I'm building up a base of tests which later will save.

899
00:58:40,440 --> 00:58:42,440
Let me see if I get this right.

900
00:58:42,440 --> 00:58:46,440
Save future Paul from current Paul or maybe current Paul from future Paul.

901
00:58:46,440 --> 00:58:48,440
One of the Pauls.

902
00:58:48,440 --> 00:58:50,440
Because I'm building up these tests.

903
00:58:50,440 --> 00:58:53,440
Not because I want to eat my vegetables.

904
00:58:53,440 --> 00:58:57,440
It's actually because I'm lazy and I don't want to go to a browser all the time.

905
00:58:57,440 --> 00:58:58,440
Yes?

906
00:58:58,440 --> 00:59:03,440
Yep. Yep.

907
00:59:03,440 --> 00:59:12,440
Yep.

908
00:59:12,440 --> 00:59:19,440
PyTest has a knob where you can turn on like verbose mode and it will tell you for whatever test you chose.

909
00:59:19,440 --> 00:59:22,440
Like I said, go walk up to that one test and run it.

910
00:59:22,440 --> 00:59:26,440
And PyTest would tell you that.

911
00:59:26,440 --> 00:59:27,440
Sure.

912
00:59:27,440 --> 00:59:31,440
In this release cycle, we are improving our fixture support.

913
00:59:31,440 --> 00:59:33,440
Come to the booth and see us.

914
00:59:33,440 --> 00:59:35,440
Because that's actually a pretty good point.

915
00:59:35,440 --> 00:59:46,440
What I'd love to be able to do is mouse over that and have it tell me, you know, navigate to it.

916
00:59:46,440 --> 00:59:57,440
Yep.

917
00:59:57,440 --> 00:59:59,440
Yeah.

918
00:59:59,440 --> 01:00:03,440
And your first thought is it's session scoped instead of, yeah, yeah.

919
01:00:03,440 --> 01:00:04,440
Yeah.

920
01:00:04,440 --> 01:00:05,440
Okay.

921
01:00:05,440 --> 01:00:06,440
Well, there you go.

922
01:00:06,440 --> 01:00:07,440
There you go.

923
01:00:07,440 --> 01:00:11,440
Yeah.

924
01:00:11,440 --> 01:00:12,440
Yeah, yeah, yeah, yeah.

925
01:00:12,440 --> 01:00:13,440
That's a good idea.

926
01:00:13,440 --> 01:00:14,440
That's a good idea.

927
01:00:14,440 --> 01:00:28,440
At the moment, our work is focused on getting you to the right fixture because if you override in magical ways, we are good but not great at resolving to the correct one that PyTest would have chosen.

928
01:00:28,440 --> 01:00:29,440
That's our first thing.

929
01:00:29,440 --> 01:00:31,440
But that's a very interesting idea.

930
01:00:31,440 --> 01:00:35,440
Because we probably have that information available because we indexed it.

931
01:00:35,440 --> 01:00:40,440
Any other questions?

932
01:00:40,440 --> 01:00:43,440
One minute over.

933
01:00:43,440 --> 01:00:44,440
That's all right.

934
01:00:44,440 --> 01:00:47,440
There's a hell of a question.

935
01:00:47,440 --> 01:00:54,440
So remember, anyone that's here that wants a copy of Adam Johnson's book, go over to our booth, see Galena.

936
01:00:54,440 --> 01:00:56,440
She's got the coupons.

937
01:00:56,440 --> 01:01:07,440
If you have a killer idea about how we could make Django development great, go see Roberto.

938
01:01:07,440 --> 01:01:09,440
And then he can follow up with you.

939
01:01:09,440 --> 01:01:10,440
We can file a ticket.

940
01:01:10,440 --> 01:01:14,440
Go look and see if someone's already requested that kind of thing.

941
01:01:14,440 --> 01:01:15,440
Thank you for listening.

942
01:01:15,440 --> 01:01:16,440
Thank you for participating.

943
01:01:16,440 --> 01:01:19,440
Come see me tomorrow in my PyScript talk.

944
01:01:19,440 --> 01:01:26,440
It's going to be modestly informative but certainly funny.

945
01:01:26,440 --> 01:01:29,440
I don't aim for entertainment.

946
01:01:29,440 --> 01:01:32,440
And come and see us in the booth anytime with ideas.

947
01:01:32,440 --> 01:01:37,440
Thank you for sitting with us.

