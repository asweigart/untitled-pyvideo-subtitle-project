1
00:00:00,000 --> 00:00:06,280
Buenos días. Seguimos por aquí con el desarrollo de lo que son las PyCon

2
00:00:06,280 --> 00:00:12,120
charlas y tenemos nuestra próxima charla que es a cargo de Alison Orellana.

3
00:00:12,120 --> 00:00:17,160
Alison es software developer, master en diseño y producción multimedia, ingeniera

4
00:00:17,160 --> 00:00:22,640
informática de la Universidad Mayor de San Simón con especialización en

5
00:00:22,640 --> 00:00:26,520
ciencia de datos. Ella es líder de la comunidad de PyLadies de Cochabamba,

6
00:00:26,520 --> 00:00:31,320
instructora de programación y computación en Cisco Network Academy,

7
00:00:31,320 --> 00:00:35,800
apasionada por el aprendizaje y la enseñanza en diversas áreas. Así que

8
00:00:35,800 --> 00:00:40,040
démosle un aplauso y una bienvenida a Alison.

9
00:00:45,520 --> 00:00:52,320
Ok, bueno muchas gracias y bueno agradecida de estar acá nuevamente dentro

10
00:00:52,320 --> 00:00:57,720
de PyCon Estados Unidos 2023 y bueno ya me había dado un pequeño adelanto de

11
00:00:57,720 --> 00:01:01,800
mí y bueno lo que voy a presentar es OCR como reconocimiento y obtención de

12
00:01:01,800 --> 00:01:07,680
información a través de imágenes. Bueno ya comentó un poquito de mí, hago

13
00:01:07,680 --> 00:01:12,200
un poco de software, hago un poco de ciencia de datos, un poquito de

14
00:01:12,200 --> 00:01:17,560
automation. Actualmente igual estoy aprendiendo algunas cosas más, entonces

15
00:01:17,560 --> 00:01:20,760
básicamente me encanta aprender y también enseñar algunas de las cosas

16
00:01:20,760 --> 00:01:24,040
que puede intentar enseñar.

17
00:01:24,120 --> 00:01:30,920
Bueno inicialmente podemos decir que la visión computacional es una parte como

18
00:01:30,920 --> 00:01:35,120
una rama de inteligencia artificial, si bien tiene que ver con machine learning,

19
00:01:35,120 --> 00:01:39,440
es un área especializada en el manejo de imágenes o información visual.

20
00:01:39,440 --> 00:01:46,320
Entonces tiene bastante impacto por esos avances, algoritmos, la manera en la que

21
00:01:46,320 --> 00:01:50,320
se está tratando las imágenes. Actualmente existen muchas IA que manejan

22
00:01:50,320 --> 00:01:55,040
este tipo de información, entonces se requiere por un lado la capacidad de

23
00:01:55,040 --> 00:02:00,160
algún dispositivo que se vaya a captar o que permita captar imágenes y lo otro

24
00:02:00,160 --> 00:02:04,120
es también la capacidad de los algoritmos que se estén utilizando.

25
00:02:04,120 --> 00:02:09,560
Bueno ahí como mencionó también para poder transmitir esa información.

26
00:02:09,560 --> 00:02:14,880
¿Cómo funciona? Bueno acá se requiere una gran cantidad de datos dado que son

27
00:02:14,880 --> 00:02:19,840
imágenes. Una imagen está bueno compuesta por lo que son píxeles, cada

28
00:02:19,840 --> 00:02:25,000
píxel tiene información de bastante que puede variar de un píxel a otro, puede

29
00:02:25,000 --> 00:02:31,680
ser brillo, luminosidad, el hcb por ejemplo o los colores, entonces cada uno

30
00:02:31,680 --> 00:02:35,960
de los píxeles da una información bastante completa y compleja en sí.

31
00:02:35,960 --> 00:02:43,320
Por ello es que en una imagen va a depender de la cantidad o el tamaño que se pueda

32
00:02:43,320 --> 00:02:47,600
obtener para poder ir analizando cada uno de esos píxeles.

33
00:02:47,600 --> 00:02:52,840
Acá se utilizan dos tecnologías que es el aprendizaje profundo, esa parte que va

34
00:02:52,840 --> 00:02:56,120
con Machine Learning justamente, donde se tiene algún tipo de base de

35
00:02:56,120 --> 00:03:00,520
información por detrás para obtener los datos para posteriormente ir a analizar.

36
00:03:00,520 --> 00:03:05,480
Y lo otro es la red convocacional, hacer las distintas etapas para que mi mismo

37
00:03:05,480 --> 00:03:09,920
algoritmo pueda reconocer algún tipo de información.

38
00:03:11,200 --> 00:03:16,240
¿Cuáles son los objetivos? Este procesamiento de imágenes va a permitir

39
00:03:16,240 --> 00:03:21,640
mejorar la calidad de las imágenes, por un lado puede permitir cambiarlas, hacer

40
00:03:21,640 --> 00:03:25,640
filtros, hacer algún tipo de incluso interpretación posterior.

41
00:03:25,640 --> 00:03:30,880
Entonces, ¿qué puedo hacer con eso? Acá hay algunos ejemplos, obviamente pueden

42
00:03:30,880 --> 00:03:36,400
ser más. Por un lado es la eliminación de defectos, tengo una imagen que está

43
00:03:36,400 --> 00:03:41,320
incompleta o que tiene algún tipo de falla. A partir de datos que ya tengo como

44
00:03:41,320 --> 00:03:45,480
base puedo ir cambiando o bueno verificando cuáles son los patrones que

45
00:03:45,480 --> 00:03:49,960
siga otra imagen y poder amoldar a lo que ya tengo. Entonces reconstruiría mi

46
00:03:49,960 --> 00:03:55,680
imagen y podría eliminar los defectos o mejorar la imagen. Eliminar problemas,

47
00:03:55,680 --> 00:04:00,200
puede que una imagen tenga algún tipo de, no sé, alguna raya, alguna rajadura o

48
00:04:00,200 --> 00:04:07,120
algo así y puedo reconstruir mi imagen y modificarla, hacerla correcta.

49
00:04:07,120 --> 00:04:12,240
Mejorar propiedades, tiene que ver bastante con los dos anteriores, puedo

50
00:04:12,240 --> 00:04:17,320
cambiar el brillo, puedo cambiar la intensidad de colores, sacar solamente el

51
00:04:17,320 --> 00:04:22,480
filtrado de algún color o bueno algo similar. Y añadir información, como

52
00:04:22,480 --> 00:04:25,760
mencionaba, tengo imágenes, puedo tener patrones que están alrededor de mi

53
00:04:25,760 --> 00:04:30,440
imagen principal y a partir de ello puedo extender una imagen. No hay algunos

54
00:04:30,440 --> 00:04:35,120
programas justamente que permiten hacer eso y bueno se tiene una imagen con

55
00:04:35,120 --> 00:04:39,840
inteligencia artificial, puedo extender los bordes o puedo simplemente alargar la

56
00:04:39,840 --> 00:04:44,320
imagen a todo el alrededor. Eso bueno es una de sus funciones bastante

57
00:04:44,320 --> 00:04:47,600
interesantes de por sí.

58
00:04:47,800 --> 00:04:53,480
¿Qué aplicaciones? Identificación, detección, reconocimiento, reconstrucción.

59
00:04:53,480 --> 00:05:00,520
Para la identificación básicamente se puede tomar lo más mínimo, lo más

60
00:05:00,520 --> 00:05:06,320
básico que es un pixel. Entonces reconocemos que el pixel es parte de una

61
00:05:06,320 --> 00:05:12,320
imagen o si es parte del fondo o de un objeto en sí, objeto o fondo. Para la parte

62
00:05:12,320 --> 00:05:16,720
de detección ya teniendo que ese pixel pertenece al objeto puedo determinar si

63
00:05:16,720 --> 00:05:21,360
es que pertenece por ejemplo un borde. A partir del borde puedo definir si es que

64
00:05:21,360 --> 00:05:28,000
es algún tipo de objeto ya sea una figura o algún tipo de persona, algún

65
00:05:28,000 --> 00:05:33,000
elemento más complejo. Reconocimiento, bueno a partir que tengo eso que parece

66
00:05:33,000 --> 00:05:37,200
ser una silla, una persona o un objeto cualquiera puedo reconocer y de alguna

67
00:05:37,200 --> 00:05:40,480
forma filtrar los que me sirven y los que no.

68
00:05:40,480 --> 00:05:45,360
Y restauración es seguir básicamente ese patrón. Ya tengo que esto es una silla,

69
00:05:45,360 --> 00:05:49,400
esto es una persona y esto es un objeto. Entonces que puedo restaurar de una

70
00:05:49,400 --> 00:05:52,880
imagen que no tenga esa información suficiente, es la mitad de una silla, ok

71
00:05:52,880 --> 00:05:58,000
tengo el montón de información que son sillas, reconozco esos patrones y

72
00:05:58,000 --> 00:06:01,400
verifico que efectivamente tal vez la que está ahí partida es una silla. Por

73
00:06:01,400 --> 00:06:05,840
ejemplo. Entonces bueno estos son unos cuantos ejemplos obviamente hay más que

74
00:06:05,840 --> 00:06:12,480
pueden mezclar con otro tipo de tecnologías igual. En este sentido vamos

75
00:06:12,480 --> 00:06:17,520
a hablar lo que es reconocimiento de texto. Tenemos estas fases por decirlo

76
00:06:17,520 --> 00:06:23,500
así, que es la captura, la preparación de la imagen, la extracción de regiones de

77
00:06:23,500 --> 00:06:28,080
interés o el ROI en inglés, reconocimiento, luego la eliminación de

78
00:06:28,080 --> 00:06:32,800
ruido y finalmente la interpretación de los resultados. Vamos a ver cada uno de

79
00:06:32,800 --> 00:06:38,080
estos pasos para que lo vayan entendiendo también. Bueno primero la captura que es

80
00:06:38,080 --> 00:06:42,880
la obtención de imágenes. Para eso obviamente se requiere un dispositivo

81
00:06:42,880 --> 00:06:48,120
que me permita captar imagen de buena, de manera correcta, es decir con buena

82
00:06:48,120 --> 00:06:53,360
calidad, que no haya ruido o visual, algo que me permita obtener información

83
00:06:53,360 --> 00:06:57,080
suficiente para hacer algo después.

84
00:06:58,080 --> 00:07:04,000
Preparación de la imagen. Este es el preprocesamiento, es decir preparar la

85
00:07:04,000 --> 00:07:09,120
imagen antes de hacer el verdadero procesamiento interno que va a

86
00:07:09,120 --> 00:07:14,600
permitir ya sea filtrar, encontrar alguna figura, algún color, hacer cualquier

87
00:07:14,600 --> 00:07:21,680
otro tipo de tratamiento en sí. Entonces por ejemplo ahí se ve que

88
00:07:21,680 --> 00:07:26,160
posiblemente es un 0, es un 2, 4, pero alrededor tiene muchos pixeles que

89
00:07:26,160 --> 00:07:30,480
están bastante difuminados. Entonces esto puede generar ese ruido visual

90
00:07:30,480 --> 00:07:35,840
justamente. ¿Qué es lo que necesito yo para procesar? Primero limpiar, ir

91
00:07:35,840 --> 00:07:41,400
filtrando mi imagen. Para eso justamente entonces se hace un

92
00:07:41,400 --> 00:07:47,480
preprocesamiento, pre-filtrado, sacar el ruido de la imagen y bueno recién

93
00:07:47,480 --> 00:07:52,000
mandarlo a que se analice lo que necesito, ya sea sacar por ejemplo puede

94
00:07:52,000 --> 00:07:57,000
ser ahí color, sacar sólo los que son negros puede ser, o lo otro es sacar la

95
00:07:57,000 --> 00:08:00,920
figura que me corresponda un número o dependiendo si quiero reconocer números

96
00:08:00,920 --> 00:08:03,280
o letras.

97
00:08:04,000 --> 00:08:11,120
Lo otro es extracciones de las regiones de interés, el ROI. Para esta parte lo que

98
00:08:11,120 --> 00:08:15,280
se utiliza es la detección, la segmentación. En esta imagen por ejemplo

99
00:08:15,280 --> 00:08:21,880
tengo un pequeño texto y estoy queriendo reconocer solamente lo que

100
00:08:21,880 --> 00:08:26,560
está en ese recuadro. Puedo tener mucha información en un PDF, un documento,

101
00:08:26,560 --> 00:08:31,640
un archivo y quiero solo reconocer una parte, un segmento. Entonces bueno eso se

102
00:08:31,640 --> 00:08:35,680
refiere a la segmentación. Cortar la imagen en cierta parte y reconocer

103
00:08:35,680 --> 00:08:40,280
solamente lo que está en esa región. Entonces ¿qué es lo que hace aquí?

104
00:08:40,280 --> 00:08:48,560
Básicamente va a ir a xpixel con tal posición xy y bueno va a reconocer lo

105
00:08:48,560 --> 00:08:54,480
que está dentro de ese rango. Y bueno eso me detecta exactamente lo que yo

106
00:08:54,480 --> 00:09:00,840
quiero reconocer. Si es en un texto grande por ejemplo puede ser una factura

107
00:09:00,840 --> 00:09:07,480
o algún tipo de documento que sea no sé bastante incluso por cuestión de

108
00:09:07,480 --> 00:09:11,680
seguridad que tenga algún tipo de restricción yo podría escoger el área

109
00:09:11,680 --> 00:09:16,160
para que lo demás no lo lea por ejemplo. No tener cierta cantidad de información

110
00:09:16,160 --> 00:09:20,200
es suficiente para poder reconocer el texto que necesito y lo otro ya no

111
00:09:20,200 --> 00:09:23,200
tomarlo en cuenta.

112
00:09:24,600 --> 00:09:29,160
Luego viene el reconocimiento. Ya tengo la sección, ya tengo marcado dónde quiero

113
00:09:29,160 --> 00:09:33,920
reconocer el texto, qué información necesito sacar. Por ejemplo en este

114
00:09:33,920 --> 00:09:38,840
caso podría ser texto, puede ser números. ¿Qué es lo que ha hecho? Recorta ese

115
00:09:38,840 --> 00:09:45,280
espacio e identifica si es que esa letra corresponde a algún patrón. Ya sea por

116
00:09:45,280 --> 00:09:50,800
ejemplo la parte de Information Revolution me va a reconocer el texto,

117
00:09:50,800 --> 00:09:54,640
va a ser el filtrado, va a ser todo ese procesamiento y finalmente me va a

118
00:09:54,640 --> 00:10:00,800
mostrar todo el texto que tiene. Entonces esta es la parte

119
00:10:00,800 --> 00:10:05,880
cómo se puede decir la el que hace todo el proceso en sí.

120
00:10:05,880 --> 00:10:13,360
Finalmente ¿qué pasa? Bueno no, antes de terminar en sí es la eliminación de ruido.

121
00:10:13,360 --> 00:10:17,480
¿Qué sucede? Puede que mi imagen ya la haya filtrado con anterioridad, pero al hacer el

122
00:10:17,480 --> 00:10:21,560
procesamiento del reconocimiento de texto puede que en algún momento me

123
00:10:21,560 --> 00:10:25,960
genere algún tipo de ruido al hacer el tipo de filtrados. Entonces si tengo ese

124
00:10:25,960 --> 00:10:29,440
tipo de ruido puede que me genere algo similar a esto.

125
00:10:29,440 --> 00:10:33,760
Texto, efectivamente es texto pero de alguna forma se está generando ruido.

126
00:10:33,760 --> 00:10:40,080
Entonces posteriormente se hace igual, una como post

127
00:10:40,920 --> 00:10:47,280
como se diría post filtrado de la información para poder obtener el texto

128
00:10:47,280 --> 00:10:49,760
más limpio.

129
00:10:49,840 --> 00:10:54,200
Y ahora sí, la parte final la interpretación de resultados. Si es que

130
00:10:54,200 --> 00:11:01,280
nosotros queremos definir que el texto que quiero leer es números y me sale en

131
00:11:01,280 --> 00:11:05,800
que mi 1 es una L por ejemplo, ahí algo anda mal. Entonces tengo que ir mejorando,

132
00:11:05,800 --> 00:11:11,160
tengo que hacer algún tipo de no sé de por sí mejoras, algún tipo de filtrado

133
00:11:11,160 --> 00:11:16,920
extra, algún tipo de no sé, otro tipo de resolución en todo caso. Por ejemplo

134
00:11:16,920 --> 00:11:21,520
acá en la imagen se ve dos textos, bueno es un común libro donde se tienen

135
00:11:21,520 --> 00:11:26,000
distintas hojas, tengo la región y estoy sacando de esa pequeña región.

136
00:11:26,600 --> 00:11:32,240
Entonces puede que falle, hay ese tipo de posibles fallos que podrían darse por

137
00:11:32,240 --> 00:11:35,280
justamente letras que se parecen a números o números que se parecen a

138
00:11:35,280 --> 00:11:40,000
letras. Entonces es cuestión de ajustar un poco más los algoritmos, ajustar los

139
00:11:40,000 --> 00:11:44,360
filtrados, sacar ese tipo de ruido para que sea un mejor resultado.

140
00:11:44,360 --> 00:11:48,560
Y bueno si es que falla obviamente vuelve hasta el ciclo, en inicio se hace la

141
00:11:48,560 --> 00:11:53,000
eliminación de ruido y así posteriormente. Bueno acá para ver un poco

142
00:11:53,000 --> 00:11:58,040
de lo que es una pequeña demostración son las herramientas que se

143
00:11:58,040 --> 00:12:05,080
estaría utilizando. OpenCV, una librería de procesamiento de imágenes justamente.

144
00:12:05,080 --> 00:12:10,720
Tesserac, dos eras de Google que me permite el reconocimiento de texto.

145
00:12:10,720 --> 00:12:16,040
Y bueno obviamente Python que me va a permitir hacer esto incluso tal vez más

146
00:12:16,040 --> 00:12:18,560
legible.

147
00:12:18,720 --> 00:12:23,120
Acá tengo un primer ejemplo, no sé si lo alcanzan a ver tal vez.

148
00:12:23,120 --> 00:12:29,440
Estoy utilizando la librería PyTesserac y OpenCV, estoy leyendo una imagen,

149
00:12:29,440 --> 00:12:33,840
luego estoy haciendo un pequeño filtrado, sacando colores por si eso me genera

150
00:12:33,840 --> 00:12:40,120
algún tipo de ruido visual. Luego estoy sacando el tipo de configuración, en este

151
00:12:40,120 --> 00:12:45,600
caso eso es parte de PyTesserac como tal. Y finalmente tengo un texto, obtengo ya

152
00:12:45,600 --> 00:12:48,480
el texto de esa región, no estoy definiendo una región específica, estoy

153
00:12:48,480 --> 00:12:52,840
leyendo todo lo que tiene mi imagen. La que está ahí abajo, bueno esta es la

154
00:12:52,840 --> 00:12:56,480
imagen que he sacado que bueno si es que reconocen tal vez esto está dentro del

155
00:12:56,480 --> 00:13:04,120
menú del evento Python y el texto que me ha reconocido es ese. Entonces incluso en

156
00:13:04,120 --> 00:13:09,840
algún caso me ha leído las líneas como guiones y eso es parte del menú. Entonces

157
00:13:09,840 --> 00:13:15,000
puede suceder ese tipo de opciones o de ocasiones. Todos los más en algún caso

158
00:13:15,000 --> 00:13:21,920
cuando hacía prueba con otro ejemplo que tenía un poco más de menos contraste, se

159
00:13:21,920 --> 00:13:28,360
veía como un menos o como un asterisco. Entonces puede suceder ese tipo de fallas.

160
00:13:28,360 --> 00:13:34,560
Tengo otro ejemplo acá, que este es para reconocer texto dentro de una sección.

161
00:13:34,560 --> 00:13:39,480
Acá bueno saqué una imagen de Wikipedia básicamente con la información de

162
00:13:39,480 --> 00:13:45,440
Alexity y lo que estoy haciendo es sacar el área de interés, el ROI. Saco el área

163
00:13:45,440 --> 00:13:50,040
de interés 1 y 2, estoy sacando dos secciones. De esas dos secciones define

164
00:13:50,040 --> 00:13:55,320
obviamente en qué espacio se va a encontrar. En ese caso estoy marcando los

165
00:13:55,320 --> 00:14:01,560
dos rectángulos verdes y bueno finalmente le digo hazme el filtrado y

166
00:14:01,560 --> 00:14:05,880
reconoceme lo que tiene internamente. Y lo que me sale es eso de ahí arriba. El

167
00:14:05,880 --> 00:14:11,560
texto, el primero que he hecho es con el rectángulo de arriba y el segundo el

168
00:14:11,560 --> 00:14:16,720
texto en ROI 2, en el área de interés 2, el que está ahí abajo.

169
00:14:16,720 --> 00:14:22,040
Si notan hay alguna diferencia incluso en espaciados. Me puede suceder pero la

170
00:14:22,040 --> 00:14:26,400
información ya es claro, o sea ya se nota que ha reconocido mi texto y

171
00:14:26,400 --> 00:14:31,080
efectivamente es el texto que está dentro del rectángulo.

172
00:14:31,160 --> 00:14:36,240
Y finalmente tengo otro ejemplo que estaría mezclando un poco del tratamiento

173
00:14:36,240 --> 00:14:41,880
de imágenes para poder escribir encima de la imagen a partir de igual de un

174
00:14:41,880 --> 00:14:48,000
texto en un área de interés. En este caso tengo el área de interés verde, el

175
00:14:48,000 --> 00:14:52,600
rectángulo verde de ahí arriba y estoy mostrándolo en una imagen, bueno la

176
00:14:52,600 --> 00:14:57,520
imagen es bastante grande, es una imagen de la ciudad justamente de Salixity y le

177
00:14:57,520 --> 00:15:02,040
estoy diciendo, ok, obteneme todo el texto y ponmelo en la imagen que tengo ahí.

178
00:15:02,040 --> 00:15:08,600
Entonces podría ser algo más interesante, mostrar datos ya sea

179
00:15:08,600 --> 00:15:15,040
cuantitativos o otro tipo de información en una imagen. Hacer algo más, se puede

180
00:15:15,040 --> 00:15:21,960
ir ampliando más. Bueno esos son tres ejemplitos, son sencillos en realidad.

181
00:15:21,960 --> 00:15:26,280
Y bueno el tratamiento es básicamente ese.

182
00:15:26,280 --> 00:15:30,240
¿Qué consideraciones se tienen que tomar para este tipo de información? Dado que

183
00:15:30,240 --> 00:15:36,200
es información visual, por un lado es la captura. Puede suceder que todo mi

184
00:15:36,200 --> 00:15:42,080
proceso, todo mi algoritmo sea correcto pero que mi dispositivo de captura tenga

185
00:15:42,080 --> 00:15:47,320
una muy baja calidad. Entonces me va a generar ruido innecesario en algún caso

186
00:15:47,320 --> 00:15:51,880
o me va a generar algún ruido que no me permite hacer nada. Es decir que un

187
00:15:51,880 --> 00:15:57,840
píxel como un más se vea como un asterisco por lo borroso que se ve. Y no

188
00:15:57,840 --> 00:16:01,080
importa que tanto lo filtre eso, nunca va a ser un más, va a ser un asterisco

189
00:16:01,080 --> 00:16:07,160
siempre. Entonces es la calidad de la imagen, de la captura en sí. Y lo otro es

190
00:16:07,160 --> 00:16:11,480
ver, ir verificando y ajustando justamente esos parámetros. Los filtrados

191
00:16:11,480 --> 00:16:16,800
puede ser el tipo de luz, si es que tengo algún tipo de información

192
00:16:16,800 --> 00:16:21,160
incompleta puedo completar esa información. Y bueno, se puede ir

193
00:16:21,160 --> 00:16:24,040
mejorando obviamente todos esos algoritmos a partir de la prueba y

194
00:16:24,040 --> 00:16:26,320
error.

195
00:16:28,320 --> 00:16:33,200
Algunos ejemplos de aplicaciones que se utiliza con reconocimiento de texto en

196
00:16:33,200 --> 00:16:39,240
imágenes. Puede ser la digitalización de documentos. Acá se tiene una

197
00:16:39,240 --> 00:16:45,840
simplemente una imagen, una foto de un texto. Y mi reconocimiento de información

198
00:16:45,840 --> 00:16:50,440
pues me lo está convirtiendo en un PDF o en un texto digital de hecho. Puede ser

199
00:16:50,440 --> 00:16:54,760
igual lo que hacen en la parte de traducción.

200
00:16:54,760 --> 00:17:00,400
No sé si también vieron esa parte donde se tiene una aplicación, se pone a

201
00:17:00,400 --> 00:17:04,920
cualquier lenguaje y te lo traduce en tiempo real lo que está diciendo en

202
00:17:04,920 --> 00:17:10,240
otro idioma. Y lo otro, la conversión. ¿Qué significaría que pueda utilizar

203
00:17:10,440 --> 00:17:15,920
también reconocimiento de texto y reconocimiento de audio por ejemplo?

204
00:17:15,920 --> 00:17:23,000
Podría esta parte ayudar en la lectura o la interpretación de texto para

205
00:17:23,000 --> 00:17:27,680
personas que no tienen tal vez la capacidad de poder leer incluso. Entonces

206
00:17:27,680 --> 00:17:31,800
esto puede ayudar en esa parte de conversión. Y no hay más problema de

207
00:17:31,800 --> 00:17:35,880
simplemente importar las librerías necesarias y utilizarlas. Eso es la

208
00:17:35,880 --> 00:17:45,160
ventaja de este tipo de herramientas. Otras tres. Bueno, seguridad.

209
00:17:45,160 --> 00:17:51,240
Este es un sistema que actualmente está implementado en Bolivia y que permite

210
00:17:51,240 --> 00:17:57,480
hacer el reconocimiento de placas mediante justamente visión

211
00:17:57,480 --> 00:18:02,760
artificial y reconocimiento de texto donde las placas por sectores que son

212
00:18:02,760 --> 00:18:06,920
muy concurridos, algunos autos no deberían transitar. Entonces si es que

213
00:18:06,920 --> 00:18:11,760
transitan esos autos, tendrían que tener una multa. Esto es bastante complicado de

214
00:18:11,760 --> 00:18:15,800
hacerlo a vista de las personas que están controlando porque obviamente

215
00:18:15,800 --> 00:18:20,200
son muchos autos que están pasando. Y bueno, obviamente no va a ser tan rápido

216
00:18:20,200 --> 00:18:26,240
anotar una placa como tener directamente un sensor y una captación rápida.

217
00:18:26,240 --> 00:18:31,520
Entonces acá por ejemplo se ve, ¿no? El auto está pasando, reconoce la placa, si

218
00:18:31,520 --> 00:18:35,600
es que está dentro de los parámetros de los días que tiene que circular, no

219
00:18:35,600 --> 00:18:40,360
pasa nada, si es que está fuera, tiene la multa directa. Entonces esto ya está

220
00:18:40,360 --> 00:18:46,760
implementado de hecho. La otra parte, inspección. Se tienen textos y una base

221
00:18:46,760 --> 00:18:51,160
de datos que tiene mucha información por detrás. Entonces puedo inspeccionar lo

222
00:18:51,160 --> 00:18:55,360
que un texto que viene a ojo humano tal vez no se puede entender, tal vez una

223
00:18:55,360 --> 00:18:58,320
máquina así puede hacerlo. Entonces se puede inspeccionar este tipo de

224
00:18:58,320 --> 00:19:02,720
información. Y la reconstrucción. Hay un ejemplo con lo que son signos de

225
00:19:02,720 --> 00:19:08,000
tránsito. Si es que están por ejemplo movidos, volteados, se puede transformar

226
00:19:08,000 --> 00:19:12,560
el texto, se puede, bueno, no transformar el texto, sino mover la imagen un poco. Se

227
00:19:12,560 --> 00:19:18,320
puede rotar la imagen, aumentar el brillo, con eso aumentar la nitidez, igual hacer

228
00:19:18,320 --> 00:19:22,320
un tipo de filtrado y obtener finalmente lo que dice mi texto dentro de las

229
00:19:22,320 --> 00:19:27,240
señales. Estos son algunos ejemplos. Pueden haber más obviamente. Esto

230
00:19:27,240 --> 00:19:30,520
solamente para dar una idea.

231
00:19:30,920 --> 00:19:37,440
Y bueno, como conclusiones, es que el reconocimiento de texto a través de

232
00:19:37,440 --> 00:19:43,280
imágenes está reduciendo esa necesidad de la entrada de datos manuales. Como

233
00:19:43,280 --> 00:19:48,460
mencionaba, puede que el humano no sea tan rápido al momento de procesar

234
00:19:48,460 --> 00:19:52,800
cierta información y puede cometer errores. Entonces de alguna forma evita

235
00:19:52,800 --> 00:19:57,680
ese tipo de errores humanos. Lo otro es que aumenta la eficiencia de

236
00:19:57,680 --> 00:20:02,720
los procesos. Los hace más rápido, reconoce texto mucho más,

237
00:20:02,720 --> 00:20:07,520
de manera más veloz incluso que un humano. Un texto muy largo, un humano no

238
00:20:07,520 --> 00:20:12,600
lo va a leer más rápido que una máquina que lo captura directamente y obtiene

239
00:20:12,600 --> 00:20:17,200
esa información. Luego, bueno, obviamente esto permite

240
00:20:17,200 --> 00:20:24,200
ahorrar tiempo, los recursos, a nivel de analizar datos puede sacarse por ejemplo

241
00:20:24,200 --> 00:20:28,160
todo un documento que ya tiene información. Como mencionaba, puede ser

242
00:20:28,160 --> 00:20:31,560
una factura donde necesite cierta información. Lo va a hacer más rápido

243
00:20:31,560 --> 00:20:36,880
que leer todo mediante una persona, obviamente. Puede sacar eso, puede mandar

244
00:20:36,880 --> 00:20:39,640
información y esa misma información a través de otro reconocimiento puede

245
00:20:39,640 --> 00:20:43,520
directamente hacer la transacción y demás. Entonces ayuda bastante en

246
00:20:43,520 --> 00:20:48,080
cuestión de tiempo. Finalmente está brindando brindaría

247
00:20:48,080 --> 00:20:52,400
accesibilidad a diferentes contenidos y precisión para la toma de decisiones. Es

248
00:20:52,400 --> 00:20:57,760
más preciso, es más rápido y bueno, básicamente

249
00:20:59,760 --> 00:21:04,560
estamos en una época donde la inteligencia artificial está con bastante

250
00:21:04,560 --> 00:21:10,280
auge, entonces entender un poquito de esta parte y cómo son los procesos es

251
00:21:10,280 --> 00:21:17,320
bastante importante y bueno eso sería por mi parte.

252
00:21:17,800 --> 00:21:20,600
Gracias.

253
00:21:25,880 --> 00:21:32,520
Bueno y se adelantaron con el aplauso pero buenísimo, que más, múltiples

254
00:21:32,520 --> 00:21:37,120
aplausos. Queremos agradecerte un montón de que hayas estado por aquí impartiendo

255
00:21:37,240 --> 00:21:41,000
esta charla. Gracias a ustedes por estar ahí disponibles. Queremos darle un

256
00:21:41,000 --> 00:21:47,280
pequeñito anuncio. La charla del día de hoy, de las 2.30, será movida al domingo.

257
00:21:47,280 --> 00:21:50,560
Le estaremos dando más información más adelante, o sea, a qué hora se estará

258
00:21:50,560 --> 00:21:54,640
moviendo la charla, pero la charla de las 2.30 no está cancelada, está

259
00:21:54,640 --> 00:22:00,040
siendo sustituida por otra charla. Otra cosita es que nosotros queremos

260
00:22:00,040 --> 00:22:04,480
mostrar todo lo que es toda nuestra comunidad hispana que estuvo por aquí

261
00:22:04,480 --> 00:22:09,280
compartiendo en PyCon Estados Unidos y por esto el día de mañana en la última

262
00:22:09,280 --> 00:22:13,360
charla estaremos haciendo una foto grupal aquí mismo, así que todo lo que quieran

263
00:22:13,360 --> 00:22:18,280
compartir con esto por favor estén por aquí. La última charla al final, aquí una

264
00:22:18,280 --> 00:22:22,160
fotita con todas las personas que apoyaron a las PyCon charlas de este

265
00:22:22,160 --> 00:22:30,160
año. Así que un fuerte aplauso para Allison y que tengan un buen almuerzo.

