1
00:00:00,000 --> 00:00:07,000
Good morning everyone. Today we have with us Brinkley Brink, who is an assistant professor

2
00:00:08,120 --> 00:00:13,120
of finance at Northern Arizona University. So he's going to deliver a talk on the past

3
00:00:13,120 --> 00:00:16,120
of education. What do you think?

4
00:00:16,120 --> 00:00:23,120
Thank you. Yes, thank you everybody for having me. This has been a really great experience.

5
00:00:23,280 --> 00:00:29,280
I'm really happy to talk. First, I want to introduce a little bit about another Arizona

6
00:00:29,400 --> 00:00:36,400
university because everybody always says Arizona is so hot, but truth be told, this is what

7
00:00:36,400 --> 00:00:39,400
it looks like right now. I mean not right now, but this is what it looks like this evening.

8
00:00:39,400 --> 00:00:46,400
160 inches of snow. It's just a little bit different. But I was able to drive here today

9
00:00:46,400 --> 00:00:53,400
from Flagstaff where we're located. So why is a finance professor in front of you today

10
00:00:54,400 --> 00:01:00,400
talking about PyScript, specifically PyScript for education? Like most of you, I was here

11
00:01:00,400 --> 00:01:05,400
last year sitting in the keynote. Of course we all had masks and we were even further

12
00:01:05,400 --> 00:01:10,400
apart than we were this year, right? And of course we get introduced to this new thing

13
00:01:10,400 --> 00:01:16,400
called PyScript and instantaneously I started to see all sorts of applications that could

14
00:01:16,400 --> 00:01:22,400
be used for education. And so what my talk is really about is not only a little bit about

15
00:01:22,400 --> 00:01:27,400
PyScript, but also how educators can use it and how I think they will use it. Honestly,

16
00:01:27,400 --> 00:01:33,400
I really think it's going to be revolutionary for education. So that being said, I talk

17
00:01:33,400 --> 00:01:41,400
about education. We can't talk about education without talking about chat. We've got to

18
00:01:42,400 --> 00:01:47,400
start here, right? I mean this is what we always start when it comes to education, but

19
00:01:47,400 --> 00:01:52,400
this is not about chat TTT, although it's simple. So this is really about PyScript.

20
00:01:52,400 --> 00:01:56,400
And I'm sure you've come to some of the other sessions, so I'm not going to go too much

21
00:01:56,400 --> 00:02:00,400
into detail when it comes to my examples. But this is a really simple PyScript and it

22
00:02:00,400 --> 00:02:06,400
actually changed it a little bit for education, right? I mean here we see simple math problem,

23
00:02:06,400 --> 00:02:11,400
5 minus 7, and you know a student can come in here and type in minus 2, hopefully that

24
00:02:11,400 --> 00:02:15,400
would be the right answer. I had to make it really simple so that I could do it in front

25
00:02:15,400 --> 00:02:21,400
of a bunch of people, right? But you can see this was really simple to make, especially

26
00:02:21,400 --> 00:02:27,400
if you already have background in finance. Sorry, good Python. If you have background

27
00:02:27,400 --> 00:02:35,400
in finance, it's a little bit different. So all I did for this was HTML and Python. Of

28
00:02:35,400 --> 00:02:40,400
course, this is the HTML. You can see nothing special here, right? I didn't even try to

29
00:02:40,400 --> 00:02:46,400
make it fancy. I just added a button, I added some text and everything like that. And you

30
00:02:46,400 --> 00:02:51,400
can see, again, some of the other sessions will go more into detail about what this PyScript

31
00:02:51,400 --> 00:02:56,400
tag is doing here on loading in a Python file here, obviously. And then also there's the,

32
00:02:56,400 --> 00:03:00,400
you know, this also other class, that's a class called PyButton. But really, there's

33
00:03:00,400 --> 00:03:05,400
nothing here that anybody who hasn't seen, you know, regular HTML couldn't have used

34
00:03:05,400 --> 00:03:11,400
before. And then of course the Python file. I mean, simple, right? I'm just making two

35
00:03:11,400 --> 00:03:17,400
random numbers pop up and adding them together. And so making PyScripts is really easy, right?

36
00:03:20,400 --> 00:03:26,400
Anybody can do it, which makes it really great for education, right? And then also what it

37
00:03:26,400 --> 00:03:32,400
can actually produce is really valuable, right? This PyScript that you just saw is running on

38
00:03:32,400 --> 00:03:38,400
my local machine here, right? So I'm not doing anything special. I didn't have to spit up any

39
00:03:38,400 --> 00:03:43,400
server. I didn't have to host anything special. It's just right there. So that's why it has a

40
00:03:43,400 --> 00:03:51,400
lot of value for education. So what is the big value, right? Now, I'm kind of going to talk a

41
00:03:51,400 --> 00:03:57,400
little bit about my vision for both early education and higher education. Naturally, I'm in

42
00:03:57,400 --> 00:04:03,400
higher education. So early education, right? We know early educators, especially those in your

43
00:04:03,400 --> 00:04:09,400
room, work next with students' games, right? Games, interactive exercises, and all these

44
00:04:09,400 --> 00:04:16,400
different things. We know Python excels with some of the packages at making simple games,

45
00:04:16,400 --> 00:04:22,400
especially one that us as educators or if anybody, if there is an educator room, that can actually

46
00:04:22,400 --> 00:04:27,400
make games, right? Ones that we don't have to dig too deep into the docs in order to get something

47
00:04:27,400 --> 00:04:33,400
going right away. That whole idea of it comes with the batteries, right? So for early education, I

48
00:04:33,400 --> 00:04:39,400
really see a change in the way games are played. Also, of course, PyScript, if you haven't played

49
00:04:39,400 --> 00:04:44,400
around with it, it also comes with an editor, right, that you can just simply add one tag into your

50
00:04:44,400 --> 00:04:50,400
HTML and you can edit it. So for early educators as well that need to teach programming, it's simple,

51
00:04:52,400 --> 00:04:58,400
right? It has a simple use case. Now, for higher ed, of course, it's all just poker games too. It's a

52
00:04:58,400 --> 00:05:04,400
little bit of partying as well. But higher ed, I see it as really having a special place, right? And

53
00:05:04,400 --> 00:05:10,400
that's what a lot of my talk is going to be about as well. In higher ed, most academics I know are

54
00:05:10,400 --> 00:05:16,400
using Python, right? And especially, you know, again, I said my specialty was finance. Someone asked

55
00:05:16,400 --> 00:05:22,400
me actually here, you know, why finance? Why are you here at Python? I don't know if you've been to the

56
00:05:22,400 --> 00:05:28,400
exhibitors room, but you know, there's at least five hedge funds, last made, financial management

57
00:05:28,400 --> 00:05:34,400
companies, plus Bloomberg, plus a host of many others, right? So this is something that in finance, but

58
00:05:34,400 --> 00:05:40,400
also education, we're using, right? And some of the other companies that are also in the exhibitor room,

59
00:05:40,400 --> 00:05:46,400
of course, are also totaling all sorts of other products that might be used for education. So let's talk about

60
00:05:46,400 --> 00:05:52,400
some of the distinct advantages that I see PyScript as having, right? One, academics are already using

61
00:05:52,400 --> 00:05:58,400
this, right? And I wish, instead of just Python, I wish I also was talking in front of some daily scientists

62
00:05:58,400 --> 00:06:04,400
and all sorts of other things, because there is so much research that is done in Python. Yesterday, right

63
00:06:04,400 --> 00:06:10,400
before another PyScript talk, there was a talk about how Python was being used in a telescope. Last year,

64
00:06:10,400 --> 00:06:16,400
at the same presentation that was, the same presentation that introduced PyScript, we heard about

65
00:06:16,400 --> 00:06:22,400
Python being used to find a black hole. And I think that's a great example of how Python was used in

66
00:06:22,400 --> 00:06:28,400
a telescope. Last year, at the same presentation that was, the same presentation that introduced PyScript,

67
00:06:28,400 --> 00:06:34,400
we heard about Python being used to find a black hole. Imagine all those awesome use cases that aren't for

68
00:06:34,400 --> 00:06:40,400
in products, right? Well, you can actually just directly port the code that's used in a lot of those

69
00:06:40,400 --> 00:06:46,400
research projects and a lot of those in projects, and they can directly port it to PyScript with no need,

70
00:06:46,400 --> 00:06:52,400
right? To do anything special, to host anything. I mean, maybe you need to host the data or some secrets

71
00:06:52,400 --> 00:06:58,400
or something like that, but there's no need to do anything like that. So because academics are already using this,

72
00:06:58,400 --> 00:07:04,400
and it's not just computer science, we can actually focus on the product and focus on getting our research

73
00:07:04,400 --> 00:07:10,400
directly to the user, right, or directly to the student without having to do all these intermediate

74
00:07:10,400 --> 00:07:16,400
steps, right? And this is one big focus that we always talk about in academics is, you know, we do all this

75
00:07:16,400 --> 00:07:22,400
research in higher education. We spend so much money, right, but how much of it makes it to the student?

76
00:07:22,400 --> 00:07:29,400
And I always hear, oh, it's so hard. You know, it's hard to communicate these ideas that I'm doing when, you know,

77
00:07:29,400 --> 00:07:37,400
in my research with students. PyScript makes it easy, right? Handing the packages availability, you can just

78
00:07:37,400 --> 00:07:43,400
take and port what you need into PyScript and scriptaticians without all the need of complications, which is

79
00:07:43,400 --> 00:07:49,400
obviously the second thing. For those of you who haven't played around with it, I challenge you to. It's too easy

80
00:07:49,400 --> 00:07:57,400
to create. It's too easy to understand. And it's, I say deploy air quotes because there is, of course, there's all

81
00:07:57,400 --> 00:08:04,400
sorts of options, and it's really early stage, right, of course, but doing it through sharing a PyScript can be

82
00:08:04,400 --> 00:08:10,400
as easy as a USB drive. It can be easy for those academics in here that have any kind of learning management

83
00:08:10,400 --> 00:08:17,400
software, you know, for the last year, right? But if you have that kind of learning management software, I mean, you can

84
00:08:17,400 --> 00:08:24,400
really just upload it as a file. It's that easy, right? So you don't need to worry about all this other

85
00:08:24,400 --> 00:08:30,400
complications. You know, we talked about deployments and everything like that. Students like it because they

86
00:08:30,400 --> 00:08:37,400
don't honestly see anything unless they want to see it, right? So if I share a PyScript with my students, and I'll show

87
00:08:37,400 --> 00:08:43,400
you an example of one of my chair of my students that, you know, they don't need any of that technical

88
00:08:43,400 --> 00:08:53,400
background. Three, it's flexible and it brings students closer to the material in notebooks. Now, I know my

89
00:08:53,400 --> 00:08:59,400
audience is engineers, Python engineers, some of you might be academics, some of you might be in education specifically, and the

90
00:08:59,400 --> 00:09:07,400
notebook has a special place in our heart. We love the notebook. Again, go to the exhibitor's room, we've seen all the

91
00:09:07,400 --> 00:09:17,400
notebooks there, but I have a dirty secret. Most subjects outside of computer science, when it comes to teaching material, we

92
00:09:17,400 --> 00:09:25,400
don't want our students to necessarily see the notebook, right? We don't want all the cells up front, right?

93
00:09:25,400 --> 00:09:33,400
How is it that the last year to ship products or ship educational materials that aren't related, right? They're totally

94
00:09:33,400 --> 00:09:41,400
unrelated, or sorry, they don't have Python, but aren't related to computer science. So for example, of course, maybe you want

95
00:09:41,400 --> 00:09:47,400
your students to learn a machine learning model, maybe you want to learn them some kind of financial tool, right? Maybe you want them to just

96
00:09:47,400 --> 00:09:55,400
play with graphs that can update automatically, right? All of these things are capable without looking at the notebook. I mean, truth be told,

97
00:09:55,400 --> 00:10:02,400
I personally love the notebook. Now, I took this from Kaggle, and you can see it's a pretty traditional notebook, but you know the

98
00:10:02,400 --> 00:10:10,400
thing that stands out to me is I see the first two cells in this notebook, right? But I don't actually see anything yet.

99
00:10:10,400 --> 00:10:18,400
Right? Now, it's great for teaching people Python, it's great for teaching people how to use it and make stuff and all that stuff, and it has its place.

100
00:10:18,400 --> 00:10:28,400
But what I am talking about with PyScript is we can go beyond the notebook, right? We can actually take the whole point of the notebook and just

101
00:10:28,400 --> 00:10:38,400
ship that to students, just ship that for education, rather than having to ship all this notebook stuff. Again, I have a variety of different students,

102
00:10:38,400 --> 00:10:47,400
as most educators do, right? I have ones that I want to learn by the property. Maybe they're learning financial modeling, maybe we're teaching some AI,

103
00:10:47,400 --> 00:10:59,400
maybe I'm doing something, right? Those kinds of students, that notebook work is great. But then, excuse me, but then I also have a group of students

104
00:10:59,400 --> 00:11:11,400
that are freshmen, sophomore, or, you know, juniors, and I don't necessarily need them to see everything that goes underneath the hood. I just want them to see results, right?

105
00:11:11,400 --> 00:11:22,400
And right now, without PyScript, I mean, we know there's so many solutions to ship, you know, Python applications, but why are there so many solutions?

106
00:11:22,400 --> 00:11:32,400
It's not easy, right? But with PyScript, it really is easy, I've got to tell you. I've been doing it and it's really simple, right? And so that's what getting rid of the notebook and using

107
00:11:32,400 --> 00:11:43,400
PyScript can really help you do. All right, and I'm horrible, I tell my students this all the time, I'm horrible about getting ahead of my slides, right? But,

108
00:11:43,400 --> 00:11:58,400
bottom line, I want the students to be able to hack, but I don't necessarily want them to be confronted with code on day one, right? There's more, and again, I know I'm talking to front-end engineers, but, you know,

109
00:11:58,400 --> 00:12:12,400
there's more than just code, right? Sometimes you have to communicate ideas as well. And communicating ideas, thank you, communicating ideas isn't always great in a notebook, right?

110
00:12:12,400 --> 00:12:23,400
Okay, so here is another example, and I'm going to put a page up for the PyScript.com team. I only know how to make this one in there for them, but I mean, this is an example, a simple example of something we might

111
00:12:23,400 --> 00:12:36,400
pick in finance, right? So finance, one of the problems we have, and I think to everybody in here, one of the problems we have is how do we pick or how much do we invest in all the stocks we have in our portfolio?

112
00:12:36,400 --> 00:12:49,400
It turns out, it can be boiled down to a simple solution of an optimization problem, right? If we want to minimize variance and maximize return so that we get the most return for the least amount of risk, right?

113
00:12:49,400 --> 00:12:59,400
And now there's a whole bunch of theories and everything I might have to communicate to my students, but I really want to show them this graph. This is called the efficient frontier in finance.

114
00:12:59,400 --> 00:13:09,400
It plots both risk and return on the x and y axis, and you see all the individual blue points here represent stocks, and then of course the line is actually what we call the efficient frontier.

115
00:13:09,400 --> 00:13:25,400
This is the optimal set of portfolios, right? And without going into a whole finance lecture, which is another top credit maybe, I'm kidding, without going into a whole finance lecture, I want my students to be able to play with this, right?

116
00:13:25,400 --> 00:13:37,400
I want them to be able to update it. You can see I actually have a list of tickers down there now. Again, could I put more into the visualization, of course, yes, and everything like that, but I want my students to be able to go in there,

117
00:13:37,400 --> 00:13:53,400
change those stocks better, and then see what happens, right? But I want them again to focus on this, not necessarily the stuff before. Now, here's the actual trick. This is the notebook that I showed you before, right?

118
00:13:53,400 --> 00:14:05,400
So I showed you a notebook screenshot a couple slides ago. All I did was copy and paste it in, in order to get what you see here. What did this show you?

119
00:14:05,400 --> 00:14:18,400
I was able to actually talk to you about what this was. I was able to actually communicate the finance perspective from it. And, you know, again, if you actually have this in front of your laptop the year, you could play with this and change everything you want, right?

120
00:14:18,400 --> 00:14:25,400
That's one of the biggest advantages, right? Okay.

121
00:14:25,400 --> 00:14:45,400
Now, what are the advantages if you haven't got them by now? I mean, what are some of the bigger advantages of PyStrip over other frameworks like Flask? Seems pretty obvious, right? I mean, it's easy to deploy, right? But it also has simple integration.

122
00:14:45,400 --> 00:14:56,400
So I stole this. You know, the other presenters have really given me some great material to put in my slides, so thank you very much for anybody else that's given great talks.

123
00:14:56,400 --> 00:15:12,400
So if you were at the keynote yesterday, you know this was brought up, right? We have this whole system, right? And for anybody who's ever had students, unless you have some kind of system where you're having them connect to notebooks, which are via the internet,

124
00:15:12,400 --> 00:15:25,400
you know that teaching a student how to install it is quite complicated, right? And where everything goes, then, you know, if they have an error, then you have to help them, but there's all sorts of different things that you don't know where this file is and that file is.

125
00:15:25,400 --> 00:15:38,400
I feel it's easy. I'm running this like right now. I mean, so far we've run two PyStrips and this talk is, you know, a half hour, so it was really simple.

126
00:15:38,400 --> 00:16:01,480
It integrates easy. You can use it. iPad students use it on iPads, on tablets, on cell phones, on any kind of device, right? There's no minimum, well, there might be minimum requirements for the Brad

127
00:16:01,560 --> 00:16:16,560
You can run it on a cell phone. You can run it on a tablet, which honestly has also been great for me personally because, you know, sometimes I only have a tablet and you might want to do some programming and you have a towel, you have a tablet because you're on vacation or something like that.

128
00:16:16,640 --> 00:16:34,640
I mean, I think it can actually help you. It's a little outside of education, but, you know, this is one of the advantages it has over other programs, right? It also has function. So I mean, at the end of the day, we're all here at a Python conference, but, you know, Python is a tool, right?

129
00:16:34,720 --> 00:16:56,720
And it's a tool to be able to create things, to be able to do things, manipulate data. I mean, we know the things Python expels at, right? Because there's also other conferences for those things, right? And so, PyStrips has function because it brings those things that Python, you know, has advantages of to the browser, which isn't always there.

130
00:16:56,800 --> 00:17:14,800
Which brings me to my third point and final point about why I think PyStrips has a little bit of advantage over other frameworks, right? Is the integration, okay? And this cannot be downplaying how seriously cool this is, right? So, I mean, let's just talk about JavaScript and let's talk about Python. You may know both. You may use both, right? And if you use both, you know that they both have distinct use cases, right?

131
00:17:14,880 --> 00:17:26,880
Like I said, Python is really good at data, you know, it's really good at all sorts of things, especially, you know, making computations and stuff like that. It's good at everything that all the other speakers that came before me at this conference have talked about, right?

132
00:17:26,960 --> 00:17:40,960
JavaScript, JavaScript's got other things that Python just doesn't have. I mean, you want to talk about visualizations. No matter how many visualization packages we make in Python, I mean, they're nowhere close to the things that JavaScript has, right? And Python is really good at data, you know, it's really good at all sorts of things, especially, you know, making computations and stuff like that. It's good at everything that all the other speakers that came before me at this conference have talked about, right?

133
00:17:41,040 --> 00:18:05,040
JavaScript, JavaScript's got other things that Python just doesn't have. I mean, you want to talk about visualizations. No matter how many visualization packages we make in Python, I mean, they're nowhere close to the things that JavaScript has, right? And what's more is JavaScript is really a language which is aimed at solving problems on the web, right?

134
00:18:05,920 --> 00:18:25,920
So this is a whole category of things that we in Python really haven't even thought of, right? I mean, maybe we have thought of them, but they're not really great native solutions. So I'll give you an example. This one really blew my mind when I came up with it, too. So, I mean, has anybody ever made an autocomplete search box for Python?

135
00:18:26,800 --> 00:18:42,920
No, right? We did. By the way, this is running in a PyScript. So this is a JavaScript package. Honestly, I'm in front of a bunch of people, so I don't remember the name. But this is a JavaScript package that has an autocomplete search and, you know, how's the

136
00:18:42,920 --> 00:19:10,920
talk going? So, you know, it's going great, you know, but no one would have thought of making something like that in Python because it wasn't something that we needed before, right? But now with PyScript, you can load this in from JavaScript, make it here, you know, still stay in the language that you know and you like to use while using tools and other things that, you know, others just haven't even thought of, right? Or haven't had the use case before yet, right?

137
00:19:12,920 --> 00:19:24,920
So with PyScript, we'll see the advent of things like autocomplete search bars and all sorts of things. But for now, we can rely on JavaScript. So if I haven't convinced you that...

138
00:19:24,920 --> 00:19:54,920
Okay. So if I haven't convinced you that there's no convincing, right? So now I want to stand up here and, you know, take the last couple minutes to talk about my personal wishlist. Now, just like I told you about me last year, every time I go to a conference, whether it be a finance conference or a programming conference or, you know, whatever type of conference it is, I'm always trying to look for ideas, right? And so I'm always thinking about, I'm an academic, so I need publications and stuff.

139
00:19:54,920 --> 00:20:09,920
So I've got to, you know, unfortunately, you know, you can't cite me here, but if you could cite me, you know, if everybody writes a research paper, please cite me. So here, I'm just going to give you my wishlist. And honestly, I think some of these are low hanging fruit, right?

140
00:20:09,920 --> 00:20:22,920
So where can we go? Now, it's been a lot of time talking about the notebook, right? But it seems instantaneously like a good thought to be able to export notebooks to PyScript, right? Why?

141
00:20:22,920 --> 00:20:35,920
Well, again, if I'm trying to share something like a notebook, you know, that requires the other student or the other person to have that kind of thing set up on their, you know, whatever kind of machine they're running, including maybe a tablet, right?

142
00:20:35,920 --> 00:20:49,920
But if I could export notebooks to PyScript, then I can just share that with individuals through email or whatever kind of thing. They literally can just open it up and run it, right? It wouldn't be that complicated.

143
00:20:49,920 --> 00:20:55,920
Low hanging fruit. I'm telling you right here, there's going to be some, there's going to be a package soon. I'm sure of it.

144
00:20:55,920 --> 00:21:07,920
I'll put in my other two cents because I think they should both be exportable in terms of just the result, so, and also the entire notebook. So that's just a personal, you know, plug in there for you, right?

145
00:21:07,920 --> 00:21:11,920
And exporting notebooks to PyScript would be great.

146
00:21:12,920 --> 00:21:29,920
Okay, second, and I know this one's a killer, but you know, we're not all from the U.S., right? Hydro appeared today from Flagstaff, and you know, you'd actually be surprised if you've ever done that drive, you'd go through some great places like the Grand Canyon and Bryce and Zion and all these things.

147
00:21:29,920 --> 00:21:38,920
You know what all they have in common is that there's really poor internet there, right? And then, of course, you also pass through lots of reservation limits, which also has poor internet.

148
00:21:38,920 --> 00:21:48,920
And then you take into account that, I thought users weren't only in the U.S., right? They're all over the world, and you know, education also happens to be all over the world.

149
00:21:48,920 --> 00:22:05,920
So if we can make it a little more easier to distribute PyScript without the internet. Now, here's the thing. You might be saying, well, hmm, that's interesting. Python can be used without the internet. We know that. Of course, you have to download it or have it there, but Python can be used without the internet.

150
00:22:05,920 --> 00:22:22,920
PyScript can also be used without an internet connection, right? Without all the need for the setup that you also need previously. So again, if we can find some way to distribute PyScript files without having to distribute multiple files or something like that, I'll leave it up to you, right?

151
00:22:22,920 --> 00:22:44,920
But I think we can really unlock a lot of territory, right? I mean, well, you know, Python has a language. Part of us, we do better when also the community grows, right? So if we can solve this problem, I mean, look at this globe. There's a lot of potential Python users out there, right? And there's also a lot of people we can reach, right?

152
00:22:44,920 --> 00:22:58,920
So that's another thing online kind of waste list. Without internet. I spoke to my, I think, how you brought me here today, right? Talking about how internet connectivity is an issue. Okay.

153
00:22:58,920 --> 00:23:27,920
I mean, this one, again, I'm putting this plug up here for pystrip.com, but you know, at least especially in the, at least in the educational space, we need a unique solution for creating slash managing PyScript, right? I mean, most of these, at least the ones I've seen recently, right? They're like, we're talking maybe one file, maximum three or four, right?

154
00:23:27,920 --> 00:23:49,920
So, you know, it seems a little heavy to me, right? To be managing things that are like one file or three or four, right? And again, the ultimate goal of PyScript is to try to, you know, make this inclusive. And as one of the other speakers wrote in, I told him I'd call him out on this. I'm happy to be that 11 year old that the target, you know, market is, right?

155
00:23:49,920 --> 00:24:16,920
So, it was a slight, but that's okay, right? So, if our target really is an 11 year old, then an 11 year old's going to use GitHub, right? So, maybe we can make something easier to, you know, create, manage, track, you know, these pystrips, which are, in truth be told, only, I mean, at least in the current generation, you know, maximum two or three files, but most of them are one, right?

156
00:24:16,920 --> 00:24:33,920
So, especially if you want to be able to distribute it with no internet connectivity, one file is really the only kind of thing. And so, of course, I put up this screenshot here for this pystrip.com. Now, I'm not, you know, associated with pystrip.com, but they want to throw me another hoodie. I'm not going to be mad at it, right?

157
00:24:33,920 --> 00:24:48,920
So, anyway, this is pystrip.com right now. It's one solution. I don't know if it's going to be the ultimate solution, but, you know, it's one you can try out and see and see where you want to go with that.

158
00:24:48,920 --> 00:25:08,920
So, we have kind of some time remaining, but the last thing I want to point out is, you know, you've got to put a plug in here that the last thing on my wishlist was that more people would support and, of course, help grow this, you know, I'll say product, but, you know, thing, right?

159
00:25:08,920 --> 00:25:26,920
We need more better docs, right? I've been using pystrip and, you know, the docs have grown exponentially since last year. I mean, but, you know, there's always room for better docs and better support, and then I'll put a plug in here because I'm in finance too, you know, financial support, right?

160
00:25:26,920 --> 00:25:49,920
So, these are kind of also on my wishlist. If you have some ability to help, you know, please help in this community because, honestly, I really think, and again, being a business professor, not only is this a great thing from the open source community, but from a business perspective, there are a lot of opportunities here, right?

161
00:25:49,920 --> 00:26:13,920
I mean, we're talking about having users run their own code on their own device. That seems like a huge cost saving for some, you know, products that might be doing this kind of thing, you know, you have them compute or some, all sorts of hosting bills, right? I mean, this is, this product can really save you money, so I would recommend that people definitely support this and try to help them with that.

162
00:26:14,920 --> 00:26:36,920
All right, so we have like three minutes and 30 seconds. This little timer clock down is ticking me, so I'd be happy to take any questions, but if there's not any questions, thank you so much. And can I put this up there to be annoying? There's no Pinskip really loading. It's just going to continue to load. And so please add me on LinkedIn and, yeah, thank you very much, Bill. I'll take questions now.

163
00:26:36,920 --> 00:26:48,920
Thank you, Bill, for the wonderful talk. So it's time for questions. If you have questions, please come to this place, and...

164
00:26:48,920 --> 00:27:16,920
Thanks so much for the talk. Really great. Thank you guys a lot. A lot of things to learn here. I just wanted to not read your question, but I mentioned that there is a way to translate notebooks to a password text. You can use the password CLI. It's not really well-interpreted right now, but it's in, it's already built about it.

165
00:27:18,920 --> 00:27:35,920
And it has a Pinskip work on GitHub, and it has a Pinskip wrap command that translates from notebooks to password apps. Thank you. Awesome. Yeah, the problem with Python, you're always talking about our advertising solution, trying to just come out.

166
00:27:35,920 --> 00:28:01,920
Hi, there. Thanks for the talk. You touched on this a little bit with your autocomplete example, but I'm wondering if you can say something about the integration between JavaScript and PySkypt. It sounds like you can only really integrate via the document, like things that have access to the document and only integrate around elements. But is there any code level or memory level integration between the two?

167
00:28:01,920 --> 00:28:09,920
That's going to be a question for these guys over here, so they're giving me the thumbs up. These are the experts over here. I'll actually let them take that question.

168
00:28:09,920 --> 00:28:35,920
I can say that the integration is super simple. So yes, basically through Python, by now you can import any elements that are in the global spec of JavaScript and in Python's person. So if you use anything from JavaScript in Python or anything in Python, you can import anything from JavaScript.

169
00:28:35,920 --> 00:28:48,920
All right. Well, if there's no more questions, thank you. I'll give you back a minute of your life, and thank you for coming to the talk today.

