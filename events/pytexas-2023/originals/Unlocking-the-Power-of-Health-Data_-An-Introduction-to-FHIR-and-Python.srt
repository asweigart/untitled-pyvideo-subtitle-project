1
00:00:00,000 --> 00:00:08,800
So I want to start by thanking the Pi Texas organizers.

2
00:00:08,800 --> 00:00:11,720
I've been coming to Pi Texas since 2019.

3
00:00:11,720 --> 00:00:14,080
It's my favorite regional conference in this country.

4
00:00:14,080 --> 00:00:15,080
Very excited to be back.

5
00:00:15,080 --> 00:00:16,560
Very excited to be speaking.

6
00:00:16,560 --> 00:00:19,160
Also thanks everybody for coming up to this talk.

7
00:00:19,160 --> 00:00:22,400
It's a little bit of a niche topic, but it's something I'm very passionate about.

8
00:00:22,400 --> 00:00:26,140
And I hope you learn something about healthcare in this country.

9
00:00:26,140 --> 00:00:27,820
So my name is Ali Sivji.

10
00:00:27,820 --> 00:00:28,960
You can find me on Twitter.

11
00:00:28,960 --> 00:00:31,440
I am at Kaya Sivjas.

12
00:00:31,440 --> 00:00:36,080
I live on the south side of Chicago, and I work at an early stage healthcare startup

13
00:00:36,080 --> 00:00:38,040
called Jasper Health.

14
00:00:38,040 --> 00:00:43,360
Jasper is building a patient management solution for cancer patients, and we're focused primarily

15
00:00:43,360 --> 00:00:45,600
on psychosocial care.

16
00:00:45,600 --> 00:00:48,600
I love working in the healthcare technology space.

17
00:00:48,600 --> 00:00:52,960
It's very mission driven, and I'm able to use my technical skills to make a difference,

18
00:00:52,960 --> 00:00:57,760
hopefully a positive difference, in somebody's life, and I absolutely love that.

19
00:00:57,760 --> 00:01:01,080
I also help organize the Chicago Python Users Group.

20
00:01:01,080 --> 00:01:02,080
We call ourselves Chippy.

21
00:01:02,080 --> 00:01:05,240
Chippy is one of the largest Python communities in the world.

22
00:01:05,240 --> 00:01:07,280
We have over 6,000 members.

23
00:01:07,280 --> 00:01:11,600
We're back to meeting in person, so I'd like to you all, thank you, thank you.

24
00:01:11,600 --> 00:01:14,960
So if you're ever in Chicago, I invite you to come out to a Chippy event, and if you

25
00:01:14,960 --> 00:01:17,400
can't make it to our event, check out our website.

26
00:01:17,400 --> 00:01:21,240
We are live streaming all of our talks.

27
00:01:21,240 --> 00:01:25,920
So this talk is titled, Unlocking the Power of Health Data.

28
00:01:25,920 --> 00:01:29,480
Let's start talking about why does this matter?

29
00:01:29,480 --> 00:01:31,520
Say that you're sick.

30
00:01:31,520 --> 00:01:32,520
Really sick.

31
00:01:32,520 --> 00:01:35,680
No, I mean, you're really, really, really sick.

32
00:01:35,680 --> 00:01:40,400
You have a chronic condition like heart disease, diabetes, or cancer, which is the condition

33
00:01:40,400 --> 00:01:43,720
that the company I work for focuses on.

34
00:01:43,720 --> 00:01:48,400
On top of dealing with the realities of your life changing illness, you have to deal with

35
00:01:48,400 --> 00:01:50,480
the U.S. healthcare system.

36
00:01:50,480 --> 00:01:54,880
And if you have a serious illness, it's not just going to be dealing with one hospital.

37
00:01:54,880 --> 00:01:59,920
It's going to be dealing with multiple hospitals, with a large care team of doctors, nurses,

38
00:01:59,920 --> 00:02:03,920
specialists, and they're all trying to work together to provide the best care they can

39
00:02:03,920 --> 00:02:07,640
with the information they have available to them.

40
00:02:07,640 --> 00:02:08,920
And this is important.

41
00:02:08,920 --> 00:02:14,040
When managing complex chronic conditions, your care team has to coordinate your care

42
00:02:14,040 --> 00:02:18,480
to ensure that you're not prescribed medications or treatments that have negative interactions

43
00:02:18,480 --> 00:02:20,480
or that result in adverse effects.

44
00:02:21,480 --> 00:02:27,160
But if your care team isn't at the same hospital or let alone the same city or the same state,

45
00:02:27,160 --> 00:02:30,000
care coordination becomes a huge problem.

46
00:02:30,000 --> 00:02:31,360
And this is fairly common.

47
00:02:31,360 --> 00:02:35,120
If you live in a small town in the middle of the country and you get diagnosed with cancer,

48
00:02:35,120 --> 00:02:38,200
you probably don't have access to the world-class oncologists.

49
00:02:38,200 --> 00:02:42,400
You might have to drive a few hours away to the largest city or fly across the country

50
00:02:42,400 --> 00:02:46,680
to see a specialist that knows about your specific form of cancer.

51
00:02:46,680 --> 00:02:50,280
And if you've ever spent any time dealing with the U.S. healthcare system, first of all,

52
00:02:50,280 --> 00:02:55,000
I'm sorry, you really know how fragmented and just a giant mess.

53
00:02:55,000 --> 00:02:59,480
We have independent hospitals, large health care system, urgent care clinics,

54
00:02:59,480 --> 00:03:02,760
physician groups, outpatient surgical centers.

55
00:03:02,760 --> 00:03:06,800
From a patient's perspective, it's a giant nightmare.

56
00:03:06,800 --> 00:03:12,360
And from a technology perspective, it's an even bigger nightmare, as none of the underlying

57
00:03:12,360 --> 00:03:17,200
software systems in each of these hospitals are able to communicate with each other directly.

58
00:03:17,200 --> 00:03:22,360
Seriously, if you refer to one from your primary care physician to a specialist down

59
00:03:22,360 --> 00:03:29,240
the road at a different health center, you might be given a photocopy of your records

60
00:03:29,240 --> 00:03:32,560
so you can take it along with them, so you can take it along with yourselves to show

61
00:03:32,560 --> 00:03:34,320
your specialist.

62
00:03:34,320 --> 00:03:38,160
Or if you're really lucky, your hospital might be able to fax or email your records

63
00:03:38,160 --> 00:03:39,880
to another hospital.

64
00:03:39,880 --> 00:03:44,000
I am being slightly facetious here, but really we're not that far removed from the days

65
00:03:44,040 --> 00:03:51,080
where email and faxes were the only ways of exchanging health data for care coordination.

66
00:03:51,080 --> 00:03:56,000
So going back to the fragmented healthcare system, each of these healthcare organizations,

67
00:03:56,000 --> 00:04:02,880
it has its own silo of healthcare data that it can access, but that nobody else can.

68
00:04:02,880 --> 00:04:05,880
And this is where interoperability comes into play.

69
00:04:05,880 --> 00:04:10,300
Interoperability refers to the ability for computer systems and software to exchange

70
00:04:10,340 --> 00:04:14,060
information and use it in a meaningful way.

71
00:04:14,060 --> 00:04:18,360
And when we have interoperability in healthcare, systems can talk to each other to increase

72
00:04:18,360 --> 00:04:22,600
care coordination and improve patient outcomes.

73
00:04:22,600 --> 00:04:26,700
Now that we know the benefits of having a more connected healthcare system, how do we

74
00:04:26,700 --> 00:04:27,900
get there?

75
00:04:27,900 --> 00:04:37,500
To understand that, you need a little bit of historical context.

76
00:04:37,500 --> 00:04:42,700
Like health records or EHRs are a digital form of a patient's medical record.

77
00:04:42,700 --> 00:04:49,020
EHR contains information such as a patient's medical history, all their diagnoses, medications,

78
00:04:49,020 --> 00:04:54,660
treatment plans, immunizations, lab results, images, what have you.

79
00:04:54,660 --> 00:04:58,740
The first EHR was created by the Mayo Clinic in the 1960s.

80
00:04:58,740 --> 00:05:04,340
But for a lot of times since then, there was really a low adoption rate of healthcare technology

81
00:05:04,340 --> 00:05:05,340
in this country.

82
00:05:05,460 --> 00:05:10,980
In 2008, only 10% of hospitals implemented an EHR.

83
00:05:10,980 --> 00:05:15,500
And even though EHR adoption was not that widespread, people still saw the need for

84
00:05:15,500 --> 00:05:19,020
having systems that can talk to each other.

85
00:05:19,020 --> 00:05:25,580
Health Level 7 International, or HL7, was formed in 1987, and they made the first attempt

86
00:05:25,580 --> 00:05:30,680
at creating a common data interface standard for the rapidly growing EHR and health information

87
00:05:30,680 --> 00:05:32,180
technology market.

88
00:05:32,660 --> 00:05:38,940
HL7v1 and HL7v2 were the first attempts at interoperability standards.

89
00:05:38,940 --> 00:05:41,780
But these standards, they just defined a message format.

90
00:05:41,780 --> 00:05:48,020
And this unfortunately meant that we had interoperability at a syntactic level, not at a semantic level.

91
00:05:48,020 --> 00:05:54,100
And as a result, every single integration we had to build, it had to be configured separately.

92
00:05:54,100 --> 00:05:58,220
So this is an example of HL7v2 message.

93
00:05:58,260 --> 00:06:05,220
You can see that it has a format that defines separators as well as escape characters.

94
00:06:05,220 --> 00:06:09,180
It defines the different segments of this message.

95
00:06:09,180 --> 00:06:12,700
And then for each field in the message, it contains a data element.

96
00:06:12,700 --> 00:06:16,100
But what does this data field represent?

97
00:06:16,100 --> 00:06:20,540
Depending on the integration, each field can represent different types of data.

98
00:06:20,540 --> 00:06:24,380
And this is the main problem with building an interoperable solution that only works

99
00:06:24,380 --> 00:06:26,180
at a syntactic level.

100
00:06:26,180 --> 00:06:29,780
Every time we have to integrate with a new system, it means we have to create a brand

101
00:06:29,780 --> 00:06:31,060
new integration.

102
00:06:31,060 --> 00:06:34,700
And this is really not that scalable, especially with how fragmented this country's health

103
00:06:34,700 --> 00:06:37,180
care system is.

104
00:06:37,180 --> 00:06:39,840
So let's fast forward to 2009.

105
00:06:39,840 --> 00:06:44,460
As part of the American Recovery and Reinvestment Act, President Obama also passed the High

106
00:06:44,460 --> 00:06:50,460
Tech Act, which allocated around $26 billion to expand the use of technology in the health

107
00:06:50,460 --> 00:06:53,020
care industry.

108
00:06:53,020 --> 00:06:56,660
As part of this investment, the government created what they called a meaningful use

109
00:06:56,660 --> 00:06:57,660
program.

110
00:06:57,660 --> 00:07:02,180
If organizations purchased health IT solutions and they could show that those solutions were

111
00:07:02,180 --> 00:07:07,220
improving patient care, engagement, as well as increasing care coordination, they were

112
00:07:07,220 --> 00:07:11,900
able to get a larger incentivized payments from the government once they hit those goals

113
00:07:11,900 --> 00:07:14,700
outlined in meaningful use.

114
00:07:14,700 --> 00:07:20,420
So this really kicked off a huge race in established, a huge race where established EHR providers

115
00:07:20,420 --> 00:07:25,100
like Epic and Upstarts started to build new systems from the ground up.

116
00:07:25,100 --> 00:07:29,660
And all of these EHRs, they had to be certified by the government before they could be used

117
00:07:29,660 --> 00:07:32,620
for meaningful use reimbursement.

118
00:07:32,620 --> 00:07:37,520
Unsurprisingly, this huge investment by the federal government increased EHR adoption

119
00:07:37,520 --> 00:07:38,900
across the country.

120
00:07:38,900 --> 00:07:43,780
And so this is a chart of EHR adoption from 2008 onwards.

121
00:07:43,780 --> 00:07:47,660
The blue line is the line for hospital adoption.

122
00:07:47,660 --> 00:07:50,540
As I mentioned in 2008, it was only 10%.

123
00:07:50,540 --> 00:07:53,460
And then by 2014, it was almost 100%.

124
00:07:53,460 --> 00:07:56,220
So a huge increase.

125
00:07:56,220 --> 00:07:58,740
But increasing EHR adoption is great.

126
00:07:58,740 --> 00:08:01,740
It's a huge win for health care organizations.

127
00:08:01,740 --> 00:08:04,180
But does it really mean better outcomes?

128
00:08:04,180 --> 00:08:07,540
At this stage, it just means that we have a lot more systems that need to talk to each

129
00:08:07,540 --> 00:08:08,540
other.

130
00:08:08,540 --> 00:08:09,540
So what's going to go on?

131
00:08:09,540 --> 00:08:13,620
What's been happening in the interoperability world while all these health care organizations

132
00:08:13,620 --> 00:08:20,800
were adopting EHRs?

133
00:08:20,800 --> 00:08:25,820
So as part of the EHR certification process, vendors were required to build solutions to

134
00:08:25,820 --> 00:08:31,040
share medical information from one system to another.

135
00:08:31,040 --> 00:08:37,800
The HL7 organization released a new standard of their interoperability called HL7v3.

136
00:08:37,800 --> 00:08:42,820
And unlike the previous two versions, this version attempted to offer both syntactic

137
00:08:43,020 --> 00:08:46,020
as well as semantic interoperability.

138
00:08:46,020 --> 00:08:50,620
And this is a minimal example of the HL7v3 document.

139
00:08:50,620 --> 00:08:57,100
This document, which is now an XML format, uses XML tags as well as attributes to annotate

140
00:08:57,100 --> 00:08:59,240
different data elements.

141
00:08:59,240 --> 00:09:01,460
And this is what semantic interoperability is.

142
00:09:01,460 --> 00:09:05,700
Just by looking at that document, we're able to see what the different data element fields

143
00:09:05,700 --> 00:09:07,700
represent.

144
00:09:08,580 --> 00:09:13,780
HL7v3 is also known as clinical document architecture, or CDA.

145
00:09:13,780 --> 00:09:18,260
And in order to generate a CDA document, what we need to do is, first of all, we need to

146
00:09:18,260 --> 00:09:22,420
collect all the different types of resources that we want to include in the doc.

147
00:09:22,420 --> 00:09:26,580
So we want to share things like medication information, clinical notes, lab results,

148
00:09:26,580 --> 00:09:27,580
whatever have you.

149
00:09:27,580 --> 00:09:33,180
Then we're going to need to format all of this data in the format specified by the CDA

150
00:09:33,180 --> 00:09:34,180
specification.

151
00:09:34,180 --> 00:09:37,620
And then we're going to have to export all of this as an XML document.

152
00:09:37,620 --> 00:09:41,980
And as somebody that's read the CDA specification and I've written up a document generator,

153
00:09:41,980 --> 00:09:44,300
this process is not really that much fun.

154
00:09:44,300 --> 00:09:48,180
You really have to do a lot of work to take data from a format that's being stored into

155
00:09:48,180 --> 00:09:51,900
a format that we use for content delivery.

156
00:09:51,900 --> 00:09:54,220
And I'm going to admit that this is a step in the right direction.

157
00:09:54,220 --> 00:09:55,740
We have semantic interoperability.

158
00:09:55,740 --> 00:09:56,740
That's great.

159
00:09:56,740 --> 00:09:59,140
But there's still a lot of issues.

160
00:09:59,140 --> 00:10:02,140
The world's changed quite a bit since 2005, right?

161
00:10:02,140 --> 00:10:07,060
Why are we being forced to use XML, where JSON is the most popular format when we're

162
00:10:07,060 --> 00:10:09,660
passing messages back and forth?

163
00:10:09,660 --> 00:10:13,300
And then the whole point of collecting all of these different resources to generate a

164
00:10:13,300 --> 00:10:16,100
document, it feels a little archaic.

165
00:10:16,100 --> 00:10:19,180
Each of these underlying pieces of data, it's a resource.

166
00:10:19,180 --> 00:10:24,940
Why can't we expose these resources directly and use HTTP to operate on each of these resource

167
00:10:24,940 --> 00:10:25,940
types?

168
00:10:25,940 --> 00:10:29,380
There's got to be a better way of exchanging information.

169
00:10:29,380 --> 00:10:34,220
And this is what led to the creation of HL7 FHIR, F-H-I-R.

170
00:10:34,220 --> 00:10:38,340
That's pronounced FHIR.

171
00:10:38,340 --> 00:10:42,980
FHIR stands for Fast Healthcare Interoperability Resources.

172
00:10:42,980 --> 00:10:48,180
It's a set of healthcare-specific resource types that are defined using a set of attributes

173
00:10:48,180 --> 00:10:50,700
that define the data contained in it.

174
00:10:50,700 --> 00:10:57,320
I like to think of each FHIR resource specification as a schema, and FHIR data, it can be exchanged

175
00:10:58,320 --> 00:11:05,280
XML or RDF slash turtle format, but by far the most popular format is JSON.

176
00:11:05,280 --> 00:11:10,240
And most importantly, we can interact with each of these FHIR resource types using HTTP

177
00:11:10,240 --> 00:11:11,240
verbs.

178
00:11:11,240 --> 00:11:15,240
And I think the easiest way to understand FHIR is with an example.

179
00:11:15,240 --> 00:11:18,640
So this is a minimum JSON payload for a patient.

180
00:11:18,640 --> 00:11:22,140
And so it's a JSON blob, it's something that we've all seen before.

181
00:11:22,140 --> 00:11:28,260
Notice that each FHIR payload has an attribute called resource type, and here the value for

182
00:11:28,260 --> 00:11:30,820
that is patient, which makes sense.

183
00:11:30,820 --> 00:11:37,380
And this resource has some other attributes like name, gender, birthdate, address.

184
00:11:37,380 --> 00:11:42,180
And each of these attributes in the JSON payload, it describes the data that it holds.

185
00:11:42,180 --> 00:11:48,740
So FHIR is both syntactic as well as semantic interoperability.

186
00:11:48,740 --> 00:11:52,500
I think it's better to actually go to the FHIR documentation page to actually see what

187
00:11:52,500 --> 00:11:53,500
this looks like.

188
00:11:53,500 --> 00:11:59,340
So I'm just going to do that on the screen.

189
00:11:59,340 --> 00:12:07,300
So this is the page out of the HL7 documentation for FHIR, let me just pull out the right one.

190
00:12:07,300 --> 00:12:11,060
So at the top, you can see that it is the resource type patient.

191
00:12:11,060 --> 00:12:14,460
The thing that you should be aware of is scope and usage.

192
00:12:14,460 --> 00:12:18,700
So each of these FHIR resource types, it has this section, and it tells you how this FHIR

193
00:12:18,700 --> 00:12:20,220
resource can be used.

194
00:12:20,220 --> 00:12:25,220
So the patient resource specifically says that it covers data about patients and animals

195
00:12:25,220 --> 00:12:28,460
involved in a wide range of health-related activity.

196
00:12:28,460 --> 00:12:33,700
So FHIR is not just for humans, it's also for animal friends.

197
00:12:33,700 --> 00:12:39,380
And if we keep scrolling down, the main meat of this page is the resource content section.

198
00:12:39,380 --> 00:12:45,460
And here you can see that we have a patient, we have all of these attributes along with

199
00:12:45,460 --> 00:12:51,140
their cardinality, the type of attribute it is, along with a short description.

200
00:12:51,140 --> 00:12:55,380
So just going through this really quickly, we have an identifier, is the patient active?

201
00:12:55,380 --> 00:12:58,120
We have their name, so let me just click into human name.

202
00:12:58,120 --> 00:13:03,140
And so for name, we can say is it their official name, their maiden name, their nickname.

203
00:13:03,140 --> 00:13:07,620
We can include their period if you get a name change of like when your name was a certain

204
00:13:07,620 --> 00:13:12,540
one until you changed it, all that information is available.

205
00:13:12,540 --> 00:13:18,860
There's also a telecom or telecom attribute, and this is a contact point.

206
00:13:18,860 --> 00:13:22,300
And so this could be email, a phone number, SMS.

207
00:13:22,300 --> 00:13:26,860
You can also specify what your preference is for being reached at.

208
00:13:26,860 --> 00:13:29,540
So you can rank all your contact points this way.

209
00:13:29,540 --> 00:13:38,180
And so we also have things like gender, birth date, deceased date, address, marital status.

210
00:13:38,180 --> 00:13:40,700
You can include a photo of the patient.

211
00:13:40,700 --> 00:13:43,980
We have a field for contact to include your emergency contact.

212
00:13:43,980 --> 00:13:47,980
And if we keep scrolling down, there is a section for communication, so you can include

213
00:13:47,980 --> 00:13:51,740
your preferred language for that.

214
00:13:51,740 --> 00:13:54,940
If you keep scrolling down further, it's just going to be additional information specifically

215
00:13:54,940 --> 00:13:56,180
about this resource type.

216
00:13:56,180 --> 00:14:00,140
So if you ever need to deal anything with fire patient resources, you can keep scrolling

217
00:14:00,140 --> 00:14:02,700
and understand exactly how it is used.

218
00:14:02,700 --> 00:14:05,520
Patient it's one of the primary fire type resources.

219
00:14:05,520 --> 00:14:09,100
And so it has a lot of information about how patients are linked because we have things

220
00:14:09,100 --> 00:14:11,820
like patient information in multiple systems.

221
00:14:11,820 --> 00:14:15,300
So you might have like a master patient index, and you can use this to figure out how to

222
00:14:15,300 --> 00:14:19,580
like set that up.

223
00:14:19,580 --> 00:14:23,060
So going back to the top, there's also a section for examples.

224
00:14:23,060 --> 00:14:28,060
And here is just a set of examples of all of a specific patient.

225
00:14:28,060 --> 00:14:31,860
So just digging into this, you can see all it's just JSON with all the fields that we

226
00:14:31,860 --> 00:14:32,980
just talked about.

227
00:14:32,980 --> 00:14:37,820
I actually use these kind of resources to come up with test cases when I'm first interacting

228
00:14:37,860 --> 00:14:46,860
with the resource I haven't dealt with before.

229
00:14:46,860 --> 00:14:50,860
Okay, so the next thing I'm going to show is so I just talked about patient.

230
00:14:50,860 --> 00:14:57,740
So patient is one resource and fire are five, there's 157 resources that were released.

231
00:14:57,740 --> 00:15:00,500
And so just going I'm not going to go over all of them that would take way too long.

232
00:15:00,500 --> 00:15:03,420
I probably I honestly I'm not even use like half of these.

233
00:15:03,420 --> 00:15:07,620
But the main ones that really matter are we have bundle on the right here.

234
00:15:07,620 --> 00:15:13,060
Bundle represents a set of fire resources, you can have one or more fire resources in

235
00:15:13,060 --> 00:15:14,220
a bundle.

236
00:15:14,220 --> 00:15:17,060
And that's a resource itself.

237
00:15:17,060 --> 00:15:22,760
For individuals, we have patient we have practitioner practitioner represents a nurse, a specialist

238
00:15:22,760 --> 00:15:24,620
or a doctor that you've interacted with.

239
00:15:24,620 --> 00:15:29,820
There's organization, which could be the place where that interaction happened.

240
00:15:29,820 --> 00:15:34,920
And on the right, we have encounter encounter represents that interaction itself.

241
00:15:34,920 --> 00:15:39,160
So it's going to hold links to the patient as well as the practitioner.

242
00:15:39,160 --> 00:15:43,680
And so it's more of a data holding type of resource versus containing that much information

243
00:15:43,680 --> 00:15:46,200
itself.

244
00:15:46,200 --> 00:15:49,160
Where I spend the majority of my time is in the clinical section.

245
00:15:49,160 --> 00:15:54,200
So this represents a lot of the clinical types of flows that happen in a health care encounter.

246
00:15:54,200 --> 00:15:57,540
So you have things like you can track your allergies, your condition.

247
00:15:57,540 --> 00:16:01,460
So if you go to the doctor, you see a problem statement, we can put it right in here.

248
00:16:01,460 --> 00:16:05,680
It also has things like observation, which represents different lab results that you

249
00:16:05,680 --> 00:16:07,440
get back.

250
00:16:07,440 --> 00:16:09,360
There's also a few for medication.

251
00:16:09,360 --> 00:16:14,520
The one that says medication is literally the medication itself, along with its RX norm

252
00:16:14,520 --> 00:16:18,860
number, which is just a standardized number that represents different types of medications.

253
00:16:18,860 --> 00:16:23,540
And then medication statements, a big one that represents a patient taking some medication

254
00:16:23,540 --> 00:16:27,860
for some period of time.

255
00:16:27,860 --> 00:16:29,400
There's also things for finances.

256
00:16:29,400 --> 00:16:33,020
So if you have insurance, you could represent it with the coverage resource.

257
00:16:33,020 --> 00:16:36,740
There's also things about claims benefits and other things.

258
00:16:36,740 --> 00:16:41,280
I don't really deal that much with health care claims, but all this information is available.

259
00:16:41,280 --> 00:16:45,780
And there's also some things about specialized resources related to public health research,

260
00:16:45,780 --> 00:16:47,260
evidence-based medicine.

261
00:16:47,260 --> 00:16:50,780
And a lot of the things that we have to do in health care is report back to the government

262
00:16:50,780 --> 00:16:53,060
how things are done so we can get more reimbursement.

263
00:16:53,060 --> 00:16:55,040
They call that value-based care.

264
00:16:55,040 --> 00:17:05,500
And so there are some resources for that type.

265
00:17:05,500 --> 00:17:09,320
So now that we have an idea of what the FHIR data model looks like, let's shift our focus

266
00:17:09,320 --> 00:17:12,580
to the FHIR server.

267
00:17:12,580 --> 00:17:18,060
A FHIR server is an application that implements the FHIR standard.

268
00:17:18,060 --> 00:17:24,580
FHIR servers enable us to store and manage health care data in a standardized format.

269
00:17:24,580 --> 00:17:29,880
And then the server exposes these resources as RESTful web services that clients can interact

270
00:17:29,880 --> 00:17:33,960
with with standard HTTP methods.

271
00:17:33,960 --> 00:17:37,380
There are many different types of FHIR server implementations.

272
00:17:37,380 --> 00:17:42,280
There are a few open source versions, as well as versions offered by the cloud providers

273
00:17:42,280 --> 00:17:44,200
as managed services.

274
00:17:44,200 --> 00:17:48,700
The company that I work for uses Spark FHIR for local development and testing.

275
00:17:48,700 --> 00:17:54,120
And we use GCP's health care API for staging UAT and production environment.

276
00:17:54,120 --> 00:17:58,300
For what it's worth, GCP has the most mature health care cloud, so if you're thinking about

277
00:17:58,300 --> 00:18:04,500
starting a product, I would really recommend looking at the GCP cloud.

278
00:18:04,500 --> 00:18:06,680
So that's a lot of theory.

279
00:18:06,680 --> 00:18:07,680
Talk is cheap.

280
00:18:07,680 --> 00:18:10,780
Let's start looking at some code.

281
00:18:10,780 --> 00:18:12,780
So I'm going to open up my IDE.

282
00:18:12,780 --> 00:18:22,560
Give me one second.

283
00:18:22,640 --> 00:18:28,600
So the first thing is I created a Docker compose that brings up a containerized FHIR server.

284
00:18:28,600 --> 00:18:31,640
So just going through this really quickly, I have the Spark FHIR server.

285
00:18:31,640 --> 00:18:35,840
The one thing I will call out is I had to create a custom image to support an ARM chip

286
00:18:35,840 --> 00:18:39,920
because I'm on the new Mac with the Mac chips, so the ARM chips.

287
00:18:39,920 --> 00:18:44,640
If you want to use the x86 architecture, you can just uncomment that top line and comment

288
00:18:44,640 --> 00:18:46,400
this line.

289
00:18:46,400 --> 00:18:51,040
And there's also a MongoDB behind the scenes, not very surprising.

290
00:18:51,120 --> 00:18:54,280
A lot of this is JSON blobs, JSON blobs stored as Mongo.

291
00:18:54,280 --> 00:18:56,120
You don't really have to worry too much about it.

292
00:18:56,120 --> 00:19:08,120
The FHIR server takes care of it behind the scenes.

293
00:19:08,120 --> 00:19:13,200
And so here is just some sample code that helps you interact with a FHIR server.

294
00:19:13,200 --> 00:19:16,480
And so I'm going to import requests, set my session.

295
00:19:16,480 --> 00:19:18,300
Let's try to do things properly.

296
00:19:18,300 --> 00:19:19,760
Set some headers.

297
00:19:19,760 --> 00:19:24,240
Just make sure that we are using the application FHIR plus JSON type just because it helps

298
00:19:24,240 --> 00:19:26,840
out the server a little bit there.

299
00:19:26,840 --> 00:19:29,280
The next thing I'm going to do is I'm going to create a patient.

300
00:19:29,280 --> 00:19:31,680
So this patient has the patient resource type.

301
00:19:31,680 --> 00:19:32,680
They have an ID.

302
00:19:32,680 --> 00:19:34,600
This is the ID in my system.

303
00:19:34,600 --> 00:19:37,920
They have a name, so last name, first name.

304
00:19:37,920 --> 00:19:41,600
They have a gender, birth date, and an address.

305
00:19:41,600 --> 00:19:46,080
I'm going to go out and put this resource onto our FHIR server, and then I should get

306
00:19:46,080 --> 00:19:49,440
back a 201 just to make sure that it was created.

307
00:19:49,440 --> 00:19:52,120
And then I'm also going to create a second patient.

308
00:19:52,120 --> 00:19:54,920
And this patient is going to have the same information except they're going to have a

309
00:19:54,920 --> 00:20:00,040
different ID, a different first name, and a different birthday and gender.

310
00:20:00,040 --> 00:20:04,320
I'm also going to put this resource onto my FHIR server, and then I should be getting

311
00:20:04,320 --> 00:20:05,320
back a 201.

312
00:20:05,320 --> 00:20:07,360
So let me just go ahead and run that.

313
00:20:07,360 --> 00:20:09,360
So we can go.

314
00:20:09,360 --> 00:20:14,360
I'm just going to open up IPython.

315
00:20:14,360 --> 00:20:32,760
So now I'm going to the FHIR server uploading those two documents that we talked about.

316
00:20:32,760 --> 00:20:34,760
I did not start my FHIR server.

317
00:20:34,760 --> 00:20:35,760
Let's do that first.

318
00:20:35,760 --> 00:20:38,720
So I'm going to do a make up that just does a doc recompose up.

319
00:20:38,720 --> 00:20:41,720
I make files quite a bit.

320
00:20:42,080 --> 00:20:45,640
So I'm going to go back here.

321
00:20:45,640 --> 00:20:49,760
It takes a little bit of time for the first few resources just to warm up the server is

322
00:20:49,760 --> 00:20:50,760
what I like to think.

323
00:20:50,760 --> 00:20:52,920
I have honestly no idea why it takes this long.

324
00:20:52,920 --> 00:20:54,280
Okay, so it's good to go.

325
00:20:54,280 --> 00:20:58,320
So let's see if those results are there.

326
00:20:58,320 --> 00:21:10,080
It's hard to see here.

327
00:21:10,080 --> 00:21:11,840
So I'm just going to hit the resource.

328
00:21:11,840 --> 00:21:33,920
It's very HTTP like, or very restful, I should say.

329
00:21:33,920 --> 00:21:42,200
So here I'm just making an HTTP get to that patient resource very restful.

330
00:21:42,200 --> 00:21:43,360
So I got a 200.

331
00:21:43,360 --> 00:21:46,120
That's what I wanted.

332
00:21:46,120 --> 00:21:48,480
And now you can see that's the resource I uploaded.

333
00:21:48,480 --> 00:21:49,480
It makes sense.

334
00:21:49,480 --> 00:22:00,000
Let's just make sure patient two also works.

335
00:22:00,000 --> 00:22:03,600
And we can see patient two and they have they have a different first name.

336
00:22:03,600 --> 00:22:07,160
So all of this information is available through our fire server.

337
00:22:07,160 --> 00:22:09,760
And so behind the scenes, it's being stored in a database.

338
00:22:09,760 --> 00:22:13,640
And since this is in a database and we have access to rest, we should be able to do some

339
00:22:13,640 --> 00:22:17,840
sort of searches so we can find multiple patients maybe meeting some condition.

340
00:22:17,840 --> 00:22:20,160
And here we'll just say we're searching people by their last name.

341
00:22:20,160 --> 00:22:35,600
So let's just go ahead and do that.

342
00:22:35,600 --> 00:22:37,280
And for this, we're going to use a query parameter.

343
00:22:37,280 --> 00:22:45,720
So it's going to be a question mark, family underscore name equals B hand, B hand, right

344
00:22:45,720 --> 00:22:46,920
there.

345
00:22:46,920 --> 00:22:52,200
And let's look at the JSON that comes back from this.

346
00:22:52,200 --> 00:22:55,120
So this one is a little bit more complicated since we did do a search.

347
00:22:55,120 --> 00:22:57,760
So notice at the top, it's a resource type of bundle.

348
00:22:57,760 --> 00:23:03,520
As I mentioned, bundle is a fire type that holds multiple fire resources.

349
00:23:03,520 --> 00:23:08,120
We can see here that the type is a search set and we got two results back, which makes

350
00:23:08,120 --> 00:23:09,120
sense.

351
00:23:09,120 --> 00:23:10,120
These people had the same last name.

352
00:23:10,120 --> 00:23:11,120
We searched for that last name.

353
00:23:11,120 --> 00:23:14,920
We get those two back and then going into our entries.

354
00:23:14,920 --> 00:23:17,120
That's where the fire resource is going to be stored.

355
00:23:17,120 --> 00:23:18,700
So we have a list of entries.

356
00:23:18,700 --> 00:23:20,760
So there's two entries unsurprisingly.

357
00:23:20,760 --> 00:23:25,640
The first element is this is the URL where we can reach it and this is the resource.

358
00:23:25,640 --> 00:23:28,640
So we can see that is one of the people that we uploaded.

359
00:23:28,640 --> 00:23:32,080
And then the second resource is the second person we uploaded.

360
00:23:32,080 --> 00:23:34,400
So it pretty much works as expected.

361
00:23:34,400 --> 00:23:36,760
But the thing is, we're just pulling data from a server.

362
00:23:36,760 --> 00:23:41,780
How do we know that this meets the fire specification?

363
00:23:41,780 --> 00:23:43,960
We need to do some data validation.

364
00:23:44,000 --> 00:23:47,720
And for the next example, I'm going to be using a library called fire.resources, which

365
00:23:47,720 --> 00:23:49,800
is built on top of Pydantic.

366
00:23:49,800 --> 00:23:54,240
And with that, when we get data back, we can validate it and make sure it meets the fire

367
00:23:54,240 --> 00:23:57,160
standards before we use it in our downstream processes.

368
00:24:09,640 --> 00:24:13,760
And so you can see here that we're importing from this library called fire.resources.bundle.

369
00:24:14,760 --> 00:24:17,440
And we're importing the type of bundle.

370
00:24:17,440 --> 00:24:20,040
And it's like before just setting up my request.

371
00:24:20,040 --> 00:24:26,320
This time when I do a get on that query parameter, instead of just looking at the JSON or dealing

372
00:24:26,320 --> 00:24:30,760
with the raw object, I'm going to feed it into the fire resources library.

373
00:24:30,760 --> 00:24:31,960
So let's run this really quickly.

374
00:24:43,760 --> 00:24:49,400
OK, that ran without a problem.

375
00:24:49,400 --> 00:24:50,400
Awesome.

376
00:24:50,400 --> 00:24:52,000
So we can take a look at our bundle object.

377
00:24:56,240 --> 00:25:00,480
And you can see here that this is a lot of information, but it's pretty much a Python

378
00:25:00,480 --> 00:25:02,560
object that has all the information.

379
00:25:02,560 --> 00:25:07,400
Instead of coming in through JSON, it's going to be validated through Pydantic and created

380
00:25:07,400 --> 00:25:08,400
an object.

381
00:25:08,400 --> 00:25:12,360
So just to call that out, we have a date time.

382
00:25:12,360 --> 00:25:15,160
So this is not an ISO 8601 string.

383
00:25:15,160 --> 00:25:17,080
It's actually a valid Python date time.

384
00:25:24,480 --> 00:25:26,200
So just some notes about what we did.

385
00:25:26,200 --> 00:25:30,520
So the first thing we did was we validated fire using the fire.resources library.

386
00:25:30,520 --> 00:25:34,160
As I mentioned, this is built on top of Pydantic's data validation.

387
00:25:34,160 --> 00:25:38,160
Right now, Pydantic is purely Python, but with version 2.0 coming out, it's going to

388
00:25:38,160 --> 00:25:40,560
have a rust underneath the hood.

389
00:25:40,560 --> 00:25:44,680
So a lot of this validation is going to be a lot faster than it is right now.

390
00:25:44,680 --> 00:25:50,280
And just making people aware that fire has different versions just the way that HL7 did.

391
00:25:50,280 --> 00:25:53,680
Right now, the most widely used version is fire R4.

392
00:25:53,680 --> 00:25:57,200
That's the version that's offered by most of the cloud providers for their fire servers.

393
00:25:57,200 --> 00:26:01,600
Fire R5 was actually released last week, so this is huge news in my world.

394
00:26:01,600 --> 00:26:04,120
Nobody else was probably as excited as I was.

395
00:26:04,120 --> 00:26:08,280
But there's new changes in fire, which brought in new resources.

396
00:26:08,280 --> 00:26:14,800
It also codified a lot of the changes that were made as preliminary changes in R4.

397
00:26:14,800 --> 00:26:19,480
And before I go, I do want to say that fire is not perfect.

398
00:26:19,480 --> 00:26:23,520
Organizations still have to figure out how they want to use fire, and not every organization

399
00:26:23,520 --> 00:26:25,440
uses fire the same way.

400
00:26:25,440 --> 00:26:30,320
So you might still need to write up some data mappers to convert from one format to another.

401
00:26:30,320 --> 00:26:33,400
But honestly, it's not CDA, so I'm very happy.

402
00:26:33,400 --> 00:26:35,720
It's a lot better than what we had.

403
00:26:35,720 --> 00:26:38,480
These are all the resources I used coming up with this talk.

404
00:26:38,480 --> 00:26:39,480
Thanks for your time.

405
00:26:39,480 --> 00:26:43,400
Before I do go, I want to give a shout out to the Chicago Python User Group.

406
00:26:43,400 --> 00:26:48,920
I started learning how to code in 2016, and that organization helped me level up so much.

407
00:26:48,920 --> 00:26:52,520
Also want to give a shout out to ChatGPT, wrote my proposal with ChatGPT.

408
00:26:52,520 --> 00:26:55,640
One of my slides with ChatGPT, just one, not all of them.

409
00:26:55,640 --> 00:26:56,640
But fantastic tool.

410
00:26:56,640 --> 00:26:57,640
Check it out.

411
00:26:57,640 --> 00:26:58,880
Thanks again for your time.

