1
00:00:00,000 --> 00:00:07,200
Thank you very much for the introduction.

2
00:00:07,200 --> 00:00:14,240
So I'm going to be talking about voice computing with Python in Jupyter Notebooks.

3
00:00:14,240 --> 00:00:17,000
And I'm not a professional programmer.

4
00:00:17,000 --> 00:00:21,440
I'm a university professor in biochemistry.

5
00:00:21,440 --> 00:00:25,480
I work at the University of Oklahoma Health Sciences Center.

6
00:00:25,480 --> 00:00:27,800
That's what it used to be called.

7
00:00:27,800 --> 00:00:32,200
They dropped the center from the name just several weeks ago.

8
00:00:32,200 --> 00:00:36,800
It's a hard habit to break.

9
00:00:36,800 --> 00:00:56,800
So my lab works on determining the structures of proteins that are important in cancer.

10
00:00:56,800 --> 00:01:01,640
And so we use a method of protein crystallography.

11
00:01:01,640 --> 00:01:08,360
So we grow crystals that are fractions of a millimeter in length that contain the protein

12
00:01:08,360 --> 00:01:09,360
of interest.

13
00:01:09,360 --> 00:01:17,400
In this case, we have on the bottom row a ret kinase with a drug bound.

14
00:01:17,400 --> 00:01:28,640
And then after growing the crystal, we place it so it can be struck with x-rays by this

15
00:01:28,640 --> 00:01:31,920
instrument in the middle, x-ray diffractometer.

16
00:01:31,920 --> 00:01:33,980
It gives diffraction spots.

17
00:01:33,980 --> 00:01:36,080
We collect those spots.

18
00:01:36,080 --> 00:01:41,380
And as we rotate the crystal so we can get all the possible diffraction spots, we then

19
00:01:41,380 --> 00:01:44,580
process that data with computers.

20
00:01:44,580 --> 00:01:49,460
And we do an inverse Fourier transform to get an electron density map represented by

21
00:01:49,460 --> 00:01:53,340
the blue chicken wire that you see in the middle.

22
00:01:53,340 --> 00:02:02,520
And then we compare structures of complexes with different kinds of drugs and with mutants

23
00:02:02,520 --> 00:02:08,700
that resist binding some of these drugs so that we can learn how to design new and better

24
00:02:08,700 --> 00:02:09,700
drugs.

25
00:02:09,940 --> 00:02:13,500
Mutants emerge after treatment with the first generation of drugs.

26
00:02:13,500 --> 00:02:23,180
After several years, there's a need for additional drugs to keep people alive.

27
00:02:23,180 --> 00:02:29,900
So I have been developing tools in Python to make it easier to use some of the software

28
00:02:29,900 --> 00:02:32,340
that we use in our workflow.

29
00:02:32,820 --> 00:02:40,740
So these are some examples of some publications on this matter.

30
00:02:40,740 --> 00:02:48,660
So the problem that I encountered last August was my repetitive stress injury flared up.

31
00:02:48,660 --> 00:02:54,240
And this is as a consequence of working on too many writing projects.

32
00:02:54,240 --> 00:03:00,320
This is what AI thinks a structural biology professor looks like who is working on many

33
00:03:00,320 --> 00:03:02,560
parallel writing projects.

34
00:03:02,560 --> 00:03:10,960
He has the advantage of having ten fingers per hand.

35
00:03:10,960 --> 00:03:18,120
So beyond this problem with RSI, you might actually have lost use of your hands due to

36
00:03:18,120 --> 00:03:21,760
accident or disease or you may have lost use of your eyes.

37
00:03:21,760 --> 00:03:26,720
And so voice computing is a necessity to work with computers.

38
00:03:26,800 --> 00:03:32,760
As far as you may be aware, as knowledge workers, we tend to get really engaged with our work

39
00:03:32,760 --> 00:03:37,380
and want to sit in front of the computer for more than half an hour when we really need

40
00:03:37,380 --> 00:03:40,420
to get up every half hour and move around.

41
00:03:40,420 --> 00:03:44,600
And you can continue to work by using voice computing.

42
00:03:44,600 --> 00:03:50,900
I can dictate to my computer from 20 feet away while looking out my office window or

43
00:03:50,900 --> 00:03:54,360
home window.

44
00:03:54,360 --> 00:04:01,760
And then it might be that you are a very fast typist and so voice computing may not sound

45
00:04:01,760 --> 00:04:05,360
very attractive to you because you can type faster than you can talk.

46
00:04:05,360 --> 00:04:08,200
But you can't really sustain that for very long.

47
00:04:08,200 --> 00:04:16,060
And you might want to extend your period of productivity by using voice computing.

48
00:04:16,060 --> 00:04:19,780
So I divide voice computing into three activities.

49
00:04:19,780 --> 00:04:24,040
These are just what I came up with.

50
00:04:24,040 --> 00:04:27,920
So speech to text, you've heard of before, that's just dictation.

51
00:04:27,920 --> 00:04:33,480
And there's the conversion of your words into commands that run your computer.

52
00:04:33,480 --> 00:04:35,420
I call that speech to commands.

53
00:04:35,420 --> 00:04:41,000
And then there's speech to code, which is essentially very similar to speech to text.

54
00:04:41,000 --> 00:04:48,620
You're using your voice to write code.

55
00:04:48,620 --> 00:04:53,160
So as I mentioned, in mid-August, I ran into a wall.

56
00:04:53,160 --> 00:05:01,120
I was working on filling in the cells of a database using a GUI, overusing the mouse

57
00:05:01,120 --> 00:05:03,080
to copy and paste.

58
00:05:03,080 --> 00:05:04,740
And I thought I had to do something different.

59
00:05:04,740 --> 00:05:07,400
So I picked up on voice computing.

60
00:05:07,400 --> 00:05:15,920
I show here the number of words of prose that I generated in the prior two months.

61
00:05:15,920 --> 00:05:20,920
And then I show the number of words that I've been generating in the subsequent two-month

62
00:05:20,920 --> 00:05:25,080
periods from September and October onward.

63
00:05:25,080 --> 00:05:29,360
And these different two-month periods are very similar in terms of the number of days

64
00:05:29,360 --> 00:05:35,640
I was out of town, where out-of-town travel was disrupting my regular writing schedule.

65
00:05:35,640 --> 00:05:42,260
Now I know for this audience, perhaps a more relevant metric would be a number of lines

66
00:05:42,260 --> 00:05:44,160
of code written.

67
00:05:44,160 --> 00:05:47,440
But my main job is writing prose.

68
00:05:47,440 --> 00:05:49,620
And so I think this is a pretty good measure.

69
00:05:49,620 --> 00:05:58,440
You can see that there's been a threefold increase in my output at a minimum.

70
00:05:58,440 --> 00:06:06,580
So the problem, though, with dictation and all forms of voice computing, it's not perfect.

71
00:06:06,580 --> 00:06:11,500
There have been major improvements over the past decade as a result of the incorporation

72
00:06:11,500 --> 00:06:15,660
of neural networks into language models.

73
00:06:15,660 --> 00:06:21,380
But there's still issues of, and these errors can be divided into three categories.

74
00:06:21,380 --> 00:06:23,000
The first one we can do something about.

75
00:06:23,000 --> 00:06:28,940
This is getting the wrong word returned.

76
00:06:28,940 --> 00:06:33,320
The second category are some words that are omitted.

77
00:06:33,320 --> 00:06:39,420
And then the third category is the addition of words, the hallucination problem.

78
00:06:39,420 --> 00:06:50,420
So I tried several different speech-to-text software packages, and the one that worked

79
00:06:50,420 --> 00:06:59,260
well for me is this voice-in plugin available for Google Chrome and for Microsoft Edge.

80
00:06:59,260 --> 00:07:06,180
Unfortunately, you have to pay $39 a year to get the ability to add in speech replacements

81
00:07:06,180 --> 00:07:11,260
to correct mistakes that the program makes repeatedly.

82
00:07:11,260 --> 00:07:18,620
But having that ability is what I'm going to capitalize on in this talk.

83
00:07:18,620 --> 00:07:27,980
So this shows the GUI interface that you gain access to when you pay your $39 subscription.

84
00:07:27,980 --> 00:07:37,220
And this shows the top of a table with all the customized commands that I've entered.

85
00:07:37,220 --> 00:07:40,620
I have 18,000 now.

86
00:07:40,620 --> 00:07:49,060
And the first kind of irritating command for somebody who has to write nonfiction is our

87
00:07:49,060 --> 00:07:51,220
English contractions.

88
00:07:51,220 --> 00:07:57,720
So contractions are wonderful for informal writing, and I guess by default the developers

89
00:07:57,720 --> 00:08:00,400
of this software assume that you want to use contractions.

90
00:08:00,400 --> 00:08:06,760
If I say cannot, I get can't, and I can't submit papers with can't.

91
00:08:06,760 --> 00:08:09,040
I have to use cannot.

92
00:08:09,040 --> 00:08:17,920
So I have identified 186 contractions, some very common, some not so common in English,

93
00:08:17,920 --> 00:08:26,720
and I have put them together in a CSV file and posted that on GitHub.

94
00:08:26,720 --> 00:08:34,680
So another problem is names, like my own name is returned as if I were from North Africa,

95
00:08:34,680 --> 00:08:38,320
and I'm not of North African descent.

96
00:08:38,320 --> 00:08:43,780
So I can replace what voice-in returns for my name with my proper name.

97
00:08:43,780 --> 00:08:49,680
And so this is great with your friends and colleagues, especially ones that have difficulty

98
00:08:49,680 --> 00:08:53,840
to remember last names in terms of the spelling.

99
00:08:54,280 --> 00:09:04,240
A second category involves the insertion of code, and I actually make up my own sort of

100
00:09:04,240 --> 00:09:05,800
command language.

101
00:09:05,800 --> 00:09:15,440
So I use the term insert before various items to indicate I want code inserted.

102
00:09:15,440 --> 00:09:20,120
In this case, it's an item in a list in LaTeX.

103
00:09:20,120 --> 00:09:30,720
So I do a lot of my writing in LaTeX, and so I have insert item mapped to new line in

104
00:09:30,720 --> 00:09:31,720
angle brackets.

105
00:09:31,720 --> 00:09:36,600
So this is part of the command language that's built into voice-in.

106
00:09:36,600 --> 00:09:43,880
And then I have space because I want one white space before item, and then another space,

107
00:09:43,880 --> 00:09:44,880
and then capitalize.

108
00:09:44,880 --> 00:09:53,280
So the first letter, the first word in my itemized list is capitalized.

109
00:09:53,280 --> 00:09:59,040
Then you can insert multi-line pieces of text replacement, as shown on the left.

110
00:09:59,040 --> 00:10:04,600
So I have an itemized list template for writing in LaTeX.

111
00:10:04,600 --> 00:10:10,600
And then on the right, I have an example of another kind of verb, expand.

112
00:10:10,600 --> 00:10:21,200
So if I want to expand an acronym like MCMC, so I can never remember whether it's Markov

113
00:10:21,200 --> 00:10:24,960
Chain Monte Carlo or Monte Carlo Markov Chain.

114
00:10:24,960 --> 00:10:31,760
So this takes care of those kind of mistakes.

115
00:10:31,760 --> 00:10:38,200
So beyond the expand for acronyms, I also have the book, whatever the book title is,

116
00:10:38,200 --> 00:10:43,960
and then I have returned that book title in quotes with the name of the author, which

117
00:10:43,960 --> 00:10:45,680
I tend to forget.

118
00:10:45,680 --> 00:10:48,780
And then another one is email.

119
00:10:48,780 --> 00:10:57,760
So this software will operate in any text area, almost any text area in a web browser.

120
00:10:57,760 --> 00:11:04,760
So that means for webmail programs like Gmail or Outlook webmail, this works.

121
00:11:04,760 --> 00:11:13,000
So I have a mailing list of 180 addresses for a data science workshop that I host on

122
00:11:13,000 --> 00:11:14,360
a monthly basis.

123
00:11:14,360 --> 00:11:20,800
So if I just say email DSW, that mailing list is inserted.

124
00:11:20,800 --> 00:11:22,400
So it saves a lot of trouble.

125
00:11:22,400 --> 00:11:26,960
I've already talked about insert, list.

126
00:11:26,960 --> 00:11:32,880
So list of things like all the different font sizes available to you in the Beamer package

127
00:11:32,880 --> 00:11:34,520
in LaTeX.

128
00:11:34,520 --> 00:11:36,560
I can never remember those.

129
00:11:36,560 --> 00:11:42,440
Then there's another command open that you can use to open up specific web pages like

130
00:11:42,440 --> 00:11:46,520
the meeting web page for PyTexas, for example.

131
00:11:46,520 --> 00:11:53,800
And then you can, I have another, I use display to insert a specific equation in the display

132
00:11:53,800 --> 00:12:01,120
mode in LaTeX documents, but also in Markdown cells in Jupyter notebooks.

133
00:12:01,120 --> 00:12:05,960
And then likewise inline for inlined equations.

134
00:12:05,960 --> 00:12:09,600
So how do I use Jupyter notebooks in my lab?

135
00:12:09,600 --> 00:12:13,320
We use them to prepare images for publication.

136
00:12:13,320 --> 00:12:19,200
So we often have to make many draft copies of molecular graphic images of our molecules

137
00:12:19,200 --> 00:12:23,280
and all kinds of orientations with all kinds of different representations.

138
00:12:23,280 --> 00:12:28,360
The Jupyter notebook is a wonderful format for storing those images.

139
00:12:28,800 --> 00:12:33,340
And then you can easily share them with others and you can scroll through the notebook very

140
00:12:33,340 --> 00:12:42,160
quickly and compare images, decide on which one you want to submit for publication.

141
00:12:42,160 --> 00:12:51,800
So I'm going to actually, so voice computing is extremely dangerous to do live because

142
00:12:51,800 --> 00:12:54,560
you never know what's going to be returned.

143
00:12:54,560 --> 00:13:04,200
And yeah, I shan't repeat what my experience, but.

144
00:13:04,200 --> 00:13:12,040
Header one, delete word, delete word.

145
00:13:12,040 --> 00:13:27,120
Demo of the use of voice snippets in Markdown cells in Jupyter.

146
00:13:27,120 --> 00:13:38,920
Delete word, delete word, delete word, cells in Jupyter.

147
00:13:38,920 --> 00:13:45,480
New line, new line.

148
00:13:45,480 --> 00:13:50,800
This is the electron density equation.

149
00:13:50,800 --> 00:13:57,120
Colon new line, new line.

150
00:13:57,120 --> 00:14:02,800
Display electron density equation.

151
00:14:02,800 --> 00:14:07,600
Now I'll render this cell.

152
00:14:07,600 --> 00:14:13,120
So there we go.

153
00:14:13,120 --> 00:14:18,760
So this is an equation that we use to take those diffraction spots you saw in that image

154
00:14:18,760 --> 00:14:25,040
and convert them into electron density in terms of number of electrons per cubic angstrom

155
00:14:25,040 --> 00:14:28,380
in real space.

156
00:14:28,380 --> 00:14:49,820
So this is, run voice in quiz, control enter.

157
00:14:49,820 --> 00:14:53,820
So this is interactive quiz that I put together.

158
00:14:53,820 --> 00:15:00,300
So this is, was inspired by Al Swigert's book, Automate the Boring Stuff.

159
00:15:00,300 --> 00:15:03,560
He's going to be speaking tomorrow morning at 10.15.

160
00:15:03,560 --> 00:15:08,500
And this can be run in the terminal, but it seems to be a little more fun than running

161
00:15:08,500 --> 00:15:19,660
a Jupyter notebook because you retain a record of your answers.

162
00:15:19,660 --> 00:15:29,060
So now we enter one.

163
00:15:29,060 --> 00:15:33,220
And then in this blue box, we would enter the answers.

164
00:15:33,220 --> 00:15:36,380
Unfortunately, your voice will not work in this blue box.

165
00:15:36,380 --> 00:15:39,820
It's not recognized by voice in.

166
00:15:39,820 --> 00:15:45,660
So to scroll up in the Chrome browser, we would enter, scroll up.

167
00:15:45,660 --> 00:15:52,040
So this isn't the same as going to the top, which would be scroll top.

168
00:15:52,040 --> 00:16:00,740
So if I had entered the wrong answer, like to close tab in the browser, if I entered

169
00:16:00,740 --> 00:16:05,540
instead open tab, I may get the wrong answer.

170
00:16:05,540 --> 00:16:11,680
And it will report back to me the correct answer.

171
00:16:11,680 --> 00:16:15,680
So this quiz is, the questions are randomized every time you take it.

172
00:16:15,680 --> 00:16:17,480
It's a new quiz, essentially.

173
00:16:17,480 --> 00:16:25,760
And as you go through it, after you accumulate five wrong answers, you will then have those

174
00:16:25,760 --> 00:16:33,720
questions fed back to you so you have an opportunity to answer them again during your given quiz

175
00:16:33,720 --> 00:16:34,720
session.

176
00:16:34,720 --> 00:16:40,200
So if you do this, like probably three times, you'll be ready to go on a given day with

177
00:16:40,840 --> 00:16:43,120
this software.

178
00:16:43,120 --> 00:16:48,240
And if you do it every other day using space repetition, you'll wind up remembering the

179
00:16:48,240 --> 00:16:49,240
commands.

180
00:16:49,240 --> 00:16:50,240
There are not very many of them, actually.

181
00:16:50,240 --> 00:16:58,000
There's, I think, 50 questions in this quiz.

182
00:16:58,000 --> 00:17:04,000
Oops.

183
00:17:04,000 --> 00:17:09,000
Okay.

184
00:17:09,000 --> 00:17:13,280
So the other kind of cell in a Jupyter Notebook is a code cell.

185
00:17:13,280 --> 00:17:23,720
So I need to do a code demo.

186
00:17:23,720 --> 00:17:36,160
Word MTZ summary.

187
00:17:36,160 --> 00:17:43,840
So I had said the word and, and that got captured in this cell before I said the name of this

188
00:17:43,840 --> 00:17:45,320
voice snippet.

189
00:17:45,320 --> 00:17:51,040
I call these voice triggers, kind of like tab triggers, and if you're familiar with

190
00:17:51,040 --> 00:17:55,240
snippet libraries and text editors.

191
00:17:55,240 --> 00:17:59,520
And so the only thing that had to be customized was the name of this MTZ file.

192
00:17:59,520 --> 00:18:07,800
The MTZ file is a binary file format that was developed in the 1990s for the purpose

193
00:18:07,800 --> 00:18:12,380
of storing crystallographic data in a compact format.

194
00:18:12,380 --> 00:18:15,440
At the time, the data files were large.

195
00:18:15,440 --> 00:18:27,200
Now they're puny compared to the sizes of files that people work with today.

196
00:18:27,200 --> 00:18:33,280
So we now have a summary printed in the Jupyter Notebook of this MTZ file.

197
00:18:33,280 --> 00:18:41,760
The plot of these I plus versus I minus values, these intensities that have the same index

198
00:18:42,720 --> 00:18:48,560
but different opposite sign are supposed to be equal in value, unless there are anomalous

199
00:18:48,560 --> 00:18:51,360
scattering atoms present.

200
00:18:51,360 --> 00:19:07,600
Insert anomalous pair plot.

201
00:19:07,600 --> 00:19:21,120
Okay so we have victory at last.

202
00:19:21,120 --> 00:19:26,520
So what's going on in that plot is we're plotting the plus values against the minus values,

203
00:19:26,520 --> 00:19:30,560
and the plus and minus values are just the indices of these reflections that are related

204
00:19:30,560 --> 00:19:31,560
by symmetry.

205
00:19:31,560 --> 00:19:36,320
They're supposed to be identical if they're following Friedel's law, but if there's an

206
00:19:36,320 --> 00:19:42,520
anomalously scattering atoms present, in this case some sulfur atoms, that can give

207
00:19:42,520 --> 00:19:46,920
a cause of difference in these intensities that's a real difference.

208
00:19:46,920 --> 00:19:52,920
And as we saw, as intensities grow larger, the differences grew larger as there are greater

209
00:19:52,920 --> 00:19:57,560
deviations away from a line with a slope of one.

210
00:19:57,560 --> 00:20:05,280
And there was actually a real anomalous signal in this data set, and the people who collected

211
00:20:05,280 --> 00:20:17,640
these data were able to solve the structure using that anomalous signal.

212
00:20:17,640 --> 00:20:22,080
So what are the hazards of voice computing?

213
00:20:22,080 --> 00:20:27,800
So I've had people walk through my office door and whatever they were saying got recorded

214
00:20:27,800 --> 00:20:32,160
in the document that I had active.

215
00:20:33,080 --> 00:20:41,460
You can introduce bugs into your code by saying words or other people saying words get captured.

216
00:20:41,460 --> 00:20:49,360
And then you can run into trouble with external microphones blocking the internal microphone.

217
00:20:49,360 --> 00:20:59,360
And then I have used other speech recognition software and in parallel I've had them interfere

218
00:20:59,360 --> 00:21:01,360
with each other.

219
00:21:01,360 --> 00:21:05,680
It leads to rather humorous results.

220
00:21:05,680 --> 00:21:08,120
So I didn't talk about a lot of other software.

221
00:21:08,120 --> 00:21:14,920
You've probably heard of Dragon NaturallySpeaking, which has been available for well over a decade.

222
00:21:14,920 --> 00:21:23,200
And you're able to customize it such that it recognizes your voice and your accent and

223
00:21:23,200 --> 00:21:24,560
so forth.

224
00:21:24,560 --> 00:21:27,800
Then there's Town Voice, which is a wonderful package.

225
00:21:27,840 --> 00:21:34,200
It's open source, free, but I found it to be very frustrating to use in terms of speech

226
00:21:34,200 --> 00:21:35,200
to text.

227
00:21:35,200 --> 00:21:42,040
It has a very high error rate compared to this Voice in Plus I've been using.

228
00:21:42,040 --> 00:21:49,360
However, you can do far more with it than you can do with Voice in Plus in terms of

229
00:21:49,360 --> 00:21:50,560
customizing.

230
00:21:50,560 --> 00:21:53,000
It's really a tinker's dream.

231
00:21:53,000 --> 00:21:58,800
If you're an Emacs user, this will really appeal to you because you'll spend half your

232
00:21:58,800 --> 00:22:03,760
day just coming up with new Town Voice commands.

233
00:22:03,760 --> 00:22:10,800
Then Serenade is another program focused on using your voice to write code.

234
00:22:10,800 --> 00:22:19,340
It looks relatively straightforward to use and I plan on pursuing it in the future.

235
00:22:19,340 --> 00:22:23,700
Then there's OpenAI's Whisper.

236
00:22:23,700 --> 00:22:28,500
I use that to transcribe my audio.

237
00:22:28,500 --> 00:22:37,660
I've been using a digital recording device and so I record notes during my commute and

238
00:22:37,660 --> 00:22:45,020
I use Whisper to transcribe those into text and it does a pretty good job.

239
00:22:45,900 --> 00:22:54,660
Mac has a dictation software which has been improved dramatically over the past year.

240
00:22:54,660 --> 00:23:00,700
It's great, but if you have an ancient Mac like I do, that's based on an Intel chip,

241
00:23:00,700 --> 00:23:05,620
a remote server is used to convert your sound waves into text.

242
00:23:05,620 --> 00:23:06,860
There's a latency issue.

243
00:23:06,860 --> 00:23:15,940
It'll quit on you after two or three sentences and whereas Voice in doesn't have that latency

244
00:23:15,940 --> 00:23:22,540
problem, you can go for multiple paragraphs before you might get ahead of it.

245
00:23:22,540 --> 00:23:27,660
Then there's a voice control that's available on the Mac that allows for the writing of

246
00:23:27,660 --> 00:23:34,260
customized commands and then there's Deep Scribe for people in the medical field and

247
00:23:34,260 --> 00:23:38,300
of course we know about Siri and Alexa.

248
00:23:38,300 --> 00:23:48,020
So as you've seen, speech computing has become a part of my workflow because of its big impact

249
00:23:48,020 --> 00:23:54,980
in my productivity and then you've seen how I've taken advantage of text replacement

250
00:23:54,980 --> 00:24:06,820
feature in Voice in Plus to generate voice snippets.

251
00:24:06,820 --> 00:24:14,500
I'd like to acknowledge my students for whom I've developed some of the Python software

252
00:24:14,500 --> 00:24:19,420
in the past and then my colleagues and friends in Oklahoma.

253
00:24:19,420 --> 00:24:25,860
We have a monthly Oklahoma data science workshop where somebody will present about something

254
00:24:25,860 --> 00:24:32,580
that they're doing with scientific computing and this is open to anybody just by institutions

255
00:24:32,580 --> 00:24:37,900
providing some support for it, so we have to call it Oklahoma, but if you're interested,

256
00:24:37,900 --> 00:24:44,180
send me an email and we can add your name to the email list.

257
00:24:44,180 --> 00:24:50,900
I am an Emacs user too and so I participate in one meetup that's based here in Austin

258
00:24:50,900 --> 00:24:56,660
actually, online, and then NIH supports my research.

259
00:24:56,660 --> 00:24:59,980
I'll be happy to take any questions.

260
00:24:59,980 --> 00:25:02,980
Excellent.

261
00:25:02,980 --> 00:25:07,020
Thank you so much.

262
00:25:07,020 --> 00:25:10,180
That was incredible and we do have questions for you.

263
00:25:10,180 --> 00:25:14,380
So let's start off with this.

264
00:25:14,380 --> 00:25:19,780
Someone asked, I converted my API from CamelCase to SnakeCase for better accessibility for

265
00:25:19,780 --> 00:25:21,540
a vision impaired user.

266
00:25:21,540 --> 00:25:27,780
Are there similar issues for voice input of code?

267
00:25:27,780 --> 00:25:38,100
So I have run into difficulty in terms of the case of words, so you can control that

268
00:25:38,100 --> 00:25:42,020
with this voice in plus software.

269
00:25:42,020 --> 00:25:49,740
So you can have everything in lowercase, uppercase, sentence case or go with a default and sometimes

270
00:25:49,740 --> 00:25:57,380
that setting gets reset on you by accident, like to lowercase and that can screw up code

271
00:25:57,380 --> 00:26:02,580
that has some uppercase letters in it, so that's a source of frustration.

272
00:26:03,060 --> 00:26:04,060
Okay.

273
00:26:04,060 --> 00:26:10,660
Someone asked, have you looked at external applications like voice attack to have voice

274
00:26:10,660 --> 00:26:17,180
commands, macros and shortcuts available outside of the web browser context?

275
00:26:17,180 --> 00:26:23,020
Outside the web browser context, so Talon voice and Serenade will work outside the web

276
00:26:23,020 --> 00:26:24,020
browser.

277
00:26:24,020 --> 00:26:30,820
They will work, you can issue commands in the terminal or you can issue commands in

278
00:26:31,060 --> 00:26:37,020
GUI based applications and so forth.

279
00:26:37,020 --> 00:26:40,860
So I have looked at such external software.

280
00:26:40,860 --> 00:26:41,860
Okay.

281
00:26:41,860 --> 00:26:44,540
Someone asked a question that I was wondering watching the video.

282
00:26:44,540 --> 00:26:50,740
How did you get it to go back and spell cells instead of cells?

283
00:26:50,740 --> 00:26:52,740
That was by random chance.

284
00:26:52,740 --> 00:26:53,740
Okay.

285
00:26:53,740 --> 00:26:57,220
Somehow that makes me feel better.

286
00:26:57,220 --> 00:27:00,380
I don't know that it should.

287
00:27:00,380 --> 00:27:03,500
Have you seen the talk Travis Rudd did at PyCon 2013?

288
00:27:03,500 --> 00:27:08,420
Have you considered using shorter or made up words to accomplish commands more quickly?

289
00:27:08,420 --> 00:27:11,380
Made up or shorter words.

290
00:27:11,380 --> 00:27:13,980
That's a good question.

291
00:27:13,980 --> 00:27:24,860
So I've been, so what I found is you need to test the commands and usually that takes

292
00:27:24,860 --> 00:27:30,220
a few minutes because you need to test several variants of the commands and I sometimes will

293
00:27:30,220 --> 00:27:40,380
map multiple variants of multiple voice triggers to the same chunk of code to ensure that

294
00:27:40,380 --> 00:27:45,900
I get that chunk of code every time and this can be, generally it's not too big of a problem

295
00:27:45,900 --> 00:27:51,620
but occasionally there are some words that are, for which it's difficult to get back

296
00:27:51,620 --> 00:27:56,900
the text replacement you intended and so I've had some cases where I've had to generate

297
00:27:56,900 --> 00:28:03,100
a dozen different voice triggers to get back the same text replacement.

298
00:28:03,100 --> 00:28:04,100
Wow.

299
00:28:04,100 --> 00:28:05,100
Okay.

300
00:28:05,100 --> 00:28:06,100
Awesome.

301
00:28:06,100 --> 00:28:07,100
Thank you so much.

302
00:28:07,100 --> 00:28:08,100
You're welcome.

303
00:28:08,100 --> 00:28:08,120
Thank you.

